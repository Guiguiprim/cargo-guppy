var searchIndex={};
searchIndex["aho_corasick"] = {"doc":"A library for finding occurrences of many patterns at…","i":[[3,"AhoCorasick","aho_corasick","An automaton for searching multiple strings in linear time.",null,null],[3,"AhoCorasickBuilder","","A builder for configuring an Aho-Corasick automaton.",null,null],[3,"FindIter","","An iterator of non-overlapping matches in a particular…",null,null],[3,"FindOverlappingIter","","An iterator of overlapping matches in a particular haystack.",null,null],[3,"StreamFindIter","","An iterator that reports Aho-Corasick matches in a stream.",null,null],[3,"Error","","An error that occurred during the construction of an…",null,null],[3,"Match","","A representation of a match reported by an Aho-Corasick…",null,null],[4,"MatchKind","","A knob for controlling the match semantics of an…",null,null],[13,"Standard","","Use standard match semantics, which support overlapping…",0,null],[13,"LeftmostFirst","","Use leftmost-first match semantics, which reports leftmost…",0,null],[13,"LeftmostLongest","","Use leftmost-longest match semantics, which reports…",0,null],[4,"ErrorKind","","The kind of error that occurred.",null,null],[13,"StateIDOverflow","","An error that occurs when constructing an automaton would…",1,null],[12,"max","aho_corasick::ErrorKind","The maximum possible state ID.",2,null],[13,"PremultiplyOverflow","aho_corasick","An error that occurs when premultiplication of state IDs…",1,null],[12,"max","aho_corasick::ErrorKind","The maximum possible state id.",3,null],[12,"requested_max","","The maximum ID required by premultiplication.",3,null],[11,"new","aho_corasick","Create a new Aho-Corasick automaton using the default…",4,[[["i"]],["ahocorasick"]]],[11,"new_auto_configured","","Build an Aho-Corasick automaton with an automatically…",4,[[],["ahocorasick"]]],[11,"is_match","","Returns true if and only if this automaton matches the…",4,[[["asref"],["self"]],["bool"]]],[11,"earliest_find","","Returns the location of the first detected match in…",4,[[["asref"],["self"]],[["match"],["option",["match"]]]]],[11,"find","","Returns the location of the first match according to the…",4,[[["asref"],["self"]],[["match"],["option",["match"]]]]],[11,"find_iter","","Returns an iterator of non-overlapping matches, using the…",4,[[["self"],["b"]],["finditer"]]],[11,"find_overlapping_iter","","Returns an iterator of overlapping matches in the given…",4,[[["self"],["b"]],["findoverlappingiter"]]],[11,"replace_all","","Replace all matches with a corresponding value in the…",4,[[["str"],["self"]],["string"]]],[11,"replace_all_bytes","","Replace all matches using raw bytes with a corresponding…",4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"replace_all_with","","Replace all matches using a closure called on each match.…",4,[[["str"],["string"],["self"],["f"]]]],[11,"replace_all_with_bytes","","Replace all matches using raw bytes with a closure called…",4,[[["vec"],["self"],["f"]]]],[11,"stream_find_iter","","Returns an iterator of non-overlapping matches in the…",4,[[["self"],["read"]],[["streamfinditer"],["read"]]]],[11,"stream_replace_all","","Search for and replace all matches of this automaton in…",4,[[["w"],["self"],["r"]],["result"]]],[11,"stream_replace_all_with","","Search the given reader and replace all matches of this…",4,[[["w"],["f"],["self"],["r"]],["result"]]],[11,"match_kind","","Returns the match kind used by this automaton.",4,[[["self"]],["matchkind"]]],[11,"max_pattern_len","","Returns the length of the longest pattern matched by this…",4,[[["self"]],["usize"]]],[11,"pattern_count","","Return the total number of patterns matched by this…",4,[[["self"]],["usize"]]],[11,"supports_overlapping","","Returns true if and only if this automaton supports…",4,[[["self"]],["bool"]]],[11,"supports_stream","","Returns true if and only if this automaton supports stream…",4,[[["self"]],["bool"]]],[11,"heap_bytes","","Returns the approximate total amount of heap used by this…",4,[[["self"]],["usize"]]],[11,"new","","Create a new builder for configuring an Aho-Corasick…",5,[[],["ahocorasickbuilder"]]],[11,"build","","Build an Aho-Corasick automaton using the configuration…",5,[[["i"],["self"]],["ahocorasick"]]],[11,"build_with_size","","Build an Aho-Corasick automaton using the configuration…",5,[[["i"],["self"]],[["ahocorasick"],["error"],["result",["ahocorasick","error"]]]]],[11,"auto_configure","","Automatically configure the settings on this builder…",5,[[["self"]],["ahocorasickbuilder"]]],[11,"match_kind","","Set the desired match semantics.",5,[[["self"],["matchkind"]],["ahocorasickbuilder"]]],[11,"anchored","","Enable anchored mode, which requires all matches to start…",5,[[["self"],["bool"]],["ahocorasickbuilder"]]],[11,"ascii_case_insensitive","","Enable ASCII-aware case insensitive matching.",5,[[["self"],["bool"]],["ahocorasickbuilder"]]],[11,"dense_depth","","Set the limit on how many NFA states use a dense…",5,[[["self"],["usize"]],["ahocorasickbuilder"]]],[11,"dfa","","Compile the standard Aho-Corasick automaton into a…",5,[[["self"],["bool"]],["ahocorasickbuilder"]]],[11,"prefilter","","Enable heuristic prefilter optimizations.",5,[[["self"],["bool"]],["ahocorasickbuilder"]]],[11,"byte_classes","","Shrink the size of the transition alphabet by mapping…",5,[[["self"],["bool"]],["ahocorasickbuilder"]]],[11,"premultiply","","Premultiply state identifiers in the transition table.…",5,[[["self"],["bool"]],["ahocorasickbuilder"]]],[11,"kind","","Return the kind of this error.",6,[[["self"]],["errorkind"]]],[0,"packed","","A lower level API for packed multiple substring search,…",null,null],[3,"Builder","aho_corasick::packed","A builder for constructing a packed searcher from a…",null,null],[3,"Config","","The configuration for a packed multiple pattern searcher.",null,null],[3,"FindIter","","An iterator over non-overlapping matches from a packed…",null,null],[3,"Searcher","","A packed searcher for quickly finding occurrences of…",null,null],[4,"MatchKind","","A knob for controlling the match semantics of a packed…",null,null],[13,"LeftmostFirst","","Use leftmost-first match semantics, which reports leftmost…",7,null],[13,"LeftmostLongest","","Use leftmost-longest match semantics, which reports…",7,null],[11,"new","","Create a new default configuration. A default…",8,[[],["config"]]],[11,"builder","","Create a packed builder from this configuration. The…",8,[[["self"]],["builder"]]],[11,"match_kind","","Set the match semantics for this configuration.",8,[[["self"],["matchkind"]],["config"]]],[11,"new","","Create a new builder for constructing a multi-pattern…",9,[[],["builder"]]],[11,"build","","Build a searcher from the patterns added to this builder…",9,[[["self"]],[["searcher"],["option",["searcher"]]]]],[11,"add","","Add the given pattern to this set to match.",9,[[["self"],["asref"]],["builder"]]],[11,"extend","","Add the given iterator of patterns to this set to match.",9,[[["self"],["i"]],["builder"]]],[11,"new","","A convenience function for constructing a searcher from an…",10,[[["i"]],[["searcher"],["option",["searcher"]]]]],[11,"find","","Return the first occurrence of any of the patterns in this…",10,[[["asref"],["self"]],[["match"],["option",["match"]]]]],[11,"find_at","","Return the first occurrence of any of the patterns in this…",10,[[["asref"],["usize"],["self"]],[["match"],["option",["match"]]]]],[11,"find_iter","","Return an iterator of non-overlapping occurrences of the…",10,[[["self"],["b"]],["finditer"]]],[11,"match_kind","","Returns the match kind used by this packed searcher.",10,[[["self"]],["matchkind"]]],[11,"minimum_len","","Returns the minimum length of a haystack that is required…",10,[[["self"]],["usize"]]],[11,"heap_bytes","","Returns the approximate total amount of heap used by this…",10,[[["self"]],["usize"]]],[8,"StateID","aho_corasick","A trait describing the representation of an automaton's…",null,null],[10,"from_usize","","Convert from a `usize` to this implementation's…",11,[[["usize"]],["self"]]],[10,"to_usize","","Convert this implementation's representation to a `usize`.",11,[[],["usize"]]],[10,"max_id","","Return the maximum state identifier supported by this…",11,[[],["usize"]]],[11,"pattern","","Returns the identifier of the pattern that matched.",12,[[["self"]],["usize"]]],[11,"start","","The starting position of the match.",12,[[["self"]],["usize"]]],[11,"end","","The ending position of the match.",12,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if and only if this match is empty. That is,…",12,[[["self"]],["bool"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"into_iter","","",13,[[],["i"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"into_iter","","",14,[[],["i"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"into_iter","","",15,[[],["i"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","aho_corasick::packed","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"into_iter","","",16,[[],["i"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"next","aho_corasick","",13,[[["self"]],[["match"],["option",["match"]]]]],[11,"next","","",14,[[["self"]],[["match"],["option",["match"]]]]],[11,"next","","",15,[[["self"]],[["option",["result"]],["result",["match"]]]]],[11,"next","aho_corasick::packed","",16,[[["self"]],[["match"],["option",["match"]]]]],[11,"clone","aho_corasick","",4,[[["self"]],["ahocorasick"]]],[11,"clone","","",5,[[["self"]],["ahocorasickbuilder"]]],[11,"clone","","",0,[[["self"]],["matchkind"]]],[11,"clone","","",6,[[["self"]],["error"]]],[11,"clone","","",1,[[["self"]],["errorkind"]]],[11,"clone","aho_corasick::packed","",7,[[["self"]],["matchkind"]]],[11,"clone","","",8,[[["self"]],["config"]]],[11,"clone","","",9,[[["self"]],["builder"]]],[11,"clone","","",10,[[["self"]],["searcher"]]],[11,"clone","aho_corasick","",12,[[["self"]],["match"]]],[11,"default","","",5,[[],["ahocorasickbuilder"]]],[11,"default","","",0,[[],["matchkind"]]],[11,"default","aho_corasick::packed","",7,[[],["matchkind"]]],[11,"default","","",8,[[],["config"]]],[11,"default","","",9,[[],["builder"]]],[11,"eq","aho_corasick","",0,[[["self"],["matchkind"]],["bool"]]],[11,"eq","aho_corasick::packed","",7,[[["self"],["matchkind"]],["bool"]]],[11,"eq","aho_corasick","",12,[[["self"],["match"]],["bool"]]],[11,"ne","","",12,[[["self"],["match"]],["bool"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","aho_corasick::packed","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","aho_corasick","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"hash","","",12,[[["self"],["__h"]]]],[11,"description","","",6,[[["self"]],["str"]]]],"p":[[4,"MatchKind"],[4,"ErrorKind"],[13,"StateIDOverflow"],[13,"PremultiplyOverflow"],[3,"AhoCorasick"],[3,"AhoCorasickBuilder"],[3,"Error"],[4,"MatchKind"],[3,"Config"],[3,"Builder"],[3,"Searcher"],[8,"StateID"],[3,"Match"],[3,"FindIter"],[3,"FindOverlappingIter"],[3,"StreamFindIter"],[3,"FindIter"]]};
searchIndex["ansi_term"] = {"doc":"This is a library for controlling colours and formatting,…","i":[[3,"Prefix","ansi_term","Like `ANSIString`, but only displays the style prefix.",null,null],[3,"Infix","","Like `ANSIString`, but only displays the difference…",null,null],[3,"Suffix","","Like `ANSIString`, but only displays the style suffix.",null,null],[3,"Style","","A style is a collection of properties that can format a…",null,null],[12,"foreground","","The style's foreground colour, if it has one.",0,null],[12,"background","","The style's background colour, if it has one.",0,null],[12,"is_bold","","Whether this style is bold.",0,null],[12,"is_dimmed","","Whether this style is dimmed.",0,null],[12,"is_italic","","Whether this style is italic.",0,null],[12,"is_underline","","Whether this style is underlined.",0,null],[12,"is_blink","","Whether this style is blinking.",0,null],[12,"is_reverse","","Whether this style has reverse colours.",0,null],[12,"is_hidden","","Whether this style is hidden.",0,null],[12,"is_strikethrough","","Whether this style is struckthrough.",0,null],[3,"ANSIGenericString","","An `ANSIGenericString` includes a generic string type and…",null,null],[3,"ANSIGenericStrings","","A set of `ANSIGenericString`s collected together, in order…",null,null],[12,"0","","",1,null],[4,"Colour","","A colour is one specific type of ANSI escape code, and can…",null,null],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",2,null],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",2,null],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",2,null],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",2,null],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",2,null],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",2,null],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",2,null],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",2,null],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour…",2,null],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",2,null],[4,"Color","","A colour is one specific type of ANSI escape code, and can…",null,null],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",2,null],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",2,null],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",2,null],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",2,null],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",2,null],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",2,null],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",2,null],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",2,null],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour…",2,null],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",2,null],[5,"ANSIStrings","","A function to construct an `ANSIStrings` instance.",null,[[],["ansistrings"]]],[5,"ANSIByteStrings","","A function to construct an `ANSIByteStrings` instance.",null,[[],["ansibytestrings"]]],[11,"prefix","","The prefix for this style.",0,[[],["prefix"]]],[11,"infix","","The infix between this style and another.",0,[[["style"]],["infix"]]],[11,"suffix","","The suffix for this style.",0,[[],["suffix"]]],[11,"prefix","","The prefix for this colour.",2,[[],["prefix"]]],[11,"infix","","The infix between this colour and another.",2,[[["colour"]],["infix"]]],[11,"suffix","","The suffix for this colour.",2,[[],["suffix"]]],[11,"new","","Creates a new Style with no differences.",0,[[],["style"]]],[11,"bold","","Returns a `Style` with the bold property set.",0,[[["self"]],["style"]]],[11,"dimmed","","Returns a `Style` with the dimmed property set.",0,[[["self"]],["style"]]],[11,"italic","","Returns a `Style` with the italic property set.",0,[[["self"]],["style"]]],[11,"underline","","Returns a `Style` with the underline property set.",0,[[["self"]],["style"]]],[11,"blink","","Returns a `Style` with the blink property set.",0,[[["self"]],["style"]]],[11,"reverse","","Returns a `Style` with the reverse property set.",0,[[["self"]],["style"]]],[11,"hidden","","Returns a `Style` with the hidden property set.",0,[[["self"]],["style"]]],[11,"strikethrough","","Returns a `Style` with the hidden property set.",0,[[["self"]],["style"]]],[11,"fg","","Returns a `Style` with the foreground colour property set.",0,[[["colour"],["self"]],["style"]]],[11,"on","","Returns a `Style` with the background colour property set.",0,[[["colour"],["self"]],["style"]]],[11,"is_plain","","Return true if this `Style` has no actual styles, and can…",0,[[],["bool"]]],[11,"normal","","Return a `Style` with the foreground colour set to this…",2,[[],["style"]]],[11,"bold","","Returns a `Style` with the bold property set.",2,[[],["style"]]],[11,"dimmed","","Returns a `Style` with the dimmed property set.",2,[[],["style"]]],[11,"italic","","Returns a `Style` with the italic property set.",2,[[],["style"]]],[11,"underline","","Returns a `Style` with the underline property set.",2,[[],["style"]]],[11,"blink","","Returns a `Style` with the blink property set.",2,[[],["style"]]],[11,"reverse","","Returns a `Style` with the reverse property set.",2,[[],["style"]]],[11,"hidden","","Returns a `Style` with the hidden property set.",2,[[],["style"]]],[11,"strikethrough","","Returns a `Style` with the strikethrough property set.",2,[[],["style"]]],[11,"on","","Returns a `Style` with the background colour property set.",2,[[["colour"]],["style"]]],[11,"paint","","Paints the given text with this colour, returning an ANSI…",0,[[["i"]],[["ansigenericstring"],["toowned"],["sized"]]]],[11,"paint","","Paints the given text with this colour, returning an ANSI…",2,[[["i"]],[["ansigenericstring"],["toowned"],["sized"]]]],[11,"write_to","","Write an `ANSIByteString` to an `io::Write`. This writes…",3,[[["w"],["self"]],["result"]]],[11,"write_to","","Write `ANSIByteStrings` to an `io::Write`. This writes the…",1,[[["w"],["self"]],["result"]]],[6,"ANSIString","","An ANSI String is a string coupled with the `Style` to…",null,null],[6,"ANSIByteString","","An `ANSIByteString` represents a formatted series of…",null,null],[6,"ANSIStrings","","A set of `ANSIString`s collected together, in order to be…",null,null],[6,"ANSIByteStrings","","A set of `ANSIByteString`s collected together, in order to…",null,null],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","You can turn a `Colour` into a `Style` with the foreground…",0,[[["colour"]],["style"]]],[11,"from","","",3,[[["i"]],["ansigenericstring"]]],[11,"clone","","",4,[[["self"]],["prefix"]]],[11,"clone","","",5,[[["self"]],["infix"]]],[11,"clone","","",6,[[["self"]],["suffix"]]],[11,"clone","","",0,[[["self"]],["style"]]],[11,"clone","","",2,[[["self"]],["colour"]]],[11,"clone","","",3,[[["self"]],["ansigenericstring"]]],[11,"default","","Returns a style with no properties set. Formatting text…",0,[[],["style"]]],[11,"eq","","",0,[[["style"],["self"]],["bool"]]],[11,"ne","","",0,[[["style"],["self"]],["bool"]]],[11,"eq","","",2,[[["colour"],["self"]],["bool"]]],[11,"ne","","",2,[[["colour"],["self"]],["bool"]]],[11,"eq","","",3,[[["ansigenericstring"],["self"]],["bool"]]],[11,"ne","","",3,[[["ansigenericstring"],["self"]],["bool"]]],[11,"deref","","",3,[[["self"]],["s"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"write_to","","Write an `ANSIByteString` to an `io::Write`. This writes…",9,[[["w"],["self"]],["result"]]],[11,"write_to","","Write `ANSIByteStrings` to an `io::Write`. This writes the…",10,[[["w"],["self"]],["result"]]]],"p":[[3,"Style"],[3,"ANSIGenericStrings"],[4,"Colour"],[3,"ANSIGenericString"],[3,"Prefix"],[3,"Infix"],[3,"Suffix"],[6,"ANSIString"],[6,"ANSIStrings"],[6,"ANSIByteString"],[6,"ANSIByteStrings"]]};
searchIndex["anyhow"] = {"doc":"![github] ![crates-io] ![docs-rs]","i":[[3,"Error","anyhow","The `Error` type, a wrapper around a dynamic error type.",null,null],[3,"Chain","","Iterator of a chain of source errors.",null,null],[11,"new","","",0,[[["stderror"]],["self"]]],[11,"new","","Create a new error object from any error type.",1,[[["e"]],["self"]]],[11,"msg","","Create a new error object from a printable error message.",1,[[["m"]],["self"]]],[11,"context","","Wrap the error value with additional context.",1,[[["c"]],["self"]]],[11,"chain","","An iterator of the chain of source errors contained by…",1,[[["self"]],["chain"]]],[11,"root_cause","","The lowest level cause of this error — this error's…",1,[[["self"]],["stderror"]]],[11,"is","","Returns true if `E` is the type held by this error object.",1,[[["self"]],["bool"]]],[11,"downcast","","Attempt to downcast the error object to a concrete type.",1,[[],["result"]]],[11,"downcast_ref","","Downcast this error object by reference.",1,[[["self"]],[["option"],["e"]]]],[11,"downcast_mut","","Downcast this error object by mutable reference.",1,[[["self"]],[["option"],["e"]]]],[6,"Result","","`Result<T, Error>`",null,null],[8,"Context","","Provides the `context` method for `Result`.",null,null],[10,"context","","Wrap the error value with additional context.",2,[[["c"]],[["error"],["result",["error"]]]]],[10,"with_context","","Wrap the error value with additional context that is…",2,[[["f"]],[["error"],["result",["error"]]]]],[14,"bail","","Return early with an error.",null,null],[14,"ensure","","Return early with an error if a condition is not satisfied.",null,null],[14,"anyhow","","Construct an ad-hoc error from a string.",null,null],[11,"from","","",1,[[],["t"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"drop","","",1,[[["self"]]]],[11,"as_ref","","",1,[[["self"]],["stderror"]]],[11,"as_ref","","",1,[[["self"]],["stderror"]]],[11,"from","","",1,[[["e"]],["self"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"len","","",0,[[["self"]],["usize"]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,[[["self"]]]],[11,"clone","","",0,[[["self"]],["chain"]]],[11,"default","","",0,[[],["self"]]],[11,"deref","","",1,[[["self"]]]],[11,"deref_mut","","",1,[[["self"]]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Chain"],[3,"Error"],[8,"Context"]]};
searchIndex["atty"] = {"doc":"atty is a simple utility that answers one question > is…","i":[[4,"Stream","atty","possible stream sources",null,null],[13,"Stdout","","",0,null],[13,"Stderr","","",0,null],[13,"Stdin","","",0,null],[5,"is","","returns true if this is a tty",null,[[["stream"]],["bool"]]],[5,"isnt","","returns true if this is not a tty",null,[[["stream"]],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"clone","","",0,[[["self"]],["stream"]]]],"p":[[4,"Stream"]]};
searchIndex["bit_set"] = {"doc":"An implementation of a set using a bit vector as an…","i":[[3,"BitSet","bit_set","",null,null],[3,"Iter","","An iterator for `BitSet`.",null,null],[3,"Union","","",null,null],[3,"Intersection","","",null,null],[3,"Difference","","",null,null],[3,"SymmetricDifference","","",null,null],[11,"new","","Creates a new empty `BitSet`.",0,[[],["self"]]],[11,"with_capacity","","Creates a new `BitSet` with initially no contents, able to…",0,[[["usize"]],["self"]]],[11,"from_bit_vec","","Creates a new `BitSet` from the given bit vector.",0,[[["bitvec"]],["self"]]],[11,"from_bytes","","",0,[[],["self"]]],[11,"capacity","","Returns the capacity in bits for this bit vector.…",0,[[["self"]],["usize"]]],[11,"reserve_len","","Reserves capacity for the given `BitSet` to contain `len`…",0,[[["self"],["usize"]]]],[11,"reserve_len_exact","","Reserves the minimum capacity for the given `BitSet` to…",0,[[["self"],["usize"]]]],[11,"into_bit_vec","","Consumes this set to return the underlying bit vector.",0,[[],["bitvec"]]],[11,"get_ref","","Returns a reference to the underlying bit vector.",0,[[["self"]],["bitvec"]]],[11,"shrink_to_fit","","Truncates the underlying vector to the least length…",0,[[["self"]]]],[11,"iter","","Iterator over each usize stored in the `BitSet`.",0,[[["self"]],["iter"]]],[11,"union","","Iterator over each usize stored in `self` union `other`.…",0,[[["self"]],["union"]]],[11,"intersection","","Iterator over each usize stored in `self` intersect…",0,[[["self"]],["intersection"]]],[11,"difference","","Iterator over each usize stored in the `self` setminus…",0,[[["self"]],["difference"]]],[11,"symmetric_difference","","Iterator over each usize stored in the symmetric…",0,[[["self"]],["symmetricdifference"]]],[11,"union_with","","Unions in-place with the specified other bit vector.",0,[[["self"],["self"]]]],[11,"intersect_with","","Intersects in-place with the specified other bit vector.",0,[[["self"],["self"]]]],[11,"difference_with","","Makes this bit vector the difference with the specified…",0,[[["self"],["self"]]]],[11,"symmetric_difference_with","","Makes this bit vector the symmetric difference with the…",0,[[["self"],["self"]]]],[11,"len","","Returns the number of set bits in this set.",0,[[["self"]],["usize"]]],[11,"is_empty","","Returns whether there are no bits set in this set",0,[[["self"]],["bool"]]],[11,"clear","","Clears all bits in this set",0,[[["self"]]]],[11,"contains","","Returns `true` if this set contains the specified integer.",0,[[["self"],["usize"]],["bool"]]],[11,"is_disjoint","","Returns `true` if the set has no elements in common with…",0,[[["self"]],["bool"]]],[11,"is_subset","","Returns `true` if the set is a subset of another.",0,[[["self"]],["bool"]]],[11,"is_superset","","Returns `true` if the set is a superset of another.",0,[[["self"]],["bool"]]],[11,"insert","","Adds a value to the set. Returns `true` if the value was…",0,[[["self"],["usize"]],["bool"]]],[11,"remove","","Removes a value from the set. Returns `true` if the value…",0,[[["self"],["usize"]],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"]],["bool"]]],[11,"cmp","","",0,[[["self"]],["ordering"]]],[11,"partial_cmp","","",0,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"next","","",1,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"size_hint","","",1,[[["self"]]]],[11,"next","","",2,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"size_hint","","",2,[[["self"]]]],[11,"next","","",3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"size_hint","","",3,[[["self"]]]],[11,"next","","",4,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"size_hint","","",4,[[["self"]]]],[11,"next","","",5,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"size_hint","","",5,[[["self"]]]],[11,"extend","","",0,[[["self"],["intoiterator"]]]],[11,"from_iter","","",0,[[["intoiterator"]],["self"]]],[11,"clone","","",0,[[["self"]],["self"]]],[11,"clone_from","","",0,[[["self"],["self"]]]],[11,"clone","","",1,[[["self"]],["iter"]]],[11,"clone","","",2,[[["self"]],["union"]]],[11,"clone","","",3,[[["self"]],["intersection"]]],[11,"clone","","",4,[[["self"]],["difference"]]],[11,"clone","","",5,[[["self"]],["symmetricdifference"]]],[11,"default","","",0,[[],["self"]]]],"p":[[3,"BitSet"],[3,"Iter"],[3,"Union"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"]]};
searchIndex["bit_vec"] = {"doc":"Collections implemented with bit vectors.","i":[[3,"BitVec","bit_vec","The bitvector type.",null,null],[3,"Iter","","An iterator for `BitVec`.",null,null],[3,"IntoIter","","",null,null],[3,"Blocks","","An iterator over the blocks of a `BitVec`.",null,null],[8,"BitBlock","","Abstracts over a pile of bits (basically unsigned…",null,null],[10,"bits","","How many bits it has",0,[[],["usize"]]],[11,"bytes","","How many bytes it has",0,[[],["usize"]]],[10,"from_byte","","Convert a byte into this type (lowest-order bits set)",0,[[["u8"]],["self"]]],[10,"count_ones","","Count the number of 1's in the bitwise repr",0,[[],["usize"]]],[10,"zero","","Get `0`",0,[[],["self"]]],[10,"one","","Get `1`",0,[[],["self"]]],[11,"new","","Creates an empty `BitVec`.",1,[[],["self"]]],[11,"from_elem","","Creates a `BitVec` that holds `nbits` elements, setting…",1,[[["usize"],["bool"]],["self"]]],[11,"with_capacity","","Constructs a new, empty `BitVec` with the specified…",1,[[["usize"]],["self"]]],[11,"from_bytes","","Transforms a byte-vector into a `BitVec`. Each byte…",1,[[],["self"]]],[11,"from_fn","","Creates a `BitVec` of the specified length where the value…",1,[[["usize"],["f"]],["self"]]],[11,"blocks","","Iterator over the underlying blocks of data",1,[[["self"]],["blocks"]]],[11,"storage","","Exposes the raw block storage of this BitVec",1,[[["self"]]]],[11,"storage_mut","","Exposes the raw block storage of this BitVec",1,[[["self"]],["vec"]]],[11,"get","","Retrieves the value at index `i`, or `None` if the index…",1,[[["self"],["usize"]],[["option",["bool"]],["bool"]]]],[11,"set","","Sets the value of a bit at an index `i`.",1,[[["self"],["usize"],["bool"]]]],[11,"set_all","","Sets all bits to 1.",1,[[["self"]]]],[11,"negate","","Flips all bits.",1,[[["self"]]]],[11,"union","","Calculates the union of two bitvectors. This acts like the…",1,[[["self"],["self"]],["bool"]]],[11,"intersect","","Calculates the intersection of two bitvectors. This acts…",1,[[["self"],["self"]],["bool"]]],[11,"or","","Calculates the bitwise `or` of two bitvectors.",1,[[["self"],["self"]],["bool"]]],[11,"and","","Calculates the bitwise `and` of two bitvectors.",1,[[["self"],["self"]],["bool"]]],[11,"difference","","Calculates the difference between two bitvectors.",1,[[["self"],["self"]],["bool"]]],[11,"xor","","Calculates the xor of two bitvectors.",1,[[["self"],["self"]],["bool"]]],[11,"nand","","Calculates the nand of two bitvectors.",1,[[["self"],["self"]],["bool"]]],[11,"nor","","Calculates the nor of two bitvectors.",1,[[["self"],["self"]],["bool"]]],[11,"xnor","","Calculates the xnor of two bitvectors.",1,[[["self"],["self"]],["bool"]]],[11,"all","","Returns `true` if all bits are 1.",1,[[["self"]],["bool"]]],[11,"iter","","Returns an iterator over the elements of the vector in…",1,[[["self"]],["iter"]]],[11,"append","","Moves all bits from `other` into `Self`, leaving `other`…",1,[[["self"]]]],[11,"split_off","","Splits the `BitVec` into two at the given bit, retaining…",1,[[["self"],["usize"]],["self"]]],[11,"none","","Returns `true` if all bits are 0.",1,[[["self"]],["bool"]]],[11,"any","","Returns `true` if any bit is 1.",1,[[["self"]],["bool"]]],[11,"to_bytes","","Organises the bits into bytes, such that the first bit in…",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"eq_vec","","Compares a `BitVec` to a slice of `bool`s. Both the…",1,[[["self"]],["bool"]]],[11,"truncate","","Shortens a `BitVec`, dropping excess elements.",1,[[["self"],["usize"]]]],[11,"reserve","","Reserves capacity for at least `additional` more bits to…",1,[[["self"],["usize"]]]],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional`…",1,[[["self"],["usize"]]]],[11,"capacity","","Returns the capacity in bits for this bit vector.…",1,[[["self"]],["usize"]]],[11,"grow","","Grows the `BitVec` in-place, adding `n` copies of `value`…",1,[[["self"],["usize"],["bool"]]]],[11,"pop","","Removes the last bit from the BitVec, and returns it.…",1,[[["self"]],[["option",["bool"]],["bool"]]]],[11,"push","","Pushes a `bool` onto the end.",1,[[["self"],["bool"]]]],[11,"len","","Returns the total number of bits in this vector",1,[[["self"]],["usize"]]],[11,"set_len","","Sets the number of bits that this BitVec considers…",1,[[["self"],["usize"]]]],[11,"is_empty","","Returns true if there are no bits in this vector",1,[[["self"]],["bool"]]],[11,"clear","","Clears all bits in this vector.",1,[[["self"]]]],[11,"shrink_to_fit","","Shrinks the capacity of the underlying storage as much as…",1,[[["self"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"eq","","",1,[[["self"]],["bool"]]],[11,"cmp","","",1,[[["self"]],["ordering"]]],[11,"partial_cmp","","",1,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"index","","",1,[[["self"],["usize"]],["bool"]]],[11,"hash","","",1,[[["self"],["h"]]]],[11,"next","","",2,[[["self"]],[["option",["bool"]],["bool"]]]],[11,"size_hint","","",2,[[["self"]]]],[11,"next","","",3,[[["self"]],[["option",["bool"]],["bool"]]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,[[["self"]]]],[11,"next_back","","",2,[[["self"]],[["option",["bool"]],["bool"]]]],[11,"next_back","","",3,[[["self"]],[["option",["bool"]],["bool"]]]],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"extend","","",1,[[["intoiterator"],["self"]]]],[11,"from_iter","","",1,[[["intoiterator"]],["self"]]],[11,"into_iter","","",1,[[],["intoiter"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone_from","","",1,[[["self"],["self"]]]],[11,"clone","","",2,[[["self"]],["iter"]]],[11,"clone","","",4,[[["self"]],["blocks"]]],[11,"default","","",1,[[],["self"]]]],"p":[[8,"BitBlock"],[3,"BitVec"],[3,"Iter"],[3,"IntoIter"],[3,"Blocks"]]};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator useful for sets of…","i":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",null,null]],"p":[]};
searchIndex["bitmaps"] = {"doc":"This crate provides the [`Bitmap`][Bitmap] type as a…","i":[[3,"Bitmap","bitmaps","A compact array of bits.",null,null],[3,"Iter","","An iterator over the indices in a bitmap which are `true`.",null,null],[11,"load_m128i","","",0,[[["self"]],["__m128i"]]],[11,"load_m128i","","",0,[[["self"]]]],[11,"load_m256i","","",0,[[["self"]],["__m256i"]]],[11,"load_m128i","","",0,[[["self"]]]],[11,"load_m256i","","",0,[[["self"]]]],[11,"load_m128i","","",0,[[["self"]]]],[11,"load_m256i","","",0,[[["self"]]]],[11,"load_m128i","","",0,[[["self"]]]],[11,"load_m256i","","",0,[[["self"]]]],[11,"new","","Construct a bitmap with every bit set to `false`.",0,[[],["self"]]],[11,"mask","","Construct a bitmap where every bit with index less than…",0,[[["usize"]],["self"]]],[11,"from_value","","Construct a bitmap from a value of the same type as its…",0,[[],["self"]]],[11,"into_value","","Convert this bitmap into a value of the type of its…",0,[[]]],[11,"len","","Count the number of `true` bits in the bitmap.",0,[[],["usize"]]],[11,"is_empty","","Test if the bitmap contains only `false` bits.",0,[[],["bool"]]],[11,"get","","Get the value of the bit at a given index.",0,[[["usize"]],["bool"]]],[11,"set","","Set the value of the bit at a given index.",0,[[["self"],["usize"],["bool"]],["bool"]]],[11,"first_index","","Find the index of the first `true` bit in the bitmap.",0,[[],[["usize"],["option",["usize"]]]]],[11,"invert","","Invert all the bits in the bitmap.",0,[[["self"]]]],[8,"BitOps","","A trait that defines generalised operations on a…",null,null],[10,"get","","",1,[[["self"],["usize"]],["bool"]]],[10,"set","","",1,[[["self"],["usize"],["bool"]],["bool"]]],[10,"len","","",1,[[["self"]],["usize"]]],[10,"first_index","","",1,[[["self"]],[["usize"],["option",["usize"]]]]],[10,"bit_and","","",1,[[["self"],["self"]]]],[10,"bit_or","","",1,[[["self"],["self"]]]],[10,"bit_xor","","",1,[[["self"],["self"]]]],[10,"invert","","",1,[[["self"]]]],[10,"make_mask","","",1,[[["usize"]],["self"]]],[10,"to_hex","","",1,[[["self"]],["string"]]],[8,"Bits","","A type level number signifying the number of bits in a…",null,null],[16,"Store","","A primitive integer type suitable for storing this many…",2,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[],["self"]]],[11,"from","","",0,[[],["self"]]],[11,"from","","",0,[[],["self"]]],[11,"from","","",0,[[],["self"]]],[11,"from","","",0,[[],["self"]]],[11,"from","","",0,[[],["self"]]],[11,"from","","",0,[[],["self"]]],[11,"from","","",0,[[["__m128i"]],["self"]]],[11,"from","","",0,[[["__m256i"]],["self"]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[],["__m128i"]]],[11,"into","","",0,[[],["__m256i"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"clone","","",0,[[["self"]],["self"]]],[11,"default","","",0,[[],["self"]]],[11,"eq","","",0,[[["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"not","","",0,[[]]],[11,"bitand","","",0,[[]]],[11,"bitor","","",0,[[]]],[11,"bitxor","","",0,[[]]],[11,"bitand_assign","","",0,[[["self"]]]],[11,"bitor_assign","","",0,[[["self"]]]],[11,"bitxor_assign","","",0,[[["self"]]]]],"p":[[3,"Bitmap"],[8,"BitOps"],[8,"Bits"],[3,"Iter"]]};
searchIndex["bstr"] = {"doc":"An experimental byte string library.","i":[[3,"BStr","bstr","A wrapper for `&[u8]` that provides convenient string…",null,null],[3,"BString","","A wrapper for `Vec<u8>` that provides convenient string…",null,null],[3,"Bytes","","An iterator over the bytes in a byte string.",null,null],[3,"Fields","","An iterator over the fields in a byte string, separated by…",null,null],[3,"FieldsWith","","An iterator over fields in the byte string, separated by a…",null,null],[3,"Find","","An iterator over non-overlapping substring matches.",null,null],[3,"FindReverse","","An iterator over non-overlapping substring matches in…",null,null],[3,"Finder","","A single substring searcher fixed to a particular needle.",null,null],[3,"FinderReverse","","A single substring reverse searcher fixed to a particular…",null,null],[3,"Lines","","An iterator over all lines in a byte string, without their…",null,null],[3,"LinesWithTerminator","","An iterator over all lines in a byte string, including…",null,null],[3,"Split","","An iterator over substrings in a byte string, split by a…",null,null],[3,"SplitN","","An iterator over at most `n` substrings in a byte string,…",null,null],[3,"SplitNReverse","","An iterator over at most `n` substrings in a byte string,…",null,null],[3,"SplitReverse","","An iterator over substrings in a byte string, split by a…",null,null],[3,"DrainBytes","","A draining byte oriented iterator for `Vec<u8>`.",null,null],[3,"FromUtf8Error","","An error that may occur when converting a `Vec<u8>` to a…",null,null],[3,"GraphemeIndices","","An iterator over grapheme clusters in a byte string and…",null,null],[3,"Graphemes","","An iterator over grapheme clusters in a byte string.",null,null],[3,"SentenceIndices","","An iterator over sentences in a byte string, along with…",null,null],[3,"Sentences","","An iterator over sentences in a byte string.",null,null],[3,"WordIndices","","An iterator over words in a byte string and their byte…",null,null],[3,"Words","","An iterator over words in a byte string.",null,null],[3,"WordsWithBreakIndices","","An iterator over all word breaks in a byte string, along…",null,null],[3,"WordsWithBreaks","","An iterator over all word breaks in a byte string.",null,null],[3,"CharIndices","","An iterator over Unicode scalar values in a byte string…",null,null],[3,"Chars","","An iterator over Unicode scalar values in a byte string.",null,null],[3,"Utf8Chunk","","A chunk of valid UTF-8, possibly followed by invalid UTF-8…",null,null],[3,"Utf8Chunks","","An iterator over chunks of valid UTF-8 in a byte slice.",null,null],[3,"Utf8Error","","An error that occurs when UTF-8 decoding fails.",null,null],[5,"B","","A short-hand constructor for building a `&[u8]`.",null,[[["b"]]]],[5,"concat","","Concatenate the elements given by the iterator together…",null,[[["i"]],[["vec",["u8"]],["u8"]]]],[5,"join","","Join the elements given by the iterator with the given…",null,[[["i"],["b"]],[["vec",["u8"]],["u8"]]]],[5,"decode_utf8","","UTF-8 decode a single Unicode scalar value from the…",null,[[["asref"]]]],[5,"decode_last_utf8","","UTF-8 decode a single Unicode scalar value from the end of…",null,[[["asref"]]]],[11,"new","","Create a new finder for the given needle.",0,[[["b"]],["finder"]]],[11,"into_owned","","Convert this finder into its owned variant, such that it…",0,[[],["finder"]]],[11,"needle","","Returns the needle that this finder searches for.",0,[[["self"]]]],[11,"find","","Returns the index of the first occurrence of this needle…",0,[[["asref"],["self"]],[["usize"],["option",["usize"]]]]],[11,"new","","Create a new reverse finder for the given needle.",1,[[["b"]],["finderreverse"]]],[11,"into_owned","","Convert this finder into its owned variant, such that it…",1,[[],["finderreverse"]]],[11,"needle","","Returns the needle that this finder searches for.",1,[[["self"]]]],[11,"rfind","","Returns the index of the last occurrence of this needle in…",1,[[["asref"],["self"]],[["usize"],["option",["usize"]]]]],[11,"as_bytes","","Return the original bytes as a slice that failed to…",2,[[["self"]]]],[11,"into_vec","","Consume this error and return the original byte string…",2,[[],[["vec",["u8"]],["u8"]]]],[11,"utf8_error","","Return the underlying UTF-8 error that occurred. This…",2,[[["self"]],["utf8error"]]],[0,"io","","Utilities for working with I/O using byte strings.",null,null],[3,"ByteLines","bstr::io","An iterator over lines from an instance of…",null,null],[3,"ByteRecords","","An iterator over records from an instance of…",null,null],[8,"BufReadExt","","An extention trait for `std::io::BufRead` which provides…",null,null],[11,"byte_lines","","Returns an iterator over the lines of this reader, where…",3,[[],["bytelines"]]],[11,"byte_records","","Returns an iterator over byte-terminated records of this…",3,[[["u8"]],["byterecords"]]],[11,"for_byte_line","","Executes the given closure on each line in the underlying…",3,[[["f"]],["result"]]],[11,"for_byte_record","","Executes the given closure on each byte-terminated record…",3,[[["f"],["u8"]],["result"]]],[11,"for_byte_line_with_terminator","","Executes the given closure on each line in the underlying…",3,[[["f"]],["result"]]],[11,"for_byte_record_with_terminator","","Executes the given closure on each byte-terminated record…",3,[[["f"],["u8"]],["result"]]],[11,"as_bytes","bstr","View the underlying data as a subslice of the original data.",4,[[["self"]]]],[11,"as_bytes","","View the underlying data as a subslice of the original data.",5,[[["self"]]]],[11,"as_bytes","","View the underlying data as a subslice of the original data.",6,[[["self"]]]],[11,"as_bytes","","View the underlying data as a subslice of the original data.",7,[[["self"]]]],[11,"as_bytes","","View the underlying data as a subslice of the original data.",8,[[["self"]]]],[11,"as_bytes","","View the underlying data as a subslice of the original data.",9,[[["self"]]]],[11,"as_bytes","","View the underlying data as a subslice of the original data.",10,[[["self"]]]],[11,"as_bytes","","View the underlying data as a subslice of the original data.",11,[[["self"]]]],[11,"as_bytes","","View the underlying data as a subslice of the original data.",12,[[["self"]]]],[11,"as_bytes","","View the underlying data as a subslice of the original data.",13,[[["self"]]]],[11,"valid","","Returns the (possibly empty) valid UTF-8 bytes in this…",14,[[["self"]],["str"]]],[11,"invalid","","Returns the (possibly empty) invalid UTF-8 bytes in this…",14,[[["self"]]]],[11,"valid_up_to","","Returns the byte index of the position immediately…",15,[[["self"]],["usize"]]],[11,"error_len","","Returns the total number of invalid UTF-8 bytes…",15,[[["self"]],[["usize"],["option",["usize"]]]]],[8,"ByteSlice","","A trait that extends `&[u8]` with string oriented methods.",null,null],[11,"as_bstr","","Return this byte slice as a `&BStr`.",16,[[["self"]],["bstr"]]],[11,"as_bstr_mut","","Return this byte slice as a `&mut BStr`.",16,[[["self"]],["bstr"]]],[11,"from_os_str","","Create an immutable byte string from an OS string slice.",16,[[["osstr"]],["option"]]],[11,"from_path","","Create an immutable byte string from a file path.",16,[[["path"]],["option"]]],[11,"to_str","","Safely convert this byte string into a `&str` if it's…",16,[[["self"]],[["str"],["result",["str","utf8error"]],["utf8error"]]]],[11,"to_str_unchecked","","Unsafely convert this byte string into a `&str`, without…",16,[[["self"]],["str"]]],[11,"to_str_lossy","","Convert this byte string to a valid UTF-8 string by…",16,[[["self"]],[["str"],["cow",["str"]]]]],[11,"to_str_lossy_into","","Copy the contents of this byte string into the given owned…",16,[[["string"],["self"]]]],[11,"to_os_str","","Create an OS string slice from this byte string.",16,[[["self"]],[["result",["osstr","utf8error"]],["osstr"],["utf8error"]]]],[11,"to_os_str_lossy","","Lossily create an OS string slice from this byte string.",16,[[["self"]],[["cow",["osstr"]],["osstr"]]]],[11,"to_path","","Create a path slice from this byte string.",16,[[["self"]],[["path"],["result",["path","utf8error"]],["utf8error"]]]],[11,"to_path_lossy","","Lossily create a path slice from this byte string.",16,[[["self"]],[["cow",["path"]],["path"]]]],[11,"repeatn","","Create a new byte string by repeating this byte string `n`…",16,[[["self"],["usize"]],[["vec",["u8"]],["u8"]]]],[11,"contains_str","","Returns true if and only if this byte string contains the…",16,[[["asref"],["self"]],["bool"]]],[11,"starts_with_str","","Returns true if and only if this byte string has the given…",16,[[["asref"],["self"]],["bool"]]],[11,"ends_with_str","","Returns true if and only if this byte string has the given…",16,[[["asref"],["self"]],["bool"]]],[11,"find","","Returns the index of the first occurrence of the given…",16,[[["asref"],["self"]],[["usize"],["option",["usize"]]]]],[11,"rfind","","Returns the index of the last occurrence of the given…",16,[[["asref"],["self"]],[["usize"],["option",["usize"]]]]],[11,"find_iter","","Returns an iterator of the non-overlapping occurrences of…",16,[[["b"],["self"]],["find"]]],[11,"rfind_iter","","Returns an iterator of the non-overlapping occurrences of…",16,[[["b"],["self"]],["findreverse"]]],[11,"find_byte","","Returns the index of the first occurrence of the given…",16,[[["self"],["u8"]],[["usize"],["option",["usize"]]]]],[11,"rfind_byte","","Returns the index of the last occurrence of the given…",16,[[["self"],["u8"]],[["usize"],["option",["usize"]]]]],[11,"find_char","","Returns the index of the first occurrence of the given…",16,[[["self"],["char"]],[["usize"],["option",["usize"]]]]],[11,"rfind_char","","Returns the index of the last occurrence of the given…",16,[[["self"],["char"]],[["usize"],["option",["usize"]]]]],[11,"find_byteset","","Returns the index of the first occurrence of any of the…",16,[[["asref"],["self"]],[["usize"],["option",["usize"]]]]],[11,"find_not_byteset","","Returns the index of the first occurrence of a byte that…",16,[[["asref"],["self"]],[["usize"],["option",["usize"]]]]],[11,"rfind_byteset","","Returns the index of the last occurrence of any of the…",16,[[["asref"],["self"]],[["usize"],["option",["usize"]]]]],[11,"rfind_not_byteset","","Returns the index of the last occurrence of a byte that is…",16,[[["asref"],["self"]],[["usize"],["option",["usize"]]]]],[11,"fields","","Returns an iterator over the fields in a byte string,…",16,[[["self"]],["fields"]]],[11,"fields_with","","Returns an iterator over the fields in a byte string,…",16,[[["self"],["fnmut"]],[["fieldswith"],["fnmut"]]]],[11,"split_str","","Returns an iterator over substrings of this byte string,…",16,[[["b"],["self"]],["split"]]],[11,"rsplit_str","","Returns an iterator over substrings of this byte string,…",16,[[["b"],["self"]],["splitreverse"]]],[11,"splitn_str","","Returns an iterator of at most `limit` substrings of this…",16,[[["b"],["self"],["usize"]],["splitn"]]],[11,"rsplitn_str","","Returns an iterator of at most `limit` substrings of this…",16,[[["b"],["self"],["usize"]],["splitnreverse"]]],[11,"replace","","Replace all matches of the given needle with the given…",16,[[["asref"],["self"]],[["vec",["u8"]],["u8"]]]],[11,"replacen","","Replace up to `limit` matches of the given needle with the…",16,[[["asref"],["usize"],["self"]],[["vec",["u8"]],["u8"]]]],[11,"replace_into","","Replace all matches of the given needle with the given…",16,[[["asref"],["vec"],["self"]]]],[11,"replacen_into","","Replace up to `limit` matches of the given needle with the…",16,[[["asref"],["usize"],["vec"],["self"]]]],[11,"bytes","","Returns an iterator over the bytes in this byte string.",16,[[["self"]],["bytes"]]],[11,"chars","","Returns an iterator over the Unicode scalar values in this…",16,[[["self"]],["chars"]]],[11,"char_indices","","Returns an iterator over the Unicode scalar values in this…",16,[[["self"]],["charindices"]]],[11,"utf8_chunks","","Iterate over chunks of valid UTF-8.",16,[[["self"]],["utf8chunks"]]],[11,"graphemes","","Returns an iterator over the grapheme clusters in this…",16,[[["self"]],["graphemes"]]],[11,"grapheme_indices","","Returns an iterator over the grapheme clusters in this…",16,[[["self"]],["graphemeindices"]]],[11,"words","","Returns an iterator over the words in this byte string. If…",16,[[["self"]],["words"]]],[11,"word_indices","","Returns an iterator over the words in this byte string…",16,[[["self"]],["wordindices"]]],[11,"words_with_breaks","","Returns an iterator over the words in this byte string,…",16,[[["self"]],["wordswithbreaks"]]],[11,"words_with_break_indices","","Returns an iterator over the words and their byte offsets…",16,[[["self"]],["wordswithbreakindices"]]],[11,"sentences","","Returns an iterator over the sentences in this byte string.",16,[[["self"]],["sentences"]]],[11,"sentence_indices","","Returns an iterator over the sentences in this byte string…",16,[[["self"]],["sentenceindices"]]],[11,"lines","","An iterator over all lines in a byte string, without their…",16,[[["self"]],["lines"]]],[11,"lines_with_terminator","","An iterator over all lines in a byte string, including…",16,[[["self"]],["lineswithterminator"]]],[11,"trim","","Return a byte string slice with leading and trailing…",16,[[["self"]]]],[11,"trim_start","","Return a byte string slice with leading whitespace removed.",16,[[["self"]]]],[11,"trim_end","","Return a byte string slice with trailing whitespace removed.",16,[[["self"]]]],[11,"trim_with","","Return a byte string slice with leading and trailing…",16,[[["self"],["fnmut"]]]],[11,"trim_start_with","","Return a byte string slice with leading characters…",16,[[["self"],["fnmut"]]]],[11,"trim_end_with","","Return a byte string slice with trailing characters…",16,[[["self"],["fnmut"]]]],[11,"to_lowercase","","Returns a new `Vec<u8>` containing the lowercase…",16,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_lowercase_into","","Writes the lowercase equivalent of this byte string into…",16,[[["vec"],["self"]]]],[11,"to_ascii_lowercase","","Returns a new `Vec<u8>` containing the ASCII lowercase…",16,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"make_ascii_lowercase","","Convert this byte string to its lowercase ASCII equivalent…",16,[[["self"]]]],[11,"to_uppercase","","Returns a new `Vec<u8>` containing the uppercase…",16,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_uppercase_into","","Writes the uppercase equivalent of this byte string into…",16,[[["vec"],["self"]]]],[11,"to_ascii_uppercase","","Returns a new `Vec<u8>` containing the ASCII uppercase…",16,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"make_ascii_uppercase","","Convert this byte string to its uppercase ASCII equivalent…",16,[[["self"]]]],[11,"reverse_bytes","","Reverse the bytes in this string, in place.",16,[[["self"]]]],[11,"reverse_chars","","Reverse the codepoints in this string, in place.",16,[[["self"]]]],[11,"reverse_graphemes","","Reverse the graphemes in this string, in place.",16,[[["self"]]]],[11,"is_ascii","","Returns true if and only if every byte in this byte string…",16,[[["self"]],["bool"]]],[11,"is_utf8","","Returns true if and only if the entire byte string is…",16,[[["self"]],["bool"]]],[11,"last_byte","","Returns the last byte in this byte string, if it's…",16,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"find_non_ascii_byte","","Returns the index of the first non-ASCII byte in this byte…",16,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"copy_within_str","","Copies elements from one part of the slice to another part…",16,[[["self"],["usize"],["r"]]]],[8,"ByteVec","","A trait that extends `Vec<u8>` with string oriented methods.",null,null],[11,"from_slice","","Create a new owned byte string from the given byte slice.",17,[[["asref"]],[["vec",["u8"]],["u8"]]]],[11,"from_os_string","","Create a new byte string from an owned OS string.",17,[[["osstring"]],[["osstring"],["result",["vec","osstring"]],["vec",["u8"]]]]],[11,"from_os_str_lossy","","Lossily create a new byte string from an OS string slice.",17,[[["osstr"]],["cow"]]],[11,"from_path_buf","","Create a new byte string from an owned file path.",17,[[["pathbuf"]],[["pathbuf"],["vec",["u8"]],["result",["vec","pathbuf"]]]]],[11,"from_path_lossy","","Lossily create a new byte string from a file path.",17,[[["path"]],["cow"]]],[11,"push_byte","","Appends the given byte to the end of this byte string.",17,[[["self"],["u8"]]]],[11,"push_char","","Appends the given `char` to the end of this byte string.",17,[[["self"],["char"]]]],[11,"push_str","","Appends the given slice to the end of this byte string.…",17,[[["self"],["asref"]]]],[11,"into_string","","Converts a `Vec<u8>` into a `String` if and only if this…",17,[[],[["result",["string","fromutf8error"]],["fromutf8error"],["string"]]]],[11,"into_string_lossy","","Lossily converts a `Vec<u8>` into a `String`. If this byte…",17,[[],["string"]]],[11,"into_string_unchecked","","Unsafely convert this byte string into a `String`, without…",17,[[],["string"]]],[11,"into_os_string","","Converts this byte string into an OS string, in place.",17,[[],[["osstring"],["vec",["u8"]],["result",["osstring","vec"]]]]],[11,"into_os_string_lossy","","Lossily converts this byte string into an OS string, in…",17,[[],["osstring"]]],[11,"into_path_buf","","Converts this byte string into an owned file path, in place.",17,[[],[["result",["pathbuf","vec"]],["pathbuf"],["vec",["u8"]]]]],[11,"into_path_buf_lossy","","Lossily converts this byte string into an owned file path,…",17,[[],["pathbuf"]]],[11,"pop_byte","","Removes the last byte from this `Vec<u8>` and returns it.",17,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"pop_char","","Removes the last codepoint from this `Vec<u8>` and returns…",17,[[["self"]],[["option",["char"]],["char"]]]],[11,"remove_char","","Removes a `char` from this `Vec<u8>` at the given byte…",17,[[["self"],["usize"]],["char"]]],[11,"insert_char","","Inserts the given codepoint into this `Vec<u8>` at a…",17,[[["self"],["usize"],["char"]]]],[11,"insert_str","","Inserts the given byte string into this byte string at a…",17,[[["asref"],["usize"],["self"]]]],[11,"replace_range","","Removes the specified range in this byte string and…",17,[[["self"],["b"],["r"]]]],[11,"drain_bytes","","Creates a draining iterator that removes the specified…",17,[[["self"],["r"]],["drainbytes"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"to_string","","",18,[[["self"]],["string"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"to_string","","",19,[[["self"]],["string"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"into_iter","","",20,[[],["i"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"into_iter","","",21,[[],["i"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"into_iter","","",22,[[],["i"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"into_iter","","",23,[[],["i"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"into_iter","","",24,[[],["i"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"into_iter","","",25,[[],["i"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"into_iter","","",26,[[],["i"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"into_iter","","",27,[[],["i"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"into_iter","","",28,[[],["i"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"into_iter","","",29,[[],["i"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"into_iter","","",30,[[],["i"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"into_iter","","",31,[[],["i"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"into_iter","","",6,[[],["i"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"into_iter","","",9,[[],["i"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"into_iter","","",8,[[],["i"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"into_iter","","",11,[[],["i"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"into_iter","","",13,[[],["i"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"into_iter","","",12,[[],["i"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"into_iter","","",32,[[],["i"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","bstr::io","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"into_iter","","",33,[[],["i"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"into_iter","","",34,[[],["i"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"as_mut","bstr","",19,[[["self"]]]],[11,"as_mut","","",19,[[["self"]],["bstr"]]],[11,"as_mut","","",18,[[["self"]]]],[11,"as_ref","","",19,[[["self"]]]],[11,"as_ref","","",19,[[["self"]],["bstr"]]],[11,"as_ref","","",18,[[["self"]]]],[11,"from","","",19,[[],["bstring"]]],[11,"from","","",19,[[["vec",["u8"]],["u8"]],["bstring"]]],[11,"from","","",19,[[["str"]],["bstring"]]],[11,"from","","",19,[[["string"]],["bstring"]]],[11,"from","","",19,[[["bstr"]],["bstring"]]],[11,"next_back","","",20,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"next_back","","",31,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"next_back","","",4,[[["self"]],[["str"],["option",["str"]]]]],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"next_back","","",12,[[["self"]],[["option",["char"]],["char"]]]],[11,"next_back","","",13,[[["self"]],["option"]]],[11,"len","","",20,[[["self"]],["usize"]]],[11,"len","","",31,[[["self"]],["usize"]]],[11,"next","","",23,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"next","","",24,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"next","","",20,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"next","","",21,[[["self"]],["option"]]],[11,"next","","",22,[[["self"]],["option"]]],[11,"next","","",27,[[["self"]],["option"]]],[11,"next","","",30,[[["self"]],["option"]]],[11,"next","","",28,[[["self"]],["option"]]],[11,"next","","",29,[[["self"]],["option"]]],[11,"next","","",25,[[["self"]],["option"]]],[11,"next","","",26,[[["self"]],["option"]]],[11,"next","","",31,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"next","bstr::io","",33,[[["self"]],[["option",["result"]],["result",["vec"]]]]],[11,"next","","",34,[[["self"]],[["option",["result"]],["result",["vec"]]]]],[11,"next","bstr","",4,[[["self"]],[["str"],["option",["str"]]]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"next","","",6,[[["self"]],[["str"],["option",["str"]]]]],[11,"next","","",7,[[["self"]],["option"]]],[11,"next","","",8,[[["self"]],[["str"],["option",["str"]]]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"next","","",10,[[["self"]],[["str"],["option",["str"]]]]],[11,"next","","",11,[[["self"]],["option"]]],[11,"next","","",12,[[["self"]],[["option",["char"]],["char"]]]],[11,"next","","",13,[[["self"]],["option"]]],[11,"next","","",32,[[["self"]],[["option",["utf8chunk"]],["utf8chunk"]]]],[11,"size_hint","","",32,[[["self"]]]],[11,"clone","","",19,[[["self"]],["bstring"]]],[11,"clone","","",0,[[["self"]],["finder"]]],[11,"clone","","",1,[[["self"]],["finderreverse"]]],[11,"clone","","",20,[[["self"]],["bytes"]]],[11,"clone","","",4,[[["self"]],["graphemes"]]],[11,"clone","","",5,[[["self"]],["graphemeindices"]]],[11,"clone","","",6,[[["self"]],["sentences"]]],[11,"clone","","",7,[[["self"]],["sentenceindices"]]],[11,"clone","","",8,[[["self"]],["words"]]],[11,"clone","","",9,[[["self"]],["wordindices"]]],[11,"clone","","",10,[[["self"]],["wordswithbreaks"]]],[11,"clone","","",11,[[["self"]],["wordswithbreakindices"]]],[11,"clone","","",12,[[["self"]],["chars"]]],[11,"clone","","",13,[[["self"]],["charindices"]]],[11,"clone","","",32,[[["self"]],["utf8chunks"]]],[11,"default","","",19,[[],["bstring"]]],[11,"cmp","","",19,[[["self"],["bstring"]],["ordering"]]],[11,"cmp","","",18,[[["bstr"],["self"]],["ordering"]]],[11,"eq","","",2,[[["fromutf8error"],["self"]],["bool"]]],[11,"ne","","",2,[[["fromutf8error"],["self"]],["bool"]]],[11,"eq","","",19,[[["self"],["bstring"]],["bool"]]],[11,"eq","","",19,[[["self"],["vec"]],["bool"]]],[11,"eq","","",19,[[["self"]],["bool"]]],[11,"eq","","",19,[[["self"]],["bool"]]],[11,"eq","","",19,[[["string"],["self"]],["bool"]]],[11,"eq","","",19,[[["str"],["self"]],["bool"]]],[11,"eq","","",19,[[["str"],["self"]],["bool"]]],[11,"eq","","",19,[[["bstr"],["self"]],["bool"]]],[11,"eq","","",18,[[["self"],["bstring"]],["bool"]]],[11,"eq","","",19,[[["bstr"],["self"]],["bool"]]],[11,"eq","","",18,[[["bstr"],["self"]],["bool"]]],[11,"eq","","",18,[[["self"]],["bool"]]],[11,"eq","","",18,[[["self"]],["bool"]]],[11,"eq","","",18,[[["str"],["self"]],["bool"]]],[11,"eq","","",18,[[["str"],["self"]],["bool"]]],[11,"eq","","",18,[[["self"],["vec"]],["bool"]]],[11,"eq","","",18,[[["string"],["self"]],["bool"]]],[11,"eq","","",15,[[["utf8error"],["self"]],["bool"]]],[11,"ne","","",15,[[["utf8error"],["self"]],["bool"]]],[11,"partial_cmp","","",19,[[["self"],["bstring"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",19,[[["self"],["vec"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",19,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",19,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",19,[[["string"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",19,[[["str"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",19,[[["str"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",19,[[["bstr"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",18,[[["self"],["bstring"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",19,[[["bstr"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",18,[[["bstr"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",18,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",18,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",18,[[["str"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",18,[[["str"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",18,[[["self"],["vec"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",18,[[["string"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"to_owned","","",18,[[["self"]],["bstring"]]],[11,"deref","","",19,[[["self"]],["vec"]]],[11,"deref","","",18,[[["self"]]]],[11,"deref_mut","","",19,[[["self"]],["vec"]]],[11,"deref_mut","","",18,[[["self"]]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","bstr::io","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","bstr","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"index","","",18,[[["self"],["usize"]],["u8"]]],[11,"index","","",18,[[["rangefull"],["self"]],["bstr"]]],[11,"index","","",18,[[["range",["usize"]],["self"],["usize"]],["bstr"]]],[11,"index","","",18,[[["usize"],["self"],["rangeinclusive",["usize"]]],["bstr"]]],[11,"index","","",18,[[["usize"],["self"],["rangefrom",["usize"]]],["bstr"]]],[11,"index","","",18,[[["rangeto",["usize"]],["self"],["usize"]],["bstr"]]],[11,"index","","",18,[[["usize"],["self"],["rangetoinclusive",["usize"]]],["bstr"]]],[11,"index_mut","","",18,[[["self"],["usize"]],["u8"]]],[11,"index_mut","","",18,[[["rangefull"],["self"]],["bstr"]]],[11,"index_mut","","",18,[[["self"],["usize"],["range",["usize"]]],["bstr"]]],[11,"index_mut","","",18,[[["self"],["rangeinclusive",["usize"]],["usize"]],["bstr"]]],[11,"index_mut","","",18,[[["self"],["rangefrom",["usize"]],["usize"]],["bstr"]]],[11,"index_mut","","",18,[[["rangeto",["usize"]],["self"],["usize"]],["bstr"]]],[11,"index_mut","","",18,[[["self"],["rangetoinclusive",["usize"]],["usize"]],["bstr"]]],[11,"hash","","",18,[[["self"],["__h"]]]],[11,"hash","","",19,[[["self"],["__h"]]]],[11,"from_iter","","",19,[[["intoiterator"]],["bstring"]]],[11,"from_iter","","",19,[[["intoiterator"]],["bstring"]]],[11,"from_iter","","",19,[[["intoiterator"]],["bstring"]]],[11,"from_iter","","",19,[[["intoiterator"]],["bstring"]]],[11,"from_iter","","",19,[[["intoiterator"]],["bstring"]]],[11,"from_iter","","",19,[[["intoiterator"]],["bstring"]]],[11,"borrow","","",19,[[["self"]],["bstr"]]],[11,"description","","",2,[[["self"]],["str"]]],[11,"description","","",15,[[["self"]],["str"]]],[11,"serialize","","",18,[[["s"],["self"]],["result"]]],[11,"serialize","","",19,[[["s"],["self"]],["result"]]],[11,"deserialize","","",19,[[["d"]],[["result",["bstring"]],["bstring"]]]],[11,"as_bstr","","Return this byte slice as a `&BStr`.",16,[[["self"]],["bstr"]]],[11,"as_bstr_mut","","Return this byte slice as a `&mut BStr`.",16,[[["self"]],["bstr"]]],[11,"from_os_str","","Create an immutable byte string from an OS string slice.",16,[[["osstr"]],["option"]]],[11,"from_path","","Create an immutable byte string from a file path.",16,[[["path"]],["option"]]],[11,"to_str","","Safely convert this byte string into a `&str` if it's…",16,[[["self"]],[["str"],["result",["str","utf8error"]],["utf8error"]]]],[11,"to_str_unchecked","","Unsafely convert this byte string into a `&str`, without…",16,[[["self"]],["str"]]],[11,"to_str_lossy","","Convert this byte string to a valid UTF-8 string by…",16,[[["self"]],[["str"],["cow",["str"]]]]],[11,"to_str_lossy_into","","Copy the contents of this byte string into the given owned…",16,[[["string"],["self"]]]],[11,"to_os_str","","Create an OS string slice from this byte string.",16,[[["self"]],[["result",["osstr","utf8error"]],["osstr"],["utf8error"]]]],[11,"to_os_str_lossy","","Lossily create an OS string slice from this byte string.",16,[[["self"]],[["cow",["osstr"]],["osstr"]]]],[11,"to_path","","Create a path slice from this byte string.",16,[[["self"]],[["path"],["result",["path","utf8error"]],["utf8error"]]]],[11,"to_path_lossy","","Lossily create a path slice from this byte string.",16,[[["self"]],[["cow",["path"]],["path"]]]],[11,"repeatn","","Create a new byte string by repeating this byte string `n`…",16,[[["self"],["usize"]],[["vec",["u8"]],["u8"]]]],[11,"contains_str","","Returns true if and only if this byte string contains the…",16,[[["asref"],["self"]],["bool"]]],[11,"starts_with_str","","Returns true if and only if this byte string has the given…",16,[[["asref"],["self"]],["bool"]]],[11,"ends_with_str","","Returns true if and only if this byte string has the given…",16,[[["asref"],["self"]],["bool"]]],[11,"find","","Returns the index of the first occurrence of the given…",16,[[["asref"],["self"]],[["usize"],["option",["usize"]]]]],[11,"rfind","","Returns the index of the last occurrence of the given…",16,[[["asref"],["self"]],[["usize"],["option",["usize"]]]]],[11,"find_iter","","Returns an iterator of the non-overlapping occurrences of…",16,[[["b"],["self"]],["find"]]],[11,"rfind_iter","","Returns an iterator of the non-overlapping occurrences of…",16,[[["b"],["self"]],["findreverse"]]],[11,"find_byte","","Returns the index of the first occurrence of the given…",16,[[["self"],["u8"]],[["usize"],["option",["usize"]]]]],[11,"rfind_byte","","Returns the index of the last occurrence of the given…",16,[[["self"],["u8"]],[["usize"],["option",["usize"]]]]],[11,"find_char","","Returns the index of the first occurrence of the given…",16,[[["self"],["char"]],[["usize"],["option",["usize"]]]]],[11,"rfind_char","","Returns the index of the last occurrence of the given…",16,[[["self"],["char"]],[["usize"],["option",["usize"]]]]],[11,"find_byteset","","Returns the index of the first occurrence of any of the…",16,[[["asref"],["self"]],[["usize"],["option",["usize"]]]]],[11,"find_not_byteset","","Returns the index of the first occurrence of a byte that…",16,[[["asref"],["self"]],[["usize"],["option",["usize"]]]]],[11,"rfind_byteset","","Returns the index of the last occurrence of any of the…",16,[[["asref"],["self"]],[["usize"],["option",["usize"]]]]],[11,"rfind_not_byteset","","Returns the index of the last occurrence of a byte that is…",16,[[["asref"],["self"]],[["usize"],["option",["usize"]]]]],[11,"fields","","Returns an iterator over the fields in a byte string,…",16,[[["self"]],["fields"]]],[11,"fields_with","","Returns an iterator over the fields in a byte string,…",16,[[["self"],["fnmut"]],[["fieldswith"],["fnmut"]]]],[11,"split_str","","Returns an iterator over substrings of this byte string,…",16,[[["b"],["self"]],["split"]]],[11,"rsplit_str","","Returns an iterator over substrings of this byte string,…",16,[[["b"],["self"]],["splitreverse"]]],[11,"splitn_str","","Returns an iterator of at most `limit` substrings of this…",16,[[["b"],["self"],["usize"]],["splitn"]]],[11,"rsplitn_str","","Returns an iterator of at most `limit` substrings of this…",16,[[["b"],["self"],["usize"]],["splitnreverse"]]],[11,"replace","","Replace all matches of the given needle with the given…",16,[[["asref"],["self"]],[["vec",["u8"]],["u8"]]]],[11,"replacen","","Replace up to `limit` matches of the given needle with the…",16,[[["asref"],["usize"],["self"]],[["vec",["u8"]],["u8"]]]],[11,"replace_into","","Replace all matches of the given needle with the given…",16,[[["asref"],["vec"],["self"]]]],[11,"replacen_into","","Replace up to `limit` matches of the given needle with the…",16,[[["asref"],["usize"],["vec"],["self"]]]],[11,"bytes","","Returns an iterator over the bytes in this byte string.",16,[[["self"]],["bytes"]]],[11,"chars","","Returns an iterator over the Unicode scalar values in this…",16,[[["self"]],["chars"]]],[11,"char_indices","","Returns an iterator over the Unicode scalar values in this…",16,[[["self"]],["charindices"]]],[11,"utf8_chunks","","Iterate over chunks of valid UTF-8.",16,[[["self"]],["utf8chunks"]]],[11,"graphemes","","Returns an iterator over the grapheme clusters in this…",16,[[["self"]],["graphemes"]]],[11,"grapheme_indices","","Returns an iterator over the grapheme clusters in this…",16,[[["self"]],["graphemeindices"]]],[11,"words","","Returns an iterator over the words in this byte string. If…",16,[[["self"]],["words"]]],[11,"word_indices","","Returns an iterator over the words in this byte string…",16,[[["self"]],["wordindices"]]],[11,"words_with_breaks","","Returns an iterator over the words in this byte string,…",16,[[["self"]],["wordswithbreaks"]]],[11,"words_with_break_indices","","Returns an iterator over the words and their byte offsets…",16,[[["self"]],["wordswithbreakindices"]]],[11,"sentences","","Returns an iterator over the sentences in this byte string.",16,[[["self"]],["sentences"]]],[11,"sentence_indices","","Returns an iterator over the sentences in this byte string…",16,[[["self"]],["sentenceindices"]]],[11,"lines","","An iterator over all lines in a byte string, without their…",16,[[["self"]],["lines"]]],[11,"lines_with_terminator","","An iterator over all lines in a byte string, including…",16,[[["self"]],["lineswithterminator"]]],[11,"trim","","Return a byte string slice with leading and trailing…",16,[[["self"]]]],[11,"trim_start","","Return a byte string slice with leading whitespace removed.",16,[[["self"]]]],[11,"trim_end","","Return a byte string slice with trailing whitespace removed.",16,[[["self"]]]],[11,"trim_with","","Return a byte string slice with leading and trailing…",16,[[["self"],["fnmut"]]]],[11,"trim_start_with","","Return a byte string slice with leading characters…",16,[[["self"],["fnmut"]]]],[11,"trim_end_with","","Return a byte string slice with trailing characters…",16,[[["self"],["fnmut"]]]],[11,"to_lowercase","","Returns a new `Vec<u8>` containing the lowercase…",16,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_lowercase_into","","Writes the lowercase equivalent of this byte string into…",16,[[["vec"],["self"]]]],[11,"to_ascii_lowercase","","Returns a new `Vec<u8>` containing the ASCII lowercase…",16,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"make_ascii_lowercase","","Convert this byte string to its lowercase ASCII equivalent…",16,[[["self"]]]],[11,"to_uppercase","","Returns a new `Vec<u8>` containing the uppercase…",16,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_uppercase_into","","Writes the uppercase equivalent of this byte string into…",16,[[["vec"],["self"]]]],[11,"to_ascii_uppercase","","Returns a new `Vec<u8>` containing the ASCII uppercase…",16,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"make_ascii_uppercase","","Convert this byte string to its uppercase ASCII equivalent…",16,[[["self"]]]],[11,"reverse_bytes","","Reverse the bytes in this string, in place.",16,[[["self"]]]],[11,"reverse_chars","","Reverse the codepoints in this string, in place.",16,[[["self"]]]],[11,"reverse_graphemes","","Reverse the graphemes in this string, in place.",16,[[["self"]]]],[11,"is_ascii","","Returns true if and only if every byte in this byte string…",16,[[["self"]],["bool"]]],[11,"is_utf8","","Returns true if and only if the entire byte string is…",16,[[["self"]],["bool"]]],[11,"last_byte","","Returns the last byte in this byte string, if it's…",16,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"find_non_ascii_byte","","Returns the index of the first non-ASCII byte in this byte…",16,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"copy_within_str","","Copies elements from one part of the slice to another part…",16,[[["self"],["usize"],["r"]]]],[11,"from_slice","","Create a new owned byte string from the given byte slice.",17,[[["asref"]],[["vec",["u8"]],["u8"]]]],[11,"from_os_string","","Create a new byte string from an owned OS string.",17,[[["osstring"]],[["osstring"],["result",["vec","osstring"]],["vec",["u8"]]]]],[11,"from_os_str_lossy","","Lossily create a new byte string from an OS string slice.",17,[[["osstr"]],["cow"]]],[11,"from_path_buf","","Create a new byte string from an owned file path.",17,[[["pathbuf"]],[["pathbuf"],["vec",["u8"]],["result",["vec","pathbuf"]]]]],[11,"from_path_lossy","","Lossily create a new byte string from a file path.",17,[[["path"]],["cow"]]],[11,"push_byte","","Appends the given byte to the end of this byte string.",17,[[["self"],["u8"]]]],[11,"push_char","","Appends the given `char` to the end of this byte string.",17,[[["self"],["char"]]]],[11,"push_str","","Appends the given slice to the end of this byte string.…",17,[[["self"],["asref"]]]],[11,"into_string","","Converts a `Vec<u8>` into a `String` if and only if this…",17,[[],[["result",["string","fromutf8error"]],["fromutf8error"],["string"]]]],[11,"into_string_lossy","","Lossily converts a `Vec<u8>` into a `String`. If this byte…",17,[[],["string"]]],[11,"into_string_unchecked","","Unsafely convert this byte string into a `String`, without…",17,[[],["string"]]],[11,"into_os_string","","Converts this byte string into an OS string, in place.",17,[[],[["osstring"],["vec",["u8"]],["result",["osstring","vec"]]]]],[11,"into_os_string_lossy","","Lossily converts this byte string into an OS string, in…",17,[[],["osstring"]]],[11,"into_path_buf","","Converts this byte string into an owned file path, in place.",17,[[],[["result",["pathbuf","vec"]],["pathbuf"],["vec",["u8"]]]]],[11,"into_path_buf_lossy","","Lossily converts this byte string into an owned file path,…",17,[[],["pathbuf"]]],[11,"pop_byte","","Removes the last byte from this `Vec<u8>` and returns it.",17,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"pop_char","","Removes the last codepoint from this `Vec<u8>` and returns…",17,[[["self"]],[["option",["char"]],["char"]]]],[11,"remove_char","","Removes a `char` from this `Vec<u8>` at the given byte…",17,[[["self"],["usize"]],["char"]]],[11,"insert_char","","Inserts the given codepoint into this `Vec<u8>` at a…",17,[[["self"],["usize"],["char"]]]],[11,"insert_str","","Inserts the given byte string into this byte string at a…",17,[[["asref"],["usize"],["self"]]]],[11,"replace_range","","Removes the specified range in this byte string and…",17,[[["self"],["b"],["r"]]]],[11,"drain_bytes","","Creates a draining iterator that removes the specified…",17,[[["self"],["r"]],["drainbytes"]]]],"p":[[3,"Finder"],[3,"FinderReverse"],[3,"FromUtf8Error"],[8,"BufReadExt"],[3,"Graphemes"],[3,"GraphemeIndices"],[3,"Sentences"],[3,"SentenceIndices"],[3,"Words"],[3,"WordIndices"],[3,"WordsWithBreaks"],[3,"WordsWithBreakIndices"],[3,"Chars"],[3,"CharIndices"],[3,"Utf8Chunk"],[3,"Utf8Error"],[8,"ByteSlice"],[8,"ByteVec"],[3,"BStr"],[3,"BString"],[3,"Bytes"],[3,"Fields"],[3,"FieldsWith"],[3,"Find"],[3,"FindReverse"],[3,"Lines"],[3,"LinesWithTerminator"],[3,"Split"],[3,"SplitN"],[3,"SplitNReverse"],[3,"SplitReverse"],[3,"DrainBytes"],[3,"Utf8Chunks"],[3,"ByteLines"],[3,"ByteRecords"]]};
searchIndex["byteorder"] = {"doc":"This crate provides convenience methods for encoding and…","i":[[4,"BigEndian","byteorder","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"BE","","A type alias for [`BigEndian`].",null,null],[6,"LE","","A type alias for [`LittleEndian`].",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ReadBytesExt","","Extends [`Read`] with methods for reading numbers. (For…",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],[["result",["u8"]],["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],[["result",["i8"]],["i8"]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],[["i16"],["result",["i16"]]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[["self"]],[["result",["i32"]],["i32"]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],[["result",["i32"]],["i32"]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[["self"]],[["u64"],["result",["u64"]]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[["self"]],[["result",["i64"]],["i64"]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],[["u64"],["result",["u64"]]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],[["result",["i64"]],["i64"]]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying…",0,[[["self"]],[["u128"],["result",["u128"]]]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[["self"]],[["result",["i128"]],["i128"]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],[["u64"],["result",["u64"]]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],[["result",["i64"]],["i64"]]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],[["u128"],["result",["u128"]]]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],[["result",["i128"]],["i128"]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[["self"]],[["f32"],["result",["f32"]]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[["self"]],[["f64"],["result",["f64"]]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i8_into","","Reads a sequence of signed 8 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes)…",0,[[["self"]],["result"]]],[11,"read_f32_into_unchecked","","DEPRECATED.",0,[[["self"]],["result"]]],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes)…",0,[[["self"]],["result"]]],[11,"read_f64_into_unchecked","","DEPRECATED.",0,[[["self"]],["result"]]],[8,"WriteBytesExt","","Extends [`Write`] with methods for writing numbers. (For…",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["u16"],["self"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["i64"],["self"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["i64"],["self"]],["result"]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying writer.",1,[[["self"],["u128"]],["result"]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[["self"],["i128"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["i64"],["self"],["usize"]],["result"]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["usize"],["u128"]],["result"]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i128"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",1,[[["f32"],["self"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",1,[[["self"],["f64"]],["result"]]],[8,"ByteOrder","","`ByteOrder` describes types that can serialize integers as…",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,[[],["u16"]]],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,[[],["u32"]]],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,[[],["u32"]]],[11,"read_u48","","Reads an unsigned 48 bit integer from `buf`, stored in u64.",2,[[],["u64"]]],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,[[],["u64"]]],[10,"read_u128","","Reads an unsigned 128 bit integer from `buf`.",2,[[],["u128"]]],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,[[["usize"]],["u64"]]],[10,"read_uint128","","Reads an unsigned n-bytes integer from `buf`.",2,[[["usize"]],["u128"]]],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,[[["u16"]]]],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in…",2,[[["u32"]]]],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,[[["u32"]]]],[11,"write_u48","","Writes an unsigned 48 bit integer `n` to `buf`, stored in…",2,[[["u64"]]]],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,[[["u64"]]]],[10,"write_u128","","Writes an unsigned 128 bit integer `n` to `buf`.",2,[[["u128"]]]],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,[[["usize"],["u64"]]]],[10,"write_uint128","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,[[["usize"],["u128"]]]],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,[[],["i16"]]],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",2,[[],["i32"]]],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,[[],["i32"]]],[11,"read_i48","","Reads a signed 48 bit integer from `buf`, stored in i64.",2,[[],["i64"]]],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,[[],["i64"]]],[11,"read_i128","","Reads a signed 128 bit integer from `buf`.",2,[[],["i128"]]],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,[[["usize"]],["i64"]]],[11,"read_int128","","Reads a signed n-bytes integer from `buf`.",2,[[["usize"]],["i128"]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",2,[[],["f32"]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",2,[[],["f64"]]],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,[[["i16"]]]],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,[[["i32"]]]],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,[[["i32"]]]],[11,"write_i48","","Writes a signed 48 bit integer `n` to `buf`, stored in i64.",2,[[["i64"]]]],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,[[["i64"]]]],[11,"write_i128","","Writes a signed 128 bit integer `n` to `buf`.",2,[[["i128"]]]],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,[[["i64"],["usize"]]]],[11,"write_int128","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,[[["i128"],["usize"]]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",2,[[["f32"]]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",2,[[["f64"]]]],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[10,"read_u128_into","","Reads unsigned 128 bit integers from `src` into `dst`.",2,[[]]],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",2,[[]]],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,"read_i128_into","","Reads signed 128 bit integers from `src` into `dst`.",2,[[]]],[11,"read_f32_into","","Reads IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"read_f32_into_unchecked","","DEPRECATED.",2,[[]]],[11,"read_f64_into","","Reads IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"read_f64_into_unchecked","","DEPRECATED.",2,[[]]],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[10,"write_u128_into","","Writes unsigned 128 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i8_into","","Writes signed 8 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i128_into","","Writes signed 128 bit integers from `src` into `dst`.",2,[[]]],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point…",2,[[]]],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a…",2,[[]]],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a…",2,[[]]],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a…",2,[[]]],[10,"from_slice_u128","","Converts the given slice of unsigned 128 bit integers to a…",2,[[]]],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a…",2,[[]]],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a…",2,[[]]],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a…",2,[[]]],[11,"from_slice_i128","","Converts the given slice of signed 128 bit integers to a…",2,[[]]],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4…",2,[[]]],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8…",2,[[]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"read_u16","","",3,[[],["u16"]]],[11,"read_u32","","",3,[[],["u32"]]],[11,"read_u64","","",3,[[],["u64"]]],[11,"read_u128","","",3,[[],["u128"]]],[11,"read_uint","","",3,[[["usize"]],["u64"]]],[11,"read_uint128","","",3,[[["usize"]],["u128"]]],[11,"write_u16","","",3,[[["u16"]]]],[11,"write_u32","","",3,[[["u32"]]]],[11,"write_u64","","",3,[[["u64"]]]],[11,"write_u128","","",3,[[["u128"]]]],[11,"write_uint","","",3,[[["usize"],["u64"]]]],[11,"write_uint128","","",3,[[["usize"],["u128"]]]],[11,"read_u16_into","","",3,[[]]],[11,"read_u32_into","","",3,[[]]],[11,"read_u64_into","","",3,[[]]],[11,"read_u128_into","","",3,[[]]],[11,"write_u16_into","","",3,[[]]],[11,"write_u32_into","","",3,[[]]],[11,"write_u64_into","","",3,[[]]],[11,"write_u128_into","","",3,[[]]],[11,"from_slice_u16","","",3,[[]]],[11,"from_slice_u32","","",3,[[]]],[11,"from_slice_u64","","",3,[[]]],[11,"from_slice_u128","","",3,[[]]],[11,"from_slice_f32","","",3,[[]]],[11,"from_slice_f64","","",3,[[]]],[11,"read_u16","","",4,[[],["u16"]]],[11,"read_u32","","",4,[[],["u32"]]],[11,"read_u64","","",4,[[],["u64"]]],[11,"read_u128","","",4,[[],["u128"]]],[11,"read_uint","","",4,[[["usize"]],["u64"]]],[11,"read_uint128","","",4,[[["usize"]],["u128"]]],[11,"write_u16","","",4,[[["u16"]]]],[11,"write_u32","","",4,[[["u32"]]]],[11,"write_u64","","",4,[[["u64"]]]],[11,"write_u128","","",4,[[["u128"]]]],[11,"write_uint","","",4,[[["usize"],["u64"]]]],[11,"write_uint128","","",4,[[["usize"],["u128"]]]],[11,"read_u16_into","","",4,[[]]],[11,"read_u32_into","","",4,[[]]],[11,"read_u64_into","","",4,[[]]],[11,"read_u128_into","","",4,[[]]],[11,"write_u16_into","","",4,[[]]],[11,"write_u32_into","","",4,[[]]],[11,"write_u64_into","","",4,[[]]],[11,"write_u128_into","","",4,[[]]],[11,"from_slice_u16","","",4,[[]]],[11,"from_slice_u32","","",4,[[]]],[11,"from_slice_u64","","",4,[[]]],[11,"from_slice_u128","","",4,[[]]],[11,"from_slice_f32","","",4,[[]]],[11,"from_slice_f64","","",4,[[]]],[11,"clone","","",3,[[["self"]],["bigendian"]]],[11,"clone","","",4,[[["self"]],["littleendian"]]],[11,"default","","",3,[[],["bigendian"]]],[11,"default","","",4,[[],["littleendian"]]],[11,"cmp","","",3,[[["bigendian"],["self"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["littleendian"]],["ordering"]]],[11,"eq","","",3,[[["bigendian"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["littleendian"]],["bool"]]],[11,"partial_cmp","","",3,[[["bigendian"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",4,[[["self"],["littleendian"]],[["option",["ordering"]],["ordering"]]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],[["result",["u8"]],["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],[["result",["i8"]],["i8"]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],[["i16"],["result",["i16"]]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[["self"]],[["result",["i32"]],["i32"]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],[["result",["i32"]],["i32"]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[["self"]],[["u64"],["result",["u64"]]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[["self"]],[["result",["i64"]],["i64"]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],[["u64"],["result",["u64"]]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],[["result",["i64"]],["i64"]]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying…",0,[[["self"]],[["u128"],["result",["u128"]]]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[["self"]],[["result",["i128"]],["i128"]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],[["u64"],["result",["u64"]]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],[["result",["i64"]],["i64"]]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],[["u128"],["result",["u128"]]]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],[["result",["i128"]],["i128"]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[["self"]],[["f32"],["result",["f32"]]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[["self"]],[["f64"],["result",["f64"]]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i8_into","","Reads a sequence of signed 8 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes)…",0,[[["self"]],["result"]]],[11,"read_f32_into_unchecked","","DEPRECATED.",0,[[["self"]],["result"]]],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes)…",0,[[["self"]],["result"]]],[11,"read_f64_into_unchecked","","DEPRECATED.",0,[[["self"]],["result"]]],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["u16"],["self"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["i64"],["self"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["i64"],["self"]],["result"]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying writer.",1,[[["self"],["u128"]],["result"]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[["self"],["i128"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["i64"],["self"],["usize"]],["result"]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["usize"],["u128"]],["result"]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i128"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",1,[[["f32"],["self"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",1,[[["self"],["f64"]],["result"]]]],"p":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["bytesize"] = {"doc":"ByteSize is an utility that easily makes bytes size…","i":[[3,"ByteSize","bytesize","Byte size representation",null,null],[12,"0","","",0,null],[5,"kb","","",null,[[["u64"],["into",["u64"]]],["u64"]]],[5,"kib","","",null,[[["u64"],["into",["u64"]]],["u64"]]],[5,"mb","","",null,[[["u64"],["into",["u64"]]],["u64"]]],[5,"mib","","",null,[[["u64"],["into",["u64"]]],["u64"]]],[5,"gb","","",null,[[["u64"],["into",["u64"]]],["u64"]]],[5,"gib","","",null,[[["u64"],["into",["u64"]]],["u64"]]],[5,"tb","","",null,[[["u64"],["into",["u64"]]],["u64"]]],[5,"tib","","",null,[[["u64"],["into",["u64"]]],["u64"]]],[5,"pb","","",null,[[["u64"],["into",["u64"]]],["u64"]]],[5,"pib","","",null,[[["u64"],["into",["u64"]]],["u64"]]],[5,"to_string","","",null,[[["u64"],["bool"]],["string"]]],[17,"B","","byte size for 1 byte",null,null],[17,"KB","","bytes size for 1 kilobyte",null,null],[17,"MB","","bytes size for 1 megabyte",null,null],[17,"GB","","bytes size for 1 gigabyte",null,null],[17,"TB","","bytes size for 1 terabyte",null,null],[17,"PB","","bytes size for 1 petabyte",null,null],[17,"KIB","","bytes size for 1 kibibyte",null,null],[17,"MIB","","bytes size for 1 mebibyte",null,null],[17,"GIB","","bytes size for 1 gibibyte",null,null],[17,"TIB","","bytes size for 1 tebibyte",null,null],[17,"PIB","","bytes size for 1 pebibyte",null,null],[11,"b","","",0,[[["u64"]],["bytesize"]]],[11,"kb","","",0,[[["u64"]],["bytesize"]]],[11,"kib","","",0,[[["u64"]],["bytesize"]]],[11,"mb","","",0,[[["u64"]],["bytesize"]]],[11,"mib","","",0,[[["u64"]],["bytesize"]]],[11,"gb","","",0,[[["u64"]],["bytesize"]]],[11,"gib","","",0,[[["u64"]],["bytesize"]]],[11,"tb","","",0,[[["u64"]],["bytesize"]]],[11,"tib","","",0,[[["u64"]],["bytesize"]]],[11,"pb","","",0,[[["u64"]],["bytesize"]]],[11,"pib","","",0,[[["u64"]],["bytesize"]]],[11,"as_u64","","",0,[[["self"]],["u64"]]],[11,"to_string_as","","",0,[[["self"],["bool"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["bytesize"]]],[11,"default","","",0,[[],["bytesize"]]],[11,"cmp","","",0,[[["bytesize"],["self"]],["ordering"]]],[11,"eq","","",0,[[["bytesize"],["self"]],["bool"]]],[11,"ne","","",0,[[["bytesize"],["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["bytesize"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["bytesize"],["self"]],["bool"]]],[11,"le","","",0,[[["bytesize"],["self"]],["bool"]]],[11,"gt","","",0,[[["bytesize"],["self"]],["bool"]]],[11,"ge","","",0,[[["bytesize"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"add","","",0,[[["u64"]],["bytesize"]]],[11,"add","","",0,[[["u32"]],["bytesize"]]],[11,"add","","",0,[[["u16"]],["bytesize"]]],[11,"add","","",0,[[["u8"]],["bytesize"]]],[11,"add","","",0,[[["bytesize"]],["bytesize"]]],[11,"mul","","",0,[[["u64"]],["bytesize"]]],[11,"mul","","",0,[[["u32"]],["bytesize"]]],[11,"mul","","",0,[[["u16"]],["bytesize"]]],[11,"mul","","",0,[[["u8"]],["bytesize"]]]],"p":[[3,"ByteSize"]]};
searchIndex["cargo"] = {"doc":"","i":[[3,"CommitInfo","cargo","",null,null],[12,"short_commit_hash","","",0,null],[12,"commit_hash","","",0,null],[12,"commit_date","","",0,null],[3,"CfgInfo","","",null,null],[12,"commit_info","","",1,null],[12,"release_channel","","",1,null],[3,"VersionInfo","","",null,null],[12,"major","","",2,null],[12,"minor","","",2,null],[12,"patch","","",2,null],[12,"pre_release","","",2,null],[12,"cfg_info","","",2,null],[5,"print_json","","",null,[[["t"]]]],[5,"exit_with_error","","",null,[[["shell"],["clierror"]]]],[5,"display_error","","Displays an error, and all its causes, to stderr.",null,[[["error"],["shell"]]]],[5,"display_warning_with_error","","Displays a warning, with an error object providing…",null,[[["str"],["error"],["shell"]]]],[5,"version","","",null,[[],["versioninfo"]]],[0,"core","","",null,null],[3,"InternedString","cargo::core","",null,null],[3,"PackageIdSpec","","Some or all of the data required to identify a package:",null,null],[3,"Resolve","","Represents a fully-resolved package dependency graph. Each…",null,null],[3,"SourceId","","Unique identifier for a source of packages.",null,null],[3,"Members","","An iterator over the member packages of a workspace,…",null,null],[3,"Workspace","","The core abstraction in Cargo for working with a workspace…",null,null],[3,"WorkspaceRootConfig","","Intermediate configuration of a workspace root in a…",null,null],[4,"ResolveVersion","","A version to indicate how a `Cargo.lock` should be…",null,null],[13,"V1","","Historical baseline for when this abstraction was added.",3,null],[13,"V2","","A more compact format, more amenable to avoiding…",3,null],[4,"GitReference","","Information to find a specific commit in a Git repository.",null,null],[13,"Tag","","From a tag.",4,null],[13,"Branch","","From the HEAD of a branch.",4,null],[13,"Rev","","From a specific revision.",4,null],[4,"WorkspaceConfig","","Configuration of a workspace in a manifest.",null,null],[13,"Root","","Indicates that `[workspace]` was present and the members…",5,null],[13,"Member","","Indicates that `[workspace]` was present and the `root`…",5,null],[12,"root","cargo::core::WorkspaceConfig","",6,null],[0,"compiler","cargo::core","",null,null],[3,"BuildConfig","cargo::core::compiler","Configuration information for a rustc build.",null,null],[12,"requested_kinds","","The requested kind of compilation for this session",7,null],[12,"jobs","","Number of rustc jobs to run in parallel.",7,null],[12,"requested_profile","","Build profile",7,null],[12,"mode","","The mode we are compiling in.",7,null],[12,"message_format","","`true` to print stdout in JSON format (for machine reading).",7,null],[12,"force_rebuild","","Force Cargo to do a full rebuild and treat each target as…",7,null],[12,"build_plan","","Output a build plan to stdout instead of actually compiling.",7,null],[12,"unit_graph","","Output the unit graph to stdout instead of actually…",7,null],[12,"primary_unit_rustc","","An optional override of the rustc process for primary units",7,null],[12,"rustfix_diagnostic_server","","A thread used by `cargo fix` to receive messages on a…",7,null],[12,"export_dir","","The directory to copy final artifacts to. Note that even…",7,null],[3,"BuildContext","","The build context, containing all information about a…",null,null],[12,"ws","","The workspace the build is for.",8,null],[12,"config","","The cargo configuration.",8,null],[12,"profiles","","",8,null],[12,"build_config","","",8,null],[12,"extra_compiler_args","","Extra compiler args for either `rustc` or `rustdoc`.",8,null],[12,"packages","","Package downloader.",8,null],[12,"target_data","","Information about rustc and the target platform.",8,null],[12,"roots","","The root units of `unit_graph` (units requested on the…",8,null],[12,"unit_graph","","The dependency graph of units to compile.",8,null],[3,"RustcTargetData","","Collection of information about `rustc` and the host and…",null,null],[12,"rustc","","Information about `rustc` itself.",9,null],[3,"TargetInfo","","Information about the platform target gleaned from…",null,null],[12,"sysroot","","Path to the sysroot.",10,null],[12,"sysroot_host_libdir","","Path to the \"lib\" or \"bin\" directory that rustc uses for…",10,null],[12,"sysroot_target_libdir","","Path to the \"lib\" directory in the sysroot which rustc…",10,null],[12,"rustflags","","Extra flags to pass to `rustc`, see `env_args`.",10,null],[12,"rustdocflags","","Extra flags to pass to `rustdoc`, see `env_args`.",10,null],[12,"supports_embed_bitcode","","Remove this when it hits stable (1.45)",10,null],[3,"Compilation","","A structure returning the result of a compilation.",null,null],[12,"tests","","An array of all tests created during this compilation.…",11,null],[12,"binaries","","An array of all binaries created.",11,null],[12,"native_dirs","","All directories for the output of native build commands.",11,null],[12,"root_output","","Root output directory (for the local package's artifacts)",11,null],[12,"deps_output","","Output directory for rust dependencies. May be for the…",11,null],[12,"extra_env","","Extra environment variables that were passed to…",11,null],[12,"to_doc_test","","Libraries to test with rustdoc.",11,null],[12,"cfgs","","Features per package enabled during this compilation.",11,null],[12,"rustdocflags","","Flags to pass to rustdoc when invoked from cargo test, per…",11,null],[3,"Doctest","","Structure with enough information to run `rustdoc --test`.",null,null],[12,"unit","","What's being doctested",12,null],[12,"args","","Arguments needed to pass to rustdoc to run this test.",12,null],[12,"unstable_opts","","Whether or not -Zunstable-options is needed.",12,null],[3,"CompileTarget","","Abstraction for the representation of a compilation target…",null,null],[3,"Context","","Collection of all the stuff that is needed to perform a…",null,null],[12,"bcx","","Mostly static information about the build task.",13,null],[12,"compilation","","A large collection of information about the result of the…",13,null],[12,"build_script_outputs","","Output from build scripts, updated after each build script…",13,null],[12,"build_explicit_deps","","Dependencies (like rerun-if-changed) declared by a build…",13,null],[12,"fingerprints","","Fingerprints used to detect if a unit is out-of-date.",13,null],[12,"mtime_cache","","Cache of file mtimes to reduce filesystem hits.",13,null],[12,"compiled","","A set used to track which units have been compiled. A unit…",13,null],[12,"build_scripts","","Linking information for each `Unit`. See `build_map` for…",13,null],[12,"jobserver","","Job server client to manage concurrency with other…",13,null],[12,"rustc_clients","","When we're in jobserver-per-rustc process mode, this keeps…",13,null],[12,"lto","","Map of the LTO-status of each unit. This indicates what…",13,null],[3,"Metadata","","The `Metadata` is a hash used to make unique file names…",null,null],[3,"BuildOutput","","Contains the parsed output of a custom build script.",null,null],[12,"library_paths","","Paths to pass to rustc with the `-L` flag.",14,null],[12,"library_links","","Names and link kinds of libraries, suitable for the `-l`…",14,null],[12,"linker_args","","Linker arguments suitable to be passed to `-C…",14,null],[12,"cfgs","","Various `--cfg` flags to pass to the compiler.",14,null],[12,"env","","Additional environment variables to run the compiler with.",14,null],[12,"metadata","","Metadata to pass to the immediate dependencies.",14,null],[12,"rerun_if_changed","","Paths to trigger a rerun of this build script. May be…",14,null],[12,"rerun_if_env_changed","","Environment variables which, when changed, will cause a…",14,null],[12,"warnings","","Warnings generated by this build.",14,null],[3,"BuildScriptOutputs","","Map of packages to build script output.",null,null],[3,"BuildScripts","","Linking information for a `Unit`.",null,null],[12,"to_link","","List of build script outputs this Unit needs to include…",15,null],[12,"plugins","","Host-only dependencies that have build scripts. Each…",15,null],[3,"Unit","","All information needed to define a unit.",null,null],[3,"UnitInterner","","A small structure used to \"intern\" `Unit` values.",null,null],[3,"DefaultExecutor","","A `DefaultExecutor` calls rustc without doing anything…",null,null],[4,"CompileMode","","The general \"mode\" for what to do. This is used for two…",null,null],[13,"Test","","A target being built for a test.",16,null],[13,"Build","","Building a target with `rustc` (lib or bin).",16,null],[13,"Check","","Building a target with `rustc` to emit `rmeta` metadata…",16,null],[12,"test","cargo::core::compiler::CompileMode","",17,null],[13,"Bench","cargo::core::compiler","Used to indicate benchmarks should be built. This is not…",16,null],[13,"Doc","","A target that will be documented with `rustdoc`. If `deps`…",16,null],[12,"deps","cargo::core::compiler::CompileMode","",18,null],[13,"Doctest","cargo::core::compiler","A target that will be tested with `rustdoc`.",16,null],[13,"RunCustomBuild","","A marker for Units that represent the execution of a…",16,null],[4,"MessageFormat","","",null,null],[13,"Human","","",19,null],[13,"Json","","",19,null],[12,"render_diagnostics","cargo::core::compiler::MessageFormat","Whether rustc diagnostics are rendered by cargo or…",20,null],[12,"short","","Whether the `rendered` field of rustc diagnostics are…",20,null],[12,"ansi","","Whether the `rendered` field of rustc diagnostics embed…",20,null],[13,"Short","cargo::core::compiler","",19,null],[4,"FileFlavor","","Kind of each file generated by a Unit, part of `FileType`.",null,null],[13,"Normal","","Not a special file type.",21,null],[13,"Auxiliary","","Like `Normal`, but not directly executable",21,null],[13,"Linkable","","Something you can link against (e.g., a library).",21,null],[12,"rmeta","cargo::core::compiler::FileFlavor","",22,null],[13,"DebugInfo","cargo::core::compiler","Piece of external debug information (e.g., `.dSYM`/`.pdb`…",21,null],[4,"CompileKind","","Indicator for how a unit is being compiled.",null,null],[13,"Host","","Attached to a unit that is compiled for the \"host\" system…",23,null],[13,"Target","","Attached to a unit to be compiled for a particular target.…",23,null],[4,"Freshness","","Indication of the freshness of a package.",null,null],[13,"Fresh","","",24,null],[13,"Dirty","","",24,null],[5,"extern_args","","Generates a list of `--extern` arguments.",null,[[["context"],["unit"],["bool"]],[["cargoresult",["vec"]],["vec",["osstring"]]]]],[11,"new","","Parses all config files to learn about build…",7,[[["u32"],["compilemode"],["config"],["option",["u32"]]],[["cargoresult",["buildconfig"]],["buildconfig"]]]],[11,"emit_json","","Whether or not the user wants JSON output. Whether or not…",7,[[["self"]],["bool"]]],[11,"test","","",7,[[["self"]],["bool"]]],[11,"single_requested_kind","","",7,[[["self"]],[["compilekind"],["cargoresult",["compilekind"]]]]],[11,"is_check","","Returns `true` if the unit is being checked.",16,[[],["bool"]]],[11,"is_doc","","Returns `true` if this is generating documentation.",16,[[],["bool"]]],[11,"is_doc_test","","Returns `true` if this a doc test.",16,[[],["bool"]]],[11,"is_any_test","","Returns `true` if this is any type of test (test,…",16,[[],["bool"]]],[11,"is_rustc_test","","Returns `true` if this is something that passes `--test`…",16,[[],["bool"]]],[11,"is_run_custom_build","","Returns `true` if this is the execution of a `build.rs`…",16,[[],["bool"]]],[11,"all_modes","","List of all modes (currently used by `cargo clean -p` for…",16,[[]]],[11,"new","","",10,[[["compilekind"],["rustc"],["config"]],[["cargoresult",["targetinfo"]],["targetinfo"]]]],[11,"cfg","","All the target `cfg` settings.",10,[[["self"]]]],[11,"file_types","","Returns the list of file types generated by the given…",10,[[["str"],["fileflavor"],["targetkind"],["self"]],[["cargoresult",["option"]],["option",["vec"]]]]],[11,"new","","",9,[[["workspace"]],[["cargoresult",["rustctargetdata"]],["rustctargetdata"]]]],[11,"short_name","","Returns a \"short\" name for the given kind, suitable for…",9,[[["compilekind"],["self"]],["str"]]],[11,"dep_platform_activated","","Whether a dependency should be compiled for the host or…",9,[[["compilekind"],["self"],["dependency"]],["bool"]]],[11,"cfg","","Gets the list of `cfg`s printed out from the compiler for…",9,[[["compilekind"],["self"]]]],[11,"info","","Information about the given target platform, learned by…",9,[[["compilekind"],["self"]],["targetinfo"]]],[11,"target_config","","Gets the target configuration for a particular host or…",9,[[["compilekind"],["self"]],["targetconfig"]]],[11,"script_override","","If a build script is overridden, this returns the…",9,[[["str"],["compilekind"],["self"]],[["option",["buildoutput"]],["buildoutput"]]]],[11,"new","","",8,[[["unitgraph"],["vec",["unit"]],["unit"],["buildconfig"],["packageset"],["vec",["string"]],["workspace"],["profiles"],["hashmap",["unit","vec"]],["rustctargetdata"]],[["buildcontext"],["cargoresult",["buildcontext"]]]]],[11,"rustc","","",8,[[["self"]],["rustc"]]],[11,"linker","","Gets the user-specified linker for a particular host or…",8,[[["compilekind"],["self"]],[["pathbuf"],["option",["pathbuf"]]]]],[11,"host_triple","","Gets the host architecture triple.",8,[[["self"]],["internedstring"]]],[11,"jobs","","Gets the number of jobs specified for this build.",8,[[["self"]],["u32"]]],[11,"rustflags_args","","",8,[[["unit"],["self"]]]],[11,"rustdocflags_args","","",8,[[["unit"],["self"]]]],[11,"extra_args_for","","",8,[[["unit"],["self"]],[["vec"],["option",["vec"]]]]],[11,"new","","",11,[[["buildcontext"]],[["cargoresult",["compilation"]],["compilation"]]]],[11,"rustc_process","","See `process`.",11,[[["unit"],["self"],["bool"]],[["processbuilder"],["cargoresult",["processbuilder"]]]]],[11,"rustdoc_process","","See `process`.",11,[[["unit"],["self"]],[["processbuilder"],["cargoresult",["processbuilder"]]]]],[11,"host_process","","See `process`.",11,[[["package"],["asref",["osstr"]],["self"],["osstr"]],[["processbuilder"],["cargoresult",["processbuilder"]]]]],[11,"target_runner","","",11,[[["compilekind"],["self"]],["option"]]],[11,"target_process","","See `process`.",11,[[["package"],["asref",["osstr"]],["compilekind"],["self"],["osstr"]],[["processbuilder"],["cargoresult",["processbuilder"]]]]],[11,"is_host","","",23,[[["self"]],["bool"]]],[11,"for_target","","",23,[[["target"]],["compilekind"]]],[11,"from_requested_targets","","Creates a new list of `CompileKind` based on the requested…",23,[[["config"]],[["vec",["compilekind"]],["cargoresult",["vec"]]]]],[11,"new","","",25,[[["str"]],[["cargoresult",["compiletarget"]],["compiletarget"]]]],[11,"rustc_target","","Returns the full unqualified name of this target, suitable…",25,[[["self"]],["str"]]],[11,"short_name","","Returns a \"short\" version of the target name suitable for…",25,[[["self"]],["str"]]],[11,"new","","",13,[[["buildcontext"]],["cargoresult"]]],[11,"compile","","Starts compilation, waits for it to finish, and returns…",13,[[["arc"]],[["cargoresult",["compilation"]],["compilation"]]]],[11,"get_executable","","Returns the executable for the specified unit (if any).",13,[[["unit"],["self"]],[["cargoresult",["option"]],["option",["pathbuf"]]]]],[11,"prepare_units","","",13,[[["self"]],["cargoresult"]]],[11,"prepare","","Prepare this context, ensuring that all filesystem…",13,[[["self"]],["cargoresult"]]],[11,"files","","",13,[[["self"]],["compilationfiles"]]],[11,"outputs","","Returns the filenames that the given unit will generate.",13,[[["unit"],["self"]],[["cargoresult",["arc"]],["arc",["vec"]]]]],[11,"unit_deps","","Direct dependencies for the given unit.",13,[[["unit"],["self"]]]],[11,"find_build_script_unit","","Returns the RunCustomBuild Unit associated with the given…",13,[[["unit"],["self"]],[["option",["unit"]],["unit"]]]],[11,"find_build_script_metadata","","Returns the metadata hash for the RunCustomBuild Unit…",13,[[["unit"],["self"]],[["metadata"],["option",["metadata"]]]]],[11,"get_run_build_script_metadata","","Returns the metadata hash for a RunCustomBuild unit.",13,[[["unit"],["self"]],["metadata"]]],[11,"is_primary_package","","",13,[[["unit"],["self"]],["bool"]]],[11,"build_plan_inputs","","Returns the list of filenames read by cargo to generate…",13,[[["self"]],[["cargoresult",["vec"]],["vec",["pathbuf"]]]]],[11,"only_requires_rmeta","","Returns whether when `parent` depends on `dep` if it only…",13,[[["unit"],["self"]],["bool"]]],[11,"rmeta_required","","Returns whether when `unit` is built whether it should…",13,[[["unit"],["self"]],["bool"]]],[11,"new_jobserver","","",13,[[["self"]],[["client"],["cargoresult",["client"]]]]],[11,"parse_file","","",14,[[["str"],["path"]],[["cargoresult",["buildoutput"]],["buildoutput"]]]],[11,"parse","","",14,[[["str"],["path"]],[["cargoresult",["buildoutput"]],["buildoutput"]]]],[11,"parse_rustc_flags","","",14,[[["str"]],["cargoresult"]]],[11,"parse_rustc_env","","",14,[[["str"]],["cargoresult"]]],[11,"get","","Gets the build output for the given key.",26,[[["metadata"],["self"],["packageid"]],[["option",["buildoutput"]],["buildoutput"]]]],[11,"iter","","Returns an iterator over all entries.",26,[[["self"]]]],[0,"standard_lib","","Code for building the standard library.",null,null],[5,"parse_unstable_flag","cargo::core::compiler::standard_lib","Parse the `-Zbuild-std` flag.",null,[[["str"],["option",["str"]]],[["vec",["string"]],["string"]]]],[5,"resolve_std","","Resolve the standard library dependencies.",null,[[["workspace"],["rustctargetdata"]],["cargoresult"]]],[5,"generate_std_roots","","Generate a list of root `Unit`s for the standard library.",null,[[["unitinterner"],["profiles"],["resolve"],["resolvedfeatures"],["packageset"]],[["hashmap",["compilekind","vec"]],["cargoresult",["hashmap"]]]]],[11,"buildkey","cargo::core::compiler","",27,[[["self"]],["string"]]],[11,"new","","Creates a new blank interner",28,[[],["unitinterner"]]],[11,"intern","","Creates a new `unit` from its components. The returned…",28,[[["profile"],["internedstring"],["bool"],["compilekind"],["compilemode"],["vec",["internedstring"]],["target"],["self"],["package"]],["unit"]]],[0,"unit_dependencies","","Constructs the dependency graph for compilation.",null,null],[5,"build_unit_dependencies","cargo::core::compiler::unit_dependencies","",null,[[["profiles"],["resolve"],["resolvedfeatures"],["hashmap"],["unitinterner"],["compilemode"],["packageset"],["workspace"],["option"],["rustctargetdata"]],[["cargoresult",["unitgraph"]],["unitgraph"]]]],[0,"unit_graph","cargo::core::compiler","",null,null],[3,"UnitDep","cargo::core::compiler::unit_graph","A unit dependency.",null,null],[12,"unit","","The dependency unit.",29,null],[12,"unit_for","","The purpose of this dependency (a dependency for a test,…",29,null],[12,"extern_crate_name","","The name the parent uses to refer to this dependency.",29,null],[12,"public","","Whether or not this is a public dependency.",29,null],[12,"noprelude","","If `true`, the dependency should not be added to Rust's…",29,null],[5,"emit_serialized_unit_graph","","",null,[[["unitgraph"]],["cargoresult"]]],[6,"UnitGraph","","The dependency graph of Units.",null,null],[8,"Executor","cargo::core::compiler","A glorified callback for executing calls to rustc. Rather…",null,null],[11,"init","","Called after a rustc process invocation is prepared…",30,[[["context"],["unit"],["self"]]]],[10,"exec","","In case of an `Err`, Cargo will not continue with the…",30,[[["processbuilder"],["compilemode"],["packageid"],["target"],["fnmut"],["self"]],["cargoresult"]]],[11,"force_rebuild","","Queried when queuing each unit of work. If it returns…",30,[[["unit"],["self"]],["bool"]]],[0,"dependency","cargo::core","",null,null],[3,"Dependency","cargo::core::dependency","Information about a dependency requested by a Cargo…",null,null],[4,"DepKind","","",null,null],[13,"Normal","","",31,null],[13,"Development","","",31,null],[13,"Build","","",31,null],[11,"parse","","Attempt to create a `Dependency` from an entry in the…",32,[[["str"],["sourceid"],["option",["str"]],["packageid"],["config"]],[["cargoresult",["dependency"]],["dependency"]]]],[11,"parse_no_deprecated","","Attempt to create a `Dependency` from an entry in the…",32,[[["str"],["sourceid"],["option",["str"]]],[["cargoresult",["dependency"]],["dependency"]]]],[11,"new_override","","",32,[[["internedstring"],["sourceid"]],["dependency"]]],[11,"version_req","","",32,[[["self"]],["versionreq"]]],[11,"name_in_toml","","This is the name of this `Dependency` as listed in…",32,[[["self"]],["internedstring"]]],[11,"package_name","","The name of the package that this `Dependency` depends on.",32,[[["self"]],["internedstring"]]],[11,"source_id","","",32,[[["self"]],["sourceid"]]],[11,"registry_id","","",32,[[["self"]],[["option",["sourceid"]],["sourceid"]]]],[11,"set_registry_id","","",32,[[["self"],["sourceid"]],["dependency"]]],[11,"kind","","",32,[[["self"]],["depkind"]]],[11,"is_public","","",32,[[["self"]],["bool"]]],[11,"set_public","","Sets whether the dependency is public.",32,[[["self"],["bool"]],["dependency"]]],[11,"specified_req","","",32,[[["self"]],["bool"]]],[11,"platform","","If none, this dependencies must be built for all…",32,[[["self"]],[["option",["platform"]],["platform"]]]],[11,"explicit_name_in_toml","","The renamed name of this dependency, if any.",32,[[["self"]],[["internedstring"],["option",["internedstring"]]]]],[11,"set_kind","","",32,[[["self"],["depkind"]],["dependency"]]],[11,"set_features","","Sets the list of features requested for the package.",32,[[["self"]],["dependency"]]],[11,"set_default_features","","Sets whether the dependency requests default features of…",32,[[["self"],["bool"]],["dependency"]]],[11,"set_optional","","Sets whether the dependency is optional.",32,[[["self"],["bool"]],["dependency"]]],[11,"set_source_id","","Sets the source ID for this dependency.",32,[[["self"],["sourceid"]],["dependency"]]],[11,"set_version_req","","Sets the version requirement for this dependency.",32,[[["self"],["versionreq"]],["dependency"]]],[11,"set_platform","","",32,[[["option",["platform"]],["self"],["platform"]],["dependency"]]],[11,"set_explicit_name_in_toml","","",32,[[["self"]],["dependency"]]],[11,"lock_to","","Locks this dependency to depending on the specified…",32,[[["self"],["packageid"]],["dependency"]]],[11,"is_locked","","Returns `true` if this is a \"locked\" dependency, basically…",32,[[["self"]],["bool"]]],[11,"is_transitive","","Returns `false` if the dependency is only used to build…",32,[[["self"]],["bool"]]],[11,"is_build","","",32,[[["self"]],["bool"]]],[11,"is_optional","","",32,[[["self"]],["bool"]]],[11,"uses_default_features","","Returns `true` if the default features of the dependency…",32,[[["self"]],["bool"]]],[11,"features","","Returns the list of features that are requested by the…",32,[[["self"]]]],[11,"matches","","Returns `true` if the package (`sum`) can fulfill this…",32,[[["summary"],["self"]],["bool"]]],[11,"matches_ignoring_source","","Returns `true` if the package (`id`) can fulfill this…",32,[[["self"],["packageid"]],["bool"]]],[11,"matches_id","","Returns `true` if the package (`id`) can fulfill this…",32,[[["self"],["packageid"]],["bool"]]],[11,"map_source","","",32,[[["sourceid"]],["dependency"]]],[0,"features","cargo::core","Support for nightly features in Cargo itself.",null,null],[3,"Features","cargo::core::features","",null,null],[3,"Feature","","",null,null],[3,"CliUnstable","","A parsed representation of all unstable flags that Cargo…",null,null],[12,"print_im_a_teapot","","",33,null],[12,"unstable_options","","",33,null],[12,"no_index_update","","",33,null],[12,"avoid_dev_deps","","",33,null],[12,"minimal_versions","","",33,null],[12,"package_features","","",33,null],[12,"advanced_env","","",33,null],[12,"config_include","","",33,null],[12,"dual_proc_macros","","",33,null],[12,"mtime_on_use","","",33,null],[12,"named_profiles","","",33,null],[12,"binary_dep_depinfo","","",33,null],[12,"build_std","","",33,null],[12,"timings","","",33,null],[12,"doctest_xcompile","","",33,null],[12,"panic_abort_tests","","",33,null],[12,"jobserver_per_rustc","","",33,null],[12,"features","","",33,null],[12,"crate_versions","","",33,null],[12,"separate_nightlies","","",33,null],[12,"multitarget","","",33,null],[4,"Edition","","The edition of the compiler (RFC 2052)",null,null],[13,"Edition2015","","The 2015 edition",34,null],[13,"Edition2018","","The 2018 edition",34,null],[5,"channel","","Returns the current release channel (\"stable\", \"beta\",…",null,[[],["string"]]],[5,"nightly_features_allowed","","This is a little complicated. This should return false if:…",null,[[],["bool"]]],[5,"maybe_allow_nightly_features","","Allows nightly features to be enabled for this thread, but…",null,[[]]],[5,"enable_nightly_features","","Forcibly enables nightly features for this thread.",null,[[]]],[17,"SEE_CHANNELS","","",null,null],[11,"test_dummy_stable","","",35,[[],["feature"]]],[11,"test_dummy_unstable","","",35,[[],["feature"]]],[11,"alternative_registries","","",35,[[],["feature"]]],[11,"edition","","",35,[[],["feature"]]],[11,"rename_dependency","","",35,[[],["feature"]]],[11,"publish_lockfile","","",35,[[],["feature"]]],[11,"profile_overrides","","",35,[[],["feature"]]],[11,"namespaced_features","","",35,[[],["feature"]]],[11,"default_run","","",35,[[],["feature"]]],[11,"metabuild","","",35,[[],["feature"]]],[11,"public_dependency","","",35,[[],["feature"]]],[11,"named_profiles","","",35,[[],["feature"]]],[11,"resolver","","",35,[[],["feature"]]],[11,"new","","",36,[[["vec"]],[["cargoresult",["features"]],["features"]]]],[11,"activated","","",36,[[["self"]]]],[11,"require","","",36,[[["self"],["feature"]],["cargoresult"]]],[11,"is_enabled","","",36,[[["self"],["feature"]],["bool"]]],[11,"parse","","",33,[[["self"]],["cargoresult"]]],[11,"fail_if_stable_opt","","Generates an error if `-Z unstable-options` was not used.…",33,[[["str"],["u32"],["self"]],["cargoresult"]]],[11,"new","cargo::core","",37,[[["str"]],["internedstring"]]],[11,"as_str","","",37,[[["self"]],["str"]]],[0,"manifest","","",null,null],[3,"Manifest","cargo::core::manifest","Contains all the information about a package, as loaded…",null,null],[3,"DelayedWarning","","When parsing `Cargo.toml`, some warnings should silenced…",null,null],[12,"message","","",38,null],[12,"is_critical","","",38,null],[3,"Warnings","","",null,null],[3,"VirtualManifest","","",null,null],[3,"ManifestMetadata","","General metadata about a package which is just blindly…",null,null],[12,"authors","","",39,null],[12,"keywords","","",39,null],[12,"categories","","",39,null],[12,"license","","",39,null],[12,"license_file","","",39,null],[12,"description","","",39,null],[12,"readme","","",39,null],[12,"homepage","","",39,null],[12,"repository","","",39,null],[12,"documentation","","",39,null],[12,"badges","","",39,null],[12,"links","","",39,null],[3,"Target","","Information about a binary, a library, an example, etc.…",null,null],[4,"EitherManifest","","",null,null],[13,"Real","","",40,null],[13,"Virtual","","",40,null],[4,"LibKind","","",null,null],[13,"Lib","","",41,null],[13,"Rlib","","",41,null],[13,"Dylib","","",41,null],[13,"ProcMacro","","",41,null],[13,"Other","","",41,null],[4,"TargetKind","","",null,null],[13,"Lib","","",42,null],[13,"Bin","","",42,null],[13,"Test","","",42,null],[13,"Bench","","",42,null],[13,"ExampleLib","","",42,null],[13,"ExampleBin","","",42,null],[13,"CustomBuild","","",42,null],[4,"TargetSourcePath","","",null,null],[13,"Path","","",43,null],[13,"Metabuild","","",43,null],[11,"crate_type","","Returns the argument suitable for `--crate-type` to pass…",41,[[["self"]],["str"]]],[11,"linkable","","",41,[[["self"]],["bool"]]],[11,"requires_upstream_objects","","",41,[[["self"]],["bool"]]],[11,"description","","",42,[[["self"]],["str"]]],[11,"requires_upstream_objects","","Returns whether production of this artifact requires the…",42,[[["self"]],["bool"]]],[11,"path","","",43,[[["self"]],[["option",["path"]],["path"]]]],[11,"is_path","","",43,[[["self"]],["bool"]]],[11,"new","","",44,[[["resolvebehavior"],["option",["tomlprofiles"]],["rc",["tomlmanifest"]],["workspaceconfig"],["vec",["dependency"]],["edition"],["tomlmanifest"],["vec",["string"]],["value"],["option",["bool"]],["features"],["url"],["option",["string"]],["option",["value"]],["vec",["target"]],["option",["resolvebehavior"]],["summary"],["tomlprofiles"],["manifestmetadata"],["option",["vec"]],["bool"],["vec"],["hashmap",["url","vec"]],["target"],["string"]],["manifest"]]],[11,"dependencies","","",44,[[["self"]]]],[11,"exclude","","",44,[[["self"]]]],[11,"include","","",44,[[["self"]]]],[11,"metadata","","",44,[[["self"]],["manifestmetadata"]]],[11,"name","","",44,[[["self"]],["internedstring"]]],[11,"package_id","","",44,[[["self"]],["packageid"]]],[11,"summary","","",44,[[["self"]],["summary"]]],[11,"summary_mut","","",44,[[["self"]],["summary"]]],[11,"targets","","",44,[[["self"]]]],[11,"version","","",44,[[["self"]],["version"]]],[11,"warnings_mut","","",44,[[["self"]],["warnings"]]],[11,"warnings","","",44,[[["self"]],["warnings"]]],[11,"profiles","","",44,[[["self"]],[["tomlprofiles"],["option",["tomlprofiles"]]]]],[11,"publish","","",44,[[["self"]],["option"]]],[11,"replace","","",44,[[["self"]]]],[11,"original","","",44,[[["self"]],["tomlmanifest"]]],[11,"patch","","",44,[[["self"]],["hashmap"]]],[11,"links","","",44,[[["self"]],[["str"],["option",["str"]]]]],[11,"workspace_config","","",44,[[["self"]],["workspaceconfig"]]],[11,"features","","",44,[[["self"]],["features"]]],[11,"resolve_behavior","","The style of resolver behavior to use, declared with the…",44,[[["self"]],[["option",["resolvebehavior"]],["resolvebehavior"]]]],[11,"map_source","","",44,[[["sourceid"]],["manifest"]]],[11,"feature_gate","","",44,[[["self"]],["cargoresult"]]],[11,"print_teapot","","",44,[[["config"],["self"]]]],[11,"edition","","",44,[[["self"]],["edition"]]],[11,"custom_metadata","","",44,[[["self"]],[["value"],["option",["value"]]]]],[11,"default_run","","",44,[[["self"]],[["str"],["option",["str"]]]]],[11,"metabuild","","",44,[[["self"]],[["vec"],["option",["vec"]]]]],[11,"metabuild_path","","",44,[[["filesystem"],["self"]],["pathbuf"]]],[11,"new","","",45,[[["option",["tomlprofiles"]],["option",["resolvebehavior"]],["workspaceconfig"],["vec",["dependency"]],["vec"],["tomlprofiles"],["resolvebehavior"],["hashmap",["url","vec"]],["features"],["url"]],["virtualmanifest"]]],[11,"replace","","",45,[[["self"]]]],[11,"patch","","",45,[[["self"]],["hashmap"]]],[11,"workspace_config","","",45,[[["self"]],["workspaceconfig"]]],[11,"profiles","","",45,[[["self"]],[["tomlprofiles"],["option",["tomlprofiles"]]]]],[11,"warnings_mut","","",45,[[["self"]],["warnings"]]],[11,"warnings","","",45,[[["self"]],["warnings"]]],[11,"features","","",45,[[["self"]],["features"]]],[11,"resolve_behavior","","The style of resolver behavior to use, declared with the…",45,[[["self"]],[["option",["resolvebehavior"]],["resolvebehavior"]]]],[11,"lib_target","","",46,[[["str"],["pathbuf"],["libkind"],["edition"],["vec",["libkind"]]],["target"]]],[11,"bin_target","","",46,[[["str"],["pathbuf"],["vec",["string"]],["edition"],["option",["vec"]]],["target"]]],[11,"custom_build_target","","Builds a `Target` corresponding to the `build =…",46,[[["str"],["pathbuf"],["edition"]],["target"]]],[11,"metabuild_target","","",46,[[["str"]],["target"]]],[11,"example_target","","",46,[[["str"],["pathbuf"],["vec",["string"]],["libkind"],["option",["vec"]],["edition"],["vec",["libkind"]]],["target"]]],[11,"test_target","","",46,[[["str"],["pathbuf"],["vec",["string"]],["edition"],["option",["vec"]]],["target"]]],[11,"bench_target","","",46,[[["str"],["pathbuf"],["vec",["string"]],["edition"],["option",["vec"]]],["target"]]],[11,"name","","",46,[[["self"]],["str"]]],[11,"crate_name","","",46,[[["self"]],["string"]]],[11,"src_path","","",46,[[["self"]],["targetsourcepath"]]],[11,"set_src_path","","",46,[[["self"],["targetsourcepath"]]]],[11,"required_features","","",46,[[["self"]],[["vec"],["option",["vec"]]]]],[11,"kind","","",46,[[["self"]],["targetkind"]]],[11,"tested","","",46,[[["self"]],["bool"]]],[11,"harness","","",46,[[["self"]],["bool"]]],[11,"documented","","",46,[[["self"]],["bool"]]],[11,"for_host","","",46,[[["self"]],["bool"]]],[11,"proc_macro","","",46,[[["self"]],["bool"]]],[11,"edition","","",46,[[["self"]],["edition"]]],[11,"benched","","",46,[[["self"]],["bool"]]],[11,"doctested","","",46,[[["self"]],["bool"]]],[11,"doctestable","","",46,[[["self"]],["bool"]]],[11,"allows_dashes","","Whether or not this target allows dashes in its filename.",46,[[["self"]],["bool"]]],[11,"is_lib","","",46,[[["self"]],["bool"]]],[11,"is_dylib","","",46,[[["self"]],["bool"]]],[11,"is_cdylib","","",46,[[["self"]],["bool"]]],[11,"linkable","","Returns whether this target produces an artifact which can…",46,[[["self"]],["bool"]]],[11,"is_bin","","",46,[[["self"]],["bool"]]],[11,"is_example","","",46,[[["self"]],["bool"]]],[11,"is_executable","","Returns `true` if it is a binary or executable example.…",46,[[["self"]],["bool"]]],[11,"is_exe_example","","Returns `true` if it is an executable example.",46,[[["self"]],["bool"]]],[11,"is_test","","",46,[[["self"]],["bool"]]],[11,"is_bench","","",46,[[["self"]],["bool"]]],[11,"is_custom_build","","",46,[[["self"]],["bool"]]],[11,"rustc_crate_types","","Returns the arguments suitable for `--crate-type` to pass…",46,[[["self"]],[["str"],["vec",["str"]]]]],[11,"can_lto","","",46,[[["self"]],["bool"]]],[11,"set_tested","","",46,[[["self"],["bool"]],["target"]]],[11,"set_benched","","",46,[[["self"],["bool"]],["target"]]],[11,"set_doctest","","",46,[[["self"],["bool"]],["target"]]],[11,"set_for_host","","",46,[[["self"],["bool"]],["target"]]],[11,"set_proc_macro","","",46,[[["self"],["bool"]],["target"]]],[11,"set_edition","","",46,[[["self"],["edition"]],["target"]]],[11,"set_harness","","",46,[[["self"],["bool"]],["target"]]],[11,"set_doc","","",46,[[["self"],["bool"]],["target"]]],[11,"set_kind","","",46,[[["self"],["targetkind"]],["target"]]],[11,"set_name","","",46,[[["str"],["self"]],["target"]]],[11,"set_required_features","","",46,[[["self"],["vec",["string"]],["option",["vec"]]],["target"]]],[11,"description_named","","",46,[[["self"]],["string"]]],[11,"add_warning","","",47,[[["self"],["string"]]]],[11,"add_critical_warning","","",47,[[["self"],["string"]]]],[11,"warnings","","",47,[[["self"]]]],[0,"package","cargo::core","",null,null],[3,"Package","cargo::core::package","Information about a package that is available somewhere in…",null,null],[3,"PackageSet","","A set of packages, with the intent to download.",null,null],[3,"Downloads","","Helper for downloading crates.",null,null],[17,"MANIFEST_PREAMBLE","","",null,null],[11,"new","","Creates a package from a manifest and its location.",48,[[["manifest"],["path"]],["package"]]],[11,"dependencies","","Gets the manifest dependencies.",48,[[["self"]]]],[11,"manifest","","Gets the manifest.",48,[[["self"]],["manifest"]]],[11,"manifest_mut","","Gets the manifest.",48,[[["self"]],["manifest"]]],[11,"manifest_path","","Gets the path to the manifest.",48,[[["self"]],["path"]]],[11,"name","","Gets the name of the package.",48,[[["self"]],["internedstring"]]],[11,"package_id","","Gets the `PackageId` object for the package (fully defines…",48,[[["self"]],["packageid"]]],[11,"root","","Gets the root folder of the package.",48,[[["self"]],["path"]]],[11,"summary","","Gets the summary for the package.",48,[[["self"]],["summary"]]],[11,"targets","","Gets the targets specified in the manifest.",48,[[["self"]]]],[11,"version","","Gets the current package version.",48,[[["self"]],["version"]]],[11,"authors","","Gets the package authors.",48,[[["self"]],["vec"]]],[11,"publish","","Returns `true` if the package is set to publish.",48,[[["self"]],["option"]]],[11,"proc_macro","","Returns `true` if this package is a proc-macro.",48,[[["self"]],["bool"]]],[11,"has_custom_build","","Returns `true` if the package uses a custom build script…",48,[[["self"]],["bool"]]],[11,"map_source","","",48,[[["sourceid"]],["package"]]],[11,"to_registry_toml","","",48,[[["workspace"],["self"]],[["cargoresult",["string"]],["string"]]]],[11,"include_lockfile","","Returns if package should include `Cargo.lock`.",48,[[["self"]],["bool"]]],[11,"new","","",49,[[["sourcemap"],["config"]],[["cargoresult",["packageset"]],["packageset"]]]],[11,"package_ids","","",49,[[["self"]]]],[11,"enable_download","","",49,[[["self"]],[["downloads"],["cargoresult",["downloads"]]]]],[11,"get_one","","",49,[[["self"],["packageid"]],[["cargoresult",["package"]],["package"]]]],[11,"get_many","","",49,[[["self"]],[["cargoresult",["vec"]],["vec",["package"]]]]],[11,"download_accessible","","Downloads any packages accessible from the give root ids.",49,[[["hasdevunits"],["rustctargetdata"],["resolve"],["self"]],["cargoresult"]]],[11,"sources","","",49,[[["self"]],[["sourcemap"],["ref",["sourcemap"]]]]],[11,"sources_mut","","",49,[[["self"]],[["refmut",["sourcemap"]],["sourcemap"]]]],[11,"add_set","","Merge the given set into self.",49,[[["self"],["packageset"]]]],[11,"start","","Starts to download the package for the `id` specified.",50,[[["self"],["packageid"]],[["cargoresult",["option"]],["option",["package"]]]]],[11,"remaining","","Returns the number of crates that are still downloading.",50,[[["self"]],["usize"]]],[11,"wait","","Blocks the current thread waiting for a package to finish…",50,[[["self"]],[["package"],["cargoresult",["package"]]]]],[0,"package_id","cargo::core","",null,null],[3,"PackageId","cargo::core::package_id","Identifier for a specific version of a package in a…",null,null],[3,"PackageIdStableHash","","",null,null],[11,"new","","",51,[[["tosemver"],["sourceid"]],[["cargoresult",["packageid"]],["packageid"]]]],[11,"pure","","",51,[[["sourceid"],["internedstring"],["version"]],["packageid"]]],[11,"name","","",51,[[],["internedstring"]]],[11,"version","","",51,[[],["version"]]],[11,"source_id","","",51,[[],["sourceid"]]],[11,"with_precise","","",51,[[["option",["string"]],["string"]],["packageid"]]],[11,"with_source_id","","",51,[[["sourceid"]],["packageid"]]],[11,"map_source","","",51,[[["sourceid"]],["self"]]],[11,"stable_hash","","",51,[[["path"]],["packageidstablehash"]]],[11,"parse","cargo::core","Parses a spec string and returns a `PackageIdSpec` if the…",52,[[["str"]],[["cargoresult",["packageidspec"]],["packageidspec"]]]],[11,"query_str","","Roughly equivalent to `PackageIdSpec::parse(spec)?.query(i)`",52,[[["str"],["i"]],[["cargoresult",["packageid"]],["packageid"]]]],[11,"from_package_id","","Convert a `PackageId` to a `PackageIdSpec`, which will…",52,[[["packageid"]],["packageidspec"]]],[11,"name","","",52,[[["self"]],["internedstring"]]],[11,"version","","",52,[[["self"]],[["version"],["option",["version"]]]]],[11,"url","","",52,[[["self"]],[["url"],["option",["url"]]]]],[11,"set_url","","",52,[[["self"],["url"]]]],[11,"matches","","Checks whether the given `PackageId` matches the…",52,[[["self"],["packageid"]],["bool"]]],[11,"query","","Checks a list of `PackageId`s to find 1 that matches this…",52,[[["i"],["self"]],[["cargoresult",["packageid"]],["packageid"]]]],[0,"profiles","","",null,null],[3,"Profiles","cargo::core::profiles","Collection of all profiles.",null,null],[3,"Profile","","Profile settings used to determine which compiler flags to…",null,null],[12,"name","","",53,null],[12,"opt_level","","",53,null],[12,"root","","",53,null],[12,"lto","","",53,null],[12,"codegen_units","","",53,null],[12,"debuginfo","","",53,null],[12,"debug_assertions","","",53,null],[12,"overflow_checks","","",53,null],[12,"rpath","","",53,null],[12,"incremental","","",53,null],[12,"panic","","",53,null],[3,"UnitFor","","Flags used in creating `Unit`s to indicate the purpose for…",null,null],[4,"ProfileRoot","","The root profile (dev/release).",null,null],[13,"Release","","",54,null],[13,"Debug","","",54,null],[4,"Lto","","The link-time-optimization setting.",null,null],[13,"Bool","","False = no LTO True = \"Fat\" LTO",55,null],[13,"Named","","Named LTO settings like \"thin\".",55,null],[4,"PanicStrategy","","The `panic` setting.",null,null],[13,"Unwind","","",56,null],[13,"Abort","","",56,null],[11,"new","","",57,[[["features"],["config"],["tomlprofiles"],["option",["tomlprofiles"]],["internedstring"]],[["cargoresult",["profiles"]],["profiles"]]]],[11,"get_profile","","Retrieves the profile for a target. `is_member` is whether…",57,[[["unitfor"],["compilemode"],["packageid"],["self"],["bool"]],["profile"]]],[11,"get_profile_run_custom_build","","The profile for running a `build.rs` script is only used…",57,[[["profile"],["self"]],["profile"]]],[11,"base_profile","","This returns the base profile. This is currently used for…",57,[[["self"]],["profile"]]],[11,"get_dir_name","","Gets the directory name for a profile, like `debug` or…",57,[[["self"]],["internedstring"]]],[11,"validate_packages","","Used to check for overrides for non-existing packages.",57,[[["shell"],["resolve"],["tomlprofiles"],["self"],["option",["tomlprofiles"]]],["cargoresult"]]],[11,"new_normal","","A unit for a normal target/dependency (i.e., not custom…",58,[[],["unitfor"]]],[11,"new_host","","A unit for a custom build script or proc-macro or its…",58,[[["bool"]],["unitfor"]]],[11,"new_compiler","","A unit for a compiler plugin or their dependencies.",58,[[],["unitfor"]]],[11,"new_test","","A unit for a test/bench target or their dependencies.",58,[[["config"]],["unitfor"]]],[11,"with_for_host","","Returns a new copy based on `for_host` setting.",58,[[["bool"]],["unitfor"]]],[11,"with_host_features","","Returns a new copy updating it whether or not it should…",58,[[["bool"]],["unitfor"]]],[11,"is_for_host","","Returns `true` if this unit is for a build script or any…",58,[[["self"]],["bool"]]],[11,"is_for_host_features","","",58,[[["self"]],["bool"]]],[11,"all_values","","All possible values, used by `clean`.",58,[[]]],[0,"registry","cargo::core","",null,null],[3,"PackageRegistry","cargo::core::registry","This structure represents a registry of known packages. It…",null,null],[8,"Registry","","Source of information about a group of packages.",null,null],[10,"query","","Attempt to find the packages that match a dependency…",59,[[["fnmut"],["bool"],["self"],["dependency"]],["cargoresult"]]],[11,"query_vec","","",59,[[["bool"],["self"],["dependency"]],[["cargoresult",["vec"]],["vec",["summary"]]]]],[10,"describe_source","","",59,[[["self"],["sourceid"]],["string"]]],[10,"is_replaced","","",59,[[["self"],["sourceid"]],["bool"]]],[11,"new","","",60,[[["config"]],[["packageregistry"],["cargoresult",["packageregistry"]]]]],[11,"get","","",60,[[],[["cargoresult",["packageset"]],["packageset"]]]],[11,"add_sources","","",60,[[["self"]],["cargoresult"]]],[11,"add_preloaded","","",60,[[["box",["source"]],["self"],["source"]]]],[11,"add_override","","",60,[[["box",["source"]],["self"],["source"]]]],[11,"add_to_yanked_whitelist","","",60,[[["self"]]]],[11,"register_lock","","",60,[[["self"],["vec",["packageid"]],["packageid"]]]],[11,"patch","","Insert a `[patch]` section into this registry.",60,[[["self"],["url"]],["cargoresult"]]],[11,"lock_patches","","Lock all patch summaries added via `patch`, making them…",60,[[["self"]]]],[11,"patches","","",60,[[["self"]],[["vec",["summary"]],["summary"]]]],[11,"lock","","This function is used to transform a summary to another…",60,[[["self"],["summary"]],["summary"]]],[0,"resolver","cargo::core","Resolution of the entire dependency graph for a crate.",null,null],[3,"EncodableDependency","cargo::core::resolver","",null,null],[3,"EncodablePackageId","","",null,null],[3,"EncodableResolve","","The `Cargo.lock` structure.",null,null],[3,"ResolveError","","Error during resolution providing a path of `PackageId`s.",null,null],[3,"Resolve","","Represents a fully-resolved package dependency graph. Each…",null,null],[3,"ResolveOpts","","Options for how the resolve should work.",null,null],[12,"dev_deps","","Whether or not dev-dependencies should be included.",61,null],[12,"features","","Set of features requested on the command-line.",61,null],[4,"ActivateError","","",null,null],[13,"Fatal","","",62,null],[13,"Conflict","","",62,null],[4,"ResolveVersion","","A version to indicate how a `Cargo.lock` should be…",null,null],[13,"V1","","Historical baseline for when this abstraction was added.",3,null],[13,"V2","","A more compact format, more amenable to avoiding…",3,null],[4,"ResolveBehavior","","Resolver behavior, used to opt-in to new behavior that is…",null,null],[13,"V1","","V1 is the original resolver behavior.",63,null],[13,"V2","","V2 adds the new feature resolver.",63,null],[5,"resolve","","Builds the list of all packages required to build the…",null,[[["registry"],["hashset"],["option",["config"]],["config"],["bool"]],[["resolve"],["cargoresult",["resolve"]]]]],[11,"as_activations_key","cargo::core::package_id","",51,[[]]],[11,"into_resolve","cargo::core::resolver","Convert a `Cargo.lock` to a Resolve.",64,[[["str"],["workspace"]],[["resolve"],["cargoresult",["resolve"]]]]],[11,"new","","",65,[[["into",["error"]],["error"],["packageid"],["vec",["packageid"]]],["self"]]],[11,"package_path","","Returns a path of packages from the package whose…",65,[[["self"]]]],[0,"features","","Feature resolver.",null,null],[3,"ResolvedFeatures","cargo::core::resolver::features","Set of all activated features for all packages in the…",null,null],[3,"RequestedFeatures","","Features flags requested for a package.",null,null],[12,"features","","",66,null],[12,"all_features","","",66,null],[12,"uses_default_features","","",66,null],[3,"FeatureResolver","","",null,null],[4,"HasDevUnits","","Flag to indicate if Cargo is building any dev units…",null,null],[13,"Yes","","",67,null],[13,"No","","",67,null],[4,"FeaturesFor","","Flag to indicate if features are requested for a build…",null,null],[13,"NormalOrDev","","",68,null],[13,"HostDep","","Build dependency or proc-macro.",68,null],[11,"from_for_host","","",68,[[["bool"]],["featuresfor"]]],[11,"from_command_line","","Creates a new RequestedFeatures from the given…",66,[[["bool"]],["requestedfeatures"]]],[11,"new_all","","Creates a new RequestedFeatures with the given…",66,[[["bool"]],["requestedfeatures"]]],[11,"activated_features","","Returns the list of features that are enabled for the…",69,[[["featuresfor"],["self"],["packageid"]],[["vec",["internedstring"]],["internedstring"]]]],[11,"activated_features_unverified","","Variant of `activated_features` that returns `None` if…",69,[[["featuresfor"],["self"],["packageid"]],[["option",["vec"]],["vec",["internedstring"]]]]],[11,"resolve","","Runs the resolution algorithm and returns a new…",70,[[["workspace"],["hasdevunits"],["requestedfeatures"],["packageset"],["resolve"],["rustctargetdata"]],[["cargoresult",["resolvedfeatures"]],["resolvedfeatures"]]]],[11,"new","cargo::core","",71,[[["vec",["packageid"]],["hashmap",["packageid","packageid"]],["option",["string"]],["resolveversion"],["hashmap",["packageid","summary"]],["summary"],["vec",["internedstring"]],["hashset",["dependency"]],["graph",["packageid","hashset"]],["packageid"],["hashmap",["packageid","vec"]],["hashmap",["packageid","option"]],["metadata"]],["resolve"]]],[11,"path_to_top","","Resolves one of the paths from the given dependent package…",71,[[["packageid"],["self"]],[["packageid"],["vec",["packageid"]]]]],[11,"register_used_patches","","",71,[[["self"]]]],[11,"merge_from","","",71,[[["resolve"],["self"]],["cargoresult"]]],[11,"contains","","",71,[[["self"],["q"]],["bool"]]],[11,"sort","","",71,[[["self"]],[["vec",["packageid"]],["packageid"]]]],[11,"iter","","",71,[[["self"]]]],[11,"deps","","",71,[[["self"],["packageid"]]]],[11,"deps_not_replaced","","",71,[[["self"],["packageid"]]]],[11,"replacement","","",71,[[["self"],["packageid"]],[["option",["packageid"]],["packageid"]]]],[11,"replacements","","",71,[[["self"]],["hashmap"]]],[11,"features","","",71,[[["self"],["packageid"]]]],[11,"features_clone","","This is only here for legacy support, it will be removed…",71,[[["self"]],[["vec",["internedstring"]],["hashmap",["packageid","vec"]],["packageid"]]]],[11,"is_public_dep","","",71,[[["self"],["packageid"]],["bool"]]],[11,"query","","",71,[[["str"],["self"]],[["cargoresult",["packageid"]],["packageid"]]]],[11,"specs_to_ids","","",71,[[["self"]],[["cargoresult",["vec"]],["vec",["packageid"]]]]],[11,"unused_patches","","",71,[[["self"]]]],[11,"checksums","","",71,[[["self"]],["hashmap"]]],[11,"metadata","","",71,[[["self"]],["metadata"]]],[11,"extern_crate_name","","",71,[[["target"],["self"],["packageid"]],[["cargoresult",["string"]],["string"]]]],[11,"version","","Returns the version of the encoding that's being used for…",71,[[["self"]],["resolveversion"]]],[11,"summary","","",71,[[["self"],["packageid"]],["summary"]]],[11,"default_for_new_lockfiles","","The default way to encode new `Cargo.lock` files.",3,[[],["resolveversion"]]],[11,"default_for_old_lockfiles","","The default way to encode old preexisting `Cargo.lock`…",3,[[],["resolveversion"]]],[11,"from_manifest","cargo::core::resolver","",63,[[["str"]],[["cargoresult",["resolvebehavior"]],["resolvebehavior"]]]],[11,"to_manifest","","",63,[[["self"]],[["option",["string"]],["string"]]]],[11,"everything","","Creates a ResolveOpts that resolves everything.",61,[[],["resolveopts"]]],[11,"new","","",61,[[["bool"]],["resolveopts"]]],[6,"Metadata","","",null,null],[6,"ActivateResult","","",null,null],[0,"shell","cargo::core","",null,null],[3,"Shell","cargo::core::shell","An abstraction around a `Write`able object that remembers…",null,null],[4,"Verbosity","","The requested verbosity of output.",null,null],[13,"Verbose","","",72,null],[13,"Normal","","",72,null],[13,"Quiet","","",72,null],[4,"ColorChoice","","Whether messages should use color output",null,null],[13,"Always","","Force color output",73,null],[13,"Never","","Force disable color output",73,null],[13,"CargoAuto","","Intelligently guess whether to use color output",73,null],[11,"new","","Creates a new shell (color choice and verbosity),…",74,[[],["shell"]]],[11,"from_write","","Creates a shell from a plain writable object, with no…",74,[[["box",["write"]],["write"]],["shell"]]],[11,"stdout_println","","",74,[[["self"]]]],[11,"set_needs_clear","","Sets whether the next print should clear the current line.",74,[[["self"],["bool"]]]],[11,"is_cleared","","Returns `true` if the `needs_clear` flag is unset.",74,[[["self"]],["bool"]]],[11,"err_width","","Returns the width of the terminal in spaces, if any.",74,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"is_err_tty","","Returns `true` if stderr is a tty.",74,[[["self"]],["bool"]]],[11,"err","","Gets a reference to the underlying writer.",74,[[["self"]],["write"]]],[11,"err_erase_line","","Erase from cursor to end of line.",74,[[["self"]]]],[11,"status","","Shortcut to right-align and color green a status message.",74,[[["u"],["self"],["t"]],["cargoresult"]]],[11,"status_header","","",74,[[["self"],["t"]],["cargoresult"]]],[11,"status_with_color","","Shortcut to right-align a status message.",74,[[["color"],["u"],["self"],["t"]],["cargoresult"]]],[11,"verbose","","Runs the callback only if we are in verbose mode.",74,[[["self"],["f"]],["cargoresult"]]],[11,"concise","","Runs the callback if we are not in verbose mode.",74,[[["self"],["f"]],["cargoresult"]]],[11,"error","","Prints a red 'error' message.",74,[[["display"],["self"]],["cargoresult"]]],[11,"warn","","Prints an amber 'warning' message.",74,[[["display"],["self"]],["cargoresult"]]],[11,"note","","Prints a cyan 'note' message.",74,[[["display"],["self"]],["cargoresult"]]],[11,"set_verbosity","","Updates the verbosity of the shell.",74,[[["verbosity"],["self"]]]],[11,"verbosity","","Gets the verbosity of the shell.",74,[[["self"]],["verbosity"]]],[11,"set_color_choice","","Updates the color choice (always, never, or auto) from a…",74,[[["str"],["self"],["option",["str"]]],["cargoresult"]]],[11,"color_choice","","Gets the current color choice.",74,[[["self"]],["colorchoice"]]],[11,"supports_color","","Whether the shell supports color.",74,[[["self"]],["bool"]]],[11,"print_ansi","","Prints a message and translates ANSI escape code into…",74,[[["self"]],["cargoresult"]]],[0,"source","cargo::core","",null,null],[3,"SourceId","cargo::core::source","Unique identifier for a source of packages.",null,null],[3,"SourceMap","","A `HashMap` of `SourceId` -> `Box<Source>`.",null,null],[4,"GitReference","","Information to find a specific commit in a Git repository.",null,null],[13,"Tag","","From a tag.",4,null],[13,"Branch","","From the HEAD of a branch.",4,null],[13,"Rev","","From a specific revision.",4,null],[4,"MaybePackage","","",null,null],[13,"Ready","","",75,null],[13,"Download","","",75,null],[12,"url","cargo::core::source::MaybePackage","",76,null],[12,"descriptor","","",76,null],[11,"from_url","cargo::core","Parses a source URL and returns the corresponding ID.",77,[[["str"]],[["sourceid"],["cargoresult",["sourceid"]]]]],[11,"into_url","","A view of the `SourceId` that can be `Display`ed as a URL.",77,[[["self"]],["sourceidintourl"]]],[11,"for_path","","Creates a `SourceId` from a filesystem path.",77,[[["path"]],[["sourceid"],["cargoresult",["sourceid"]]]]],[11,"for_git","","Creates a `SourceId` from a Git reference.",77,[[["url"],["gitreference"]],[["sourceid"],["cargoresult",["sourceid"]]]]],[11,"for_registry","","Creates a SourceId from a registry URL.",77,[[["url"]],[["sourceid"],["cargoresult",["sourceid"]]]]],[11,"for_local_registry","","Creates a SourceId from a local registry path.",77,[[["path"]],[["sourceid"],["cargoresult",["sourceid"]]]]],[11,"for_directory","","Creates a `SourceId` from a directory path.",77,[[["path"]],[["sourceid"],["cargoresult",["sourceid"]]]]],[11,"crates_io","","Returns the `SourceId` corresponding to the main repository.",77,[[["config"]],[["sourceid"],["cargoresult",["sourceid"]]]]],[11,"alt_registry","","",77,[[["config"],["str"]],[["sourceid"],["cargoresult",["sourceid"]]]]],[11,"url","","Gets this source URL.",77,[[["self"]],["url"]]],[11,"canonical_url","","Gets the canonical URL of this source, used for internal…",77,[[["self"]],["canonicalurl"]]],[11,"display_index","","",77,[[],["string"]]],[11,"display_registry_name","","",77,[[],["string"]]],[11,"is_path","","Returns `true` if this source is from a filesystem path.",77,[[],["bool"]]],[11,"is_registry","","Returns `true` if this source is from a registry (either…",77,[[],["bool"]]],[11,"is_remote_registry","","Returns `true` if this source is a \"remote\" registry.",77,[[],["bool"]]],[11,"is_git","","Returns `true` if this source from a Git repository.",77,[[],["bool"]]],[11,"load","","Creates an implementation of `Source` corresponding to…",77,[[["config"],["hashset"]],[["box",["source"]],["cargoresult",["box"]]]]],[11,"precise","","Gets the value of the precise field.",77,[[],[["option",["str"]],["str"]]]],[11,"git_reference","","Gets the Git reference if this is a git source, otherwise…",77,[[],[["option",["gitreference"]],["gitreference"]]]],[11,"with_precise","","Creates a new `SourceId` from this source with the given…",77,[[["option",["string"]],["string"]],["sourceid"]]],[11,"is_default_registry","","Returns `true` if the remote registry is the standard…",77,[[],["bool"]]],[11,"stable_hash","","Hashes `self`.",77,[[["path"],["s"]]]],[11,"full_eq","","",77,[[["sourceid"]],["bool"]]],[11,"full_hash","","",77,[[["s"]]]],[11,"pretty_ref","","Returns a `Display`able view of this git reference, or…",4,[[["self"]],[["option",["prettyref"]],["prettyref"]]]],[8,"Source","cargo::core::source","Something that finds and downloads remote packages based…",null,null],[10,"source_id","","Returns the `SourceId` corresponding to this source.",78,[[["self"]],["sourceid"]]],[11,"replaced_source_id","","Returns the replaced `SourceId` corresponding to this…",78,[[["self"]],["sourceid"]]],[10,"supports_checksums","","Returns whether or not this source will return summaries…",78,[[["self"]],["bool"]]],[10,"requires_precise","","Returns whether or not this source will return summaries…",78,[[["self"]],["bool"]]],[10,"query","","Attempts to find the packages that match a dependency…",78,[[["fnmut"],["self"],["dependency"]],["cargoresult"]]],[10,"fuzzy_query","","Attempts to find the packages that are close to a…",78,[[["fnmut"],["self"],["dependency"]],["cargoresult"]]],[11,"query_vec","","",78,[[["self"],["dependency"]],[["cargoresult",["vec"]],["vec",["summary"]]]]],[10,"update","","Performs any network operations required to get the entire…",78,[[["self"]],["cargoresult"]]],[10,"download","","Fetches the full package for each name and version…",78,[[["self"],["packageid"]],[["maybepackage"],["cargoresult",["maybepackage"]]]]],[11,"download_now","","",78,[[["box"],["config"],["packageid"]],[["package"],["cargoresult",["package"]]]]],[10,"finish_download","","",78,[[["packageid"],["self"],["vec",["u8"]],["u8"]],[["package"],["cargoresult",["package"]]]]],[10,"fingerprint","","Generates a unique string which represents the fingerprint…",78,[[["self"],["package"]],[["cargoresult",["string"]],["string"]]]],[11,"verify","","If this source supports it, verifies the source of the…",78,[[["self"],["packageid"]],["cargoresult"]]],[10,"describe","","Describes this source in a human readable fashion, used…",78,[[["self"]],["string"]]],[11,"is_replaced","","Returns whether a source is being replaced by another here.",78,[[["self"]],["bool"]]],[10,"add_to_yanked_whitelist","","Add a number of crates that should be whitelisted for…",78,[[["self"]]]],[10,"is_yanked","","Query if a package is yanked. Only registry sources can…",78,[[["self"],["packageid"]],[["cargoresult",["bool"]],["bool"]]]],[11,"new","","Creates an empty map.",79,[[],["sourcemap"]]],[11,"contains","","Like `HashMap::contains_key`.",79,[[["self"],["sourceid"]],["bool"]]],[11,"get","","Like `HashMap::get`.",79,[[["self"],["sourceid"]],[["option",["source"]],["source"]]]],[11,"get_mut","","Like `HashMap::get_mut`.",79,[[["self"],["sourceid"]],[["option",["source"]],["source"]]]],[11,"get_by_package_id","","Like `HashMap::get`, but first calculates the `SourceId`…",79,[[["self"],["packageid"]],[["option",["source"]],["source"]]]],[11,"insert","","Like `HashMap::insert`, but derives the `SourceId` key…",79,[[["self"],["box",["source"]],["source"]]]],[11,"is_empty","","Like `HashMap::is_empty`.",79,[[["self"]],["bool"]]],[11,"len","","Like `HashMap::len`.",79,[[["self"]],["usize"]]],[11,"sources","","Like `HashMap::values`.",79,[[["self"]]]],[11,"sources_mut","","Like `HashMap::iter_mut`.",79,[[["self"]]]],[11,"add_source_map","","Merge the given map into self.",79,[[["self"],["sourcemap"]]]],[0,"summary","cargo::core","",null,null],[3,"Summary","cargo::core::summary","Subset of a `Manifest`. Contains only the most important…",null,null],[4,"FeatureValue","","FeatureValue represents the types of dependencies a…",null,null],[13,"Feature","","",80,null],[13,"Crate","","",80,null],[13,"CrateFeature","","",80,null],[6,"FeatureMap","","",null,null],[11,"new","","",81,[[["bool"],["btreemap"],["dependency"],["vec",["dependency"]],["packageid"],["option"]],[["cargoresult",["summary"]],["summary"]]]],[11,"package_id","","",81,[[["self"]],["packageid"]]],[11,"name","","",81,[[["self"]],["internedstring"]]],[11,"version","","",81,[[["self"]],["version"]]],[11,"source_id","","",81,[[["self"]],["sourceid"]]],[11,"dependencies","","",81,[[["self"]]]],[11,"features","","",81,[[["self"]],["featuremap"]]],[11,"checksum","","",81,[[["self"]],[["str"],["option",["str"]]]]],[11,"links","","",81,[[["self"]],[["internedstring"],["option",["internedstring"]]]]],[11,"namespaced_features","","",81,[[["self"]],["bool"]]],[11,"override_id","","",81,[[["packageid"]],["summary"]]],[11,"set_checksum","","",81,[[["self"],["string"]]]],[11,"map_dependencies","","",81,[[["f"]],["summary"]]],[11,"map_source","","",81,[[["sourceid"]],["summary"]]],[11,"new","","",80,[[["summary"],["internedstring"]],["featurevalue"]]],[11,"to_string","","",80,[[["summary"],["self"]],["string"]]],[11,"new","cargo::core","Creates a new workspace given the target manifest pointed…",82,[[["path"],["config"]],[["workspace"],["cargoresult",["workspace"]]]]],[11,"new_virtual","","",82,[[["virtualmanifest"],["pathbuf"],["config"]],[["workspace"],["cargoresult",["workspace"]]]]],[11,"ephemeral","","Creates a \"temporary workspace\" from one package which…",82,[[["filesystem"],["package"],["option",["filesystem"]],["config"],["bool"]],[["workspace"],["cargoresult",["workspace"]]]]],[11,"current","","Returns the current package of this workspace.",82,[[["self"]],[["cargoresult",["package"]],["package"]]]],[11,"current_mut","","",82,[[["self"]],[["package"],["cargoresult",["package"]]]]],[11,"current_opt","","",82,[[["self"]],[["option",["package"]],["package"]]]],[11,"current_opt_mut","","",82,[[["self"]],[["package"],["option",["package"]]]]],[11,"is_virtual","","",82,[[["self"]],["bool"]]],[11,"config","","Returns the `Config` this workspace is associated with.",82,[[["self"]],["config"]]],[11,"profiles","","",82,[[["self"]],[["tomlprofiles"],["option",["tomlprofiles"]]]]],[11,"root","","Returns the root path of this workspace.",82,[[["self"]],["path"]]],[11,"target_dir","","",82,[[["self"]],["filesystem"]]],[11,"root_replace","","Returns the root `[replace]` section of this workspace.",82,[[["self"]]]],[11,"root_patch","","Returns the root `[patch]` section of this workspace.",82,[[["self"]],["hashmap"]]],[11,"members","","Returns an iterator over all packages in this workspace",82,[[["self"]],["members"]]],[11,"default_members","","Returns an iterator over default packages in this workspace",82,[[["self"]],["members"]]],[11,"is_member","","Returns true if the package is a member of the workspace.",82,[[["self"],["package"]],["bool"]]],[11,"is_ephemeral","","",82,[[["self"]],["bool"]]],[11,"require_optional_deps","","",82,[[["self"]],["bool"]]],[11,"set_require_optional_deps","","",82,[[["self"],["bool"]],["workspace"]]],[11,"ignore_lock","","",82,[[["self"]],["bool"]]],[11,"set_ignore_lock","","",82,[[["self"],["bool"]],["workspace"]]],[11,"features","","",82,[[["self"]],["features"]]],[11,"resolve_behavior","","",82,[[["self"]],["resolvebehavior"]]],[11,"allows_unstable_package_features","","",82,[[["self"]],["bool"]]],[11,"load","","",82,[[["path"],["self"]],[["package"],["cargoresult",["package"]]]]],[11,"preload","","Preload the provided registry with already loaded packages.",82,[[["self"],["packageregistry"]]]],[11,"emit_warnings","","",82,[[["self"]],["cargoresult"]]],[11,"set_target_dir","","",82,[[["filesystem"],["self"]]]],[11,"members_with_features","","Returns a Vec of `(&Package, RequestedFeatures)` tuples…",82,[[["self"],["requestedfeatures"]],[["cargoresult",["vec"]],["vec"]]]],[11,"new","","Creates a new Intermediate Workspace Root configuration.",83,[[["path"],["option"]],["workspacerootconfig"]]],[0,"ops","cargo","",null,null],[3,"CleanOptions","cargo::ops","",null,null],[12,"config","","",84,null],[12,"spec","","A list of packages to clean. If empty, everything is…",84,null],[12,"targets","","The target arch triple to clean, or None for the host arch",84,null],[12,"profile_specified","","Whether to clean the release directory",84,null],[12,"requested_profile","","Whether to clean the directory of a certain build profile",84,null],[12,"doc","","Whether to just clean the doc directory",84,null],[3,"CompileOptions","","Contains information about how a package should be compiled.",null,null],[12,"build_config","","Configuration information for a rustc build",85,null],[12,"features","","Extra features to build for the root package",85,null],[12,"all_features","","Flag whether all available features should be built for…",85,null],[12,"no_default_features","","Flag if the default feature should be built for the root…",85,null],[12,"spec","","A set of packages to build.",85,null],[12,"filter","","Filter to apply to the root package to select which…",85,null],[12,"target_rustdoc_args","","Extra arguments to be passed to rustdoc (single target only)",85,null],[12,"target_rustc_args","","The specified target will be compiled with all the…",85,null],[12,"local_rustdoc_args","","Extra arguments passed to all selected targets for rustdoc.",85,null],[12,"rustdoc_document_private_items","","Whether the `--document-private-items` flags was specified…",85,null],[3,"DocOptions","","Strongly typed options for the `cargo doc` command.",null,null],[12,"open_result","","Whether to attempt to open the browser after compiling the…",86,null],[12,"compile_opts","","Options to pass through to the compiler",86,null],[3,"FetchOptions","","",null,null],[12,"config","","",87,null],[12,"targets","","The target arch triple to fetch dependencies for",87,null],[3,"UpdateOptions","","",null,null],[12,"config","","",88,null],[12,"to_update","","",88,null],[12,"precise","","",88,null],[12,"aggressive","","",88,null],[12,"dry_run","","",88,null],[3,"NewOptions","","",null,null],[12,"version_control","","",89,null],[12,"kind","","",89,null],[12,"path","","Absolute path to the directory for the new package",89,null],[12,"name","","",89,null],[12,"edition","","",89,null],[12,"registry","","",89,null],[3,"ExportInfo","","This is the structure that is serialized and displayed to…",null,null],[3,"OutputMetadataOptions","","",null,null],[12,"features","","",90,null],[12,"no_default_features","","",90,null],[12,"all_features","","",90,null],[12,"no_deps","","",90,null],[12,"version","","",90,null],[12,"filter_platforms","","",90,null],[3,"PackageOpts","","",null,null],[12,"config","","",91,null],[12,"list","","",91,null],[12,"check_metadata","","",91,null],[12,"allow_dirty","","",91,null],[12,"verify","","",91,null],[12,"jobs","","",91,null],[12,"targets","","",91,null],[12,"features","","",91,null],[12,"all_features","","",91,null],[12,"no_default_features","","",91,null],[3,"TestOptions","","",null,null],[12,"compile_opts","","",92,null],[12,"no_run","","",92,null],[12,"no_fail_fast","","",92,null],[3,"FixOptions","","",null,null],[12,"edition","","",93,null],[12,"prepare_for","","",93,null],[12,"idioms","","",93,null],[12,"compile_opts","","",93,null],[12,"allow_dirty","","",93,null],[12,"allow_no_vcs","","",93,null],[12,"allow_staged","","",93,null],[12,"broken_code","","",93,null],[3,"HttpTimeout","","",null,null],[12,"dur","","",94,null],[12,"low_speed_limit","","",94,null],[3,"OwnersOptions","","",null,null],[12,"krate","","",95,null],[12,"token","","",95,null],[12,"index","","",95,null],[12,"to_add","","",95,null],[12,"to_remove","","",95,null],[12,"list","","",95,null],[12,"registry","","",95,null],[3,"PublishOpts","","",null,null],[12,"config","","",96,null],[12,"token","","",96,null],[12,"index","","",96,null],[12,"verify","","",96,null],[12,"allow_dirty","","",96,null],[12,"jobs","","",96,null],[12,"targets","","",96,null],[12,"dry_run","","",96,null],[12,"registry","","",96,null],[12,"features","","",96,null],[12,"all_features","","",96,null],[12,"no_default_features","","",96,null],[3,"RegistryConfig","","Registry settings loaded from config files.",null,null],[12,"index","","The index URL. If `None`, use crates.io.",97,null],[12,"token","","The authentication token.",97,null],[3,"VendorOptions","","",null,null],[12,"no_delete","","",98,null],[12,"versioned_dirs","","",98,null],[12,"destination","","",98,null],[12,"extra","","",98,null],[4,"CompileFilter","","",null,null],[13,"Default","","",99,null],[12,"required_features_filterable","cargo::ops::CompileFilter","Flag whether targets can be safely skipped when…",100,null],[13,"Only","cargo::ops","",99,null],[12,"all_targets","cargo::ops::CompileFilter","",101,null],[12,"lib","","",101,null],[12,"bins","","",101,null],[12,"examples","","",101,null],[12,"tests","","",101,null],[12,"benches","","",101,null],[4,"FilterRule","cargo::ops","",null,null],[13,"All","","",102,null],[13,"Just","","",102,null],[4,"LibRule","","",null,null],[13,"True","","Include the library, fail if not present",103,null],[13,"Default","","Include the library if present",103,null],[13,"False","","Exclude the library",103,null],[4,"Packages","","",null,null],[13,"Default","","",104,null],[13,"All","","",104,null],[13,"OptOut","","",104,null],[13,"Packages","","",104,null],[4,"VersionControl","","",null,null],[13,"Git","","",105,null],[13,"Hg","","",105,null],[13,"Pijul","","",105,null],[13,"Fossil","","",105,null],[13,"NoVcs","","",105,null],[5,"clean","","Cleans the package's build artifacts.",null,[[["workspace"],["cleanoptions"]],["cargoresult"]]],[5,"compile","","",null,[[["compileoptions"],["workspace"]],[["cargoresult",["compilation"]],["compilation"]]]],[5,"compile_with_exec","","Like `compile` but allows specifying a custom `Executor`…",null,[[["compileoptions"],["arc"],["workspace"]],[["cargoresult",["compilation"]],["compilation"]]]],[5,"compile_ws","","",null,[[["compileoptions"],["arc"],["workspace"]],[["cargoresult",["compilation"]],["compilation"]]]],[5,"resolve_all_features","","Gets all of the features enabled for a package, plus its…",null,[[["packageid"],["resolve"],["packageset"],["resolvedfeatures"]],[["hashset",["string"]],["string"]]]],[5,"doc","","Main method for `cargo doc`.",null,[[["workspace"],["docoptions"]],["cargoresult"]]],[5,"fetch","","Executes `cargo fetch`.",null,[[["fetchoptions"],["workspace"]],["cargoresult"]]],[5,"generate_lockfile","","",null,[[["workspace"]],["cargoresult"]]],[5,"update_lockfile","","",null,[[["workspace"],["updateoptions"]],["cargoresult"]]],[5,"install","","",null,[[["compileoptions"],["sourceid"],["option",["str"]],["config"],["bool"],["str"],["vec",["str"]]],["cargoresult"]]],[5,"install_list","","Display a list of installed binaries.",null,[[["str"],["config"],["option",["str"]]],["cargoresult"]]],[5,"init","","",null,[[["config"],["newoptions"]],["cargoresult"]]],[5,"new","","",null,[[["config"],["newoptions"]],["cargoresult"]]],[5,"output_metadata","","Loads the manifest, resolves the dependencies of the…",null,[[["workspace"],["outputmetadataoptions"]],[["cargoresult",["exportinfo"]],["exportinfo"]]]],[5,"package","","",null,[[["workspace"],["packageopts"]],[["cargoresult",["option"]],["option",["filelock"]]]]],[5,"pkgid","","",null,[[["workspace"],["str"],["option",["str"]]],[["cargoresult",["packageidspec"]],["packageidspec"]]]],[5,"read_package","","",null,[[["config"],["path"],["sourceid"]],["cargoresult"]]],[5,"read_packages","","",null,[[["config"],["path"],["sourceid"]],[["cargoresult",["vec"]],["vec",["package"]]]]],[5,"run","","",null,[[["workspace"],["compileoptions"]],[["option",["processerror"]],["cargoresult",["option"]]]]],[5,"run_benches","","",null,[[["workspace"],["testoptions"]],[["cargoresult",["option"]],["option",["cargotesterror"]]]]],[5,"run_tests","","",null,[[["workspace"],["testoptions"]],[["cargoresult",["option"]],["option",["cargotesterror"]]]]],[5,"uninstall","","",null,[[["str"],["option",["str"]],["config"],["vec",["str"]]],["cargoresult"]]],[5,"fix","","",null,[[["workspace"],["fixoptions"]],["cargoresult"]]],[5,"fix_maybe_exec_rustc","","",null,[[],[["cargoresult",["bool"]],["bool"]]]],[5,"load_pkg_lockfile","","",null,[[["workspace"]],[["cargoresult",["option"]],["option",["resolve"]]]]],[5,"resolve_to_string","","Generate a toml String of Cargo.lock from a Resolve.",null,[[["workspace"],["resolve"]],[["cargoresult",["string"]],["string"]]]],[5,"write_pkg_lockfile","","",null,[[["workspace"],["resolve"]],["cargoresult"]]],[5,"configure_http_handle","","Configure a libcurl http handle with the defaults options…",null,[[["config"],["easy"]],[["cargoresult",["httptimeout"]],["httptimeout"]]]],[5,"http_handle_and_timeout","","",null,[[["config"]],["cargoresult"]]],[5,"http_handle","","Creates a new HTTP handle with appropriate global…",null,[[["config"]],[["easy"],["cargoresult",["easy"]]]]],[5,"needs_custom_http_transport","","",null,[[["config"]],[["cargoresult",["bool"]],["bool"]]]],[5,"registry_login","","",null,[[["option",["string"]],["config"],["string"]],["cargoresult"]]],[5,"search","","",null,[[["str"],["u32"],["option",["string"]],["config"],["string"]],["cargoresult"]]],[5,"modify_owners","","",null,[[["config"],["ownersoptions"]],["cargoresult"]]],[5,"yank","","",null,[[["bool"],["option",["string"]],["config"],["string"]],["cargoresult"]]],[5,"publish","","",null,[[["workspace"],["publishopts"]],["cargoresult"]]],[5,"registry_configuration","","Returns the index and token from the config file for the…",null,[[["config"],["option",["string"]],["string"]],[["cargoresult",["registryconfig"]],["registryconfig"]]]],[5,"add_overrides","","Read the `paths` configuration variable to discover all…",null,[[["packageregistry"],["workspace"]],["cargoresult"]]],[5,"get_resolved_packages","","",null,[[["resolve"],["packageregistry"]],[["cargoresult",["packageset"]],["packageset"]]]],[5,"resolve_with_previous","","Resolves all dependencies for a package using an optional…",null,[[["workspace"],["option",["resolve"]],["packageregistry"],["option",["hashset"]],["bool"],["hashset"],["resolve"],["resolveopts"]],[["resolve"],["cargoresult",["resolve"]]]]],[5,"resolve_ws","","Resolves all dependencies for the workspace using the…",null,[[["workspace"]],["cargoresult"]]],[5,"resolve_ws_with_opts","","Resolves dependencies for some packages of the workspace,…",null,[[["workspace"],["hasdevunits"],["resolveopts"],["rustctargetdata"]],[["cargoresult",["workspaceresolve"]],["workspaceresolve"]]]],[5,"vendor","","",null,[[["workspace"],["vendoroptions"]],["cargoresult"]]],[11,"new","","",85,[[["config"],["compilemode"]],[["cargoresult",["compileoptions"]],["compileoptions"]]]],[11,"from_flags","","",104,[[["bool"],["vec",["string"]],["string"]],["cargoresult"]]],[11,"to_package_id_specs","","",104,[[["workspace"],["self"]],[["vec",["packageidspec"]],["cargoresult",["vec"]]]]],[11,"get_packages","","",104,[[["workspace"],["self"]],[["cargoresult",["vec"]],["vec",["package"]]]]],[11,"needs_spec_flag","","Returns whether or not the user needs to pass a `-p` flag…",104,[[["workspace"],["self"]],["bool"]]],[11,"new","","",102,[[["bool"],["vec",["string"]],["string"]],["filterrule"]]],[11,"none","","",102,[[],["filterrule"]]],[11,"try_collect","","",102,[[["self"]],[["vec",["string"]],["option",["vec"]]]]],[11,"from_raw_arguments","","Construct a CompileFilter from raw command line arguments.",99,[[["bool"],["vec",["string"]],["string"]],["compilefilter"]]],[11,"new","","Construct a CompileFilter from underlying primitives.",99,[[["librule"],["filterrule"]],["compilefilter"]]],[11,"new_all_targets","","",99,[[],["compilefilter"]]],[11,"need_dev_deps","","",99,[[["self"],["compilemode"]],["bool"]]],[11,"target_run","","",99,[[["target"],["self"]],["bool"]]],[11,"is_specific","","",99,[[["self"]],["bool"]]],[11,"new","","",89,[[["option",["versioncontrol"]],["versioncontrol"],["pathbuf"],["option",["string"]],["string"],["bool"]],[["newoptions"],["cargoresult",["newoptions"]]]]],[11,"new","","",94,[[["config"]],[["cargoresult",["httptimeout"]],["httptimeout"]]]],[11,"configure","","",94,[[["self"],["easy"]],["cargoresult"]]],[0,"tree","","Implementation of `cargo tree`.",null,null],[3,"TreeOptions","cargo::ops::tree","",null,null],[12,"features","","",106,null],[12,"no_default_features","","",106,null],[12,"all_features","","",106,null],[12,"packages","","The packages to display the tree for.",106,null],[12,"target","","The platform to filter for.",106,null],[12,"edge_kinds","","The dependency kinds to display.",106,null],[12,"invert","","",106,null],[12,"prefix","","The style of prefix for each line.",106,null],[12,"no_dedupe","","If `true`, duplicates will be repeated. If `false`,…",106,null],[12,"duplicates","","If `true`, run in a special mode where it will scan for…",106,null],[12,"charset","","The style of characters to use.",106,null],[12,"format","","A format string indicating how each package should be…",106,null],[12,"graph_features","","Includes features in the tree as separate nodes.",106,null],[4,"EdgeKind","","The kind of edge, for separating dependencies into…",null,null],[13,"Dep","","",107,null],[13,"Feature","","",107,null],[4,"Node","","",null,null],[13,"Package","","",108,null],[12,"package_id","cargo::ops::tree::Node","",109,null],[12,"features","","Features that are enabled on this package.",109,null],[12,"kind","","",109,null],[13,"Feature","cargo::ops::tree","",108,null],[12,"node_index","cargo::ops::tree::Node","Index of the package node this feature is for.",110,null],[12,"name","","Name of the feature.",110,null],[4,"Target","cargo::ops::tree","",null,null],[13,"Host","","",111,null],[13,"Specific","","",111,null],[13,"All","","",111,null],[4,"Charset","","",null,null],[13,"Utf8","","",112,null],[13,"Ascii","","",112,null],[4,"Prefix","","",null,null],[13,"None","","",113,null],[13,"Indent","","",113,null],[13,"Depth","","",113,null],[5,"build_and_print","","Entry point for the `cargo tree` command.",null,[[["workspace"],["treeoptions"]],["cargoresult"]]],[11,"from_cli","","",111,[[["vec",["string"]],["string"]],["target"]]],[0,"sources","cargo","",null,null],[3,"GitSource","cargo::sources","",null,null],[0,"config","","Implementation of configuration for various sources",null,null],[3,"SourceConfigMap","cargo::sources::config","",null,null],[11,"new","","",114,[[["config"]],[["cargoresult",["sourceconfigmap"]],["sourceconfigmap"]]]],[11,"empty","","",114,[[["config"]],[["cargoresult",["sourceconfigmap"]],["sourceconfigmap"]]]],[11,"config","","",114,[[["self"]],["config"]]],[11,"load","","Get the `Source` for a given `SourceId`.",114,[[["hashset"],["self"],["sourceid"]],[["box",["source"]],["cargoresult",["box"]]]]],[0,"directory","cargo::sources","",null,null],[3,"DirectorySource","cargo::sources::directory","",null,null],[11,"new","","",115,[[["path"],["sourceid"],["config"]],["directorysource"]]],[0,"git","cargo::sources","",null,null],[3,"GitSource","cargo::sources::git","",null,null],[3,"GitCheckout","","`GitCheckout` is a local checkout of a particular…",null,null],[3,"GitDatabase","","`GitDatabase` is a local clone of a remote repository's…",null,null],[3,"GitRemote","","`GitRemote` represents a remote repository. It gets cloned…",null,null],[3,"GitRevision","","",null,null],[5,"fetch","","",null,[[["str"],["config"],["repository"]],["cargoresult"]]],[11,"new","cargo::sources","",116,[[["sourceid"],["config"]],[["cargoresult",["gitsource"]],["gitsource"]]]],[11,"url","","",116,[[["self"]],["url"]]],[11,"read_packages","","",116,[[["self"]],[["cargoresult",["vec"]],["vec",["package"]]]]],[11,"new","cargo::sources::git","",117,[[["url"]],["gitremote"]]],[11,"url","","",117,[[["self"]],["url"]]],[11,"rev_for","","",117,[[["path"],["self"],["gitreference"]],[["cargoresult",["gitrevision"]],["gitrevision"]]]],[11,"checkout","","",117,[[["path"],["config"],["gitreference"],["self"]],["cargoresult"]]],[11,"db_at","","",117,[[["path"],["self"]],[["gitdatabase"],["cargoresult",["gitdatabase"]]]]],[11,"copy_to","","",118,[[["path"],["config"],["self"],["gitrevision"]],[["gitcheckout"],["cargoresult",["gitcheckout"]]]]],[11,"to_short_id","","",118,[[["self"],["gitrevision"]],[["cargoresult",["gitshortid"]],["gitshortid"]]]],[11,"has_ref","","",118,[[["str"],["self"]],["cargoresult"]]],[0,"path","cargo::sources","",null,null],[3,"PathSource","cargo::sources::path","",null,null],[11,"new","","Invoked with an absolute path to a directory that contains…",119,[[["path"],["sourceid"],["config"]],["pathsource"]]],[11,"new_recursive","","Creates a new source which is walked recursively to…",119,[[["path"],["sourceid"],["config"]],["pathsource"]]],[11,"preload_with","","",119,[[["self"],["package"]]]],[11,"root_package","","",119,[[["self"]],[["package"],["cargoresult",["package"]]]]],[11,"read_packages","","",119,[[["self"]],[["cargoresult",["vec"]],["vec",["package"]]]]],[11,"list_files","","List all files relevant to building this package inside…",119,[[["self"],["package"]],[["cargoresult",["vec"]],["vec",["pathbuf"]]]]],[11,"last_modified_file","","",119,[[["self"],["package"]],["cargoresult"]]],[11,"path","","",119,[[["self"]],["path"]]],[0,"registry","cargo::sources","A `Source` for registry-based packages.",null,null],[3,"RegistrySource","cargo::sources::registry","",null,null],[3,"RegistryConfig","","",null,null],[12,"dl","","Download endpoint for all crates.",120,null],[12,"api","","API endpoint for the registry. This is what's actually hit…",120,null],[3,"RegistryPackage","","A single line in the index representing a single version…",null,null],[4,"MaybeLock","","",null,null],[13,"Ready","","",121,null],[13,"Download","","",121,null],[12,"url","cargo::sources::registry::MaybeLock","",122,null],[12,"descriptor","","",122,null],[17,"CRATES_IO_INDEX","cargo::sources::registry","",null,null],[17,"CRATES_IO_REGISTRY","","",null,null],[8,"RegistryData","","",null,null],[10,"prepare","","",123,[[["self"]],["cargoresult"]]],[10,"index_path","","",123,[[["self"]],["filesystem"]]],[10,"load","","",123,[[["path"],["self"],["fnmut"]],["cargoresult"]]],[10,"config","","",123,[[["self"]],[["option",["registryconfig"]],["cargoresult",["option"]]]]],[10,"update_index","","",123,[[["self"]],["cargoresult"]]],[10,"download","","",123,[[["str"],["self"],["packageid"]],[["cargoresult",["maybelock"]],["maybelock"]]]],[10,"finish_download","","",123,[[["str"],["packageid"],["self"]],[["cargoresult",["file"]],["file"]]]],[11,"is_crate_downloaded","","",123,[[["self"],["packageid"]],["bool"]]],[10,"assert_index_locked","","",123,[[["self"],["filesystem"]],["path"]]],[10,"current_version","","",123,[[["self"]],[["internedstring"],["option",["internedstring"]]]]],[11,"remote","","",124,[[["config"],["sourceid"],["hashset"]],["registrysource"]]],[11,"local","","",124,[[["path"],["sourceid"],["hashset"],["config"]],["registrysource"]]],[11,"config","","Decode the configuration stored within the registry.",124,[[["self"]],[["option",["registryconfig"]],["cargoresult",["option"]]]]],[0,"replaced","cargo::sources","",null,null],[3,"ReplacedSource","cargo::sources::replaced","",null,null],[11,"new","","",125,[[["box",["source"]],["source"],["sourceid"]],["replacedsource"]]],[0,"util","cargo","",null,null],[3,"CanonicalUrl","cargo::util","A newtype wrapper around `Url` which represents a…",null,null],[3,"DependencyQueue","","",null,null],[3,"FileLock","","",null,null],[3,"Filesystem","","A \"filesystem\" is intended to be a globally shared, hence…",null,null],[3,"LockServer","","",null,null],[3,"LockServerClient","","",null,null],[3,"LockServerStarted","","",null,null],[3,"Progress","","",null,null],[3,"Queue","","A simple, threadsafe, queue of items of type `T`",null,null],[3,"Sha256","","",null,null],[3,"FossilRepo","","",null,null],[3,"GitRepo","","",null,null],[3,"HgRepo","","",null,null],[3,"PijulRepo","","",null,null],[4,"ProgressStyle","","",null,null],[13,"Percentage","","",126,null],[13,"Ratio","","",126,null],[5,"read2","","",null,[[["childstdout"],["fnmut"],["childstderr"]],["result"]]],[5,"existing_vcs_repo","","",null,[[["path"]],["bool"]]],[5,"print_available_benches","","",null,[[["workspace"],["compileoptions"]],["cargoresult"]]],[5,"print_available_binaries","","",null,[[["workspace"],["compileoptions"]],["cargoresult"]]],[5,"print_available_examples","","",null,[[["workspace"],["compileoptions"]],["cargoresult"]]],[5,"print_available_tests","","",null,[[["workspace"],["compileoptions"]],["cargoresult"]]],[5,"elapsed","","",null,[[["duration"]],["string"]]],[5,"is_ci","","Whether or not this running in a Continuous Integration…",null,[[],["bool"]]],[11,"new","","",127,[[["url"]],[["canonicalurl"],["cargoresult",["canonicalurl"]]]]],[11,"raw_canonicalized_url","","Returns the raw canonicalized URL, although beware that…",127,[[["self"]],["url"]]],[0,"command_prelude","","",null,null],[4,"AppSettings","cargo::util::command_prelude","Application level settings, which affect how [`App`]…",null,null],[13,"AllowInvalidUtf8","","Specifies that any invalid UTF-8 code points should not be…",128,null],[13,"AllArgsOverrideSelf","","Essentially sets [`Arg::overrides_with(\"itself\")`] for all…",128,null],[13,"AllowLeadingHyphen","","Specifies that leading hyphens are allowed in argument…",128,null],[13,"AllowNegativeNumbers","","Allows negative numbers to pass as values. This is similar…",128,null],[13,"AllowMissingPositional","","Allows one to implement two styles of CLIs where…",128,null],[13,"AllowExternalSubcommands","","Specifies that an unexpected positional argument, which…",128,null],[13,"ArgsNegateSubcommands","","Specifies that use of a valid [argument] negates…",128,null],[13,"ArgRequiredElseHelp","","Specifies that the help text should be displayed (and then…",128,null],[13,"ColoredHelp","","Uses colorized help messages.",128,null],[13,"ColorAuto","","Enables colored output only when the output is going to a…",128,null],[13,"ColorAlways","","Enables colored output regardless of whether or not the…",128,null],[13,"ColorNever","","Disables colored output no matter if the output is going…",128,null],[13,"DontCollapseArgsInUsage","","Disables the automatic collapsing of positional args into…",128,null],[13,"DontDelimitTrailingValues","","Disables the automatic delimiting of values when `--` or…",128,null],[13,"DisableHelpFlags","","Disables `-h` and `--help` [`App`] without affecting any…",128,null],[13,"DisableHelpSubcommand","","Disables the `help` subcommand",128,null],[13,"DisableVersion","","Disables `-V` and `--version` [`App`] without affecting…",128,null],[13,"DeriveDisplayOrder","","Displays the arguments and [`SubCommand`]s in the help…",128,null],[13,"GlobalVersion","","Specifies to use the version of the current command for…",128,null],[13,"Hidden","","Specifies that this [`SubCommand`] should be hidden from…",128,null],[13,"HidePossibleValuesInHelp","","Tells `clap` not to print possible values when displaying…",128,null],[13,"InferSubcommands","","Tries to match unknown args to partial [`subcommands`] or…",128,null],[13,"NoBinaryName","","Specifies that the parser should not assume the first…",128,null],[13,"NextLineHelp","","Places the help string for all arguments on the line after…",128,null],[13,"PropagateGlobalValuesDown","","DEPRECATED: This setting is no longer required in order to…",128,null],[13,"SubcommandsNegateReqs","","Allows [`SubCommand`]s to override all requirements of the…",128,null],[13,"SubcommandRequiredElseHelp","","Specifies that the help text should be displayed (before…",128,null],[13,"StrictUtf8","","Specifies that any invalid UTF-8 code points should be…",128,null],[13,"SubcommandRequired","","Allows specifying that if no [`SubCommand`] is present at…",128,null],[13,"TrailingVarArg","","Specifies that the final positional argument is a \"VarArg\"…",128,null],[13,"UnifiedHelpMessage","","Groups flags and options together, presenting a more…",128,null],[13,"VersionlessSubcommands","","Disables `-V` and `--version` for all [`SubCommand`]s…",128,null],[13,"WaitOnError","","Will display a message \"Press [ENTER]/[RETURN] to…",128,null],[3,"Arg","","The abstract representation of a command line argument.…",null,null],[3,"ArgMatches","","Used to get information about the arguments that were…",null,null],[4,"CompileMode","","The general \"mode\" for what to do. This is used for two…",null,null],[13,"Test","","A target being built for a test.",16,null],[13,"Build","","Building a target with `rustc` (lib or bin).",16,null],[13,"Check","","Building a target with `rustc` to emit `rmeta` metadata…",16,null],[12,"test","cargo::util::command_prelude::CompileMode","",17,null],[13,"Bench","cargo::util::command_prelude","Used to indicate benchmarks should be built. This is not…",16,null],[13,"Doc","","A target that will be documented with `rustdoc`. If `deps`…",16,null],[12,"deps","cargo::util::command_prelude::CompileMode","",18,null],[13,"Doctest","cargo::util::command_prelude","A target that will be tested with `rustdoc`.",16,null],[13,"RunCustomBuild","","A marker for Units that represent the execution of a…",16,null],[4,"ProfileChecking","","",null,null],[13,"Checked","","",129,null],[13,"Unchecked","","",129,null],[4,"CommandInfo","","",null,null],[13,"BuiltIn","","",130,null],[12,"name","cargo::util::command_prelude::CommandInfo","",131,null],[12,"about","","",131,null],[13,"External","cargo::util::command_prelude","",130,null],[12,"name","cargo::util::command_prelude::CommandInfo","",132,null],[12,"path","","",132,null],[5,"opt","cargo::util::command_prelude","",null,[[["str"]],["arg"]]],[5,"optional_multi_opt","","",null,[[["str"]],["arg"]]],[5,"multi_opt","","",null,[[["str"]],["arg"]]],[5,"subcommand","","",null,[[["str"]],["app"]]],[5,"values","","",null,[[["argmatches"],["str"]],[["vec",["string"]],["string"]]]],[5,"values_os","","",null,[[["argmatches"],["str"]],[["osstring"],["vec",["osstring"]]]]],[6,"App","","",null,null],[8,"AppExt","","",null,null],[10,"_arg","","",133,[[["arg"]],["self"]]],[11,"arg_package_spec","","",133,[[["str"]],["self"]]],[11,"arg_package_spec_no_all","","Variant of arg_package_spec that does not include the…",133,[[["str"]],["self"]]],[11,"arg_package_spec_simple","","",133,[[["str"]],["self"]]],[11,"arg_package","","",133,[[["str"]],["self"]]],[11,"arg_jobs","","",133,[[],["self"]]],[11,"arg_targets_all","","",133,[[["str"]],["self"]]],[11,"arg_targets_lib_bin","","",133,[[["str"]],["self"]]],[11,"arg_targets_bins_examples","","",133,[[["str"]],["self"]]],[11,"arg_targets_bin_example","","",133,[[["str"]],["self"]]],[11,"arg_features","","",133,[[],["self"]]],[11,"arg_release","","",133,[[["str"]],["self"]]],[11,"arg_profile","","",133,[[["str"]],["self"]]],[11,"arg_doc","","",133,[[["str"]],["self"]]],[11,"arg_target_triple","","",133,[[["str"]],["self"]]],[11,"arg_target_dir","","",133,[[],["self"]]],[11,"arg_manifest_path","","",133,[[],["self"]]],[11,"arg_message_format","","",133,[[],["self"]]],[11,"arg_build_plan","","",133,[[],["self"]]],[11,"arg_unit_graph","","",133,[[],["self"]]],[11,"arg_new_opts","","",133,[[],["self"]]],[11,"arg_index","","",133,[[],["self"]]],[11,"arg_dry_run","","",133,[[["str"]],["self"]]],[8,"ArgMatchesExt","","",null,null],[11,"value_of_u32","","",134,[[["str"],["self"]],[["option",["u32"]],["cargoresult",["option"]]]]],[11,"value_of_path","","Returns value of the `name` command-line argument as an…",134,[[["str"],["config"],["self"]],[["pathbuf"],["option",["pathbuf"]]]]],[11,"root_manifest","","",134,[[["config"],["self"]],[["pathbuf"],["cargoresult",["pathbuf"]]]]],[11,"workspace","","",134,[[["config"],["self"]],[["workspace"],["cargoresult",["workspace"]]]]],[11,"jobs","","",134,[[["self"]],[["option",["u32"]],["cargoresult",["option"]]]]],[11,"targets","","",134,[[["self"]],[["vec",["string"]],["string"]]]],[11,"get_profile_name","","",134,[[["str"],["config"],["profilechecking"],["self"]],[["internedstring"],["cargoresult",["internedstring"]]]]],[11,"packages_from_flags","","",134,[[["self"]],[["packages"],["cargoresult",["packages"]]]]],[11,"compile_options","","",134,[[["workspace"],["compilemode"],["option",["workspace"]],["config"],["profilechecking"],["self"]],[["cargoresult",["compileoptions"]],["compileoptions"]]]],[11,"compile_options_for_single_package","","",134,[[["workspace"],["compilemode"],["option",["workspace"]],["config"],["profilechecking"],["self"]],[["cargoresult",["compileoptions"]],["compileoptions"]]]],[11,"new_options","","",134,[[["config"],["self"]],[["newoptions"],["cargoresult",["newoptions"]]]]],[11,"registry","","",134,[[["config"],["self"]],[["cargoresult",["option"]],["option",["string"]]]]],[11,"index","","",134,[[["config"],["self"]],[["cargoresult",["option"]],["option",["string"]]]]],[11,"check_optional_opts","","",134,[[["workspace"],["self"],["compileoptions"]],["cargoresult"]]],[11,"is_present_with_zero_values","","",134,[[["str"],["self"]],["bool"]]],[10,"_value_of","","",134,[[["str"],["self"]],[["str"],["option",["str"]]]]],[10,"_values_of","","",134,[[["str"],["self"]],[["vec",["string"]],["string"]]]],[10,"_value_of_os","","",134,[[["str"],["self"]],[["osstr"],["option",["osstr"]]]]],[10,"_values_of_os","","",134,[[["str"],["self"]],[["osstring"],["vec",["osstring"]]]]],[10,"_is_present","","",134,[[["str"],["self"]],["bool"]]],[11,"name","","",130,[[["self"]],["str"]]],[0,"config","cargo::util","Cargo's config system.",null,null],[3,"Value","cargo::util::config","A type which can be deserialized as a configuration value…",null,null],[12,"val","","The inner value that was deserialized.",135,null],[12,"definition","","The location where `val` was defined in configuration…",135,null],[3,"ConfigRelativePath","","Use with the `get` API to fetch a string that will be…",null,null],[3,"PathAndArgs","","A config type that is a program to run.",null,null],[12,"path","","",136,null],[12,"args","","",136,null],[3,"TargetCfgConfig","","Config definition of a `[target.'cfg(…)']` table.",null,null],[12,"runner","","",137,null],[12,"rustflags","","",137,null],[12,"other","","",137,null],[3,"TargetConfig","","Config definition of a `[target]` table.",null,null],[12,"runner","","Process to run as a wrapper for `cargo run`, `test`, and…",138,null],[12,"rustflags","","Additional rustc flags to pass.",138,null],[12,"linker","","The path of the linker for this target.",138,null],[12,"links_overrides","","Build script override for the given library name.",138,null],[3,"Config","","Configuration information for cargo. This is not specific…",null,null],[3,"ConfigError","","Internal error for serde errors.",null,null],[3,"PackageCacheLock","","",null,null],[3,"CargoHttpConfig","","",null,null],[12,"proxy","","",139,null],[12,"low_speed_limit","","",139,null],[12,"timeout","","",139,null],[12,"cainfo","","",139,null],[12,"check_revoke","","",139,null],[12,"user_agent","","",139,null],[12,"debug","","",139,null],[12,"multiplexing","","",139,null],[12,"ssl_version","","",139,null],[3,"SslVersionConfigRange","","",null,null],[12,"min","","",140,null],[12,"max","","",140,null],[3,"CargoNetConfig","","",null,null],[12,"retry","","",141,null],[12,"offline","","",141,null],[12,"git_fetch_with_cli","","",141,null],[3,"CargoBuildConfig","","",null,null],[12,"pipelining","","",142,null],[12,"dep_info_basedir","","",142,null],[12,"target_dir","","",142,null],[12,"incremental","","",142,null],[12,"target","","",142,null],[12,"jobs","","",142,null],[12,"rustflags","","",142,null],[12,"rustdocflags","","",142,null],[12,"rustc_wrapper","","",142,null],[12,"rustc_workspace_wrapper","","",142,null],[12,"rustc","","",142,null],[12,"rustdoc","","",142,null],[12,"out_dir","","",142,null],[3,"StringList","","A type to deserialize a list of strings from a toml file.",null,null],[4,"Definition","","Location where a config value is defined.",null,null],[13,"Path","","Defined in a `.cargo/config`, includes the path to the file.",143,null],[13,"Environment","","Defined in an environment variable, includes the…",143,null],[13,"Cli","","Passed in on the command line.",143,null],[4,"ConfigValue","","",null,null],[13,"Integer","","",144,null],[13,"String","","",144,null],[13,"List","","",144,null],[13,"Table","","",144,null],[13,"Boolean","","",144,null],[4,"SslVersionConfig","","Configuration for `ssl-version` in `http` section There…",null,null],[13,"Single","","",145,null],[13,"Range","","",145,null],[5,"homedir","","",null,[[["path"]],[["pathbuf"],["option",["pathbuf"]]]]],[5,"save_credentials","","",null,[[["config"],["option",["string"]],["string"]],["cargoresult"]]],[11,"root","","Root directory where this is defined.",143,[[["config"],["self"]],["path"]]],[11,"is_higher_priority","","Returns true if self is a higher priority to other.",143,[[["self"],["definition"]],["bool"]]],[11,"raw_value","","Returns the raw underlying configuration value for this key.",146,[[["self"]],["str"]]],[11,"resolve_path","","Resolves this configuration-relative path to an absolute…",146,[[["config"],["self"]],["pathbuf"]]],[11,"resolve_program","","Resolves this configuration-relative path to either an…",146,[[["config"]],["pathbuf"]]],[6,"OptValue","","",null,null],[11,"new","","Creates a new config instance.",147,[[["pathbuf"],["shell"]],["config"]]],[11,"default","","Creates a new Config instance, with all default settings.",147,[[],[["config"],["cargoresult",["config"]]]]],[11,"home","","Gets the user's Cargo home directory (OS-dependent).",147,[[["self"]],["filesystem"]]],[11,"git_path","","Gets the Cargo Git directory (`<cargo_home>/git`).",147,[[["self"]],["filesystem"]]],[11,"registry_index_path","","Gets the Cargo registry index directory…",147,[[["self"]],["filesystem"]]],[11,"registry_cache_path","","Gets the Cargo registry cache directory…",147,[[["self"]],["filesystem"]]],[11,"registry_source_path","","Gets the Cargo registry source directory…",147,[[["self"]],["filesystem"]]],[11,"default_registry","","Gets the default Cargo registry.",147,[[["self"]],[["cargoresult",["option"]],["option",["string"]]]]],[11,"shell","","Gets a reference to the shell, e.g., for writing error…",147,[[["self"]],[["refmut",["shell"]],["shell"]]]],[11,"rustdoc","","Gets the path to the `rustdoc` executable.",147,[[["self"]],[["cargoresult",["path"]],["path"]]]],[11,"load_global_rustc","","Gets the path to the `rustc` executable.",147,[[["workspace"],["self"],["option",["workspace"]]],[["cargoresult",["rustc"]],["rustc"]]]],[11,"cargo_exe","","Gets the path to the `cargo` executable.",147,[[["self"]],[["cargoresult",["path"]],["path"]]]],[11,"updated_sources","","Which package sources have been updated, used to ensure it…",147,[[["self"]],[["hashset",["sourceid"]],["refmut",["hashset"]]]]],[11,"values","","Gets all config values from disk.",147,[[["self"]],[["cargoresult",["hashmap"]],["hashmap"]]]],[11,"values_mut","","Gets a mutable copy of the on-disk config values.",147,[[["self"]],[["hashmap"],["cargoresult",["hashmap"]]]]],[11,"set_values","","",147,[[["string"],["hashmap",["string","configvalue"]],["self"],["configvalue"]],["cargoresult"]]],[11,"reload_rooted_at","","Reloads on-disk configuration values, starting at the…",147,[[["path"],["self"],["asref",["path"]]],["cargoresult"]]],[11,"cwd","","The current working directory.",147,[[["self"]],["path"]]],[11,"target_dir","","The `target` output directory to use.",147,[[["self"]],[["cargoresult",["option"]],["option",["filesystem"]]]]],[11,"set_env","","Helper primarily for testing.",147,[[["self"],["hashmap",["string","string"]],["string"]]]],[11,"get_string","","Get a string config value.",147,[[["str"],["self"]],[["optvalue",["string"]],["cargoresult",["optvalue"]]]]],[11,"get_path","","Get a config value that is expected to be a path.",147,[[["str"],["self"]],[["cargoresult",["optvalue"]],["optvalue",["pathbuf"]]]]],[11,"get_list","","Get a list of strings.",147,[[["str"],["self"]],[["optvalue",["vec"]],["cargoresult",["optvalue"]]]]],[11,"configure","","Update the Config instance based on settings typically…",147,[[["u32"],["option",["str"]],["option"],["bool"],["str"],["self"]],["cargoresult"]]],[11,"cli_unstable","","",147,[[["self"]],["cliunstable"]]],[11,"extra_verbose","","",147,[[["self"]],["bool"]]],[11,"network_allowed","","",147,[[["self"]],["bool"]]],[11,"offline","","",147,[[["self"]],["bool"]]],[11,"frozen","","",147,[[["self"]],["bool"]]],[11,"lock_update_allowed","","",147,[[["self"]],["bool"]]],[11,"load_values","","Loads configuration from the filesystem.",147,[[["self"]],[["cargoresult",["hashmap"]],["hashmap",["string","configvalue"]]]]],[11,"get_registry_index","","Gets the index for a registry.",147,[[["str"],["self"]],[["cargoresult",["url"]],["url"]]]],[11,"check_registry_index_not_set","","Returns an error if `registry.index` is set.",147,[[["self"]],["cargoresult"]]],[11,"load_credentials","","Loads credentials config from the credentials file, if…",147,[[["self"]],["cargoresult"]]],[11,"jobserver_from_env","","",147,[[["self"]],[["client"],["option",["client"]]]]],[11,"http","","",147,[[["self"]],[["refcell"],["cargoresult",["refcell"]]]]],[11,"http_config","","",147,[[["self"]],[["cargohttpconfig"],["cargoresult",["cargohttpconfig"]]]]],[11,"net_config","","",147,[[["self"]],[["cargoresult",["cargonetconfig"]],["cargonetconfig"]]]],[11,"build_config","","",147,[[["self"]],[["cargoresult",["cargobuildconfig"]],["cargobuildconfig"]]]],[11,"target_cfgs","","Returns a list of [target.'cfg()'] tables.",147,[[["self"]],[["cargoresult",["vec"]],["vec"]]]],[11,"target_cfg_triple","","Returns the `[target]` table definition for the given…",147,[[["str"],["self"]],[["cargoresult",["targetconfig"]],["targetconfig"]]]],[11,"crates_io_source_id","","",147,[[["self"],["f"]],[["sourceid"],["cargoresult",["sourceid"]]]]],[11,"creation_time","","",147,[[["self"]],["instant"]]],[11,"get","","Retrieves a config variable.",147,[[["str"],["self"]],[["cargoresult"],["deserialize"]]]],[11,"assert_package_cache_locked","","",147,[[["self"],["filesystem"]],["path"]]],[11,"acquire_package_cache_lock","","Acquires an exclusive lock on the global \"package cache\"",147,[[["self"]],[["cargoresult",["packagecachelock"]],["packagecachelock"]]]],[11,"release_package_cache_lock","","",147,[[["self"]]]],[11,"i64","","",144,[[["str"],["self"]],["cargoresult"]]],[11,"string","","",144,[[["str"],["self"]],["cargoresult"]]],[11,"table","","",144,[[["str"],["self"]],["cargoresult"]]],[11,"list","","",144,[[["str"],["self"]],["cargoresult"]]],[11,"boolean","","",144,[[["str"],["self"]],["cargoresult"]]],[11,"desc","","",144,[[["self"]],["str"]]],[11,"definition","","",144,[[["self"]],["definition"]]],[11,"as_slice","","",148,[[["self"]]]],[0,"cpu","cargo::util","",null,null],[3,"State","cargo::util::cpu","",null,null],[11,"current","","Captures the current state of all CPUs on the system.",149,[[],[["state"],["result",["state"]]]]],[11,"idle_since","","Returns the percentage of time CPUs were idle from the…",149,[[["state"],["self"]],["f64"]]],[11,"new","cargo::util","Creates a new dependency queue with 0 packages.",150,[[],["dependencyqueue"]]],[11,"queue","","Adds a new ndoe and its dependencies to this queue.",150,[[["n"],["self"],["v"]]]],[11,"queue_finished","","All nodes have been added, calculate some internal…",150,[[["self"]]]],[11,"dequeue","","Dequeues a package that is ready to be built.",150,[[["self"]],["option"]]],[11,"is_empty","","Returns `true` if there are remaining packages to be built.",150,[[["self"]],["bool"]]],[11,"len","","Returns the number of remaining packages to be built.",150,[[["self"]],["usize"]]],[11,"finish","","Indicate that something has finished.",150,[[["self"],["n"],["e"]],[["vec"],["n"]]]],[0,"diagnostic_server","","A small TCP server to handle collection of diagnostics…",null,null],[3,"DiagnosticPrinter","cargo::util::diagnostic_server","",null,null],[3,"RustfixDiagnosticServer","","",null,null],[3,"StartedServer","","",null,null],[4,"Message","","",null,null],[13,"Fixing","","",151,null],[12,"file","cargo::util::diagnostic_server::Message","",152,null],[12,"fixes","","",152,null],[13,"FixFailed","cargo::util::diagnostic_server","",151,null],[12,"files","cargo::util::diagnostic_server::Message","",153,null],[12,"krate","","",153,null],[12,"errors","","",153,null],[13,"ReplaceFailed","cargo::util::diagnostic_server","",151,null],[12,"file","cargo::util::diagnostic_server::Message","",154,null],[12,"message","","",154,null],[13,"EditionAlreadyEnabled","cargo::util::diagnostic_server","",151,null],[12,"file","cargo::util::diagnostic_server::Message","",155,null],[12,"edition","","",155,null],[13,"IdiomEditionMismatch","cargo::util::diagnostic_server","",151,null],[12,"file","cargo::util::diagnostic_server::Message","",156,null],[12,"idioms","","",156,null],[12,"edition","","",156,null],[11,"post","cargo::util::diagnostic_server","",151,[[["self"]],[["result",["error"]],["error"]]]],[11,"new","","",157,[[["config"]],["diagnosticprinter"]]],[11,"print","","",157,[[["self"],["message"]],["cargoresult"]]],[11,"new","","",158,[[],[["result",["error"]],["error"]]]],[11,"configure","","",158,[[["self"],["processbuilder"]]]],[11,"start","","",158,[[["f"]],[["startedserver"],["error"],["result",["startedserver","error"]]]]],[0,"errors","cargo::util","",null,null],[3,"HttpNot200","cargo::util::errors","",null,null],[12,"code","","",159,null],[12,"url","","",159,null],[3,"VerboseError","","An error wrapper for errors that should only be displayed…",null,null],[3,"InternalError","","An unexpected, internal error.",null,null],[3,"ManifestError","","Error wrapper related to a particular manifest and…",null,null],[3,"ManifestCauses","","An iterator over the `ManifestError` chain of causes.",null,null],[3,"ProcessError","","",null,null],[12,"desc","","A detailed description to show to the user why the process…",160,null],[12,"exit","","The exit status of the process.",160,null],[12,"output","","The output from the process.",160,null],[3,"CargoTestError","","Error when testcases fail",null,null],[12,"test","","",161,null],[12,"desc","","",161,null],[12,"exit","","",161,null],[12,"causes","","",161,null],[3,"CliError","","The CLI error is the error type used at Cargo's CLI-layer.",null,null],[12,"error","","The error to display. This can be `None` in rare cases to…",162,null],[12,"exit_code","","The process exit code.",162,null],[4,"Test","","",null,null],[13,"Multiple","","",163,null],[13,"Doc","","",163,null],[13,"UnitTest","","",163,null],[12,"kind","cargo::util::errors::Test","",164,null],[12,"name","","",164,null],[12,"pkg_name","","",164,null],[5,"process_error","cargo::util::errors","Creates a new process error.",null,[[["str"],["output"],["option",["output"]],["option",["exitstatus"]],["exitstatus"]],["processerror"]]],[5,"is_simple_exit_code","","",null,[[["i32"]],["bool"]]],[5,"internal","","",null,[[["display"]],["error"]]],[6,"CargoResult","","",null,null],[6,"CliResult","","",null,null],[8,"CargoResultExt","","",null,null],[10,"chain_err","","",165,[[["f"]],["cargoresult"]]],[11,"new","","",166,[[["error"]],["verboseerror"]]],[11,"new","","",167,[[["error"]],["internalerror"]]],[11,"new","","",168,[[["into",["error"]],["pathbuf"],["error"]],["self"]]],[11,"manifest_path","","",168,[[["self"]],["pathbuf"]]],[11,"manifest_causes","","Returns an iterator over the `ManifestError` chain of…",168,[[["self"]],["manifestcauses"]]],[11,"new","","",161,[[["vec",["processerror"]],["test"],["processerror"]],["self"]]],[11,"hint","","",161,[[["workspace"],["self"],["compileoptions"]],["string"]]],[11,"new","","",162,[[["error"],["i32"]],["clierror"]]],[11,"code","","",162,[[["i32"]],["clierror"]]],[11,"file","cargo::util","Returns the underlying file handle of this lock.",169,[[["self"]],["file"]]],[11,"path","","Returns the underlying path that this lock points to.",169,[[["self"]],["path"]]],[11,"parent","","Returns the parent path containing this file",169,[[["self"]],["path"]]],[11,"remove_siblings","","Removes all sibling files to this locked file.",169,[[["self"]],["cargoresult"]]],[11,"new","","Creates a new filesystem to be rooted at the given path.",170,[[["pathbuf"]],["filesystem"]]],[11,"join","","Like `Path::join`, creates a new filesystem rooted at this…",170,[[["path"],["self"],["asref",["path"]]],["filesystem"]]],[11,"push","","Like `Path::push`, pushes a new path component onto this…",170,[[["path"],["self"],["asref",["path"]]]]],[11,"into_path_unlocked","","Consumes this filesystem and returns the underlying…",170,[[],["pathbuf"]]],[11,"as_path_unlocked","","Returns the underlying `Path`.",170,[[["self"]],["path"]]],[11,"create_dir","","Creates the directory pointed to by this filesystem.",170,[[["self"]],["cargoresult"]]],[11,"display","","Returns an adaptor that can be used to print the path of…",170,[[["self"]],["display"]]],[11,"open_rw","","Opens exclusive access to a file, returning the locked…",170,[[["str"],["p"],["config"],["self"]],[["cargoresult",["filelock"]],["filelock"]]]],[11,"open_ro","","Opens shared access to a file, returning the locked…",170,[[["str"],["p"],["config"],["self"]],[["cargoresult",["filelock"]],["filelock"]]]],[0,"graph","","",null,null],[3,"Graph","cargo::util::graph","",null,null],[11,"new","","",171,[[],["graph"]]],[11,"add","","",171,[[["self"],["n"]]]],[11,"link","","",171,[[["self"],["n"]],["e"]]],[11,"contains","","",171,[[["self"],["q"]],["bool"]]],[11,"edge","","",171,[[["self"],["n"]],[["option"],["e"]]]],[11,"edges","","",171,[[["self"],["n"]]]],[11,"sort","","A topological sort of the `Graph`",171,[[["self"]],["vec"]]],[11,"iter","","",171,[[["self"]]]],[11,"is_path_from_to","","Checks if there is a path from `from` to `to`.",171,[[["self"],["n"]],["bool"]]],[11,"path_to_bottom","","Resolves one of the paths from the given dependent package…",171,[[["self"],["n"]],[["vec"],["n"]]]],[11,"path_to_top","","Resolves one of the paths from the given dependent package…",171,[[["self"],["n"]],[["vec"],["n"]]]],[0,"hex","cargo::util","",null,null],[5,"to_hex","cargo::util::hex","",null,[[["u64"]],["string"]]],[5,"hash_u64","","",null,[[["hash"]],["u64"]]],[5,"hash_u64_file","","",null,[[["file"]],[["result",["u64"]],["u64"]]]],[5,"short_hash","","",null,[[["h"]],["string"]]],[0,"important_paths","cargo::util","",null,null],[5,"find_root_manifest_for_wd","cargo::util::important_paths","Finds the root `Cargo.toml`.",null,[[["path"]],[["pathbuf"],["cargoresult",["pathbuf"]]]]],[5,"find_project_manifest_exact","","Returns the path to the `file` in `pwd`, if it exists.",null,[[["str"],["path"]],[["pathbuf"],["cargoresult",["pathbuf"]]]]],[0,"into_url","cargo::util","",null,null],[8,"IntoUrl","cargo::util::into_url","A type that can be converted to a Url",null,null],[10,"into_url","","Performs the conversion",172,[[],[["cargoresult",["url"]],["url"]]]],[0,"job","cargo::util","Job management (mostly for windows)",null,null],[5,"setup","cargo::util::job","",null,[[],[["option",["setup"]],["setup"]]]],[6,"Setup","","",null,null],[0,"lev_distance","cargo::util","",null,null],[5,"lev_distance","cargo::util::lev_distance","",null,[[["str"]],["usize"]]],[5,"closest","","Find the closest element from `iter` matching `choice`.…",null,[[["str"]],["option"]]],[5,"closest_msg","","Version of `closest` that returns a common \"suggestion\"…",null,[[["str"]],["string"]]],[11,"new","cargo::util","",173,[[],[["lockserver"],["error"],["result",["lockserver","error"]]]]],[11,"addr","","",173,[[["self"]],["socketaddr"]]],[11,"start","","",173,[[],[["result",["lockserverstarted","error"]],["lockserverstarted"],["error"]]]],[11,"lock","","",174,[[["socketaddr"]],[["error"],["lockserverclient"],["result",["lockserverclient","error"]]]]],[0,"machine_message","","",null,null],[3,"FromCompiler","cargo::util::machine_message","",null,null],[12,"package_id","","",175,null],[12,"target","","",175,null],[12,"message","","",175,null],[3,"Artifact","","",null,null],[12,"package_id","","",176,null],[12,"target","","",176,null],[12,"profile","","",176,null],[12,"features","","",176,null],[12,"filenames","","",176,null],[12,"executable","","",176,null],[12,"fresh","","",176,null],[3,"ArtifactProfile","","This is different from the regular `Profile` to maintain…",null,null],[12,"opt_level","","",177,null],[12,"debuginfo","","",177,null],[12,"debug_assertions","","",177,null],[12,"overflow_checks","","",177,null],[12,"test","","",177,null],[3,"BuildScript","","",null,null],[12,"package_id","","",178,null],[12,"linked_libs","","",178,null],[12,"linked_paths","","",178,null],[12,"cfgs","","",178,null],[12,"env","","",178,null],[12,"out_dir","","",178,null],[3,"TimingInfo","","",null,null],[12,"package_id","","",179,null],[12,"target","","",179,null],[12,"mode","","",179,null],[12,"duration","","",179,null],[12,"rmeta_time","","",179,null],[3,"BuildFinished","","",null,null],[12,"success","","",180,null],[8,"Message","","",null,null],[10,"reason","","",181,[[["self"]],["str"]]],[11,"to_json_string","","",181,[[["self"]],["string"]]],[0,"network","cargo::util","",null,null],[3,"Retry","cargo::util::network","",null,null],[5,"with_retry","","Wrapper method for network call retry logic.",null,[[["config"],["f"]],["cargoresult"]]],[11,"new","","",182,[[["config"]],[["cargoresult",["retry"]],["retry"]]]],[11,"try","","",182,[[["self"]],[["cargoresult",["option"]],["option"]]]],[0,"paths","cargo::util","",null,null],[3,"PathAncestors","cargo::util::paths","",null,null],[5,"join_paths","","",null,[[["str"]],[["osstring"],["cargoresult",["osstring"]]]]],[5,"dylib_path_envvar","","",null,[[],["str"]]],[5,"dylib_path","","",null,[[],[["pathbuf"],["vec",["pathbuf"]]]]],[5,"normalize_path","","",null,[[["path"]],["pathbuf"]]],[5,"resolve_executable","","",null,[[["path"]],[["pathbuf"],["cargoresult",["pathbuf"]]]]],[5,"read","","",null,[[["path"]],[["cargoresult",["string"]],["string"]]]],[5,"read_bytes","","",null,[[["path"]],[["cargoresult",["vec"]],["vec",["u8"]]]]],[5,"write","","",null,[[["asref"],["path"],["asref",["path"]]],["cargoresult"]]],[5,"write_if_changed","","",null,[[["asref"],["path"],["asref",["path"]]],["cargoresult"]]],[5,"append","","",null,[[["path"]],["cargoresult"]]],[5,"mtime","","",null,[[["path"]],[["cargoresult",["filetime"]],["filetime"]]]],[5,"set_invocation_time","","Record the current time on the filesystem (using the…",null,[[["path"]],[["cargoresult",["filetime"]],["filetime"]]]],[5,"path2bytes","","",null,[[["path"]],["cargoresult"]]],[5,"bytes2path","","",null,[[],[["pathbuf"],["cargoresult",["pathbuf"]]]]],[5,"ancestors","","",null,[[["path"]],["pathancestors"]]],[5,"create_dir_all","","",null,[[],["cargoresult"]]],[5,"remove_dir_all","","",null,[[["path"],["asref",["path"]]],["cargoresult"]]],[5,"remove_dir","","",null,[[["path"],["asref",["path"]]],["cargoresult"]]],[5,"remove_file","","",null,[[["path"],["asref",["path"]]],["cargoresult"]]],[5,"link_or_copy","","Hardlink (file) or symlink (dir) src to dst if possible,…",null,[[],["cargoresult"]]],[5,"set_file_time_no_err","","Changes the filesystem mtime (and atime if possible) for…",null,[[["path"],["filetime"],["asref",["path"]]]]],[5,"strip_prefix_canonical","","Strips `base` from `path`.",null,[[["path"],["asref",["path"]]],[["stripprefixerror"],["pathbuf"],["result",["pathbuf","stripprefixerror"]]]]],[0,"process_builder","cargo::util","",null,null],[3,"ProcessBuilder","cargo::util::process_builder","A builder object for an external process, similar to…",null,null],[5,"process","","A helper function to create a `ProcessBuilder`.",null,[[["asref",["osstr"]],["osstr"]],["processbuilder"]]],[11,"program","","(chainable) Sets the executable for the process.",183,[[["self"],["asref",["osstr"]],["osstr"]],["processbuilder"]]],[11,"arg","","(chainable) Adds `arg` to the args list.",183,[[["self"],["asref",["osstr"]],["osstr"]],["processbuilder"]]],[11,"args","","(chainable) Adds multiple `args` to the args list.",183,[[["self"]],["processbuilder"]]],[11,"args_replace","","(chainable) Replaces the args list with the given `args`.",183,[[["self"]],["processbuilder"]]],[11,"cwd","","(chainable) Sets the current working directory of the…",183,[[["self"],["asref",["osstr"]],["osstr"]],["processbuilder"]]],[11,"env","","(chainable) Sets an environment variable for the process.",183,[[["str"],["asref",["osstr"]],["self"],["osstr"]],["processbuilder"]]],[11,"env_remove","","(chainable) Unsets an environment variable for the process.",183,[[["str"],["self"]],["processbuilder"]]],[11,"get_program","","Gets the executable name.",183,[[["self"]],["osstring"]]],[11,"get_args","","Gets the program arguments.",183,[[["self"]]]],[11,"get_cwd","","Gets the current working directory for the process.",183,[[["self"]],[["option",["path"]],["path"]]]],[11,"get_env","","Gets an environment variable as the process will see it…",183,[[["str"],["self"]],[["option",["osstring"]],["osstring"]]]],[11,"get_envs","","Gets all environment variables explicitly set or unset for…",183,[[["self"]],["btreemap"]]],[11,"inherit_jobserver","","Sets the `make` jobserver. See the [jobserver…",183,[[["client"],["self"]],["self"]]],[11,"display_env_vars","","Enables environment variable display.",183,[[["self"]],["self"]]],[11,"exec","","Runs the process, waiting for completion, and mapping…",183,[[["self"]],["cargoresult"]]],[11,"exec_replace","","Replaces the current process with the target process.",183,[[["self"]],["cargoresult"]]],[11,"exec_with_output","","Executes the process, returning the stdio output, or an…",183,[[["self"]],[["cargoresult",["output"]],["output"]]]],[11,"exec_with_streaming","","Executes a command, passing each line of stdout and stderr…",183,[[["fnmut"],["self"],["bool"]],[["cargoresult",["output"]],["output"]]]],[11,"build_command","","Converts `ProcessBuilder` into a `std::process::Command`,…",183,[[["self"]],["command"]]],[11,"wrapped","","Wraps an existing command with the provided wrapper, if it…",183,[[["option"]],["self"]]],[0,"profile","cargo::util","",null,null],[3,"Profiler","cargo::util::profile","",null,null],[5,"start","","",null,[[["display"]],["profiler"]]],[11,"with_style","cargo::util","",184,[[["str"],["progressstyle"],["config"]],["progress"]]],[11,"disable","","",184,[[["self"]]]],[11,"is_enabled","","",184,[[["self"]],["bool"]]],[11,"new","","",184,[[["str"],["config"]],["progress"]]],[11,"tick","","",184,[[["self"],["usize"]],["cargoresult"]]],[11,"tick_now","","",184,[[["str"],["self"],["usize"]],["cargoresult"]]],[11,"update_allowed","","",184,[[["self"]],["bool"]]],[11,"print_now","","",184,[[["str"],["self"]],["cargoresult"]]],[11,"clear","","",184,[[["self"]]]],[11,"new","","",185,[[["usize"]],["queue"]]],[11,"push","","",185,[[["self"],["t"]]]],[11,"push_bounded","","Pushes an item onto the queue, blocking if the queue is…",185,[[["self"],["t"]]]],[11,"pop","","",185,[[["self"],["duration"]],["option"]]],[11,"try_pop_all","","",185,[[["self"]],["vec"]]],[0,"restricted_names","","Helpers for validating and checking names like package and…",null,null],[5,"is_non_ascii_name","cargo::util::restricted_names","Returns `true` if the name contains non-ASCII characters.",null,[[["str"]],["bool"]]],[5,"is_keyword","","A Rust keyword.",null,[[["str"]],["bool"]]],[5,"is_windows_reserved","","These names cannot be used on Windows, even with an…",null,[[["str"]],["bool"]]],[5,"is_conflicting_artifact_name","","An artifact with this name will conflict with one of…",null,[[["str"]],["bool"]]],[5,"validate_package_name","","Check the base requirements for a package name.",null,[[["str"]],["cargoresult"]]],[5,"is_windows_reserved_path","","",null,[[["path"]],["bool"]]],[0,"rustc","cargo::util","",null,null],[3,"Rustc","cargo::util::rustc","Information on the `rustc` executable",null,null],[12,"path","","The location of the exe",186,null],[12,"wrapper","","An optional program that will be passed the path of the…",186,null],[12,"workspace_wrapper","","An optional wrapper to be used in addition to…",186,null],[12,"verbose_version","","Verbose version information (the output of `rustc -vV`)",186,null],[12,"version","","The rustc version (`1.23.4-beta.2`), this comes from…",186,null],[12,"host","","The host triple (arch-platform-OS), this comes from…",186,null],[11,"new","","Runs the compiler at `path` to learn various pieces of…",186,[[["pathbuf"],["path"],["option",["pathbuf"]]],[["cargoresult",["rustc"]],["rustc"]]]],[11,"process","","Gets a process builder set up to use the found rustc…",186,[[["self"]],["processbuilder"]]],[11,"workspace_process","","Gets a process builder set up to use the found rustc…",186,[[["self"]],["processbuilder"]]],[11,"process_no_wrapper","","",186,[[["self"]],["processbuilder"]]],[11,"cached_output","","",186,[[["self"],["processbuilder"]],["cargoresult"]]],[11,"new","cargo::util","",187,[[],["sha256"]]],[11,"update","","",187,[[["self"]],["sha256"]]],[11,"update_file","","",187,[[["self"],["file"]],[["result",["sha256"]],["sha256"]]]],[11,"update_path","","",187,[[["path"],["self"],["asref",["path"]]],[["cargoresult",["sha256"]],["sha256"]]]],[11,"finish","","",187,[[["self"]]]],[11,"finish_hex","","",187,[[["self"]],["string"]]],[0,"to_semver","","",null,null],[8,"ToSemver","cargo::util::to_semver","",null,null],[10,"to_semver","","",188,[[],[["version"],["cargoresult",["version"]]]]],[0,"toml","cargo::util","",null,null],[3,"DetailedTomlDependency","cargo::util::toml","",null,null],[3,"TomlManifest","","",null,null],[3,"TomlProfiles","","",null,null],[3,"TomlOptLevel","","",null,null],[12,"0","","",189,null],[3,"TomlProfile","","",null,null],[12,"opt_level","","",190,null],[12,"lto","","",190,null],[12,"codegen_units","","",190,null],[12,"debug","","",190,null],[12,"debug_assertions","","",190,null],[12,"rpath","","",190,null],[12,"panic","","",190,null],[12,"overflow_checks","","",190,null],[12,"incremental","","",190,null],[12,"package","","",190,null],[12,"build_override","","",190,null],[12,"dir_name","","",190,null],[12,"inherits","","",190,null],[3,"StringOrVec","","",null,null],[3,"TomlProject","","Represents the `package`/`project` sections of a…",null,null],[3,"TomlWorkspace","","",null,null],[4,"TomlDependency","","",null,null],[13,"Simple","","",191,null],[13,"Detailed","","",191,null],[4,"U32OrBool","","",null,null],[13,"U32","","",192,null],[13,"Bool","","",192,null],[4,"ProfilePackageSpec","","",null,null],[13,"Spec","","",193,null],[13,"All","","",193,null],[4,"StringOrBool","","",null,null],[13,"String","","",194,null],[13,"Bool","","",194,null],[4,"VecStringOrBool","","",null,null],[13,"VecString","","",195,null],[13,"Bool","","",195,null],[5,"read_manifest","","",null,[[["config"],["path"],["sourceid"]],[["result",["manifesterror"]],["manifesterror"]]]],[5,"parse","","",null,[[["str"],["path"],["config"]],[["cargoresult",["value"]],["value"]]]],[11,"get_all","","",196,[[["self"]],["btreemap"]]],[11,"get","","",196,[[["str"],["self"]],[["tomlprofile"],["option",["tomlprofile"]]]]],[11,"validate","","",196,[[["features"],["self"],["vec"]],["cargoresult"]]],[11,"validate","","",190,[[["str"],["vec"],["features"],["self"]],["cargoresult"]]],[11,"validate_name","","Validate dir-names and profile names according to RFC 2678.",190,[[["str"]],["cargoresult"]]],[11,"merge","","Overwrite self's values with the given profile.",190,[[["tomlprofile"],["self"]]]],[11,"to_package_id","","",197,[[["self"],["sourceid"]],[["cargoresult",["packageid"]],["packageid"]]]],[11,"prepare_for_publish","","",198,[[["workspace"],["path"],["self"]],[["cargoresult",["tomlmanifest"]],["tomlmanifest"]]]],[11,"to_real_manifest","","",198,[[["path"],["sourceid"],["config"],["rc"]],["cargoresult"]]],[11,"has_profiles","","",198,[[["self"]],["bool"]]],[11,"init","cargo::util","",199,[[["path"]],[["cargoresult",["gitrepo"]],["gitrepo"]]]],[11,"discover","","",199,[[["path"]],[["error"],["result",["repository","error"]],["repository"]]]],[11,"init","","",200,[[["path"]],[["cargoresult",["hgrepo"]],["hgrepo"]]]],[11,"discover","","",200,[[["path"]],[["cargoresult",["hgrepo"]],["hgrepo"]]]],[11,"init","","",201,[[["path"]],[["cargoresult",["pijulrepo"]],["pijulrepo"]]]],[11,"init","","",202,[[["path"]],[["cargoresult",["fossilrepo"]],["fossilrepo"]]]],[8,"IntoUrlWithBase","","A type that can be interpreted as a relative Url and…",null,null],[10,"into_url_with_base","","Performs the conversion",203,[[["intourl"],["option"]],[["cargoresult",["url"]],["url"]]]],[17,"CARGO_ENV","cargo","",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","cargo::core","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"to_string","","",37,[[["self"]],["string"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"vzip","","",37,[[],["v"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"to_string","","",52,[[["self"]],["string"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"vzip","","",52,[[],["v"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"vzip","","",71,[[],["v"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"to_string","","",77,[[["self"]],["string"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"vzip","","",77,[[],["v"]]],[11,"from","","",204,[[["t"]],["t"]]],[11,"into","","",204,[[],["u"]]],[11,"into_iter","","",204,[[],["i"]]],[11,"try_from","","",204,[[["u"]],["result"]]],[11,"try_into","","",204,[[],["result"]]],[11,"borrow","","",204,[[["self"]],["t"]]],[11,"borrow_mut","","",204,[[["self"]],["t"]]],[11,"type_id","","",204,[[["self"]],["typeid"]]],[11,"vzip","","",204,[[],["v"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"vzip","","",82,[[],["v"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"vzip","","",83,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","cargo::core::compiler","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"vzip","","",25,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",205,[[["t"]],["t"]]],[11,"into","","",205,[[],["u"]]],[11,"to_owned","","",205,[[["self"]],["t"]]],[11,"clone_into","","",205,[[["self"],["t"]]]],[11,"to_string","","",205,[[["self"]],["string"]]],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"try_into","","",205,[[],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"type_id","","",205,[[["self"]],["typeid"]]],[11,"vzip","","",205,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"vzip","","",26,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"vzip","","",27,[[],["v"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"from","","",206,[[["t"]],["t"]]],[11,"into","","",206,[[],["u"]]],[11,"to_owned","","",206,[[["self"]],["t"]]],[11,"clone_into","","",206,[[["self"],["t"]]]],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"try_into","","",206,[[],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"type_id","","",206,[[["self"]],["typeid"]]],[11,"vzip","","",206,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","cargo::core::compiler::unit_graph","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"vzip","","",29,[[],["v"]]],[11,"from","cargo::core::dependency","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"vzip","","",32,[[],["v"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"vzip","","",31,[[],["v"]]],[11,"from","cargo::core::features","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"vzip","","",36,[[],["v"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"vzip","","",35,[[],["v"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"vzip","","",33,[[],["v"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"to_string","","",34,[[["self"]],["string"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"vzip","","",34,[[],["v"]]],[11,"from","cargo::core::manifest","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"vzip","","",44,[[],["v"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"vzip","","",38,[[],["v"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"vzip","","",47,[[],["v"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"vzip","","",45,[[],["v"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"to_string","","",46,[[["self"]],["string"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"vzip","","",46,[[],["v"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"vzip","","",41,[[],["v"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"vzip","","",42,[[],["v"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"vzip","","",43,[[],["v"]]],[11,"from","cargo::core::package","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"to_string","","",48,[[["self"]],["string"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"vzip","","",48,[[],["v"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"vzip","","",49,[[],["v"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"vzip","","",50,[[],["v"]]],[11,"from","cargo::core::package_id","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"to_string","","",51,[[["self"]],["string"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"vzip","","",51,[[],["v"]]],[11,"from","","",207,[[["t"]],["t"]]],[11,"into","","",207,[[],["u"]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"try_into","","",207,[[],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"type_id","","",207,[[["self"]],["typeid"]]],[11,"vzip","","",207,[[],["v"]]],[11,"from","cargo::core::profiles","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"vzip","","",57,[[],["v"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"to_string","","",53,[[["self"]],["string"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"vzip","","",53,[[],["v"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"vzip","","",58,[[],["v"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"vzip","","",54,[[],["v"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"vzip","","",55,[[],["v"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"to_string","","",56,[[["self"]],["string"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"vzip","","",56,[[],["v"]]],[11,"from","cargo::core::registry","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"vzip","","",60,[[],["v"]]],[11,"from","cargo::core::resolver","",208,[[["t"]],["t"]]],[11,"into","","",208,[[],["u"]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"try_into","","",208,[[],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"type_id","","",208,[[["self"]],["typeid"]]],[11,"vzip","","",208,[[],["v"]]],[11,"from","","",209,[[["t"]],["t"]]],[11,"into","","",209,[[],["u"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,[[["self"],["t"]]]],[11,"to_string","","",209,[[["self"]],["string"]]],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"try_into","","",209,[[],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"type_id","","",209,[[["self"]],["typeid"]]],[11,"vzip","","",209,[[],["v"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"vzip","","",64,[[],["v"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_string","","",65,[[["self"]],["string"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"vzip","","",65,[[],["v"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"vzip","","",61,[[],["v"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"vzip","","",62,[[],["v"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"vzip","","",63,[[],["v"]]],[11,"from","cargo::core::resolver::features","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"vzip","","",69,[[],["v"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"vzip","","",66,[[],["v"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"vzip","","",70,[[],["v"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"vzip","","",67,[[],["v"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"vzip","","",68,[[],["v"]]],[11,"from","cargo::core::shell","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"vzip","","",74,[[],["v"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"vzip","","",72,[[],["v"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"vzip","","",73,[[],["v"]]],[11,"from","cargo::core::source","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"vzip","","",79,[[],["v"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"vzip","","",75,[[],["v"]]],[11,"from","cargo::core::summary","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"vzip","","",81,[[],["v"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"vzip","","",80,[[],["v"]]],[11,"from","cargo::ops","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"vzip","","",84,[[],["v"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"vzip","","",85,[[],["v"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"vzip","","",86,[[],["v"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"vzip","","",87,[[],["v"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"vzip","","",88,[[],["v"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"vzip","","",89,[[],["v"]]],[11,"from","","",210,[[["t"]],["t"]]],[11,"into","","",210,[[],["u"]]],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"try_into","","",210,[[],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"type_id","","",210,[[["self"]],["typeid"]]],[11,"vzip","","",210,[[],["v"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"vzip","","",90,[[],["v"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"vzip","","",91,[[],["v"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"vzip","","",92,[[],["v"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"vzip","","",93,[[],["v"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"vzip","","",94,[[],["v"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"vzip","","",95,[[],["v"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"vzip","","",96,[[],["v"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"vzip","","",97,[[],["v"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"vzip","","",98,[[],["v"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"vzip","","",99,[[],["v"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"vzip","","",102,[[],["v"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"vzip","","",103,[[],["v"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,[[["self"],["t"]]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"vzip","","",104,[[],["v"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,[[["self"],["t"]]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"vzip","","",105,[[],["v"]]],[11,"from","cargo::ops::tree","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"vzip","","",106,[[],["v"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,[[["self"],["t"]]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"vzip","","",107,[[],["v"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,[[["self"],["t"]]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"vzip","","",108,[[],["v"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"vzip","","",111,[[],["v"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"vzip","","",112,[[],["v"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,[[["self"],["t"]]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"vzip","","",113,[[],["v"]]],[11,"from","cargo::sources","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"vzip","","",116,[[],["v"]]],[11,"from","cargo::sources::config","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,[[["self"],["t"]]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"vzip","","",114,[[],["v"]]],[11,"from","cargo::sources::directory","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"vzip","","",115,[[],["v"]]],[11,"from","cargo::sources::git","",211,[[["t"]],["t"]]],[11,"into","","",211,[[],["u"]]],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"try_into","","",211,[[],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"type_id","","",211,[[["self"]],["typeid"]]],[11,"vzip","","",211,[[],["v"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"vzip","","",118,[[],["v"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,[[["self"],["t"]]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"vzip","","",117,[[],["v"]]],[11,"from","","",212,[[["t"]],["t"]]],[11,"into","","",212,[[],["u"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,[[["self"],["t"]]]],[11,"to_string","","",212,[[["self"]],["string"]]],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"try_into","","",212,[[],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"type_id","","",212,[[["self"]],["typeid"]]],[11,"vzip","","",212,[[],["v"]]],[11,"from","cargo::sources::path","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"vzip","","",119,[[],["v"]]],[11,"from","cargo::sources::registry","",124,[[["t"]],["t"]]],[11,"into","","",124,[[],["u"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"vzip","","",124,[[],["v"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"vzip","","",120,[[],["v"]]],[11,"from","","",213,[[["t"]],["t"]]],[11,"into","","",213,[[],["u"]]],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"try_into","","",213,[[],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"type_id","","",213,[[["self"]],["typeid"]]],[11,"vzip","","",213,[[],["v"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"vzip","","",121,[[],["v"]]],[11,"from","cargo::sources::replaced","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"vzip","","",125,[[],["v"]]],[11,"from","cargo::util","",127,[[["t"]],["t"]]],[11,"into","","",127,[[],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,[[["self"],["t"]]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"vzip","","",127,[[],["v"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[],["u"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"vzip","","",150,[[],["v"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[],["u"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"vzip","","",169,[[],["v"]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[],["u"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,[[["self"],["t"]]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"vzip","","",170,[[],["v"]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[],["u"]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"vzip","","",173,[[],["v"]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[],["u"]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"vzip","","",174,[[],["v"]]],[11,"from","","",214,[[["t"]],["t"]]],[11,"into","","",214,[[],["u"]]],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"try_into","","",214,[[],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"type_id","","",214,[[["self"]],["typeid"]]],[11,"vzip","","",214,[[],["v"]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[],["u"]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"try_into","","",184,[[],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"type_id","","",184,[[["self"]],["typeid"]]],[11,"vzip","","",184,[[],["v"]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"into","","",185,[[],["u"]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"try_into","","",185,[[],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"type_id","","",185,[[["self"]],["typeid"]]],[11,"vzip","","",185,[[],["v"]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[],["u"]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"try_into","","",187,[[],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"type_id","","",187,[[["self"]],["typeid"]]],[11,"vzip","","",187,[[],["v"]]],[11,"from","","",202,[[["t"]],["t"]]],[11,"into","","",202,[[],["u"]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"try_into","","",202,[[],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"type_id","","",202,[[["self"]],["typeid"]]],[11,"vzip","","",202,[[],["v"]]],[11,"from","","",199,[[["t"]],["t"]]],[11,"into","","",199,[[],["u"]]],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"try_into","","",199,[[],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"type_id","","",199,[[["self"]],["typeid"]]],[11,"vzip","","",199,[[],["v"]]],[11,"from","","",200,[[["t"]],["t"]]],[11,"into","","",200,[[],["u"]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"try_into","","",200,[[],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"type_id","","",200,[[["self"]],["typeid"]]],[11,"vzip","","",200,[[],["v"]]],[11,"from","","",201,[[["t"]],["t"]]],[11,"into","","",201,[[],["u"]]],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"try_into","","",201,[[],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"type_id","","",201,[[["self"]],["typeid"]]],[11,"vzip","","",201,[[],["v"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"vzip","","",126,[[],["v"]]],[11,"from","cargo::util::command_prelude","",128,[[["t"]],["t"]]],[11,"into","","",128,[[],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,[[["self"],["t"]]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"vzip","","",128,[[],["v"]]],[11,"from","","",215,[[["t"]],["t"]]],[11,"into","","",215,[[],["u"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,[[["self"],["t"]]]],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"try_into","","",215,[[],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"type_id","","",215,[[["self"]],["typeid"]]],[11,"vzip","","",215,[[],["v"]]],[11,"from","","",216,[[["t"]],["t"]]],[11,"into","","",216,[[],["u"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,[[["self"],["t"]]]],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"try_into","","",216,[[],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"type_id","","",216,[[["self"]],["typeid"]]],[11,"vzip","","",216,[[],["v"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[],["u"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"vzip","","",129,[[],["v"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[],["u"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"vzip","","",130,[[],["v"]]],[11,"from","cargo::util::config","",135,[[["t"]],["t"]]],[11,"into","","",135,[[],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,[[["self"],["t"]]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"vzip","","",135,[[],["v"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,[[["self"],["t"]]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"vzip","","",146,[[],["v"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,[[["self"],["t"]]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"vzip","","",136,[[],["v"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[],["u"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"vzip","","",137,[[],["v"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[],["u"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"vzip","","",138,[[],["v"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[],["u"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"vzip","","",147,[[],["v"]]],[11,"from","","",217,[[["t"]],["t"]]],[11,"into","","",217,[[],["u"]]],[11,"to_string","","",217,[[["self"]],["string"]]],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"try_into","","",217,[[],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"type_id","","",217,[[["self"]],["typeid"]]],[11,"vzip","","",217,[[],["v"]]],[11,"from","","",218,[[["t"]],["t"]]],[11,"into","","",218,[[],["u"]]],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"try_into","","",218,[[],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"type_id","","",218,[[["self"]],["typeid"]]],[11,"vzip","","",218,[[],["v"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[],["u"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"vzip","","",139,[[],["v"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,[[["self"],["t"]]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"vzip","","",140,[[],["v"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[],["u"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"vzip","","",141,[[],["v"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[],["u"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"vzip","","",142,[[],["v"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[],["u"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"vzip","","",148,[[],["v"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,[[["self"],["t"]]]],[11,"to_string","","",143,[[["self"]],["string"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"vzip","","",143,[[],["v"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,[[["self"],["t"]]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"vzip","","",144,[[],["v"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,[[["self"],["t"]]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"vzip","","",145,[[],["v"]]],[11,"from","cargo::util::cpu","",149,[[["t"]],["t"]]],[11,"into","","",149,[[],["u"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"vzip","","",149,[[],["v"]]],[11,"from","cargo::util::diagnostic_server","",157,[[["t"]],["t"]]],[11,"into","","",157,[[],["u"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"vzip","","",157,[[],["v"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[],["u"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"vzip","","",158,[[],["v"]]],[11,"from","","",219,[[["t"]],["t"]]],[11,"into","","",219,[[],["u"]]],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"try_into","","",219,[[],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"type_id","","",219,[[["self"]],["typeid"]]],[11,"vzip","","",219,[[],["v"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[],["u"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"vzip","","",151,[[],["v"]]],[11,"from","cargo::util::errors","",159,[[["t"]],["t"]]],[11,"into","","",159,[[],["u"]]],[11,"to_string","","",159,[[["self"]],["string"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"vzip","","",159,[[],["v"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[],["u"]]],[11,"to_string","","",166,[[["self"]],["string"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"vzip","","",166,[[],["v"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[],["u"]]],[11,"to_string","","",167,[[["self"]],["string"]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"try_into","","",167,[[],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"type_id","","",167,[[["self"]],["typeid"]]],[11,"vzip","","",167,[[],["v"]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[],["u"]]],[11,"to_string","","",168,[[["self"]],["string"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"vzip","","",168,[[],["v"]]],[11,"from","","",220,[[["t"]],["t"]]],[11,"into","","",220,[[],["u"]]],[11,"into_iter","","",220,[[],["i"]]],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"try_into","","",220,[[],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"type_id","","",220,[[["self"]],["typeid"]]],[11,"vzip","","",220,[[],["v"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[],["u"]]],[11,"to_string","","",160,[[["self"]],["string"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"vzip","","",160,[[],["v"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[],["u"]]],[11,"to_string","","",161,[[["self"]],["string"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"vzip","","",161,[[],["v"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[],["u"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"vzip","","",162,[[],["v"]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[],["u"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"try_into","","",163,[[],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"type_id","","",163,[[["self"]],["typeid"]]],[11,"vzip","","",163,[[],["v"]]],[11,"from","cargo::util::graph","",171,[[["t"]],["t"]]],[11,"into","","",171,[[],["u"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,[[["self"],["t"]]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"try_into","","",171,[[],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"type_id","","",171,[[["self"]],["typeid"]]],[11,"vzip","","",171,[[],["v"]]],[11,"from","cargo::util::machine_message","",175,[[["t"]],["t"]]],[11,"into","","",175,[[],["u"]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"try_into","","",175,[[],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"type_id","","",175,[[["self"]],["typeid"]]],[11,"vzip","","",175,[[],["v"]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[],["u"]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"try_into","","",176,[[],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"type_id","","",176,[[["self"]],["typeid"]]],[11,"vzip","","",176,[[],["v"]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[],["u"]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"try_into","","",177,[[],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"type_id","","",177,[[["self"]],["typeid"]]],[11,"vzip","","",177,[[],["v"]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[],["u"]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"try_into","","",178,[[],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"type_id","","",178,[[["self"]],["typeid"]]],[11,"vzip","","",178,[[],["v"]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[],["u"]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"try_into","","",179,[[],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"type_id","","",179,[[["self"]],["typeid"]]],[11,"vzip","","",179,[[],["v"]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[],["u"]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"try_into","","",180,[[],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"type_id","","",180,[[["self"]],["typeid"]]],[11,"vzip","","",180,[[],["v"]]],[11,"from","cargo::util::network","",182,[[["t"]],["t"]]],[11,"into","","",182,[[],["u"]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"try_into","","",182,[[],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"type_id","","",182,[[["self"]],["typeid"]]],[11,"vzip","","",182,[[],["v"]]],[11,"from","cargo::util::paths","",221,[[["t"]],["t"]]],[11,"into","","",221,[[],["u"]]],[11,"into_iter","","",221,[[],["i"]]],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"try_into","","",221,[[],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"type_id","","",221,[[["self"]],["typeid"]]],[11,"vzip","","",221,[[],["v"]]],[11,"from","cargo::util::process_builder","",183,[[["t"]],["t"]]],[11,"into","","",183,[[],["u"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,[[["self"],["t"]]]],[11,"to_string","","",183,[[["self"]],["string"]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"try_into","","",183,[[],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"type_id","","",183,[[["self"]],["typeid"]]],[11,"vzip","","",183,[[],["v"]]],[11,"from","cargo::util::profile","",222,[[["t"]],["t"]]],[11,"into","","",222,[[],["u"]]],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"try_into","","",222,[[],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"type_id","","",222,[[["self"]],["typeid"]]],[11,"vzip","","",222,[[],["v"]]],[11,"from","cargo::util::rustc","",186,[[["t"]],["t"]]],[11,"into","","",186,[[],["u"]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"try_into","","",186,[[],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"type_id","","",186,[[["self"]],["typeid"]]],[11,"vzip","","",186,[[],["v"]]],[11,"from","cargo::util::toml","",223,[[["t"]],["t"]]],[11,"into","","",223,[[],["u"]]],[11,"to_owned","","",223,[[["self"]],["t"]]],[11,"clone_into","","",223,[[["self"],["t"]]]],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"try_into","","",223,[[],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"type_id","","",223,[[["self"]],["typeid"]]],[11,"vzip","","",223,[[],["v"]]],[11,"from","","",198,[[["t"]],["t"]]],[11,"into","","",198,[[],["u"]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"try_into","","",198,[[],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"type_id","","",198,[[["self"]],["typeid"]]],[11,"vzip","","",198,[[],["v"]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"into","","",196,[[],["u"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,[[["self"],["t"]]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"try_into","","",196,[[],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"type_id","","",196,[[["self"]],["typeid"]]],[11,"vzip","","",196,[[],["v"]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"into","","",189,[[],["u"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,[[["self"],["t"]]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"try_into","","",189,[[],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"type_id","","",189,[[["self"]],["typeid"]]],[11,"vzip","","",189,[[],["v"]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"into","","",190,[[],["u"]]],[11,"to_owned","","",190,[[["self"]],["t"]]],[11,"clone_into","","",190,[[["self"],["t"]]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"try_into","","",190,[[],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"type_id","","",190,[[["self"]],["typeid"]]],[11,"vzip","","",190,[[],["v"]]],[11,"from","","",224,[[["t"]],["t"]]],[11,"into","","",224,[[],["u"]]],[11,"to_owned","","",224,[[["self"]],["t"]]],[11,"clone_into","","",224,[[["self"],["t"]]]],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"try_into","","",224,[[],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"type_id","","",224,[[["self"]],["typeid"]]],[11,"vzip","","",224,[[],["v"]]],[11,"from","","",197,[[["t"]],["t"]]],[11,"into","","",197,[[],["u"]]],[11,"to_owned","","",197,[[["self"]],["t"]]],[11,"clone_into","","",197,[[["self"],["t"]]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"try_into","","",197,[[],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"type_id","","",197,[[["self"]],["typeid"]]],[11,"vzip","","",197,[[],["v"]]],[11,"from","","",225,[[["t"]],["t"]]],[11,"into","","",225,[[],["u"]]],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"try_into","","",225,[[],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"type_id","","",225,[[["self"]],["typeid"]]],[11,"vzip","","",225,[[],["v"]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"into","","",191,[[],["u"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,[[["self"],["t"]]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"try_into","","",191,[[],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"type_id","","",191,[[["self"]],["typeid"]]],[11,"vzip","","",191,[[],["v"]]],[11,"from","","",192,[[["t"]],["t"]]],[11,"into","","",192,[[],["u"]]],[11,"to_owned","","",192,[[["self"]],["t"]]],[11,"clone_into","","",192,[[["self"],["t"]]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"try_into","","",192,[[],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"type_id","","",192,[[["self"]],["typeid"]]],[11,"vzip","","",192,[[],["v"]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"into","","",193,[[],["u"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,[[["self"],["t"]]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"try_into","","",193,[[],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"type_id","","",193,[[["self"]],["typeid"]]],[11,"vzip","","",193,[[],["v"]]],[11,"from","","",194,[[["t"]],["t"]]],[11,"into","","",194,[[],["u"]]],[11,"to_owned","","",194,[[["self"]],["t"]]],[11,"clone_into","","",194,[[["self"],["t"]]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"try_into","","",194,[[],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"type_id","","",194,[[["self"]],["typeid"]]],[11,"vzip","","",194,[[],["v"]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[],["u"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,[[["self"],["t"]]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"try_into","","",195,[[],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"type_id","","",195,[[["self"]],["typeid"]]],[11,"vzip","","",195,[[],["v"]]],[11,"eq","cargo::util::command_prelude","",215,[[["self"],["arg"]],["bool"]]],[11,"eq","","",128,[[["appsettings"],["self"]],["bool"]]],[11,"fmt","","",216,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",128,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"clone","","",215,[[["self"]],["arg"]]],[11,"clone","","",216,[[["self"]],["argmatches"]]],[11,"clone","","",128,[[["self"]],["appsettings"]]],[11,"from_str","","",128,[[["str"]],[["result",["appsettings"]],["appsettings"]]]],[11,"from","","",215,[[["arg"]],["arg"]]],[11,"default","","",216,[[],["argmatches"]]],[11,"default","","",215,[[],["arg"]]],[11,"exec","cargo::core::compiler","",206,[[["processbuilder"],["compilemode"],["packageid"],["target"],["fnmut"],["self"]],["cargoresult"]]],[11,"query","cargo::core::registry","",60,[[["fnmut"],["bool"],["self"],["dependency"]],["cargoresult"]]],[11,"describe_source","","",60,[[["self"],["sourceid"]],["string"]]],[11,"is_replaced","","",60,[[["self"],["sourceid"]],["bool"]]],[11,"query","cargo::sources::directory","",115,[[["fnmut"],["self"],["dependency"]],["cargoresult"]]],[11,"fuzzy_query","","",115,[[["fnmut"],["self"],["dependency"]],["cargoresult"]]],[11,"supports_checksums","","",115,[[["self"]],["bool"]]],[11,"requires_precise","","",115,[[["self"]],["bool"]]],[11,"source_id","","",115,[[["self"]],["sourceid"]]],[11,"update","","",115,[[["self"]],["cargoresult"]]],[11,"download","","",115,[[["self"],["packageid"]],[["maybepackage"],["cargoresult",["maybepackage"]]]]],[11,"finish_download","","",115,[[["packageid"],["self"],["vec",["u8"]],["u8"]],[["package"],["cargoresult",["package"]]]]],[11,"fingerprint","","",115,[[["self"],["package"]],[["cargoresult",["string"]],["string"]]]],[11,"verify","","",115,[[["self"],["packageid"]],["cargoresult"]]],[11,"describe","","",115,[[["self"]],["string"]]],[11,"add_to_yanked_whitelist","","",115,[[["self"]]]],[11,"is_yanked","","",115,[[["self"],["packageid"]],[["cargoresult",["bool"]],["bool"]]]],[11,"query","cargo::sources","",116,[[["fnmut"],["self"],["dependency"]],["cargoresult"]]],[11,"fuzzy_query","","",116,[[["fnmut"],["self"],["dependency"]],["cargoresult"]]],[11,"supports_checksums","","",116,[[["self"]],["bool"]]],[11,"requires_precise","","",116,[[["self"]],["bool"]]],[11,"source_id","","",116,[[["self"]],["sourceid"]]],[11,"update","","",116,[[["self"]],["cargoresult"]]],[11,"download","","",116,[[["self"],["packageid"]],[["maybepackage"],["cargoresult",["maybepackage"]]]]],[11,"finish_download","","",116,[[["packageid"],["self"],["vec",["u8"]],["u8"]],[["package"],["cargoresult",["package"]]]]],[11,"fingerprint","","",116,[[["self"],["package"]],[["cargoresult",["string"]],["string"]]]],[11,"describe","","",116,[[["self"]],["string"]]],[11,"add_to_yanked_whitelist","","",116,[[["self"]]]],[11,"is_yanked","","",116,[[["self"],["packageid"]],[["cargoresult",["bool"]],["bool"]]]],[11,"query","cargo::sources::path","",119,[[["fnmut"],["self"],["dependency"]],["cargoresult"]]],[11,"fuzzy_query","","",119,[[["fnmut"],["self"],["dependency"]],["cargoresult"]]],[11,"supports_checksums","","",119,[[["self"]],["bool"]]],[11,"requires_precise","","",119,[[["self"]],["bool"]]],[11,"source_id","","",119,[[["self"]],["sourceid"]]],[11,"update","","",119,[[["self"]],["cargoresult"]]],[11,"download","","",119,[[["self"],["packageid"]],[["maybepackage"],["cargoresult",["maybepackage"]]]]],[11,"finish_download","","",119,[[["packageid"],["self"],["vec",["u8"]],["u8"]],[["package"],["cargoresult",["package"]]]]],[11,"fingerprint","","",119,[[["self"],["package"]],[["cargoresult",["string"]],["string"]]]],[11,"describe","","",119,[[["self"]],["string"]]],[11,"add_to_yanked_whitelist","","",119,[[["self"]]]],[11,"is_yanked","","",119,[[["self"],["packageid"]],[["cargoresult",["bool"]],["bool"]]]],[11,"query","cargo::sources::registry","",124,[[["fnmut"],["self"],["dependency"]],["cargoresult"]]],[11,"fuzzy_query","","",124,[[["fnmut"],["self"],["dependency"]],["cargoresult"]]],[11,"supports_checksums","","",124,[[["self"]],["bool"]]],[11,"requires_precise","","",124,[[["self"]],["bool"]]],[11,"source_id","","",124,[[["self"]],["sourceid"]]],[11,"update","","",124,[[["self"]],["cargoresult"]]],[11,"download","","",124,[[["self"],["packageid"]],[["maybepackage"],["cargoresult",["maybepackage"]]]]],[11,"finish_download","","",124,[[["packageid"],["self"],["vec",["u8"]],["u8"]],[["package"],["cargoresult",["package"]]]]],[11,"fingerprint","","",124,[[["self"],["package"]],[["cargoresult",["string"]],["string"]]]],[11,"describe","","",124,[[["self"]],["string"]]],[11,"add_to_yanked_whitelist","","",124,[[["self"]]]],[11,"is_yanked","","",124,[[["self"],["packageid"]],[["cargoresult",["bool"]],["bool"]]]],[11,"source_id","cargo::sources::replaced","",125,[[["self"]],["sourceid"]]],[11,"replaced_source_id","","",125,[[["self"]],["sourceid"]]],[11,"supports_checksums","","",125,[[["self"]],["bool"]]],[11,"requires_precise","","",125,[[["self"]],["bool"]]],[11,"query","","",125,[[["fnmut"],["self"],["dependency"]],["cargoresult"]]],[11,"fuzzy_query","","",125,[[["fnmut"],["self"],["dependency"]],["cargoresult"]]],[11,"update","","",125,[[["self"]],["cargoresult"]]],[11,"download","","",125,[[["self"],["packageid"]],[["maybepackage"],["cargoresult",["maybepackage"]]]]],[11,"finish_download","","",125,[[["packageid"],["self"],["vec",["u8"]],["u8"]],[["package"],["cargoresult",["package"]]]]],[11,"fingerprint","","",125,[[["self"],["package"]],[["cargoresult",["string"]],["string"]]]],[11,"verify","","",125,[[["self"],["packageid"]],["cargoresult"]]],[11,"describe","","",125,[[["self"]],["string"]]],[11,"is_replaced","","",125,[[["self"]],["bool"]]],[11,"add_to_yanked_whitelist","","",125,[[["self"]]]],[11,"is_yanked","","",125,[[["self"],["packageid"]],[["cargoresult",["bool"]],["bool"]]]],[11,"_arg","cargo","",226,[[["arg"]],["self"]]],[11,"_value_of","cargo::util::command_prelude","",216,[[["str"],["self"]],[["str"],["option",["str"]]]]],[11,"_value_of_os","","",216,[[["str"],["self"]],[["osstr"],["option",["osstr"]]]]],[11,"_values_of","","",216,[[["str"],["self"]],[["vec",["string"]],["string"]]]],[11,"_values_of_os","","",216,[[["str"],["self"]],[["osstring"],["vec",["osstring"]]]]],[11,"_is_present","","",216,[[["str"],["self"]],["bool"]]],[11,"reason","cargo::util::machine_message","",175,[[["self"]],["str"]]],[11,"reason","","",176,[[["self"]],["str"]]],[11,"reason","","",178,[[["self"]],["str"]]],[11,"reason","","",179,[[["self"]],["str"]]],[11,"reason","","",180,[[["self"]],["str"]]],[11,"drop","cargo::core::package","",50,[[["self"]]]],[11,"drop","cargo::util::config","",218,[[["self"]]]],[11,"drop","cargo::util::diagnostic_server","",219,[[["self"]]]],[11,"drop","cargo::util","",169,[[["self"]]]],[11,"drop","","",173,[[["self"]]]],[11,"drop","","",214,[[["self"]]]],[11,"drop","cargo::util::profile","",222,[[["self"]]]],[11,"as_ref","cargo::core","",37,[[["self"]],["str"]]],[11,"as_ref","","",37,[[["self"]],["osstr"]]],[11,"as_ref","","",37,[[["self"]],["path"]]],[11,"from","","",37,[[["str"]],["self"]]],[11,"from","","",37,[[["string"]],["self"]]],[11,"from","","",37,[[["string"]],["self"]]],[11,"from","cargo::core::manifest","",41,[[["string"]],["self"]]],[11,"from","","",43,[[["pathbuf"]],["self"]]],[11,"from","cargo::core::resolver","",62,[[["error"]],["self"]]],[11,"from","","",62,[[],["self"]]],[11,"from","cargo::util::config","",217,[[["error"]],["self"]]],[11,"from","cargo::util::errors","",162,[[["error"]],["clierror"]]],[11,"from","","",162,[[["error"]],["clierror"]]],[11,"next","cargo::core","",204,[[["self"]],[["package"],["option",["package"]]]]],[11,"size_hint","","",204,[[["self"]]]],[11,"next","cargo::util::errors","",220,[[["self"]],["option"]]],[11,"next","cargo::util::paths","",221,[[["self"]],[["option",["path"]],["path"]]]],[11,"clone","cargo::core::compiler","",19,[[["self"]],["messageformat"]]],[11,"clone","","",16,[[["self"]],["compilemode"]]],[11,"clone","","",10,[[["self"]],["targetinfo"]]],[11,"clone","","",21,[[["self"]],["fileflavor"]]],[11,"clone","","",23,[[["self"]],["compilekind"]]],[11,"clone","","",25,[[["self"]],["compiletarget"]]],[11,"clone","","",205,[[["self"]],["metadata"]]],[11,"clone","","",14,[[["self"]],["buildoutput"]]],[11,"clone","","",24,[[["self"]],["freshness"]]],[11,"clone","","",27,[[["self"]],["unit"]]],[11,"clone","cargo::core::compiler::unit_graph","",29,[[["self"]],["unitdep"]]],[11,"clone","cargo::core::compiler","",206,[[["self"]],["defaultexecutor"]]],[11,"clone","cargo::core::dependency","",32,[[["self"]],["dependency"]]],[11,"clone","","",31,[[["self"]],["depkind"]]],[11,"clone","cargo::core::features","",34,[[["self"]],["edition"]]],[11,"clone","","",36,[[["self"]],["features"]]],[11,"clone","cargo::core","",37,[[["self"]],["internedstring"]]],[11,"clone","cargo::core::manifest","",44,[[["self"]],["manifest"]]],[11,"clone","","",38,[[["self"]],["delayedwarning"]]],[11,"clone","","",47,[[["self"]],["warnings"]]],[11,"clone","","",45,[[["self"]],["virtualmanifest"]]],[11,"clone","","",39,[[["self"]],["manifestmetadata"]]],[11,"clone","","",41,[[["self"]],["libkind"]]],[11,"clone","","",42,[[["self"]],["targetkind"]]],[11,"clone","","",46,[[["self"]],["target"]]],[11,"clone","","",43,[[["self"]],["targetsourcepath"]]],[11,"clone","cargo::core::package","",48,[[["self"]],["package"]]],[11,"clone","cargo::core::package_id","",51,[[["self"]],["packageid"]]],[11,"clone","cargo::core","",52,[[["self"]],["packageidspec"]]],[11,"clone","cargo::core::profiles","",57,[[["self"]],["profiles"]]],[11,"clone","","",54,[[["self"]],["profileroot"]]],[11,"clone","","",53,[[["self"]],["profile"]]],[11,"clone","","",55,[[["self"]],["lto"]]],[11,"clone","","",56,[[["self"]],["panicstrategy"]]],[11,"clone","","",58,[[["self"]],["unitfor"]]],[11,"clone","cargo::core::resolver","",209,[[["self"]],["encodablepackageid"]]],[11,"clone","cargo::core::resolver::features","",67,[[["self"]],["hasdevunits"]]],[11,"clone","","",68,[[["self"]],["featuresfor"]]],[11,"clone","","",66,[[["self"]],["requestedfeatures"]]],[11,"clone","cargo::core","",3,[[["self"]],["resolveversion"]]],[11,"clone","cargo::core::resolver","",63,[[["self"]],["resolvebehavior"]]],[11,"clone","","",61,[[["self"]],["resolveopts"]]],[11,"clone","cargo::core::shell","",72,[[["self"]],["verbosity"]]],[11,"clone","","",73,[[["self"]],["colorchoice"]]],[11,"clone","cargo::core","",77,[[["self"]],["sourceid"]]],[11,"clone","","",4,[[["self"]],["gitreference"]]],[11,"clone","cargo::core::summary","",81,[[["self"]],["summary"]]],[11,"clone","","",80,[[["self"]],["featurevalue"]]],[11,"clone","cargo::core","",5,[[["self"]],["workspaceconfig"]]],[11,"clone","","",83,[[["self"]],["workspacerootconfig"]]],[11,"clone","cargo::ops","",104,[[["self"]],["packages"]]],[11,"clone","","",105,[[["self"]],["versioncontrol"]]],[11,"clone","cargo::ops::tree","",108,[[["self"]],["node"]]],[11,"clone","","",107,[[["self"]],["edgekind"]]],[11,"clone","","",113,[[["self"]],["prefix"]]],[11,"clone","cargo::sources::config","",114,[[["self"]],["sourceconfigmap"]]],[11,"clone","cargo::sources::git","",212,[[["self"]],["gitrevision"]]],[11,"clone","","",117,[[["self"]],["gitremote"]]],[11,"clone","cargo::util","",127,[[["self"]],["canonicalurl"]]],[11,"clone","cargo::util::config","",135,[[["self"]],["value"]]],[11,"clone","","",143,[[["self"]],["definition"]]],[11,"clone","","",146,[[["self"]],["configrelativepath"]]],[11,"clone","","",136,[[["self"]],["pathandargs"]]],[11,"clone","","",144,[[["self"]],["configvalue"]]],[11,"clone","","",145,[[["self"]],["sslversionconfig"]]],[11,"clone","","",140,[[["self"]],["sslversionconfigrange"]]],[11,"clone","cargo::util","",170,[[["self"]],["filesystem"]]],[11,"clone","cargo::util::graph","",171,[[["self"]],["graph"]]],[11,"clone","cargo::util::process_builder","",183,[[["self"]],["processbuilder"]]],[11,"clone","cargo::util::toml","",191,[[["self"]],["tomldependency"]]],[11,"clone","","",223,[[["self"]],["detailedtomldependency"]]],[11,"clone","","",196,[[["self"]],["tomlprofiles"]]],[11,"clone","","",189,[[["self"]],["tomloptlevel"]]],[11,"clone","","",192,[[["self"]],["u32orbool"]]],[11,"clone","","",190,[[["self"]],["tomlprofile"]]],[11,"clone","","",193,[[["self"]],["profilepackagespec"]]],[11,"clone","","",224,[[["self"]],["stringorvec"]]],[11,"clone","","",194,[[["self"]],["stringorbool"]]],[11,"clone","","",195,[[["self"]],["vecstringorbool"]]],[11,"clone","","",197,[[["self"]],["tomlproject"]]],[11,"default","cargo::core::compiler","",14,[[],["buildoutput"]]],[11,"default","","",26,[[],["buildscriptoutputs"]]],[11,"default","","",15,[[],["buildscripts"]]],[11,"default","cargo::core::features","",36,[[],["features"]]],[11,"default","","",33,[[],["cliunstable"]]],[11,"default","cargo::core::profiles","",53,[[],["profile"]]],[11,"default","cargo::core::shell","",74,[[],["self"]]],[11,"default","cargo::core::source","",79,[[],["sourcemap"]]],[11,"default","cargo::util::config","",139,[[],["cargohttpconfig"]]],[11,"default","cargo::util","",150,[[],["dependencyqueue"]]],[11,"default","cargo::util::graph","",171,[[],["graph"]]],[11,"default","cargo::util","",187,[[],["self"]]],[11,"default","cargo::util::toml","",223,[[],["detailedtomldependency"]]],[11,"default","","",196,[[],["tomlprofiles"]]],[11,"default","","",190,[[],["tomlprofile"]]],[11,"cmp","cargo::core::compiler","",16,[[["self"],["compilemode"]],["ordering"]]],[11,"cmp","","",23,[[["self"],["compilekind"]],["ordering"]]],[11,"cmp","","",25,[[["self"],["compiletarget"]],["ordering"]]],[11,"cmp","","",205,[[["metadata"],["self"]],["ordering"]]],[11,"cmp","","",27,[[["unit"],["self"]],["ordering"]]],[11,"cmp","cargo::core::compiler::unit_graph","",29,[[["self"],["unitdep"]],["ordering"]]],[11,"cmp","cargo::core::dependency","",32,[[["self"],["dependency"]],["ordering"]]],[11,"cmp","","",31,[[["self"],["depkind"]],["ordering"]]],[11,"cmp","cargo::core::features","",34,[[["edition"],["self"]],["ordering"]]],[11,"cmp","cargo::core","",37,[[["internedstring"],["self"]],["ordering"]]],[11,"cmp","cargo::core::manifest","",41,[[["libkind"],["self"]],["ordering"]]],[11,"cmp","","",42,[[["self"],["targetkind"]],["ordering"]]],[11,"cmp","","",46,[[["target"],["self"]],["ordering"]]],[11,"cmp","","",43,[[["self"],["targetsourcepath"]],["ordering"]]],[11,"cmp","cargo::core::package","",48,[[["self"],["package"]],["ordering"]]],[11,"cmp","cargo::core::package_id","",51,[[["packageid"],["self"]],["ordering"]]],[11,"cmp","cargo::core","",52,[[["self"],["packageidspec"]],["ordering"]]],[11,"cmp","cargo::core::profiles","",54,[[["profileroot"],["self"]],["ordering"]]],[11,"cmp","","",53,[[["profile"],["self"]],["ordering"]]],[11,"cmp","","",55,[[["lto"],["self"]],["ordering"]]],[11,"cmp","","",56,[[["panicstrategy"],["self"]],["ordering"]]],[11,"cmp","","",58,[[["self"],["unitfor"]],["ordering"]]],[11,"cmp","cargo::core::resolver","",208,[[["encodabledependency"],["self"]],["ordering"]]],[11,"cmp","","",209,[[["encodablepackageid"],["self"]],["ordering"]]],[11,"cmp","cargo::core","",3,[[["self"],["resolveversion"]],["ordering"]]],[11,"cmp","","",4,[[["gitreference"],["self"]],["ordering"]]],[11,"cmp","","",77,[[["self"],["sourceid"]],["ordering"]]],[11,"cmp","cargo::ops::tree","",108,[[["node"],["self"]],["ordering"]]],[11,"cmp","cargo::util","",127,[[["self"],["canonicalurl"]],["ordering"]]],[11,"cmp","cargo::util::command_prelude","",130,[[["commandinfo"],["self"]],["ordering"]]],[11,"cmp","cargo::util::toml","",193,[[["self"],["profilepackagespec"]],["ordering"]]],[11,"eq","cargo::core::compiler","",19,[[["messageformat"],["self"]],["bool"]]],[11,"ne","","",19,[[["messageformat"],["self"]],["bool"]]],[11,"eq","","",16,[[["self"],["compilemode"]],["bool"]]],[11,"ne","","",16,[[["self"],["compilemode"]],["bool"]]],[11,"eq","","",21,[[["self"],["fileflavor"]],["bool"]]],[11,"ne","","",21,[[["self"],["fileflavor"]],["bool"]]],[11,"eq","","",23,[[["self"],["compilekind"]],["bool"]]],[11,"ne","","",23,[[["self"],["compilekind"]],["bool"]]],[11,"eq","","",25,[[["self"],["compiletarget"]],["bool"]]],[11,"ne","","",25,[[["self"],["compiletarget"]],["bool"]]],[11,"eq","","",205,[[["metadata"],["self"]],["bool"]]],[11,"ne","","",205,[[["metadata"],["self"]],["bool"]]],[11,"eq","","",24,[[["freshness"],["self"]],["bool"]]],[11,"eq","","",27,[[["unit"],["self"]],["bool"]]],[11,"eq","cargo::core::compiler::unit_graph","",29,[[["self"],["unitdep"]],["bool"]]],[11,"ne","","",29,[[["self"],["unitdep"]],["bool"]]],[11,"eq","cargo::core::dependency","",32,[[["self"],["dependency"]],["bool"]]],[11,"ne","","",32,[[["self"],["dependency"]],["bool"]]],[11,"eq","","",31,[[["self"],["depkind"]],["bool"]]],[11,"eq","cargo::core::features","",34,[[["edition"],["self"]],["bool"]]],[11,"eq","cargo::core","",37,[[["internedstring"],["self"]],["bool"]]],[11,"eq","","",37,[[["str"],["self"]],["bool"]]],[11,"eq","","",37,[[["self"],["str"]],["bool"]]],[11,"eq","cargo::core::manifest","",39,[[["self"],["manifestmetadata"]],["bool"]]],[11,"ne","","",39,[[["self"],["manifestmetadata"]],["bool"]]],[11,"eq","","",41,[[["libkind"],["self"]],["bool"]]],[11,"ne","","",41,[[["libkind"],["self"]],["bool"]]],[11,"eq","","",42,[[["self"],["targetkind"]],["bool"]]],[11,"ne","","",42,[[["self"],["targetkind"]],["bool"]]],[11,"eq","","",46,[[["target"],["self"]],["bool"]]],[11,"ne","","",46,[[["target"],["self"]],["bool"]]],[11,"eq","","",43,[[["self"],["targetsourcepath"]],["bool"]]],[11,"ne","","",43,[[["self"],["targetsourcepath"]],["bool"]]],[11,"eq","cargo::core::package","",48,[[["self"],["package"]],["bool"]]],[11,"eq","cargo::core::package_id","",51,[[["packageid"],["self"]],["bool"]]],[11,"eq","cargo::core","",52,[[["self"],["packageidspec"]],["bool"]]],[11,"ne","","",52,[[["self"],["packageidspec"]],["bool"]]],[11,"eq","cargo::core::profiles","",54,[[["profileroot"],["self"]],["bool"]]],[11,"eq","","",53,[[["self"]],["bool"]]],[11,"eq","","",55,[[["lto"],["self"]],["bool"]]],[11,"ne","","",55,[[["lto"],["self"]],["bool"]]],[11,"eq","","",56,[[["panicstrategy"],["self"]],["bool"]]],[11,"eq","","",58,[[["self"],["unitfor"]],["bool"]]],[11,"ne","","",58,[[["self"],["unitfor"]],["bool"]]],[11,"eq","cargo::core::resolver","",208,[[["encodabledependency"],["self"]],["bool"]]],[11,"ne","","",208,[[["encodabledependency"],["self"]],["bool"]]],[11,"eq","","",209,[[["encodablepackageid"],["self"]],["bool"]]],[11,"ne","","",209,[[["encodablepackageid"],["self"]],["bool"]]],[11,"eq","cargo::core::resolver::features","",67,[[["hasdevunits"],["self"]],["bool"]]],[11,"eq","","",68,[[["self"],["featuresfor"]],["bool"]]],[11,"eq","","",66,[[["requestedfeatures"],["self"]],["bool"]]],[11,"ne","","",66,[[["requestedfeatures"],["self"]],["bool"]]],[11,"eq","cargo::core","",3,[[["self"],["resolveversion"]],["bool"]]],[11,"eq","","",71,[[["resolve"],["self"]],["bool"]]],[11,"eq","cargo::core::resolver","",63,[[["self"],["resolvebehavior"]],["bool"]]],[11,"eq","","",61,[[["self"],["resolveopts"]],["bool"]]],[11,"ne","","",61,[[["self"],["resolveopts"]],["bool"]]],[11,"eq","cargo::core::shell","",72,[[["verbosity"],["self"]],["bool"]]],[11,"eq","","",73,[[["self"],["colorchoice"]],["bool"]]],[11,"eq","cargo::core","",4,[[["gitreference"],["self"]],["bool"]]],[11,"ne","","",4,[[["gitreference"],["self"]],["bool"]]],[11,"eq","","",77,[[["self"],["sourceid"]],["bool"]]],[11,"eq","cargo::core::summary","",81,[[["summary"],["self"]],["bool"]]],[11,"eq","cargo::ops","",104,[[["self"],["packages"]],["bool"]]],[11,"ne","","",104,[[["self"],["packages"]],["bool"]]],[11,"eq","","",103,[[["self"],["librule"]],["bool"]]],[11,"eq","","",105,[[["versioncontrol"],["self"]],["bool"]]],[11,"eq","cargo::ops::tree","",108,[[["node"],["self"]],["bool"]]],[11,"ne","","",108,[[["node"],["self"]],["bool"]]],[11,"eq","","",107,[[["edgekind"],["self"]],["bool"]]],[11,"ne","","",107,[[["edgekind"],["self"]],["bool"]]],[11,"eq","","",111,[[["target"],["self"]],["bool"]]],[11,"ne","","",111,[[["target"],["self"]],["bool"]]],[11,"eq","cargo::sources::git","",212,[[["self"],["gitrevision"]],["bool"]]],[11,"ne","","",212,[[["self"],["gitrevision"]],["bool"]]],[11,"eq","","",117,[[["gitremote"],["self"]],["bool"]]],[11,"ne","","",117,[[["gitremote"],["self"]],["bool"]]],[11,"eq","cargo::util","",127,[[["self"],["canonicalurl"]],["bool"]]],[11,"ne","","",127,[[["self"],["canonicalurl"]],["bool"]]],[11,"eq","cargo::util::command_prelude","",130,[[["commandinfo"],["self"]],["bool"]]],[11,"ne","","",130,[[["commandinfo"],["self"]],["bool"]]],[11,"eq","cargo::util::config","",135,[[["value"],["self"]],["bool"]]],[11,"ne","","",135,[[["value"],["self"]],["bool"]]],[11,"eq","","",143,[[["self"],["definition"]],["bool"]]],[11,"eq","","",146,[[["self"],["configrelativepath"]],["bool"]]],[11,"ne","","",146,[[["self"],["configrelativepath"]],["bool"]]],[11,"eq","","",144,[[["self"],["configvalue"]],["bool"]]],[11,"ne","","",144,[[["self"],["configvalue"]],["bool"]]],[11,"eq","","",139,[[["self"],["cargohttpconfig"]],["bool"]]],[11,"ne","","",139,[[["self"],["cargohttpconfig"]],["bool"]]],[11,"eq","","",145,[[["sslversionconfig"],["self"]],["bool"]]],[11,"ne","","",145,[[["sslversionconfig"],["self"]],["bool"]]],[11,"eq","","",140,[[["sslversionconfigrange"],["self"]],["bool"]]],[11,"ne","","",140,[[["sslversionconfigrange"],["self"]],["bool"]]],[11,"eq","cargo::util","",170,[[["path"],["self"]],["bool"]]],[11,"eq","cargo::util::graph","",171,[[["self"],["graph"]],["bool"]]],[11,"eq","cargo::util::toml","",189,[[["self"],["tomloptlevel"]],["bool"]]],[11,"ne","","",189,[[["self"],["tomloptlevel"]],["bool"]]],[11,"eq","","",192,[[["u32orbool"],["self"]],["bool"]]],[11,"ne","","",192,[[["u32orbool"],["self"]],["bool"]]],[11,"eq","","",190,[[["tomlprofile"],["self"]],["bool"]]],[11,"ne","","",190,[[["tomlprofile"],["self"]],["bool"]]],[11,"eq","","",193,[[["self"],["profilepackagespec"]],["bool"]]],[11,"ne","","",193,[[["self"],["profilepackagespec"]],["bool"]]],[11,"eq","","",224,[[["stringorvec"],["self"]],["bool"]]],[11,"ne","","",224,[[["stringorvec"],["self"]],["bool"]]],[11,"eq","","",194,[[["self"],["stringorbool"]],["bool"]]],[11,"ne","","",194,[[["self"],["stringorbool"]],["bool"]]],[11,"eq","","",195,[[["vecstringorbool"],["self"]],["bool"]]],[11,"ne","","",195,[[["vecstringorbool"],["self"]],["bool"]]],[11,"partial_cmp","cargo::core::compiler","",16,[[["self"],["compilemode"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",16,[[["self"],["compilemode"]],["bool"]]],[11,"le","","",16,[[["self"],["compilemode"]],["bool"]]],[11,"gt","","",16,[[["self"],["compilemode"]],["bool"]]],[11,"ge","","",16,[[["self"],["compilemode"]],["bool"]]],[11,"partial_cmp","","",23,[[["self"],["compilekind"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",23,[[["self"],["compilekind"]],["bool"]]],[11,"le","","",23,[[["self"],["compilekind"]],["bool"]]],[11,"gt","","",23,[[["self"],["compilekind"]],["bool"]]],[11,"ge","","",23,[[["self"],["compilekind"]],["bool"]]],[11,"partial_cmp","","",25,[[["self"],["compiletarget"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",25,[[["self"],["compiletarget"]],["bool"]]],[11,"le","","",25,[[["self"],["compiletarget"]],["bool"]]],[11,"gt","","",25,[[["self"],["compiletarget"]],["bool"]]],[11,"ge","","",25,[[["self"],["compiletarget"]],["bool"]]],[11,"partial_cmp","","",205,[[["metadata"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",205,[[["metadata"],["self"]],["bool"]]],[11,"le","","",205,[[["metadata"],["self"]],["bool"]]],[11,"gt","","",205,[[["metadata"],["self"]],["bool"]]],[11,"ge","","",205,[[["metadata"],["self"]],["bool"]]],[11,"partial_cmp","","",27,[[["unit"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",27,[[["unit"],["self"]],["bool"]]],[11,"le","","",27,[[["unit"],["self"]],["bool"]]],[11,"gt","","",27,[[["unit"],["self"]],["bool"]]],[11,"ge","","",27,[[["unit"],["self"]],["bool"]]],[11,"partial_cmp","cargo::core::compiler::unit_graph","",29,[[["self"],["unitdep"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",29,[[["self"],["unitdep"]],["bool"]]],[11,"le","","",29,[[["self"],["unitdep"]],["bool"]]],[11,"gt","","",29,[[["self"],["unitdep"]],["bool"]]],[11,"ge","","",29,[[["self"],["unitdep"]],["bool"]]],[11,"partial_cmp","cargo::core::dependency","",32,[[["self"],["dependency"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",32,[[["self"],["dependency"]],["bool"]]],[11,"le","","",32,[[["self"],["dependency"]],["bool"]]],[11,"gt","","",32,[[["self"],["dependency"]],["bool"]]],[11,"ge","","",32,[[["self"],["dependency"]],["bool"]]],[11,"partial_cmp","","",31,[[["self"],["depkind"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","cargo::core::features","",34,[[["edition"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","cargo::core","",37,[[["internedstring"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","cargo::core::manifest","",41,[[["libkind"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",41,[[["libkind"],["self"]],["bool"]]],[11,"le","","",41,[[["libkind"],["self"]],["bool"]]],[11,"gt","","",41,[[["libkind"],["self"]],["bool"]]],[11,"ge","","",41,[[["libkind"],["self"]],["bool"]]],[11,"partial_cmp","","",42,[[["self"],["targetkind"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",42,[[["self"],["targetkind"]],["bool"]]],[11,"le","","",42,[[["self"],["targetkind"]],["bool"]]],[11,"gt","","",42,[[["self"],["targetkind"]],["bool"]]],[11,"ge","","",42,[[["self"],["targetkind"]],["bool"]]],[11,"partial_cmp","","",46,[[["target"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",46,[[["target"],["self"]],["bool"]]],[11,"le","","",46,[[["target"],["self"]],["bool"]]],[11,"gt","","",46,[[["target"],["self"]],["bool"]]],[11,"ge","","",46,[[["target"],["self"]],["bool"]]],[11,"partial_cmp","","",43,[[["self"],["targetsourcepath"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",43,[[["self"],["targetsourcepath"]],["bool"]]],[11,"le","","",43,[[["self"],["targetsourcepath"]],["bool"]]],[11,"gt","","",43,[[["self"],["targetsourcepath"]],["bool"]]],[11,"ge","","",43,[[["self"],["targetsourcepath"]],["bool"]]],[11,"partial_cmp","cargo::core::package","",48,[[["self"],["package"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","cargo::core::package_id","",51,[[["packageid"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",51,[[["packageid"],["self"]],["bool"]]],[11,"le","","",51,[[["packageid"],["self"]],["bool"]]],[11,"gt","","",51,[[["packageid"],["self"]],["bool"]]],[11,"ge","","",51,[[["packageid"],["self"]],["bool"]]],[11,"partial_cmp","cargo::core","",52,[[["self"],["packageidspec"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",52,[[["self"],["packageidspec"]],["bool"]]],[11,"le","","",52,[[["self"],["packageidspec"]],["bool"]]],[11,"gt","","",52,[[["self"],["packageidspec"]],["bool"]]],[11,"ge","","",52,[[["self"],["packageidspec"]],["bool"]]],[11,"partial_cmp","cargo::core::profiles","",54,[[["profileroot"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",53,[[["profile"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",53,[[["profile"],["self"]],["bool"]]],[11,"le","","",53,[[["profile"],["self"]],["bool"]]],[11,"gt","","",53,[[["profile"],["self"]],["bool"]]],[11,"ge","","",53,[[["profile"],["self"]],["bool"]]],[11,"partial_cmp","","",55,[[["lto"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",55,[[["lto"],["self"]],["bool"]]],[11,"le","","",55,[[["lto"],["self"]],["bool"]]],[11,"gt","","",55,[[["lto"],["self"]],["bool"]]],[11,"ge","","",55,[[["lto"],["self"]],["bool"]]],[11,"partial_cmp","","",56,[[["panicstrategy"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",58,[[["self"],["unitfor"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",58,[[["self"],["unitfor"]],["bool"]]],[11,"le","","",58,[[["self"],["unitfor"]],["bool"]]],[11,"gt","","",58,[[["self"],["unitfor"]],["bool"]]],[11,"ge","","",58,[[["self"],["unitfor"]],["bool"]]],[11,"partial_cmp","cargo::core::resolver","",208,[[["encodabledependency"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",208,[[["encodabledependency"],["self"]],["bool"]]],[11,"le","","",208,[[["encodabledependency"],["self"]],["bool"]]],[11,"gt","","",208,[[["encodabledependency"],["self"]],["bool"]]],[11,"ge","","",208,[[["encodabledependency"],["self"]],["bool"]]],[11,"partial_cmp","","",209,[[["encodablepackageid"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",209,[[["encodablepackageid"],["self"]],["bool"]]],[11,"le","","",209,[[["encodablepackageid"],["self"]],["bool"]]],[11,"gt","","",209,[[["encodablepackageid"],["self"]],["bool"]]],[11,"ge","","",209,[[["encodablepackageid"],["self"]],["bool"]]],[11,"partial_cmp","cargo::core","",3,[[["self"],["resolveversion"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",4,[[["gitreference"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",4,[[["gitreference"],["self"]],["bool"]]],[11,"le","","",4,[[["gitreference"],["self"]],["bool"]]],[11,"gt","","",4,[[["gitreference"],["self"]],["bool"]]],[11,"ge","","",4,[[["gitreference"],["self"]],["bool"]]],[11,"partial_cmp","","",77,[[["self"],["sourceid"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","cargo::ops::tree","",108,[[["node"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",108,[[["node"],["self"]],["bool"]]],[11,"le","","",108,[[["node"],["self"]],["bool"]]],[11,"gt","","",108,[[["node"],["self"]],["bool"]]],[11,"ge","","",108,[[["node"],["self"]],["bool"]]],[11,"partial_cmp","cargo::util","",127,[[["self"],["canonicalurl"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",127,[[["self"],["canonicalurl"]],["bool"]]],[11,"le","","",127,[[["self"],["canonicalurl"]],["bool"]]],[11,"gt","","",127,[[["self"],["canonicalurl"]],["bool"]]],[11,"ge","","",127,[[["self"],["canonicalurl"]],["bool"]]],[11,"partial_cmp","cargo::util::command_prelude","",130,[[["commandinfo"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",130,[[["commandinfo"],["self"]],["bool"]]],[11,"le","","",130,[[["commandinfo"],["self"]],["bool"]]],[11,"gt","","",130,[[["commandinfo"],["self"]],["bool"]]],[11,"ge","","",130,[[["commandinfo"],["self"]],["bool"]]],[11,"partial_cmp","cargo::util::toml","",193,[[["self"],["profilepackagespec"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",193,[[["self"],["profilepackagespec"]],["bool"]]],[11,"le","","",193,[[["self"],["profilepackagespec"]],["bool"]]],[11,"gt","","",193,[[["self"],["profilepackagespec"]],["bool"]]],[11,"ge","","",193,[[["self"],["profilepackagespec"]],["bool"]]],[11,"deref","cargo::core::compiler","",27,[[["self"]],["unitinner"]]],[11,"deref","cargo::core","",37,[[["self"]],["str"]]],[11,"fmt","cargo::core::compiler","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",205,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::core::compiler::unit_graph","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::core::dependency","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::core::features","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::core","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::core::manifest","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::core::package","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::core::package_id","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::core","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::core::profiles","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::core::resolver","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",208,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",209,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::core::resolver::features","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::core","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::core::resolver","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::core::shell","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::core","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::core::source","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::core::summary","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::core","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",83,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::ops","",85,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",104,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",103,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",102,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",99,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",86,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",105,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::ops::tree","",108,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",107,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::sources::directory","",115,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::sources","",116,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::sources::git","",212,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",117,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::sources::path","",119,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::util","",127,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::util::config","",135,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",143,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",146,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",136,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",137,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",138,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",147,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",217,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",144,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",139,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",145,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",140,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",141,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",142,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",148,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::util","",150,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::util::diagnostic_server","",158,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::util::errors","",159,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",166,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",167,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",168,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",160,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",161,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",163,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",162,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::util","",169,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",170,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::util::graph","",171,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::util::process_builder","",183,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::util::rustc","",186,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::util::toml","",191,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",223,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",198,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",196,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",189,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",192,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",190,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",193,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",224,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",194,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",195,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",197,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",225,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::core::compiler","",205,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::core::features","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::core","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::core::manifest","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::core::package","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::core::package_id","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::core","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::core::profiles","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::core::resolver","",209,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::core","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::sources::git","",212,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::util::config","",143,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",217,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::util::errors","",159,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",166,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",167,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",168,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",160,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",161,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo::util::process_builder","",183,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo","",2,[[["formatter"],["self"]],["result"]]],[11,"hash","cargo::core::compiler","",16,[[["self"],["__h"]]]],[11,"hash","","",23,[[["self"],["__h"]]]],[11,"hash","","",25,[[["self"],["__h"]]]],[11,"hash","","",205,[[["self"],["__h"]]]],[11,"hash","","",14,[[["self"],["__h"]]]],[11,"hash","","",27,[[["self"],["h"]]]],[11,"hash","cargo::core::compiler::unit_graph","",29,[[["self"],["__h"]]]],[11,"hash","cargo::core::dependency","",32,[[["self"],["__h"]]]],[11,"hash","","",31,[[["self"],["__h"]]]],[11,"hash","cargo::core::features","",34,[[["self"],["__h"]]]],[11,"hash","cargo::core","",37,[[["self"],["h"]]]],[11,"hash","cargo::core::manifest","",41,[[["self"],["__h"]]]],[11,"hash","","",42,[[["self"],["__h"]]]],[11,"hash","","",46,[[["self"],["__h"]]]],[11,"hash","","",43,[[["self"],["h"]]]],[11,"hash","cargo::core::package","",48,[[["self"],["h"]]]],[11,"hash","cargo::core::package_id","",51,[[["s"],["self"]]]],[11,"hash","","",207,[[["s"],["self"]]]],[11,"hash","cargo::core","",52,[[["self"],["__h"]]]],[11,"hash","cargo::core::profiles","",53,[[["self"],["h"]]]],[11,"hash","","",55,[[["self"],["__h"]]]],[11,"hash","","",56,[[["self"],["__h"]]]],[11,"hash","","",58,[[["self"],["__h"]]]],[11,"hash","cargo::core::resolver","",209,[[["self"],["__h"]]]],[11,"hash","cargo::core::resolver::features","",66,[[["self"],["__h"]]]],[11,"hash","cargo::core::resolver","",63,[[["self"],["__h"]]]],[11,"hash","","",61,[[["self"],["__h"]]]],[11,"hash","cargo::core","",4,[[["self"],["__h"]]]],[11,"hash","","",77,[[["s"],["self"]]]],[11,"hash","cargo::core::summary","",81,[[["self"],["h"]]]],[11,"hash","cargo::ops::tree","",108,[[["self"],["__h"]]]],[11,"hash","","",107,[[["self"],["__h"]]]],[11,"hash","cargo::util","",127,[[["s"],["self"]]]],[11,"hash","cargo::util::toml","",193,[[["self"],["__h"]]]],[11,"from_str","cargo::core::features","",34,[[["str"]],[["result",["error"]],["error"]]]],[11,"from_str","cargo::core::resolver","",209,[[["str"]],[["encodablepackageid"],["cargoresult",["encodablepackageid"]]]]],[11,"from_str","cargo::ops","",105,[[["str"]],[["result",["error"]],["error"]]]],[11,"from_str","cargo::ops::tree","",112,[[["str"]],[["str"],["charset"],["result",["charset","str"]]]]],[11,"from_str","","",113,[[["str"]],[["prefix"],["str"],["result",["prefix","str"]]]]],[11,"borrow","cargo::core","",37,[[["self"]],["str"]]],[11,"source","cargo::core::resolver","",65,[[["self"]],[["option",["error"]],["error"]]]],[11,"source","cargo::util::config","",217,[[["self"]],[["option",["error"]],["error"]]]],[11,"source","cargo::util::errors","",166,[[["self"]],[["option",["error"]],["error"]]]],[11,"source","","",167,[[["self"]],[["option",["error"]],["error"]]]],[11,"source","","",168,[[["self"]],[["option",["error"]],["error"]]]],[11,"read","cargo::util","",169,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"seek","","",169,[[["self"],["seekfrom"]],[["result",["u64"]],["u64"]]]],[11,"write","","",169,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",169,[[["self"]],["result"]]],[11,"serialize","cargo::core::compiler","",16,[[["s"],["self"]],["result"]]],[11,"serialize","","",23,[[["s"],["self"]],["result"]]],[11,"serialize","","",25,[[["self"],["__s"]],["result"]]],[11,"serialize","cargo::core::dependency","",32,[[["s"],["self"]],["result"]]],[11,"serialize","","",31,[[["s"],["self"]],["result"]]],[11,"serialize","cargo::core::features","",34,[[["self"],["__s"]],["result"]]],[11,"serialize","cargo::core","",37,[[["s"],["self"]],["result"]]],[11,"serialize","cargo::core::manifest","",42,[[["s"],["self"]],["result"]]],[11,"serialize","","",46,[[["serializer"],["self"]],["result"]]],[11,"serialize","cargo::core::package","",48,[[["s"],["self"]],["result"]]],[11,"serialize","cargo::core::package_id","",51,[[["s"],["self"]],["result"]]],[11,"serialize","cargo::core","",52,[[["s"],["self"]],["result"]]],[11,"serialize","cargo::core::profiles","",53,[[["self"],["__s"]],["result"]]],[11,"serialize","","",55,[[["s"],["self"]],["result"]]],[11,"serialize","","",56,[[["self"],["__s"]],["result"]]],[11,"serialize","cargo::core::resolver","",64,[[["self"],["__s"]],["result"]]],[11,"serialize","","",208,[[["self"],["__s"]],["result"]]],[11,"serialize","","",209,[[["s"],["self"]],["result"]]],[11,"serialize","cargo::core","",71,[[["s"],["self"]],["result"]]],[11,"serialize","","",77,[[["s"],["self"]],["result"]]],[11,"serialize","cargo::core::summary","",80,[[["s"],["self"]],["result"]]],[11,"serialize","cargo::ops","",210,[[["self"],["__s"]],["result"]]],[11,"serialize","cargo::sources::git","",212,[[["serializer"],["self"]],["result"]]],[11,"serialize","","",117,[[["self"],["__s"]],["result"]]],[11,"serialize","","",118,[[["self"],["__s"]],["result"]]],[11,"serialize","","",211,[[["self"],["__s"]],["result"]]],[11,"serialize","cargo::util::diagnostic_server","",151,[[["self"],["__s"]],["result"]]],[11,"serialize","cargo::util::machine_message","",175,[[["self"],["__s"]],["result"]]],[11,"serialize","","",176,[[["self"],["__s"]],["result"]]],[11,"serialize","","",177,[[["self"],["__s"]],["result"]]],[11,"serialize","","",178,[[["self"],["__s"]],["result"]]],[11,"serialize","","",179,[[["self"],["__s"]],["result"]]],[11,"serialize","","",180,[[["self"],["__s"]],["result"]]],[11,"serialize","cargo::util::toml","",191,[[["self"],["__s"]],["result"]]],[11,"serialize","","",223,[[["self"],["__s"]],["result"]]],[11,"serialize","","",198,[[["self"],["__s"]],["result"]]],[11,"serialize","","",196,[[["self"],["__s"]],["result"]]],[11,"serialize","","",189,[[["s"],["self"]],["result"]]],[11,"serialize","","",192,[[["self"],["__s"]],["result"]]],[11,"serialize","","",190,[[["self"],["__s"]],["result"]]],[11,"serialize","","",193,[[["s"],["self"]],["result"]]],[11,"serialize","","",224,[[["self"],["__s"]],["result"]]],[11,"serialize","","",194,[[["self"],["__s"]],["result"]]],[11,"serialize","","",195,[[["self"],["__s"]],["result"]]],[11,"serialize","","",197,[[["self"],["__s"]],["result"]]],[11,"serialize","","",225,[[["self"],["__s"]],["result"]]],[11,"deserialize","cargo::core::features","",34,[[["__d"]],["result"]]],[11,"deserialize","cargo::core","",37,[[["d"]],["result"]]],[11,"deserialize","cargo::core::package_id","",51,[[["d"]],[["packageid"],["result",["packageid"]]]]],[11,"deserialize","cargo::core","",52,[[["d"]],[["result",["packageidspec"]],["packageidspec"]]]],[11,"deserialize","cargo::core::resolver","",64,[[["__d"]],["result"]]],[11,"deserialize","","",208,[[["__d"]],["result"]]],[11,"deserialize","","",209,[[["d"]],[["encodablepackageid"],["result",["encodablepackageid"]]]]],[11,"deserialize","cargo::core","",77,[[["d"]],[["result",["sourceid"]],["sourceid"]]]],[11,"deserialize","cargo::ops","",105,[[["d"]],["result"]]],[11,"deserialize","cargo::sources::registry","",120,[[["__d"]],["result"]]],[11,"deserialize","","",213,[[["__d"]],["result"]]],[11,"deserialize","cargo::util::config","",135,[[["d"]],[["result",["value"]],["value"]]]],[11,"deserialize","","",143,[[["d"]],[["result",["definition"]],["definition"]]]],[11,"deserialize","","",146,[[["__d"]],["result"]]],[11,"deserialize","","",136,[[["d"]],["result"]]],[11,"deserialize","","",137,[[["__d"]],["result"]]],[11,"deserialize","","",139,[[["__d"]],["result"]]],[11,"deserialize","","",145,[[["__d"]],["result"]]],[11,"deserialize","","",140,[[["__d"]],["result"]]],[11,"deserialize","","",141,[[["__d"]],["result"]]],[11,"deserialize","","",142,[[["__d"]],["result"]]],[11,"deserialize","","",148,[[["__d"]],["result"]]],[11,"deserialize","cargo::util::diagnostic_server","",151,[[["__d"]],["result"]]],[11,"deserialize","cargo::util::toml","",191,[[["d"]],["result"]]],[11,"deserialize","","",223,[[["__d"]],["result"]]],[11,"deserialize","","",198,[[["__d"]],["result"]]],[11,"deserialize","","",196,[[["__d"]],["result"]]],[11,"deserialize","","",189,[[["d"]],[["tomloptlevel"],["result",["tomloptlevel"]]]]],[11,"deserialize","","",192,[[["d"]],["result"]]],[11,"deserialize","","",190,[[["__d"]],["result"]]],[11,"deserialize","","",193,[[["d"]],[["profilepackagespec"],["result",["profilepackagespec"]]]]],[11,"deserialize","","",224,[[["d"]],["result"]]],[11,"deserialize","","",194,[[["d"]],["result"]]],[11,"deserialize","","",195,[[["d"]],["result"]]],[11,"deserialize","","",197,[[["__d"]],["result"]]],[11,"deserialize","","",225,[[["__d"]],["result"]]],[11,"custom","cargo::util::config","",217,[[["display"]],["self"]]],[11,"parents_of","cargo::util::graph","",171,[[["self"],["packageid"]]]],[11,"with_name","cargo::util::command_prelude","Creates a new instance of [`Arg`] using a unique string…",215,[[["str"]],["arg"]]],[11,"from_usage","","Creates a new instance of [`Arg`] from a usage string.…",215,[[["str"]],["arg"]]],[11,"short","","Sets the short version of the argument without the…",215,[[["s"]],["arg"]]],[11,"long","","Sets the long version of the argument without the…",215,[[["str"]],["arg"]]],[11,"alias","","Allows adding a [`Arg`] alias, which function as \"hidden\"…",215,[[["s"]],["arg"]]],[11,"aliases","","Allows adding [`Arg`] aliases, which function as \"hidden\"…",215,[[],["arg"]]],[11,"visible_alias","","Allows adding a [`Arg`] alias that functions exactly like…",215,[[["s"]],["arg"]]],[11,"visible_aliases","","Allows adding multiple [`Arg`] aliases that functions…",215,[[],["arg"]]],[11,"help","","Sets the short help text of the argument that will be…",215,[[["str"]],["arg"]]],[11,"long_help","","Sets the long help text of the argument that will be…",215,[[["str"]],["arg"]]],[11,"last","","Specifies that this arg is the last, or final, positional…",215,[[["bool"]],["arg"]]],[11,"required","","Sets whether or not the argument is required by default.…",215,[[["bool"]],["arg"]]],[11,"require_equals","","Requires that options use the `--option=val` syntax (i.e.…",215,[[["bool"]],["arg"]]],[11,"allow_hyphen_values","","Allows values which start with a leading hyphen (`-`)",215,[[["bool"]],["arg"]]],[11,"required_unless","","Sets an arg that override this arg's required setting.…",215,[[["str"]],["arg"]]],[11,"required_unless_all","","Sets args that override this arg's required setting. (i.e.…",215,[[],["arg"]]],[11,"required_unless_one","","Sets args that override this arg's [required] setting.…",215,[[],["arg"]]],[11,"conflicts_with","","Sets a conflicting argument by name. I.e. when using this…",215,[[["str"]],["arg"]]],[11,"conflicts_with_all","","The same as [`Arg::conflicts_with`] but allows specifying…",215,[[],["arg"]]],[11,"overrides_with","","Sets a overridable argument by name. I.e. this argument…",215,[[["str"]],["arg"]]],[11,"overrides_with_all","","Sets multiple mutually overridable arguments by name. I.e.…",215,[[],["arg"]]],[11,"requires","","Sets an argument by name that is required when this one is…",215,[[["str"]],["arg"]]],[11,"requires_if","","Allows a conditional requirement. The requirement will…",215,[[["str"],["str"]],["arg"]]],[11,"requires_ifs","","Allows multiple conditional requirements. The requirement…",215,[[],["arg"]]],[11,"required_if","","Allows specifying that an argument is [required]…",215,[[["str"],["str"]],["arg"]]],[11,"required_ifs","","Allows specifying that an argument is [required] based on…",215,[[],["arg"]]],[11,"requires_all","","Sets multiple arguments by names that are required when…",215,[[],["arg"]]],[11,"takes_value","","Specifies that the argument takes a value at run time.",215,[[["bool"]],["arg"]]],[11,"hide_possible_values","","Specifies if the possible values of an argument should be…",215,[[["bool"]],["arg"]]],[11,"hide_default_value","","Specifies if the default value of an argument should be…",215,[[["bool"]],["arg"]]],[11,"index","","Specifies the index of a positional argument starting at 1.",215,[[["u64"]],["arg"]]],[11,"multiple","","Specifies that the argument may appear more than once. For…",215,[[["bool"]],["arg"]]],[11,"value_terminator","","Specifies a value that stops parsing multiple values of a…",215,[[["str"]],["arg"]]],[11,"global","","Specifies that an argument can be matched to all child…",215,[[["bool"]],["arg"]]],[11,"empty_values","","Allows an argument to accept explicitly empty values. An…",215,[[["bool"]],["arg"]]],[11,"hidden","","Hides an argument from help message output.",215,[[["bool"]],["arg"]]],[11,"possible_values","","Specifies a list of possible values for this argument. At…",215,[[],["arg"]]],[11,"possible_value","","Specifies a possible value for this argument, one at a…",215,[[["str"]],["arg"]]],[11,"case_insensitive","","When used with [`Arg::possible_values`] it allows the…",215,[[["bool"]],["arg"]]],[11,"group","","Specifies the name of the [`ArgGroup`] the argument…",215,[[["str"]],["arg"]]],[11,"groups","","Specifies the names of multiple [`ArgGroup`]'s the…",215,[[],["arg"]]],[11,"number_of_values","","Specifies how many values are required to satisfy this…",215,[[["u64"]],["arg"]]],[11,"validator","","Allows one to perform a custom validation on the argument…",215,[[["f"]],["arg"]]],[11,"validator_os","","Works identically to Validator but is intended to be used…",215,[[["f"]],["arg"]]],[11,"max_values","","Specifies the maximum number of values are for this…",215,[[["u64"]],["arg"]]],[11,"min_values","","Specifies the minimum number of values for this argument.…",215,[[["u64"]],["arg"]]],[11,"use_delimiter","","Specifies whether or not an argument should allow grouping…",215,[[["bool"]],["arg"]]],[11,"require_delimiter","","Specifies that multiple values may only be set using the…",215,[[["bool"]],["arg"]]],[11,"value_delimiter","","Specifies the separator to use when values are clumped…",215,[[["str"]],["arg"]]],[11,"value_names","","Specify multiple names for values of option arguments.…",215,[[],["arg"]]],[11,"value_name","","Specifies the name for value of [option] or [positional]…",215,[[["str"]],["arg"]]],[11,"default_value","","Specifies the value of the argument when not specified at…",215,[[["str"]],["arg"]]],[11,"default_value_os","","Provides a default value in the exact same manner as…",215,[[["osstr"]],["arg"]]],[11,"default_value_if","","Specifies the value of the argument if `arg` has been used…",215,[[["option",["str"]],["str"],["str"]],["arg"]]],[11,"default_value_if_os","","Provides a conditional default value in the exact same…",215,[[["option",["osstr"]],["osstr"],["str"]],["arg"]]],[11,"default_value_ifs","","Specifies multiple values and conditions in the same…",215,[[],["arg"]]],[11,"default_value_ifs_os","","Provides multiple conditional default values in the exact…",215,[[],["arg"]]],[11,"env","","Specifies that if the value is not passed in as an…",215,[[["str"]],["arg"]]],[11,"env_os","","Specifies that if the value is not passed in as an…",215,[[["osstr"]],["arg"]]],[11,"hide_env_values","","@TODO @p2 @docs @release: write docs",215,[[["bool"]],["arg"]]],[11,"next_line_help","","When set to `true` the help string will be displayed on…",215,[[["bool"]],["arg"]]],[11,"display_order","","Allows custom ordering of args within the help message.…",215,[[["usize"]],["arg"]]],[11,"raw","","Indicates that all parameters passed after this should not…",215,[[["bool"]],["arg"]]],[11,"hidden_short_help","","Hides an argument from short help message output.",215,[[["bool"]],["arg"]]],[11,"hidden_long_help","","Hides an argument from long help message output.",215,[[["bool"]],["arg"]]],[11,"is_set","","Checks if one of the [`ArgSettings`] settings is set for…",215,[[["argsettings"],["self"]],["bool"]]],[11,"set","","Sets one of the [`ArgSettings`] settings for the argument.",215,[[["argsettings"]],["arg"]]],[11,"unset","","Unsets one of the [`ArgSettings`] settings for the argument.",215,[[["argsettings"]],["arg"]]],[11,"value_of","","Gets the value of a specific [option] or [positional]…",216,[[["s"],["self"]],[["str"],["option",["str"]]]]],[11,"value_of_lossy","","Gets the lossy value of a specific argument. If the…",216,[[["s"],["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"value_of_os","","Gets the OS version of a string value of a specific…",216,[[["s"],["self"]],[["osstr"],["option",["osstr"]]]]],[11,"values_of","","Gets a [`Values`] struct which implements [`Iterator`] for…",216,[[["s"],["self"]],[["values"],["option",["values"]]]]],[11,"values_of_lossy","","Gets the lossy values of a specific argument. If the…",216,[[["s"],["self"]],[["vec",["string"]],["option",["vec"]]]]],[11,"values_of_os","","Gets a [`OsValues`] struct which is implements…",216,[[["s"],["self"]],[["osvalues"],["option",["osvalues"]]]]],[11,"is_present","","Returns `true` if an argument was present at runtime,…",216,[[["s"],["self"]],["bool"]]],[11,"occurrences_of","","Returns the number of times an argument was used at…",216,[[["s"],["self"]],["u64"]]],[11,"index_of","","Gets the starting index of the argument in respect to all…",216,[[["s"],["self"]],[["option",["usize"]],["usize"]]]],[11,"indices_of","","Gets all indices of the argument in respect to all other…",216,[[["s"],["self"]],[["option",["indices"]],["indices"]]]],[11,"subcommand_matches","","Because [`Subcommand`]s are essentially \"sub-[`App`]s\"…",216,[[["s"],["self"]],[["option",["argmatches"]],["argmatches"]]]],[11,"subcommand_name","","Because [`Subcommand`]s are essentially \"sub-[`App`]s\"…",216,[[["self"]],[["str"],["option",["str"]]]]],[11,"subcommand","","This brings together [`ArgMatches::subcommand_matches`]…",216,[[["self"]]]],[11,"usage","","Returns a string slice of the usage statement for the…",216,[[["self"]],["str"]]]],"p":[[3,"CommitInfo"],[3,"CfgInfo"],[3,"VersionInfo"],[4,"ResolveVersion"],[4,"GitReference"],[4,"WorkspaceConfig"],[13,"Member"],[3,"BuildConfig"],[3,"BuildContext"],[3,"RustcTargetData"],[3,"TargetInfo"],[3,"Compilation"],[3,"Doctest"],[3,"Context"],[3,"BuildOutput"],[3,"BuildScripts"],[4,"CompileMode"],[13,"Check"],[13,"Doc"],[4,"MessageFormat"],[13,"Json"],[4,"FileFlavor"],[13,"Linkable"],[4,"CompileKind"],[4,"Freshness"],[3,"CompileTarget"],[3,"BuildScriptOutputs"],[3,"Unit"],[3,"UnitInterner"],[3,"UnitDep"],[8,"Executor"],[4,"DepKind"],[3,"Dependency"],[3,"CliUnstable"],[4,"Edition"],[3,"Feature"],[3,"Features"],[3,"InternedString"],[3,"DelayedWarning"],[3,"ManifestMetadata"],[4,"EitherManifest"],[4,"LibKind"],[4,"TargetKind"],[4,"TargetSourcePath"],[3,"Manifest"],[3,"VirtualManifest"],[3,"Target"],[3,"Warnings"],[3,"Package"],[3,"PackageSet"],[3,"Downloads"],[3,"PackageId"],[3,"PackageIdSpec"],[3,"Profile"],[4,"ProfileRoot"],[4,"Lto"],[4,"PanicStrategy"],[3,"Profiles"],[3,"UnitFor"],[8,"Registry"],[3,"PackageRegistry"],[3,"ResolveOpts"],[4,"ActivateError"],[4,"ResolveBehavior"],[3,"EncodableResolve"],[3,"ResolveError"],[3,"RequestedFeatures"],[4,"HasDevUnits"],[4,"FeaturesFor"],[3,"ResolvedFeatures"],[3,"FeatureResolver"],[3,"Resolve"],[4,"Verbosity"],[4,"ColorChoice"],[3,"Shell"],[4,"MaybePackage"],[13,"Download"],[3,"SourceId"],[8,"Source"],[3,"SourceMap"],[4,"FeatureValue"],[3,"Summary"],[3,"Workspace"],[3,"WorkspaceRootConfig"],[3,"CleanOptions"],[3,"CompileOptions"],[3,"DocOptions"],[3,"FetchOptions"],[3,"UpdateOptions"],[3,"NewOptions"],[3,"OutputMetadataOptions"],[3,"PackageOpts"],[3,"TestOptions"],[3,"FixOptions"],[3,"HttpTimeout"],[3,"OwnersOptions"],[3,"PublishOpts"],[3,"RegistryConfig"],[3,"VendorOptions"],[4,"CompileFilter"],[13,"Default"],[13,"Only"],[4,"FilterRule"],[4,"LibRule"],[4,"Packages"],[4,"VersionControl"],[3,"TreeOptions"],[4,"EdgeKind"],[4,"Node"],[13,"Package"],[13,"Feature"],[4,"Target"],[4,"Charset"],[4,"Prefix"],[3,"SourceConfigMap"],[3,"DirectorySource"],[3,"GitSource"],[3,"GitRemote"],[3,"GitDatabase"],[3,"PathSource"],[3,"RegistryConfig"],[4,"MaybeLock"],[13,"Download"],[8,"RegistryData"],[3,"RegistrySource"],[3,"ReplacedSource"],[4,"ProgressStyle"],[3,"CanonicalUrl"],[4,"AppSettings"],[4,"ProfileChecking"],[4,"CommandInfo"],[13,"BuiltIn"],[13,"External"],[8,"AppExt"],[8,"ArgMatchesExt"],[3,"Value"],[3,"PathAndArgs"],[3,"TargetCfgConfig"],[3,"TargetConfig"],[3,"CargoHttpConfig"],[3,"SslVersionConfigRange"],[3,"CargoNetConfig"],[3,"CargoBuildConfig"],[4,"Definition"],[4,"ConfigValue"],[4,"SslVersionConfig"],[3,"ConfigRelativePath"],[3,"Config"],[3,"StringList"],[3,"State"],[3,"DependencyQueue"],[4,"Message"],[13,"Fixing"],[13,"FixFailed"],[13,"ReplaceFailed"],[13,"EditionAlreadyEnabled"],[13,"IdiomEditionMismatch"],[3,"DiagnosticPrinter"],[3,"RustfixDiagnosticServer"],[3,"HttpNot200"],[3,"ProcessError"],[3,"CargoTestError"],[3,"CliError"],[4,"Test"],[13,"UnitTest"],[8,"CargoResultExt"],[3,"VerboseError"],[3,"InternalError"],[3,"ManifestError"],[3,"FileLock"],[3,"Filesystem"],[3,"Graph"],[8,"IntoUrl"],[3,"LockServer"],[3,"LockServerClient"],[3,"FromCompiler"],[3,"Artifact"],[3,"ArtifactProfile"],[3,"BuildScript"],[3,"TimingInfo"],[3,"BuildFinished"],[8,"Message"],[3,"Retry"],[3,"ProcessBuilder"],[3,"Progress"],[3,"Queue"],[3,"Rustc"],[3,"Sha256"],[8,"ToSemver"],[3,"TomlOptLevel"],[3,"TomlProfile"],[4,"TomlDependency"],[4,"U32OrBool"],[4,"ProfilePackageSpec"],[4,"StringOrBool"],[4,"VecStringOrBool"],[3,"TomlProfiles"],[3,"TomlProject"],[3,"TomlManifest"],[3,"GitRepo"],[3,"HgRepo"],[3,"PijulRepo"],[3,"FossilRepo"],[8,"IntoUrlWithBase"],[3,"Members"],[3,"Metadata"],[3,"DefaultExecutor"],[3,"PackageIdStableHash"],[3,"EncodableDependency"],[3,"EncodablePackageId"],[3,"ExportInfo"],[3,"GitCheckout"],[3,"GitRevision"],[3,"RegistryPackage"],[3,"LockServerStarted"],[3,"Arg"],[3,"ArgMatches"],[3,"ConfigError"],[3,"PackageCacheLock"],[3,"StartedServer"],[3,"ManifestCauses"],[3,"PathAncestors"],[3,"Profiler"],[3,"DetailedTomlDependency"],[3,"StringOrVec"],[3,"TomlWorkspace"],[6,"App"]]};
searchIndex["cargo_compare"] = {"doc":"Support for comparing Cargo and Guppy.","i":[[3,"CargoCompare","cargo_compare","",null,null],[3,"GlobalContext","","Global context for Cargo comparisons.",null,null],[0,"common","","",null,null],[3,"GuppyCargoCommon","cargo_compare::common","Options that are common to Guppy and Cargo.",null,null],[12,"pf","","",0,null],[12,"include_dev","","Include dev dependencies for initial packages",0,null],[12,"v2","","Use new feature resolver",0,null],[12,"target_platform","","Evaluate for the target triple (default: current platform)",0,null],[12,"metadata_opts","","",0,null],[3,"FeatureMap","","",null,null],[12,"target_map","","",1,null],[12,"host_map","","",1,null],[11,"resolve_cargo","","Resolves data for this query using Cargo.",0,[[["self"],["globalcontext"]],[["result",["featuremap"]],["featuremap"]]]],[11,"resolve_guppy","","Resolves data for this query using Guppy.",0,[[["self"],["globalcontext"]],[["result",["featuremap"]],["featuremap"]]]],[11,"make_target_platform","","Returns a `Platform` corresponding to the target platform.",0,[[["self"]],[["result",["platform"]],["platform"]]]],[0,"diff","cargo_compare","",null,null],[3,"DiffOpts","cargo_compare::diff","Options for cargo/guppy comparisons.",null,null],[12,"common","","",2,null],[11,"exec","","Executes this command.",2,[[["globalcontext"]],["result"]]],[0,"type_conversions","cargo_compare","Type conversions between cargo and guppy.",null,null],[8,"ToGuppy","cargo_compare::type_conversions","",null,null],[16,"Guppy","","",3,null],[10,"to_guppy","","",3,[[["self"]]]],[11,"exec","cargo_compare","",4,[[],["result"]]],[11,"new","","",5,[[["packagegraph"],["bool"]],["result"]]],[11,"home_dir","","",5,[[["self"]],["path"]]],[11,"graph","","",5,[[["self"]],["packagegraph"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","cargo_compare::common","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","cargo_compare::diff","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"clone","cargo_compare::common","",1,[[["self"]],["featuremap"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo_compare::diff","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo_compare","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"clap","cargo_compare::common","",0,[[],["app"]]],[11,"from_clap","","",0,[[["argmatches"]],["self"]]],[11,"clap","cargo_compare::diff","",2,[[],["app"]]],[11,"from_clap","","",2,[[["argmatches"]],["self"]]],[11,"clap","cargo_compare","",4,[[],["app"]]],[11,"from_clap","","",4,[[["argmatches"]],["self"]]],[11,"augment_clap","cargo_compare::common","",0,[[["app"]],["app"]]],[11,"is_subcommand","","",0,[[],["bool"]]],[11,"augment_clap","cargo_compare::diff","",2,[[["app"]],["app"]]],[11,"is_subcommand","","",2,[[],["bool"]]],[11,"augment_clap","cargo_compare","",4,[[["app"]],["app"]]],[11,"is_subcommand","","",4,[[],["bool"]]]],"p":[[3,"GuppyCargoCommon"],[3,"FeatureMap"],[3,"DiffOpts"],[8,"ToGuppy"],[3,"CargoCompare"],[3,"GlobalContext"]]};
searchIndex["cargo_guppy"] = {"doc":"","i":[[3,"QueryOptions","cargo_guppy","",null,null],[3,"BaseFilterOptions","","",null,null],[12,"omit_edges_into","","Omit edges that point into a given package; useful for…",0,null],[12,"kind","","Kind of crates to select",0,null],[3,"FilterOptions","","",null,null],[12,"base_opts","","",1,null],[12,"include_dev","","Include dev dependencies",1,null],[12,"include_build","","Include build dependencies",1,null],[12,"target","","Target to filter, default is to match all targets",1,null],[3,"DupsOptions","","",null,null],[3,"ResolveCargoOptions","","",null,null],[3,"CmdSelectOptions","","",null,null],[3,"SubtreeSizeOptions","","",null,null],[4,"Kind","","",null,null],[13,"All","","",2,null],[13,"Workspace","","",2,null],[13,"DirectThirdParty","","",2,null],[13,"ThirdParty","","",2,null],[4,"BuildKind","","",null,null],[13,"All","","",3,null],[13,"Target","","",3,null],[13,"ProcMacro","","",3,null],[13,"TargetAndProcMacro","","",3,null],[13,"Host","","",3,null],[5,"cmd_diff","","",null,[[["str"],["bool"]],[["error"],["result",["error"]]]]],[5,"cmd_dups","","",null,[[["dupsoptions"]],[["error"],["result",["error"]]]]],[5,"cmd_resolve_cargo","","",null,[[["resolvecargooptions"]],[["error"],["result",["error"]]]]],[5,"cmd_select","","",null,[[["cmdselectoptions"]],[["error"],["result",["error"]]]]],[5,"cmd_subtree_size","","",null,[[["subtreesizeoptions"]],[["error"],["result",["error"]]]]],[11,"variants","","",2,[[]]],[11,"should_traverse","","Returns true if this link should be traversed.",2,[[["packagelink"]],["bool"]]],[11,"apply","","Constructs a `PackageQuery` based on these options.",4,[[["self"],["packagegraph"]],[["result",["packagequery","error"]],["packagequery"],["error"]]]],[11,"omitted_package_ids","","Return the set of omitted package IDs.",0,[[["self"],["packagegraph"]]]],[11,"make_resolver","","Construct a package resolver based on the filter options.",1,[[["packagegraph"],["self"]]]],[11,"variants","","",3,[[]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"clone","","",2,[[["self"]],["kind"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",2,[[["str"]],["result"]]],[11,"from_str","","",3,[[["str"]],["result"]]],[11,"accept_package","","",2,[[["cargoresolvephase"],["self"],["packagelink"]],["bool"]]],[11,"clap","","",4,[[],["app"]]],[11,"from_clap","","",4,[[["argmatches"]],["self"]]],[11,"clap","","",0,[[],["app"]]],[11,"from_clap","","",0,[[["argmatches"]],["self"]]],[11,"clap","","",1,[[],["app"]]],[11,"from_clap","","",1,[[["argmatches"]],["self"]]],[11,"clap","","",5,[[],["app"]]],[11,"from_clap","","",5,[[["argmatches"]],["self"]]],[11,"clap","","",6,[[],["app"]]],[11,"from_clap","","",6,[[["argmatches"]],["self"]]],[11,"clap","","",7,[[],["app"]]],[11,"from_clap","","",7,[[["argmatches"]],["self"]]],[11,"clap","","",8,[[],["app"]]],[11,"from_clap","","",8,[[["argmatches"]],["self"]]],[11,"augment_clap","","",4,[[["app"]],["app"]]],[11,"is_subcommand","","",4,[[],["bool"]]],[11,"augment_clap","","",0,[[["app"]],["app"]]],[11,"is_subcommand","","",0,[[],["bool"]]],[11,"augment_clap","","",1,[[["app"]],["app"]]],[11,"is_subcommand","","",1,[[],["bool"]]],[11,"augment_clap","","",5,[[["app"]],["app"]]],[11,"is_subcommand","","",5,[[],["bool"]]],[11,"augment_clap","","",6,[[["app"]],["app"]]],[11,"is_subcommand","","",6,[[],["bool"]]],[11,"augment_clap","","",7,[[["app"]],["app"]]],[11,"is_subcommand","","",7,[[],["bool"]]],[11,"augment_clap","","",8,[[["app"]],["app"]]],[11,"is_subcommand","","",8,[[],["bool"]]]],"p":[[3,"BaseFilterOptions"],[3,"FilterOptions"],[4,"Kind"],[4,"BuildKind"],[3,"QueryOptions"],[3,"DupsOptions"],[3,"ResolveCargoOptions"],[3,"CmdSelectOptions"],[3,"SubtreeSizeOptions"]]};
searchIndex["cargo_metadata"] = {"doc":"Structured access to the output of `cargo metadata` and…","i":[[3,"Dependency","cargo_metadata","A dependency of the main crate",null,null],[12,"name","","Name as given in the `Cargo.toml`",0,null],[12,"source","","The source of dependency",0,null],[12,"req","","The required version",0,null],[12,"kind","","The kind of dependency this is",0,null],[12,"optional","","Whether this dependency is required or optional",0,null],[12,"uses_default_features","","Whether the default features in this dependency are used.",0,null],[12,"features","","The list of features enabled for this dependency.",0,null],[12,"target","","The target this dependency is specific to.",0,null],[12,"rename","","If the dependency is renamed, this is the new name for the…",0,null],[12,"registry","","The URL of the index of the registry where this dependency…",0,null],[3,"Artifact","","A compiler-generated file.",null,null],[12,"package_id","","The package this artifact belongs to",1,null],[12,"target","","The target this artifact was compiled for",1,null],[12,"profile","","The profile this artifact was compiled with",1,null],[12,"features","","The enabled features for this artifact",1,null],[12,"filenames","","The full paths to the generated artifacts (e.g. binary…",1,null],[12,"executable","","Path to the executable file",1,null],[12,"fresh","","If true, then the files were already generated",1,null],[3,"ArtifactProfile","","Profile settings used to determine which compiler flags to…",null,null],[12,"opt_level","","Optimization level. Possible values are 0-3, s or z.",2,null],[12,"debuginfo","","The amount of debug info. 0 for none, 1 for limited, 2 for…",2,null],[12,"debug_assertions","","State of the `cfg(debug_assertions)` directive, enabling…",2,null],[12,"overflow_checks","","State of the overflow checks.",2,null],[12,"test","","Whether this profile is a test",2,null],[3,"BuildFinished","","Final result of a build.",null,null],[12,"success","","Whether or not the build finished successfully.",3,null],[3,"BuildScript","","Output of a build script execution.",null,null],[12,"package_id","","The package this build script execution belongs to",4,null],[12,"linked_libs","","The libs to link",4,null],[12,"linked_paths","","The paths to search when resolving libs",4,null],[12,"cfgs","","Various `--cfg` flags to pass to the compiler",4,null],[12,"env","","The environment variables to add to the compilation",4,null],[12,"out_dir","","The `OUT_DIR` environment variable where this script…",4,null],[3,"CompilerMessage","","Message left by the compiler",null,null],[12,"package_id","","The package this message belongs to",5,null],[12,"target","","The target this message is aimed at",5,null],[12,"message","","The message the compiler sent.",5,null],[3,"MessageIter","","An iterator of Messages.",null,null],[3,"PackageId","","An \"opaque\" identifier for a package. It is possible to…",null,null],[12,"repr","","The underlying string representation of id.",6,null],[3,"Metadata","","Starting point for metadata returned by `cargo metadata`",null,null],[12,"packages","","A list of all crates referenced by this crate (and the…",7,null],[12,"workspace_members","","A list of all workspace members",7,null],[12,"resolve","","Dependencies graph",7,null],[12,"workspace_root","","Workspace root",7,null],[12,"target_directory","","Build directory",7,null],[3,"Resolve","","A dependency graph",null,null],[12,"nodes","","Nodes in a dependencies graph",8,null],[12,"root","","The crate for which the metadata was read.",8,null],[3,"Node","","A node in a dependencies graph",null,null],[12,"id","","An opaque identifier for a package",9,null],[12,"deps","","Dependencies in a structured format.",9,null],[12,"dependencies","","List of opaque identifiers for this node's dependencies.…",9,null],[12,"features","","Features enabled on the crate",9,null],[3,"NodeDep","","A dependency in a node",null,null],[12,"name","","The name of the dependency's library target. If the crate…",10,null],[12,"pkg","","Package ID (opaque unique identifier)",10,null],[12,"dep_kinds","","The kinds of dependencies.",10,null],[3,"DepKindInfo","","Information about a dependency kind.",null,null],[12,"kind","","The kind of dependency.",11,null],[12,"target","","The target platform for the dependency.",11,null],[3,"Package","","A crate",null,null],[12,"name","","Name as given in the `Cargo.toml`",12,null],[12,"version","","Version given in the `Cargo.toml`",12,null],[12,"authors","","Authors given in the `Cargo.toml`",12,null],[12,"id","","An opaque identifier for a package",12,null],[12,"source","","The source of the package, e.g. crates.io or `None` for…",12,null],[12,"description","","Description as given in the `Cargo.toml`",12,null],[12,"dependencies","","List of dependencies of this particular package",12,null],[12,"license","","License as given in the `Cargo.toml`",12,null],[12,"license_file","","If the package is using a nonstandard license, this key…",12,null],[12,"targets","","Targets provided by the crate (lib, bin, example, test, ...)",12,null],[12,"features","","Features provided by the crate, mapped to the features…",12,null],[12,"manifest_path","","Path containing the `Cargo.toml`",12,null],[12,"categories","","Categories as given in the `Cargo.toml`",12,null],[12,"keywords","","Keywords as given in the `Cargo.toml`",12,null],[12,"readme","","Readme as given in the `Cargo.toml`",12,null],[12,"repository","","Repository as given in the `Cargo.toml`",12,null],[12,"edition","","Default Rust edition for the package",12,null],[12,"metadata","","Contents of the free form package.metadata section",12,null],[12,"links","","The name of a native library the package is linking to.",12,null],[12,"publish","","List of registries to which this package may be published.",12,null],[3,"Source","","The source of a package such as crates.io.",null,null],[12,"repr","","The underlying string representation of a source.",13,null],[3,"Target","","A single target (lib, bin, example, ...) provided by a crate",null,null],[12,"name","","Name as given in the `Cargo.toml` or generated from the…",14,null],[12,"kind","","Kind of target (\"bin\", \"example\", \"test\", \"bench\", \"lib\")",14,null],[12,"crate_types","","Almost the same as `kind`, except when an example is a…",14,null],[12,"required_features","","This target is built only if these features are enabled.…",14,null],[12,"src_path","","Path to the main source file of the target",14,null],[12,"edition","","Rust edition for this target",14,null],[12,"doctest","","Whether or not this target has doc tests enabled, and the…",14,null],[3,"MetadataCommand","","A builder for configurating `cargo metadata` invocation.",null,null],[4,"DependencyKind","","Dependencies can come in three kinds",null,null],[13,"Normal","","The 'normal' kind",15,null],[13,"Development","","Those used in tests only",15,null],[13,"Build","","Those used in build scripts only",15,null],[4,"Error","","Error returned when executing/parsing `cargo metadata`…",null,null],[13,"CargoMetadata","","Error during execution of `cargo metadata`",16,null],[12,"stderr","cargo_metadata::Error","stderr returned by the `cargo metadata` command",17,null],[13,"Io","cargo_metadata","IO Error during execution of `cargo metadata`",16,null],[13,"Utf8","","Output of `cargo metadata` was not valid utf8",16,null],[13,"ErrUtf8","","Error output of `cargo metadata` was not valid utf8",16,null],[13,"Json","","Deserialization error (structure of json did not match…",16,null],[13,"NoJson","","The output did not contain any json",16,null],[4,"Message","","A cargo message",null,null],[13,"CompilerArtifact","","The compiler generated an artifact",18,null],[13,"CompilerMessage","","The compiler wants to display a message",18,null],[13,"BuildScriptExecuted","","A build script successfully executed.",18,null],[13,"BuildFinished","","The build has finished.",18,null],[13,"TextLine","","A line of text which isn't a cargo or compiler message.…",18,null],[4,"CargoOpt","","Cargo features flags",null,null],[13,"AllFeatures","","Run cargo with `--features-all`",19,null],[13,"NoDefaultFeatures","","Run cargo with `--no-default-features`",19,null],[13,"SomeFeatures","","Run cargo with `--features <FEATURES>`",19,null],[5,"parse_messages","","Creates an iterator of Message from a Read outputting a…",null,[[["read"]],[["ioread"],["message"],["streamdeserializer",["ioread","message"]]]]],[0,"diagnostic","","This module contains `Diagnostic` and the types/functions…",null,null],[3,"DiagnosticCode","cargo_metadata::diagnostic","The error code associated to this diagnostic.",null,null],[12,"code","","The code itself.",20,null],[12,"explanation","","An explanation for the code",20,null],[3,"DiagnosticSpanLine","","A line of code associated with the Diagnostic",null,null],[12,"text","","The line of code associated with the error",21,null],[12,"highlight_start","","Start of the section of the line to highlight. 1-based,…",21,null],[12,"highlight_end","","End of the section of the line to highlight. 1-based,…",21,null],[3,"DiagnosticSpanMacroExpansion","","Macro expansion information associated with a diagnostic.",null,null],[12,"span","","span where macro was applied to generate this code; note…",22,null],[12,"macro_decl_name","","name of macro that was applied (e.g., \"foo!\" or…",22,null],[12,"def_site_span","","span where macro was defined (if known)",22,null],[3,"DiagnosticSpan","","A section of the source code associated with a Diagnostic",null,null],[12,"file_name","","The file name or the macro name this diagnostic comes from.",23,null],[12,"byte_start","","The byte offset in the file where this diagnostic starts…",23,null],[12,"byte_end","","The byte offset in the file where this diagnostic ends.",23,null],[12,"line_start","","1-based. The line in the file.",23,null],[12,"line_end","","1-based. The line in the file.",23,null],[12,"column_start","","1-based, character offset.",23,null],[12,"column_end","","1-based, character offset.",23,null],[12,"is_primary","","Is this a \"primary\" span -- meaning the point, or one of…",23,null],[12,"text","","Source text from the start of line_start to the end of…",23,null],[12,"label","","Label that should be placed at this location (if any)",23,null],[12,"suggested_replacement","","If we are suggesting a replacement, this will contain text…",23,null],[12,"suggestion_applicability","","If the suggestion is approximate",23,null],[12,"expansion","","Macro invocations that created the code at this span, if…",23,null],[3,"Diagnostic","","A diagnostic message generated by rustc",null,null],[12,"message","","The error message of this diagnostic.",24,null],[12,"code","","The associated error code for this diagnostic",24,null],[12,"level","","\"error: internal compiler error\", \"error\", \"warning\",…",24,null],[12,"spans","","A list of source code spans this diagnostic is associated…",24,null],[12,"children","","Associated diagnostic messages.",24,null],[12,"rendered","","The message as rustc would render it",24,null],[4,"Applicability","","Whether a suggestion can be safely applied.",null,null],[13,"MachineApplicable","","The suggested replacement can be applied automatically…",25,null],[13,"HasPlaceholders","","The suggested replacement has placeholders that will need…",25,null],[13,"MaybeIncorrect","","The suggested replacement may be incorrect in some…",25,null],[13,"Unspecified","","The suggested replacement will probably not work.",25,null],[4,"DiagnosticLevel","","The diagnostic level",null,null],[13,"Ice","","Internal compiler error",26,null],[13,"Error","","Error",26,null],[13,"Warning","","Warning",26,null],[13,"Note","","Note",26,null],[13,"Help","","Help",26,null],[11,"parse_stream","cargo_metadata","Creates an iterator of Message from a Read outputting a…",18,[[["bufread"]],[["bufread"],["messageiter"]]]],[6,"Result","","Custom result type for `cargo_metadata::Error`",null,null],[11,"license_file","","Full path to the license file if one is present in the…",12,[[["self"]],[["pathbuf"],["option",["pathbuf"]]]]],[11,"readme","","Full path to the readme file if one is present in the…",12,[[["self"]],[["pathbuf"],["option",["pathbuf"]]]]],[11,"is_crates_io","","Returns true if the source is crates.io.",13,[[["self"]],["bool"]]],[11,"new","","Creates a default `cargo metadata` command, which will…",27,[[],["metadatacommand"]]],[11,"cargo_path","","Path to `cargo` executable. If not set, this will use the…",27,[[["self"]],["metadatacommand"]]],[11,"manifest_path","","Path to `Cargo.toml`",27,[[["self"]],["metadatacommand"]]],[11,"current_dir","","Current directory of the `cargo metadata` process.",27,[[["self"]],["metadatacommand"]]],[11,"no_deps","","Output information only about the root package and don't…",27,[[["self"]],["metadatacommand"]]],[11,"features","","Which features to include.",27,[[["self"],["cargoopt"]],["metadatacommand"]]],[11,"other_options","","Arbitrary command line flags to pass to `cargo`. These…",27,[[["self"]],["metadatacommand"]]],[11,"cargo_command","","Builds a command for `cargo metadata`. This is the first…",27,[[["self"]],[["command"],["result",["command"]]]]],[11,"parse","","Parses `cargo metadata` output. `data` must have been…",27,[[["str"],["asref",["str"]]],[["result",["metadata"]],["metadata"]]]],[11,"exec","","Runs configured `cargo metadata` and returns parsed…",27,[[["self"]],[["result",["metadata"]],["metadata"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"into_iter","","",28,[[],["i"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_string","","",16,[[["self"]],["string"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","cargo_metadata::diagnostic","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"to_string","","",24,[[["self"]],["string"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","cargo_metadata","",16,[[["error"]],["self"]]],[11,"from","","",16,[[["utf8error"]],["self"]]],[11,"from","","",16,[[["fromutf8error"]],["self"]]],[11,"from","","",16,[[["error"]],["self"]]],[11,"next","","",28,[[["self"]],["option"]]],[11,"clone","","",15,[[["self"]],["dependencykind"]]],[11,"clone","","",0,[[["self"]],["dependency"]]],[11,"clone","cargo_metadata::diagnostic","",20,[[["self"]],["diagnosticcode"]]],[11,"clone","","",21,[[["self"]],["diagnosticspanline"]]],[11,"clone","","",22,[[["self"]],["diagnosticspanmacroexpansion"]]],[11,"clone","","",23,[[["self"]],["diagnosticspan"]]],[11,"clone","","",25,[[["self"]],["applicability"]]],[11,"clone","","",26,[[["self"]],["diagnosticlevel"]]],[11,"clone","","",24,[[["self"]],["diagnostic"]]],[11,"clone","cargo_metadata","",2,[[["self"]],["artifactprofile"]]],[11,"clone","","",1,[[["self"]],["artifact"]]],[11,"clone","","",5,[[["self"]],["compilermessage"]]],[11,"clone","","",4,[[["self"]],["buildscript"]]],[11,"clone","","",3,[[["self"]],["buildfinished"]]],[11,"clone","","",18,[[["self"]],["message"]]],[11,"clone","","",6,[[["self"]],["packageid"]]],[11,"clone","","",7,[[["self"]],["metadata"]]],[11,"clone","","",8,[[["self"]],["resolve"]]],[11,"clone","","",9,[[["self"]],["node"]]],[11,"clone","","",10,[[["self"]],["nodedep"]]],[11,"clone","","",11,[[["self"]],["depkindinfo"]]],[11,"clone","","",12,[[["self"]],["package"]]],[11,"clone","","",13,[[["self"]],["source"]]],[11,"clone","","",14,[[["self"]],["target"]]],[11,"clone","","",19,[[["self"]],["cargoopt"]]],[11,"clone","","",27,[[["self"]],["metadatacommand"]]],[11,"default","","",15,[[],["dependencykind"]]],[11,"default","","",27,[[],["metadatacommand"]]],[11,"cmp","","",6,[[["packageid"],["self"]],["ordering"]]],[11,"eq","","",15,[[["self"],["dependencykind"]],["bool"]]],[11,"eq","","",6,[[["packageid"],["self"]],["bool"]]],[11,"ne","","",6,[[["packageid"],["self"]],["bool"]]],[11,"partial_cmp","","",6,[[["packageid"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",6,[[["packageid"],["self"]],["bool"]]],[11,"le","","",6,[[["packageid"],["self"]],["bool"]]],[11,"gt","","",6,[[["packageid"],["self"]],["bool"]]],[11,"ge","","",6,[[["packageid"],["self"]],["bool"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo_metadata::diagnostic","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo_metadata","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo_metadata::diagnostic","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","cargo_metadata","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"index","","",7,[[["self"],["packageid"]],["package"]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"source","","",16,[[["self"]],[["option",["error"]],["error"]]]],[11,"serialize","","",15,[[["self"],["__s"]],["result"]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]],[11,"serialize","cargo_metadata::diagnostic","",20,[[["self"],["__s"]],["result"]]],[11,"serialize","","",21,[[["self"],["__s"]],["result"]]],[11,"serialize","","",22,[[["self"],["__s"]],["result"]]],[11,"serialize","","",23,[[["self"],["__s"]],["result"]]],[11,"serialize","","",25,[[["self"],["__s"]],["result"]]],[11,"serialize","","",26,[[["self"],["__s"]],["result"]]],[11,"serialize","","",24,[[["self"],["__s"]],["result"]]],[11,"serialize","cargo_metadata","",2,[[["self"],["__s"]],["result"]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]],[11,"serialize","","",5,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","","",18,[[["self"],["__s"]],["result"]]],[11,"serialize","","",6,[[["self"],["__s"]],["result"]]],[11,"serialize","","",7,[[["self"],["__s"]],["result"]]],[11,"serialize","","",8,[[["self"],["__s"]],["result"]]],[11,"serialize","","",9,[[["self"],["__s"]],["result"]]],[11,"serialize","","",10,[[["self"],["__s"]],["result"]]],[11,"serialize","","",11,[[["self"],["__s"]],["result"]]],[11,"serialize","","",12,[[["self"],["__s"]],["result"]]],[11,"serialize","","",13,[[["self"],["__s"]],["result"]]],[11,"serialize","","",14,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",15,[[["__d"]],["result"]]],[11,"deserialize","","",0,[[["__d"]],["result"]]],[11,"deserialize","cargo_metadata::diagnostic","",20,[[["__d"]],["result"]]],[11,"deserialize","","",21,[[["__d"]],["result"]]],[11,"deserialize","","",22,[[["__d"]],["result"]]],[11,"deserialize","","",23,[[["__d"]],["result"]]],[11,"deserialize","","",25,[[["__d"]],["result"]]],[11,"deserialize","","",26,[[["__d"]],["result"]]],[11,"deserialize","","",24,[[["__d"]],["result"]]],[11,"deserialize","cargo_metadata","",2,[[["__d"]],["result"]]],[11,"deserialize","","",1,[[["__d"]],["result"]]],[11,"deserialize","","",5,[[["__d"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"deserialize","","",3,[[["__d"]],["result"]]],[11,"deserialize","","",18,[[["__d"]],["result"]]],[11,"deserialize","","",6,[[["__d"]],["result"]]],[11,"deserialize","","",7,[[["__d"]],["result"]]],[11,"deserialize","","",8,[[["__d"]],["result"]]],[11,"deserialize","","",9,[[["__d"]],["result"]]],[11,"deserialize","","",10,[[["__d"]],["result"]]],[11,"deserialize","","",11,[[["__d"]],["result"]]],[11,"deserialize","","",12,[[["__d"]],["result"]]],[11,"deserialize","","",13,[[["__d"]],["result"]]],[11,"deserialize","","",14,[[["__d"]],["result"]]]],"p":[[3,"Dependency"],[3,"Artifact"],[3,"ArtifactProfile"],[3,"BuildFinished"],[3,"BuildScript"],[3,"CompilerMessage"],[3,"PackageId"],[3,"Metadata"],[3,"Resolve"],[3,"Node"],[3,"NodeDep"],[3,"DepKindInfo"],[3,"Package"],[3,"Source"],[3,"Target"],[4,"DependencyKind"],[4,"Error"],[13,"CargoMetadata"],[4,"Message"],[4,"CargoOpt"],[3,"DiagnosticCode"],[3,"DiagnosticSpanLine"],[3,"DiagnosticSpanMacroExpansion"],[3,"DiagnosticSpan"],[3,"Diagnostic"],[4,"Applicability"],[4,"DiagnosticLevel"],[3,"MetadataCommand"],[3,"MessageIter"]]};
searchIndex["cargo_platform"] = {"doc":"Platform definition used by Cargo.","i":[[3,"ParseError","cargo_platform","",null,null],[4,"Cfg","","A cfg value.",null,null],[13,"Name","","A named cfg value, like `unix`.",0,null],[13,"KeyPair","","A key/value cfg pair, like `target_os = \"linux\"`.",0,null],[4,"CfgExpr","","A cfg expression.",null,null],[13,"Not","","",1,null],[13,"All","","",1,null],[13,"Any","","",1,null],[13,"Value","","",1,null],[4,"ParseErrorKind","","",null,null],[13,"UnterminatedString","","",2,null],[13,"UnexpectedChar","","",2,null],[13,"UnexpectedToken","","",2,null],[12,"expected","cargo_platform::ParseErrorKind","",3,null],[12,"found","","",3,null],[13,"IncompleteExpr","cargo_platform","",2,null],[13,"UnterminatedExpression","","",2,null],[13,"InvalidTarget","","",2,null],[4,"Platform","","Platform definition.",null,null],[13,"Name","","A named platform, like `x86_64-apple-darwin`.",4,null],[13,"Cfg","","A cfg expression, like `cfg(windows)`.",4,null],[11,"matches_key","","Utility function to check if the key, \"cfg(..)\" matches…",1,[[["str"]],["bool"]]],[11,"matches","","",1,[[["self"]],["bool"]]],[11,"new","","",5,[[["str"],["parseerrorkind"]],["parseerror"]]],[11,"matches","","Returns whether the Platform matches the given target and…",4,[[["str"],["self"]],["bool"]]],[11,"check_cfg_attributes","","",4,[[["self"],["vec"]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"clone","","",1,[[["self"]],["cfgexpr"]]],[11,"clone","","",0,[[["self"]],["cfg"]]],[11,"clone","","",4,[[["self"]],["platform"]]],[11,"cmp","","",1,[[["self"],["cfgexpr"]],["ordering"]]],[11,"cmp","","",0,[[["self"],["cfg"]],["ordering"]]],[11,"cmp","","",4,[[["platform"],["self"]],["ordering"]]],[11,"eq","","",1,[[["self"],["cfgexpr"]],["bool"]]],[11,"ne","","",1,[[["self"],["cfgexpr"]],["bool"]]],[11,"eq","","",0,[[["self"],["cfg"]],["bool"]]],[11,"ne","","",0,[[["self"],["cfg"]],["bool"]]],[11,"eq","","",4,[[["platform"],["self"]],["bool"]]],[11,"ne","","",4,[[["platform"],["self"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["cfgexpr"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",1,[[["self"],["cfgexpr"]],["bool"]]],[11,"le","","",1,[[["self"],["cfgexpr"]],["bool"]]],[11,"gt","","",1,[[["self"],["cfgexpr"]],["bool"]]],[11,"ge","","",1,[[["self"],["cfgexpr"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["cfg"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["self"],["cfg"]],["bool"]]],[11,"le","","",0,[[["self"],["cfg"]],["bool"]]],[11,"gt","","",0,[[["self"],["cfg"]],["bool"]]],[11,"ge","","",0,[[["self"],["cfg"]],["bool"]]],[11,"partial_cmp","","",4,[[["platform"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",4,[[["platform"],["self"]],["bool"]]],[11,"le","","",4,[[["platform"],["self"]],["bool"]]],[11,"gt","","",4,[[["platform"],["self"]],["bool"]]],[11,"ge","","",4,[[["platform"],["self"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"from_str","","",0,[[["str"]],[["result",["cfg"]],["cfg"]]]],[11,"from_str","","",1,[[["str"]],[["cfgexpr"],["result",["cfgexpr"]]]]],[11,"from_str","","",4,[[["str"]],[["parseerror"],["result",["platform","parseerror"]],["platform"]]]],[11,"serialize","","",4,[[["s"],["self"]],["result"]]],[11,"deserialize","","",4,[[["d"]],["result"]]]],"p":[[4,"Cfg"],[4,"CfgExpr"],[4,"ParseErrorKind"],[13,"UnexpectedToken"],[4,"Platform"],[3,"ParseError"]]};
searchIndex["cfg_expr"] = {"doc":"cfg-expr is a crate that can be used to parse and evaluate…","i":[[0,"error","cfg_expr","Types related to parse errors",null,null],[3,"ParseError","cfg_expr::error","An error related to parsing of a cfg expression",null,null],[12,"original","","The string that was parsed",0,null],[12,"span","","The range of characters in the original string that result…",0,null],[12,"reason","","The specific reason for the error",0,null],[4,"Reason","","The particular reason for a `ParseError`",null,null],[13,"InvalidNot","","not() takes exactly 1 predicate, unlike all() and any()",1,null],[13,"InvalidCharacters","","The characters are not valid in an SDPX license expression",1,null],[13,"UnclosedParens","","An opening parens was unmatched with a closing parens",1,null],[13,"UnopenedParens","","A closing parens was unmatched with an opening parens",1,null],[13,"UnclosedQuotes","","An opening quotes was unmatched with a closing quotes",1,null],[13,"UnopenedQuotes","","A closing quotes was unmatched with an opening quotes",1,null],[13,"Empty","","The expression does not contain any valid terms",1,null],[13,"Unexpected","","Found an unexpected term, which wasn't one of the expected…",1,null],[13,"InvalidInteger","","Failed to parse an integer value",1,null],[13,"MultipleRootPredicates","","The root cfg() may only contain a single predicate",1,null],[0,"expr","cfg_expr","Types related to cfg expressions",null,null],[3,"Expression","cfg_expr::expr","A parsed `cfg()` expression that can evaluated",null,null],[4,"Func","","A predicate function, used to combine 1 or more predicates…",null,null],[13,"Not","","`not()` with a configuration predicate. It is true if its…",2,null],[13,"All","","`all()` with a comma separated list of configuration…",2,null],[13,"Any","","`any()` with a comma separated list of configuration…",2,null],[4,"TargetPredicate","","All predicates that pertains to a target, except for…",null,null],[13,"Arch","","target_arch",3,null],[13,"Endian","","target_endian",3,null],[13,"Env","","target_env",3,null],[13,"Family","","target_family This also applies to the bare `unix` and…",3,null],[13,"Os","","target_os",3,null],[13,"PointerWidth","","target_pointer_width",3,null],[13,"Vendor","","target_vendor",3,null],[4,"Predicate","","A single predicate in a `cfg()` expression",null,null],[13,"Target","","A target predicate, with the `target_` prefix",4,null],[13,"Test","","Whether rustc's test harness is enabled",4,null],[13,"DebugAssertions","","Enabled when compiling without optimizations.",4,null],[13,"ProcMacro","","Enabled for crates of the proc_macro type.",4,null],[13,"Feature","","A `feature = \"<name>\"`",4,null],[13,"TargetFeature","","target_feature",4,null],[13,"Flag","","A generic bare predicate key that doesn't match one of the…",4,null],[13,"KeyValue","","A generic key = \"value\" predicate that doesn't match one…",4,null],[12,"key","cfg_expr::expr::Predicate","",5,null],[12,"val","","",5,null],[0,"lexer","cfg_expr::expr","",null,null],[3,"Lexer","cfg_expr::expr::lexer","Allows iteration through a cfg expression, yielding a…",null,null],[3,"LexerToken","","A wrapper around a particular token that includes the span…",null,null],[12,"token","","The token that was lexed",6,null],[12,"span","","The range of the token characters in the original license…",6,null],[4,"Token","","A single token in a cfg expression…",null,null],[13,"Key","","A single contiguous term",7,null],[13,"Value","","A single continguous value, without its surrounding quotes",7,null],[13,"Equals","","A '=', joining a key and a value",7,null],[13,"All","","Beginning of an all() predicate list",7,null],[13,"Any","","Beginning of an any() predicate list",7,null],[13,"Not","","Beginning of a not() predicate",7,null],[13,"OpenParen","","A `(` for starting a predicate list",7,null],[13,"CloseParen","","A `)` for ending a predicate list",7,null],[13,"Comma","","A `,` for separating predicates in a predicate list",7,null],[11,"new","","Creates a Lexer over a cfg expression, it can either be a…",8,[[["str"]],["self"]]],[11,"parse","cfg_expr::expr","Given a cfg() expression (the cfg( and ) are optional),…",9,[[["str"]],[["parseerror"],["result",["parseerror"]]]]],[8,"Logic","","A propositional logic used to evaluate `Expression`…",null,null],[10,"top","","The result of an `all` operation with no operands, akin to…",10,[[],["self"]]],[10,"bottom","","The result of an `any` operation with no operands, akin to…",10,[[],["self"]]],[10,"and","","`AND`, which corresponds to the `all` operator.",10,[[],["self"]]],[10,"or","","`OR`, which corresponds to the `any` operator.",10,[[],["self"]]],[10,"not","","`NOT`, which corresponds to the `not` operator.",10,[[],["self"]]],[11,"matches","","Returns true of the predicate matches the specified target",3,[[["targetinfo"]],["bool"]]],[11,"predicates","","An iterator over each predicate in the expression",9,[[["self"]]]],[11,"eval","","Evaluates the expression, using the provided closure to…",9,[[["self"],["ep"]],["t"]]],[0,"targets","cfg_expr","Types related to rustc targets",null,null],[3,"TargetInfo","cfg_expr::targets","Contains information regarding a particular target known…",null,null],[12,"triple","","The target's unique identifier",11,null],[12,"os","","The target's operating system, if any. Used by the…",11,null],[12,"arch","","The target's CPU architecture. Used by the target_arch…",11,null],[12,"env","","The target's ABI/libc used, if any. Used by the target_env…",11,null],[12,"vendor","","The target's vendor, if any. Used by the target_vendor…",11,null],[12,"family","","The target's family, if any. Used by the target_family…",11,null],[12,"pointer_width","","The size of the target's pointer type. Used by the…",11,null],[12,"endian","","The target's endianness. Used by the target_endian…",11,null],[4,"Os","","All of the operating systems known to rustc",null,null],[13,"haiku","","",12,null],[13,"openbsd","","",12,null],[13,"freebsd","","",12,null],[13,"redox","","",12,null],[13,"vxworks","","",12,null],[13,"uefi","","",12,null],[13,"emscripten","","",12,null],[13,"netbsd","","",12,null],[13,"fuchsia","","",12,null],[13,"cloudabi","","",12,null],[13,"wasi","","",12,null],[13,"solaris","","",12,null],[13,"cuda","","",12,null],[13,"dragonfly","","",12,null],[13,"l4re","","",12,null],[13,"android","","",12,null],[13,"macos","","",12,null],[13,"hermit","","",12,null],[13,"linux","","",12,null],[13,"windows","","",12,null],[13,"unknown","","",12,null],[13,"ios","","",12,null],[4,"Endian","","The endian types known to rustc",null,null],[13,"big","","",13,null],[13,"little","","",13,null],[4,"Env","","All of the target environments known to rustc",null,null],[13,"uclibc","","",14,null],[13,"sgx","","",14,null],[13,"eabihf","","",14,null],[13,"relibc","","",14,null],[13,"gnu","","",14,null],[13,"musl","","",14,null],[13,"msvc","","",14,null],[13,"gnueabihf","","",14,null],[4,"Vendor","","All of the target vendors known to rustc",null,null],[13,"pc","","",15,null],[13,"unknown","","",15,null],[13,"uwp","","",15,null],[13,"nvidia","","",15,null],[13,"sun","","",15,null],[13,"fortanix","","",15,null],[13,"wrs","","",15,null],[13,"rumprun","","",15,null],[13,"apple","","",15,null],[4,"Arch","","All of the CPU architectures known to rustc",null,null],[13,"x86_64","","",16,null],[13,"wasm32","","",16,null],[13,"msp430","","",16,null],[13,"mips","","",16,null],[13,"powerpc","","",16,null],[13,"arm","","",16,null],[13,"mips64","","",16,null],[13,"sparc64","","",16,null],[13,"hexagon","","",16,null],[13,"riscv64","","",16,null],[13,"aarch64","","",16,null],[13,"powerpc64","","",16,null],[13,"riscv32","","",16,null],[13,"sparc","","",16,null],[13,"nvptx64","","",16,null],[13,"x86","","",16,null],[13,"s390x","","",16,null],[4,"Family","","All of the target families known to rustc",null,null],[13,"unix","","Everything that isn't windows, and has a family!",17,null],[13,"windows","","The lone wolf of target families.",17,null],[5,"get_target_by_triple","","Attempts to find the `TargetInfo` for the specified target…",null,[[["str"]],[["option",["targetinfo"]],["targetinfo"]]]],[5,"rustc_version","","Retrieves the version of rustc for which the built-in…",null,[[],["str"]]],[17,"ALL","","",null,null],[11,"from","cfg_expr::error","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","cfg_expr::expr","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","cfg_expr::expr::lexer","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"into_iter","","",8,[[],["i"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","cfg_expr::targets","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"next","cfg_expr::expr::lexer","",8,[[["self"]],["option"]]],[11,"clone","","",7,[[["self"]],["token"]]],[11,"clone","cfg_expr::expr","",2,[[["self"]],["func"]]],[11,"clone","","",3,[[["self"]],["targetpredicate"]]],[11,"clone","cfg_expr::targets","",12,[[["self"]],["os"]]],[11,"clone","","",13,[[["self"]],["endian"]]],[11,"clone","","",14,[[["self"]],["env"]]],[11,"clone","","",15,[[["self"]],["vendor"]]],[11,"clone","","",16,[[["self"]],["arch"]]],[11,"clone","","",17,[[["self"]],["family"]]],[11,"cmp","cfg_expr::expr","",2,[[["self"],["func"]],["ordering"]]],[11,"eq","cfg_expr::error","",0,[[["parseerror"],["self"]],["bool"]]],[11,"ne","","",0,[[["parseerror"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["reason"]],["bool"]]],[11,"ne","","",1,[[["self"],["reason"]],["bool"]]],[11,"eq","cfg_expr::expr::lexer","",7,[[["token"],["self"]],["bool"]]],[11,"ne","","",7,[[["token"],["self"]],["bool"]]],[11,"eq","cfg_expr::expr","",2,[[["self"],["func"]],["bool"]]],[11,"ne","","",2,[[["self"],["func"]],["bool"]]],[11,"eq","","",3,[[["targetpredicate"],["self"]],["bool"]]],[11,"ne","","",3,[[["targetpredicate"],["self"]],["bool"]]],[11,"eq","","",4,[[["predicate"],["self"]],["bool"]]],[11,"ne","","",4,[[["predicate"],["self"]],["bool"]]],[11,"eq","cfg_expr::targets","",12,[[["os"],["self"]],["bool"]]],[11,"eq","","",13,[[["self"],["endian"]],["bool"]]],[11,"eq","","",14,[[["env"],["self"]],["bool"]]],[11,"eq","","",15,[[["self"],["vendor"]],["bool"]]],[11,"eq","","",16,[[["self"],["arch"]],["bool"]]],[11,"eq","","",17,[[["family"],["self"]],["bool"]]],[11,"partial_cmp","cfg_expr::expr","",2,[[["self"],["func"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",2,[[["self"],["func"]],["bool"]]],[11,"le","","",2,[[["self"],["func"]],["bool"]]],[11,"gt","","",2,[[["self"],["func"]],["bool"]]],[11,"ge","","",2,[[["self"],["func"]],["bool"]]],[11,"fmt","cfg_expr::error","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","cfg_expr::expr::lexer","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","cfg_expr::expr","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","cfg_expr::targets","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","cfg_expr::error","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","cfg_expr::expr::lexer","",7,[[["formatter"],["self"]],["result"]]],[11,"from_str","cfg_expr::targets","",12,[[["str"]],["result"]]],[11,"from_str","","",13,[[["str"]],["result"]]],[11,"from_str","","",14,[[["str"]],["result"]]],[11,"from_str","","",15,[[["str"]],["result"]]],[11,"from_str","","",16,[[["str"]],["result"]]],[11,"from_str","","",17,[[["str"]],["result"]]],[11,"description","cfg_expr::error","",0,[[["self"]],["str"]]]],"p":[[3,"ParseError"],[4,"Reason"],[4,"Func"],[4,"TargetPredicate"],[4,"Predicate"],[13,"KeyValue"],[3,"LexerToken"],[4,"Token"],[3,"Lexer"],[3,"Expression"],[8,"Logic"],[3,"TargetInfo"],[4,"Os"],[4,"Endian"],[4,"Env"],[4,"Vendor"],[4,"Arch"],[4,"Family"]]};
searchIndex["cfg_if"] = {"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate…",null,null]],"p":[]};
searchIndex["clap"] = {"doc":"`clap` is a simple-to-use, efficient, and full-featured…","i":[[3,"App","clap","Used to create a representation of a command line program…",null,null],[3,"Arg","","The abstract representation of a command line argument.…",null,null],[3,"ArgGroup","","`ArgGroup`s are a family of related [arguments] and way…",null,null],[3,"ArgMatches","","Used to get information about the arguments that were…",null,null],[3,"OsValues","","An iterator for getting multiple values out of an argument…",null,null],[3,"SubCommand","","The abstract representation of a command line subcommand.",null,null],[3,"Values","","An iterator for getting multiple values out of an argument…",null,null],[3,"Error","","Command Line Argument Parser Error",null,null],[12,"message","","Formatted error message",0,null],[12,"kind","","The type of error",0,null],[12,"info","","Any additional information passed along, such as the…",0,null],[4,"AppSettings","","Application level settings, which affect how [`App`]…",null,null],[13,"AllowInvalidUtf8","","Specifies that any invalid UTF-8 code points should not be…",1,null],[13,"AllArgsOverrideSelf","","Essentially sets [`Arg::overrides_with(\"itself\")`] for all…",1,null],[13,"AllowLeadingHyphen","","Specifies that leading hyphens are allowed in argument…",1,null],[13,"AllowNegativeNumbers","","Allows negative numbers to pass as values. This is similar…",1,null],[13,"AllowMissingPositional","","Allows one to implement two styles of CLIs where…",1,null],[13,"AllowExternalSubcommands","","Specifies that an unexpected positional argument, which…",1,null],[13,"ArgsNegateSubcommands","","Specifies that use of a valid [argument] negates…",1,null],[13,"ArgRequiredElseHelp","","Specifies that the help text should be displayed (and then…",1,null],[13,"ColoredHelp","","Uses colorized help messages.",1,null],[13,"ColorAuto","","Enables colored output only when the output is going to a…",1,null],[13,"ColorAlways","","Enables colored output regardless of whether or not the…",1,null],[13,"ColorNever","","Disables colored output no matter if the output is going…",1,null],[13,"DontCollapseArgsInUsage","","Disables the automatic collapsing of positional args into…",1,null],[13,"DontDelimitTrailingValues","","Disables the automatic delimiting of values when `--` or…",1,null],[13,"DisableHelpFlags","","Disables `-h` and `--help` [`App`] without affecting any…",1,null],[13,"DisableHelpSubcommand","","Disables the `help` subcommand",1,null],[13,"DisableVersion","","Disables `-V` and `--version` [`App`] without affecting…",1,null],[13,"DeriveDisplayOrder","","Displays the arguments and [`SubCommand`]s in the help…",1,null],[13,"GlobalVersion","","Specifies to use the version of the current command for…",1,null],[13,"Hidden","","Specifies that this [`SubCommand`] should be hidden from…",1,null],[13,"HidePossibleValuesInHelp","","Tells `clap` not to print possible values when displaying…",1,null],[13,"InferSubcommands","","Tries to match unknown args to partial [`subcommands`] or…",1,null],[13,"NoBinaryName","","Specifies that the parser should not assume the first…",1,null],[13,"NextLineHelp","","Places the help string for all arguments on the line after…",1,null],[13,"PropagateGlobalValuesDown","","DEPRECATED: This setting is no longer required in order to…",1,null],[13,"SubcommandsNegateReqs","","Allows [`SubCommand`]s to override all requirements of the…",1,null],[13,"SubcommandRequiredElseHelp","","Specifies that the help text should be displayed (before…",1,null],[13,"StrictUtf8","","Specifies that any invalid UTF-8 code points should be…",1,null],[13,"SubcommandRequired","","Allows specifying that if no [`SubCommand`] is present at…",1,null],[13,"TrailingVarArg","","Specifies that the final positional argument is a \"VarArg\"…",1,null],[13,"UnifiedHelpMessage","","Groups flags and options together, presenting a more…",1,null],[13,"VersionlessSubcommands","","Disables `-V` and `--version` for all [`SubCommand`]s…",1,null],[13,"WaitOnError","","Will display a message \"Press [ENTER]/[RETURN] to…",1,null],[4,"ArgSettings","","Various settings that apply to arguments and may be set,…",null,null],[13,"Required","","The argument must be used",2,null],[13,"Multiple","","The argument may be used multiple times such as `--flag…",2,null],[13,"EmptyValues","","The argument allows empty values such as `--option \"\"`",2,null],[13,"Global","","The argument should be propagated down through all child…",2,null],[13,"Hidden","","The argument should not be shown in help text",2,null],[13,"TakesValue","","The argument accepts a value, such as `--option <value>`",2,null],[13,"UseValueDelimiter","","Determines if the argument allows values to be grouped via…",2,null],[13,"NextLineHelp","","Prints the help text on the line after the argument",2,null],[13,"RequireDelimiter","","Requires the use of a value delimiter for all multiple…",2,null],[13,"HidePossibleValues","","Hides the possible values from the help string",2,null],[13,"AllowLeadingHyphen","","Allows vals that start with a '-'",2,null],[13,"RequireEquals","","Require options use `--option=val` syntax",2,null],[13,"Last","","Specifies that the arg is the last positional argument and…",2,null],[13,"HideDefaultValue","","Hides the default value from the help string",2,null],[13,"CaseInsensitive","","Makes `Arg::possible_values` case insensitive",2,null],[13,"HideEnvValues","","Hides ENV values in the help message",2,null],[13,"HiddenShortHelp","","The argument should not be shown in short help text",2,null],[13,"HiddenLongHelp","","The argument should not be shown in long help text",2,null],[4,"Shell","","Describes which shell to produce a completions file for",null,null],[13,"Bash","","Generates a .bash completion file for the Bourne Again…",3,null],[13,"Fish","","Generates a .fish completion file for the Friendly…",3,null],[13,"Zsh","","Generates a completion file for the Z SHell (ZSH)",3,null],[13,"PowerShell","","Generates a completion file for PowerShell",3,null],[13,"Elvish","","Generates a completion file for Elvish",3,null],[4,"ErrorKind","","Command line argument parser kind of error",null,null],[13,"InvalidValue","","Occurs when an [`Arg`] has a set of possible values, and…",4,null],[13,"UnknownArgument","","Occurs when a user provides a flag, option, argument or…",4,null],[13,"InvalidSubcommand","","Occurs when the user provides an unrecognized…",4,null],[13,"UnrecognizedSubcommand","","Occurs when the user provides an unrecognized…",4,null],[13,"EmptyValue","","Occurs when the user provides an empty value for an option…",4,null],[13,"ValueValidation","","Occurs when the user provides a value for an argument with…",4,null],[13,"TooManyValues","","Occurs when a user provides more values for an argument…",4,null],[13,"TooFewValues","","Occurs when the user provides fewer values for an argument…",4,null],[13,"WrongNumberOfValues","","Occurs when the user provides a different number of values…",4,null],[13,"ArgumentConflict","","Occurs when the user provides two values which conflict…",4,null],[13,"MissingRequiredArgument","","Occurs when the user does not provide one or more required…",4,null],[13,"MissingSubcommand","","Occurs when a subcommand is required (as defined by…",4,null],[13,"MissingArgumentOrSubcommand","","Occurs when either an argument or [`SubCommand`] is…",4,null],[13,"UnexpectedMultipleUsage","","Occurs when the user provides multiple values to an…",4,null],[13,"InvalidUtf8","","Occurs when the user provides a value containing invalid…",4,null],[13,"HelpDisplayed","","Not a true \"error\" as it means `--help` or similar was…",4,null],[13,"VersionDisplayed","","Not a true \"error\" as it means `--version` or similar was…",4,null],[13,"ArgumentNotFound","","Occurs when using the [`value_t!`] and [`values_t!`]…",4,null],[13,"Io","","Represents an [I/O error]. Can occur when writing to…",4,null],[13,"Format","","Represents a [Format error] (which is a part of…",4,null],[11,"new","","Creates a new instance of an application requiring a name.…",5,[[["into",["string"]],["string"]],["self"]]],[11,"get_name","","Get the name of the app",5,[[["self"]],["str"]]],[11,"get_bin_name","","Get the name of the binary",5,[[["self"]],[["str"],["option",["str"]]]]],[11,"with_defaults","","Creates a new instance of an application requiring a name,…",5,[[["into",["string"]],["string"]],["self"]]],[11,"author","","Sets a string of author(s) that will be displayed to the…",5,[[["str"],["into",["str"]]],["self"]]],[11,"bin_name","","Overrides the system-determined binary name. This should…",5,[[["into",["string"]],["string"]],["self"]]],[11,"about","","Sets a string describing what the program does. This will…",5,[[["str"],["into",["str"]]],["self"]]],[11,"long_about","","Sets a string describing what the program does. This will…",5,[[["str"],["into",["str"]]],["self"]]],[11,"name","","Sets the program's name. This will be displayed when…",5,[[["into",["string"]],["string"]],["self"]]],[11,"after_help","","Adds additional help information to be displayed in…",5,[[["str"],["into",["str"]]],["self"]]],[11,"before_help","","Adds additional help information to be displayed in…",5,[[["str"],["into",["str"]]],["self"]]],[11,"version","","Sets a string of the version number to be displayed when…",5,[[["str"],["into",["str"]]],["self"]]],[11,"long_version","","Sets a string of the version number to be displayed when…",5,[[["str"],["into",["str"]]],["self"]]],[11,"usage","","Sets a custom usage string to override the auto-generated…",5,[[["str"],["into",["str"]]],["self"]]],[11,"help","","Sets a custom help message and overrides the…",5,[[["str"],["into",["str"]]],["self"]]],[11,"help_short","","Sets the [`short`] for the auto-generated `help` argument.",5,[[["str"],["asref",["str"]]],["self"]]],[11,"version_short","","Sets the [`short`] for the auto-generated `version`…",5,[[["str"],["asref",["str"]]],["self"]]],[11,"help_message","","Sets the help text for the auto-generated `help` argument.",5,[[["str"],["into",["str"]]],["self"]]],[11,"version_message","","Sets the help text for the auto-generated `version`…",5,[[["str"],["into",["str"]]],["self"]]],[11,"template","","Sets the help template to be used, overriding the default…",5,[[["str"],["into",["str"]]],["self"]]],[11,"setting","","Enables a single command, or [`SubCommand`], level settings.",5,[[["appsettings"]],["self"]]],[11,"settings","","Enables multiple command, or [`SubCommand`], level settings",5,[[],["self"]]],[11,"global_setting","","Enables a single setting that is propagated down through…",5,[[["appsettings"]],["self"]]],[11,"global_settings","","Enables multiple settings which are propagated down…",5,[[],["self"]]],[11,"unset_setting","","Disables a single command, or [`SubCommand`], level setting.",5,[[["appsettings"]],["self"]]],[11,"unset_settings","","Disables multiple command, or [`SubCommand`], level…",5,[[],["self"]]],[11,"set_term_width","","Sets the terminal width at which to wrap help messages.…",5,[[["usize"]],["self"]]],[11,"max_term_width","","Sets the max terminal width at which to wrap help…",5,[[["usize"]],["self"]]],[11,"arg","","Adds an [argument] to the list of valid possibilities.",5,[[["arg"],["into",["arg"]]],["self"]]],[11,"args","","Adds multiple [arguments] to the list of valid possibilities",5,[[],["self"]]],[11,"arg_from_usage","","A convenience method for adding a single [argument] from a…",5,[[["str"]],["self"]]],[11,"args_from_usage","","Adds multiple [arguments] at once from a usage string, one…",5,[[["str"]],["self"]]],[11,"alias","","Allows adding a [`SubCommand`] alias, which function as…",5,[[["str"],["into",["str"]]],["self"]]],[11,"aliases","","Allows adding [`SubCommand`] aliases, which function as…",5,[[],["self"]]],[11,"visible_alias","","Allows adding a [`SubCommand`] alias that functions…",5,[[["str"],["into",["str"]]],["self"]]],[11,"visible_aliases","","Allows adding multiple [`SubCommand`] aliases that…",5,[[],["self"]]],[11,"group","","Adds an [`ArgGroup`] to the application. [`ArgGroup`]s are…",5,[[["arggroup"]],["self"]]],[11,"groups","","Adds multiple [`ArgGroup`]s to the [`App`] at once.",5,[[],["self"]]],[11,"subcommand","","Adds a [`SubCommand`] to the list of valid possibilities.…",5,[[["app"]],["self"]]],[11,"subcommands","","Adds multiple subcommands to the list of valid…",5,[[["i"]],["self"]]],[11,"display_order","","Allows custom ordering of [`SubCommand`]s within the help…",5,[[["usize"]],["self"]]],[11,"print_help","","Prints the full help message to [`io::stdout()`] using a…",5,[[["self"]],["clapresult"]]],[11,"print_long_help","","Prints the full help message to [`io::stdout()`] using a…",5,[[["self"]],["clapresult"]]],[11,"write_help","","Writes the full help message to the user to a…",5,[[["w"],["self"]],["clapresult"]]],[11,"write_long_help","","Writes the full help message to the user to a…",5,[[["w"],["self"]],["clapresult"]]],[11,"write_version","","Writes the version message to the user to a [`io::Write`]…",5,[[["w"],["self"]],["clapresult"]]],[11,"write_long_version","","Writes the version message to the user to a [`io::Write`]…",5,[[["w"],["self"]],["clapresult"]]],[11,"gen_completions","","Generate a completions file for a specified shell at…",5,[[["osstring"],["into",["string"]],["shell"],["self"],["into",["osstring"]],["string"]]]],[11,"gen_completions_to","","Generate a completions file for a specified shell at…",5,[[["w"],["into",["string"]],["shell"],["self"],["string"]]]],[11,"get_matches","","Starts the parsing process, upon a failed parse an error…",5,[[],["argmatches"]]],[11,"get_matches_safe","","Starts the parsing process. This method will return a…",5,[[],[["argmatches"],["clapresult",["argmatches"]]]]],[11,"get_matches_from","","Starts the parsing process. Like [`App::get_matches`] this…",5,[[["i"]],["argmatches"]]],[11,"get_matches_from_safe","","Starts the parsing process. A combination of…",5,[[["i"]],[["argmatches"],["clapresult",["argmatches"]]]]],[11,"get_matches_from_safe_borrow","","Starts the parsing process without consuming the [`App`]…",5,[[["self"],["i"]],[["argmatches"],["clapresult",["argmatches"]]]]],[11,"with_name","","Creates a new instance of [`Arg`] using a unique string…",6,[[["str"]],["self"]]],[11,"from_usage","","Creates a new instance of [`Arg`] from a usage string.…",6,[[["str"]],["self"]]],[11,"short","","Sets the short version of the argument without the…",6,[[["str"],["asref",["str"]]],["self"]]],[11,"long","","Sets the long version of the argument without the…",6,[[["str"]],["self"]]],[11,"alias","","Allows adding a [`Arg`] alias, which function as \"hidden\"…",6,[[["str"],["into",["str"]]],["self"]]],[11,"aliases","","Allows adding [`Arg`] aliases, which function as \"hidden\"…",6,[[],["self"]]],[11,"visible_alias","","Allows adding a [`Arg`] alias that functions exactly like…",6,[[["str"],["into",["str"]]],["self"]]],[11,"visible_aliases","","Allows adding multiple [`Arg`] aliases that functions…",6,[[],["self"]]],[11,"help","","Sets the short help text of the argument that will be…",6,[[["str"]],["self"]]],[11,"long_help","","Sets the long help text of the argument that will be…",6,[[["str"]],["self"]]],[11,"last","","Specifies that this arg is the last, or final, positional…",6,[[["bool"]],["self"]]],[11,"required","","Sets whether or not the argument is required by default.…",6,[[["bool"]],["self"]]],[11,"require_equals","","Requires that options use the `--option=val` syntax (i.e.…",6,[[["bool"]],["self"]]],[11,"allow_hyphen_values","","Allows values which start with a leading hyphen (`-`)",6,[[["bool"]],["self"]]],[11,"required_unless","","Sets an arg that override this arg's required setting.…",6,[[["str"]],["self"]]],[11,"required_unless_all","","Sets args that override this arg's required setting. (i.e.…",6,[[],["self"]]],[11,"required_unless_one","","Sets args that override this arg's [required] setting.…",6,[[],["self"]]],[11,"conflicts_with","","Sets a conflicting argument by name. I.e. when using this…",6,[[["str"]],["self"]]],[11,"conflicts_with_all","","The same as [`Arg::conflicts_with`] but allows specifying…",6,[[],["self"]]],[11,"overrides_with","","Sets a overridable argument by name. I.e. this argument…",6,[[["str"]],["self"]]],[11,"overrides_with_all","","Sets multiple mutually overridable arguments by name. I.e.…",6,[[],["self"]]],[11,"requires","","Sets an argument by name that is required when this one is…",6,[[["str"]],["self"]]],[11,"requires_if","","Allows a conditional requirement. The requirement will…",6,[[["str"],["str"]],["self"]]],[11,"requires_ifs","","Allows multiple conditional requirements. The requirement…",6,[[],["self"]]],[11,"required_if","","Allows specifying that an argument is [required]…",6,[[["str"],["str"]],["self"]]],[11,"required_ifs","","Allows specifying that an argument is [required] based on…",6,[[],["self"]]],[11,"requires_all","","Sets multiple arguments by names that are required when…",6,[[],["self"]]],[11,"takes_value","","Specifies that the argument takes a value at run time.",6,[[["bool"]],["self"]]],[11,"hide_possible_values","","Specifies if the possible values of an argument should be…",6,[[["bool"]],["self"]]],[11,"hide_default_value","","Specifies if the default value of an argument should be…",6,[[["bool"]],["self"]]],[11,"index","","Specifies the index of a positional argument starting at 1.",6,[[["u64"]],["self"]]],[11,"multiple","","Specifies that the argument may appear more than once. For…",6,[[["bool"]],["self"]]],[11,"value_terminator","","Specifies a value that stops parsing multiple values of a…",6,[[["str"]],["self"]]],[11,"global","","Specifies that an argument can be matched to all child…",6,[[["bool"]],["self"]]],[11,"empty_values","","Allows an argument to accept explicitly empty values. An…",6,[[["bool"]],["self"]]],[11,"hidden","","Hides an argument from help message output.",6,[[["bool"]],["self"]]],[11,"possible_values","","Specifies a list of possible values for this argument. At…",6,[[],["self"]]],[11,"possible_value","","Specifies a possible value for this argument, one at a…",6,[[["str"]],["self"]]],[11,"case_insensitive","","When used with [`Arg::possible_values`] it allows the…",6,[[["bool"]],["self"]]],[11,"group","","Specifies the name of the [`ArgGroup`] the argument…",6,[[["str"]],["self"]]],[11,"groups","","Specifies the names of multiple [`ArgGroup`]'s the…",6,[[],["self"]]],[11,"number_of_values","","Specifies how many values are required to satisfy this…",6,[[["u64"]],["self"]]],[11,"validator","","Allows one to perform a custom validation on the argument…",6,[[["f"]],["self"]]],[11,"validator_os","","Works identically to Validator but is intended to be used…",6,[[["f"]],["self"]]],[11,"max_values","","Specifies the maximum number of values are for this…",6,[[["u64"]],["self"]]],[11,"min_values","","Specifies the minimum number of values for this argument.…",6,[[["u64"]],["self"]]],[11,"use_delimiter","","Specifies whether or not an argument should allow grouping…",6,[[["bool"]],["self"]]],[11,"require_delimiter","","Specifies that multiple values may only be set using the…",6,[[["bool"]],["self"]]],[11,"value_delimiter","","Specifies the separator to use when values are clumped…",6,[[["str"]],["self"]]],[11,"value_names","","Specify multiple names for values of option arguments.…",6,[[],["self"]]],[11,"value_name","","Specifies the name for value of [option] or [positional]…",6,[[["str"]],["self"]]],[11,"default_value","","Specifies the value of the argument when not specified at…",6,[[["str"]],["self"]]],[11,"default_value_os","","Provides a default value in the exact same manner as…",6,[[["osstr"]],["self"]]],[11,"default_value_if","","Specifies the value of the argument if `arg` has been used…",6,[[["str"],["option",["str"]],["str"]],["self"]]],[11,"default_value_if_os","","Provides a conditional default value in the exact same…",6,[[["option",["osstr"]],["str"],["osstr"]],["self"]]],[11,"default_value_ifs","","Specifies multiple values and conditions in the same…",6,[[],["self"]]],[11,"default_value_ifs_os","","Provides multiple conditional default values in the exact…",6,[[],["self"]]],[11,"env","","Specifies that if the value is not passed in as an…",6,[[["str"]],["self"]]],[11,"env_os","","Specifies that if the value is not passed in as an…",6,[[["osstr"]],["self"]]],[11,"hide_env_values","","@TODO @p2 @docs @release: write docs",6,[[["bool"]],["self"]]],[11,"next_line_help","","When set to `true` the help string will be displayed on…",6,[[["bool"]],["self"]]],[11,"display_order","","Allows custom ordering of args within the help message.…",6,[[["usize"]],["self"]]],[11,"raw","","Indicates that all parameters passed after this should not…",6,[[["bool"]],["self"]]],[11,"hidden_short_help","","Hides an argument from short help message output.",6,[[["bool"]],["self"]]],[11,"hidden_long_help","","Hides an argument from long help message output.",6,[[["bool"]],["self"]]],[11,"is_set","","Checks if one of the [`ArgSettings`] settings is set for…",6,[[["argsettings"],["self"]],["bool"]]],[11,"set","","Sets one of the [`ArgSettings`] settings for the argument.",6,[[["argsettings"]],["self"]]],[11,"unset","","Unsets one of the [`ArgSettings`] settings for the argument.",6,[[["argsettings"]],["self"]]],[11,"value_of","","Gets the value of a specific [option] or [positional]…",7,[[["str"],["asref",["str"]],["self"]],[["str"],["option",["str"]]]]],[11,"value_of_lossy","","Gets the lossy value of a specific argument. If the…",7,[[["str"],["asref",["str"]],["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"value_of_os","","Gets the OS version of a string value of a specific…",7,[[["str"],["asref",["str"]],["self"]],[["osstr"],["option",["osstr"]]]]],[11,"values_of","","Gets a [`Values`] struct which implements [`Iterator`] for…",7,[[["str"],["asref",["str"]],["self"]],[["values"],["option",["values"]]]]],[11,"values_of_lossy","","Gets the lossy values of a specific argument. If the…",7,[[["str"],["asref",["str"]],["self"]],[["vec",["string"]],["option",["vec"]]]]],[11,"values_of_os","","Gets a [`OsValues`] struct which is implements…",7,[[["str"],["asref",["str"]],["self"]],[["osvalues"],["option",["osvalues"]]]]],[11,"is_present","","Returns `true` if an argument was present at runtime,…",7,[[["str"],["asref",["str"]],["self"]],["bool"]]],[11,"occurrences_of","","Returns the number of times an argument was used at…",7,[[["str"],["asref",["str"]],["self"]],["u64"]]],[11,"index_of","","Gets the starting index of the argument in respect to all…",7,[[["str"],["asref",["str"]],["self"]],[["usize"],["option",["usize"]]]]],[11,"indices_of","","Gets all indices of the argument in respect to all other…",7,[[["str"],["asref",["str"]],["self"]],[["indices"],["option",["indices"]]]]],[11,"subcommand_matches","","Because [`Subcommand`]s are essentially \"sub-[`App`]s\"…",7,[[["str"],["asref",["str"]],["self"]],[["option",["argmatches"]],["argmatches"]]]],[11,"subcommand_name","","Because [`Subcommand`]s are essentially \"sub-[`App`]s\"…",7,[[["self"]],[["str"],["option",["str"]]]]],[11,"subcommand","","This brings together [`ArgMatches::subcommand_matches`]…",7,[[["self"]]]],[11,"usage","","Returns a string slice of the usage statement for the…",7,[[["self"]],["str"]]],[11,"with_name","","Creates a new instance of `ArgGroup` using a unique string…",8,[[["str"]],["self"]]],[11,"arg","","Adds an [argument] to this group by name",8,[[["str"]],["self"]]],[11,"args","","Adds multiple [arguments] to this group by name",8,[[],["self"]]],[11,"multiple","","Allows more than one of the ['Arg']s in this group to be…",8,[[["bool"]],["self"]]],[11,"required","","Sets the group as required or not. A required group will…",8,[[["bool"]],["self"]]],[11,"requires","","Sets the requirement rules of this group. This is not to…",8,[[["str"]],["self"]]],[11,"requires_all","","Sets the requirement rules of this group. This is not to…",8,[[],["self"]]],[11,"conflicts_with","","Sets the exclusion rules of this group. Exclusion (aka…",8,[[["str"]],["self"]]],[11,"conflicts_with_all","","Sets the exclusion rules of this group. Exclusion rules…",8,[[],["self"]]],[11,"with_name","","Creates a new instance of a subcommand requiring a name.…",9,[[["str"]],["app"]]],[11,"variants","","A list of possible variants in `&'static str` form",3,[[]]],[11,"use_stderr","","Should the message be written to `stdout` or not",0,[[["self"]],["bool"]]],[11,"exit","","Prints the error to `stderr` and exits with a status of `1`",0,[[["self"]]]],[11,"with_description","","Create an error with a custom description.",0,[[["str"],["errorkind"]],["self"]]],[6,"Result","","Short hand for [`Result`] type",null,null],[14,"value_t","","Convenience macro getting a typed value `T` where `T`…",null,null],[14,"value_t_or_exit","","Convenience macro getting a typed value `T` where `T`…",null,null],[14,"values_t","","Convenience macro getting a typed value [`Vec<T>`] where…",null,null],[14,"values_t_or_exit","","Convenience macro getting a typed value [`Vec<T>`] where…",null,null],[14,"_clap_count_exprs","","Counts the number of comma-delimited expressions passed to…",null,null],[14,"arg_enum","","Convenience macro to generate more complete enums with…",null,null],[14,"crate_version","","Allows you to pull the version from your Cargo.toml at…",null,null],[14,"crate_authors","","Allows you to pull the authors for the app from your…",null,null],[14,"crate_description","","Allows you to pull the description from your Cargo.toml at…",null,null],[14,"crate_name","","Allows you to pull the name from your Cargo.toml at…",null,null],[14,"app_from_crate","","Allows you to build the `App` instance from your…",null,null],[14,"clap_app","","Build `App`, `Arg`s, `SubCommand`s and `Group`s with…",null,null],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"into_iter","","",11,[[],["i"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",6,[[["arg"]],["self"]]],[11,"from","","",8,[[["arggroup"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"next_back","","",11,[[["self"]],[["str"],["option",["str"]]]]],[11,"next_back","","",10,[[["self"]],[["option",["osstr"]],["osstr"]]]],[11,"next","","",11,[[["self"]],[["str"],["option",["str"]]]]],[11,"size_hint","","",11,[[["self"]]]],[11,"next","","",10,[[["self"]],[["option",["osstr"]],["osstr"]]]],[11,"size_hint","","",10,[[["self"]]]],[11,"clone","","",1,[[["self"]],["appsettings"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"clone","","",6,[[["self"]],["arg"]]],[11,"clone","","",7,[[["self"]],["argmatches"]]],[11,"clone","","",11,[[["self"]],["values"]]],[11,"clone","","",10,[[["self"]],["osvalues"]]],[11,"clone","","",8,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["argsettings"]]],[11,"clone","","",9,[[["self"]],["subcommand"]]],[11,"clone","","",3,[[["self"]],["shell"]]],[11,"clone","","",4,[[["self"]],["errorkind"]]],[11,"default","","",6,[[],["arg"]]],[11,"default","","",7,[[],["self"]]],[11,"default","","",11,[[],["self"]]],[11,"default","","",10,[[],["self"]]],[11,"default","","",8,[[],["arggroup"]]],[11,"eq","","",1,[[["appsettings"],["self"]],["bool"]]],[11,"eq","","",6,[[["self"],["arg"]],["bool"]]],[11,"eq","","",2,[[["self"],["argsettings"]],["bool"]]],[11,"eq","","",4,[[["errorkind"],["self"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"from_str","","",1,[[["str"]],["result"]]],[11,"from_str","","",2,[[["str"]],["result"]]],[11,"from_str","","",3,[[["str"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]]],"p":[[3,"Error"],[4,"AppSettings"],[4,"ArgSettings"],[4,"Shell"],[4,"ErrorKind"],[3,"App"],[3,"Arg"],[3,"ArgMatches"],[3,"ArgGroup"],[3,"SubCommand"],[3,"OsValues"],[3,"Values"]]};
searchIndex["crates_io"] = {"doc":"","i":[[3,"Registry","crates_io","",null,null],[3,"Crate","","",null,null],[12,"name","","",0,null],[12,"description","","",0,null],[12,"max_version","","",0,null],[3,"NewCrate","","",null,null],[12,"name","","",1,null],[12,"vers","","",1,null],[12,"deps","","",1,null],[12,"features","","",1,null],[12,"authors","","",1,null],[12,"description","","",1,null],[12,"documentation","","",1,null],[12,"homepage","","",1,null],[12,"readme","","",1,null],[12,"readme_file","","",1,null],[12,"keywords","","",1,null],[12,"categories","","",1,null],[12,"license","","",1,null],[12,"license_file","","",1,null],[12,"repository","","",1,null],[12,"badges","","",1,null],[12,"links","","",1,null],[3,"NewCrateDependency","","",null,null],[12,"optional","","",2,null],[12,"default_features","","",2,null],[12,"name","","",2,null],[12,"features","","",2,null],[12,"version_req","","",2,null],[12,"target","","",2,null],[12,"kind","","",2,null],[12,"registry","","",2,null],[12,"explicit_name_in_toml","","",2,null],[3,"User","","",null,null],[12,"id","","",3,null],[12,"login","","",3,null],[12,"avatar","","",3,null],[12,"email","","",3,null],[12,"name","","",3,null],[3,"Warnings","","",null,null],[12,"invalid_categories","","",4,null],[12,"invalid_badges","","",4,null],[12,"other","","",4,null],[4,"Auth","","",null,null],[13,"Authorized","","",5,null],[13,"Unauthorized","","",5,null],[5,"is_url_crates_io","","Returns `true` if the host of the given URL is \"crates.io\".",null,[[["str"]],["bool"]]],[11,"new","","",6,[[["option",["string"]],["string"]],["registry"]]],[11,"new_handle","","",6,[[["easy"],["option",["string"]],["string"]],["registry"]]],[11,"host","","",6,[[["self"]],["str"]]],[11,"host_is_crates_io","","",6,[[["self"]],["bool"]]],[11,"add_owners","","",6,[[["str"],["self"]],[["string"],["result",["string"]]]]],[11,"remove_owners","","",6,[[["str"],["self"]],["result"]]],[11,"list_owners","","",6,[[["str"],["self"]],[["vec",["user"]],["result",["vec"]]]]],[11,"publish","","",6,[[["newcrate"],["self"],["file"]],[["result",["warnings"]],["warnings"]]]],[11,"search","","",6,[[["str"],["self"],["u32"]],["result"]]],[11,"yank","","",6,[[["str"],["self"]],["result"]]],[11,"unyank","","",6,[[["str"],["self"]],["result"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"clone","","",5,[[["self"]],["auth"]]],[11,"eq","","",5,[[["self"],["auth"]],["bool"]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]],[11,"serialize","","",2,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",0,[[["__d"]],["result"]]],[11,"deserialize","","",3,[[["__d"]],["result"]]]],"p":[[3,"Crate"],[3,"NewCrate"],[3,"NewCrateDependency"],[3,"User"],[3,"Warnings"],[4,"Auth"],[3,"Registry"]]};
searchIndex["crc32fast"] = {"doc":"Example","i":[[3,"Hasher","crc32fast","Represents an in-progress CRC32 computation.",null,null],[11,"new","","Create a new `Hasher`.",0,[[],["self"]]],[11,"new_with_initial","","Create a new `Hasher` with an initial CRC32 state.",0,[[["u32"]],["self"]]],[11,"update","","Process the given byte slice and update the hash state.",0,[[["self"]]]],[11,"finalize","","Finalize the hash state and return the computed CRC32 value.",0,[[],["u32"]]],[11,"reset","","Reset the hash state.",0,[[["self"]]]],[11,"combine","","Combine the hash state with the hash state for the…",0,[[["self"],["self"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["hasher"]]],[11,"default","","",0,[[],["self"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"write","","",0,[[["self"]]]],[11,"finish","","",0,[[["self"]],["u64"]]]],"p":[[3,"Hasher"]]};
searchIndex["crossbeam_utils"] = {"doc":"Miscellaneous tools for concurrent programming.","i":[[3,"CachePadded","crossbeam_utils","Pads and aligns a value to the length of a cache line.",null,null],[3,"Backoff","","Performs exponential backoff in spin loops.",null,null],[0,"atomic","","Atomic types.",null,null],[3,"AtomicCell","crossbeam_utils::atomic","A thread-safe mutable memory location.",null,null],[11,"new","","Creates a new atomic cell initialized with `val`.",0,[[["t"]],["atomiccell"]]],[11,"into_inner","","Unwraps the atomic cell and returns its inner value.",0,[[],["t"]]],[11,"is_lock_free","","Returns `true` if operations on values of this type are…",0,[[],["bool"]]],[11,"store","","Stores `val` into the atomic cell.",0,[[["self"],["t"]]]],[11,"swap","","Stores `val` into the atomic cell and returns the previous…",0,[[["self"],["t"]],["t"]]],[11,"as_ptr","","Returns a raw pointer to the underlying data in this…",0,[[["self"]]]],[11,"take","","Takes the value of the atomic cell, leaving…",0,[[["self"]],["t"]]],[11,"load","","Loads a value.",0,[[["self"]],["t"]]],[11,"compare_and_swap","","If the current value equals `current`, stores `new` into…",0,[[["self"],["t"]],["t"]]],[11,"compare_exchange","","If the current value equals `current`, stores `new` into…",0,[[["self"],["t"]],["result"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["i8"],["self"]],["i8"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["i8"],["self"]],["i8"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["i8"],["self"]],["i8"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["i8"],["self"]],["i8"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["i8"],["self"]],["i8"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["u16"],["self"]],["u16"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["u16"],["self"]],["u16"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["u16"],["self"]],["u16"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["u16"],["self"]],["u16"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["u16"],["self"]],["u16"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["u32"],["self"]],["u32"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["u32"],["self"]],["u32"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["u32"],["self"]],["u32"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["u32"],["self"]],["u32"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["u32"],["self"]],["u32"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["i64"],["self"]],["i64"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["i64"],["self"]],["i64"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["i64"],["self"]],["i64"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["i64"],["self"]],["i64"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["i64"],["self"]],["i64"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["isize"],["self"]],["isize"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["isize"],["self"]],["isize"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["isize"],["self"]],["isize"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["isize"],["self"]],["isize"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["isize"],["self"]],["isize"]]],[11,"fetch_and","","Applies logical \"and\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,"fetch_or","","Applies logical \"or\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,"fetch_xor","","Applies logical \"xor\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[8,"AtomicConsume","","Trait which allows reading from primitive atomic types…",null,null],[16,"Val","","Type returned by `load_consume`.",1,null],[10,"load_consume","","Loads a value from the atomic using a \"consume\" memory…",1,[[["self"]]]],[11,"new","crossbeam_utils","Pads and aligns a value to the length of a cache line.",2,[[["t"]],["cachepadded"]]],[11,"into_inner","","Returns the inner value.",2,[[],["t"]]],[11,"new","","Creates a new `Backoff`.",3,[[],["self"]]],[11,"reset","","Resets the `Backoff`.",3,[[["self"]]]],[11,"spin","","Backs off in a lock-free loop.",3,[[["self"]]]],[11,"snooze","","Backs off in a blocking loop.",3,[[["self"]]]],[11,"is_completed","","Returns `true` if exponential backoff has completed and…",3,[[["self"]],["bool"]]],[0,"sync","","Thread synchronization primitives.",null,null],[3,"Parker","crossbeam_utils::sync","A thread parking primitive.",null,null],[3,"Unparker","","Unparks a thread parked by the associated [`Parker`].",null,null],[3,"ShardedLock","","A sharded reader-writer lock.",null,null],[3,"ShardedLockReadGuard","","A guard used to release the shared read access of a…",null,null],[3,"ShardedLockWriteGuard","","A guard used to release the exclusive write access of a…",null,null],[3,"WaitGroup","","Enables threads to synchronize the beginning or end of…",null,null],[11,"new","","Creates a new `Parker`.",4,[[],["parker"]]],[11,"park","","Blocks the current thread until the token is made available.",4,[[["self"]]]],[11,"park_timeout","","Blocks the current thread until the token is made…",4,[[["self"],["duration"]]]],[11,"unparker","","Returns a reference to an associated [`Unparker`].",4,[[["self"]],["unparker"]]],[11,"unpark","","Atomically makes the token available if it is not already.",5,[[["self"]]]],[11,"new","","Creates a new sharded reader-writer lock.",6,[[["t"]],["shardedlock"]]],[11,"into_inner","","Consumes this lock, returning the underlying data.",6,[[],["lockresult"]]],[11,"is_poisoned","","Returns `true` if the lock is poisoned.",6,[[["self"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",6,[[["self"]],[["t"],["lockresult"]]]],[11,"try_read","","Attempts to acquire this lock with shared read access.",6,[[["self"]],[["shardedlockreadguard"],["trylockresult",["shardedlockreadguard"]]]]],[11,"read","","Locks with shared read access, blocking the current thread…",6,[[["self"]],[["shardedlockreadguard"],["lockresult",["shardedlockreadguard"]]]]],[11,"try_write","","Attempts to acquire this lock with exclusive write access.",6,[[["self"]],[["trylockresult",["shardedlockwriteguard"]],["shardedlockwriteguard"]]]],[11,"write","","Locks with exclusive write access, blocking the current…",6,[[["self"]],[["lockresult",["shardedlockwriteguard"]],["shardedlockwriteguard"]]]],[11,"new","","Creates a new wait group and returns the single reference…",7,[[],["waitgroup"]]],[11,"wait","","Drops this reference and waits until all other references…",7,[[]]],[0,"thread","crossbeam_utils","Threads that can borrow variables from the stack.",null,null],[3,"Scope","crossbeam_utils::thread","A scope for spawning threads.",null,null],[3,"ScopedThreadBuilder","","Configures the properties of a new thread.",null,null],[3,"ScopedJoinHandle","","A handle that can be used to join its scoped thread.",null,null],[5,"scope","","Creates a new scope for spawning threads.",null,[[["f"]],["result"]]],[11,"spawn","","Spawns a scoped thread.",8,[[["self"],["f"]],["scopedjoinhandle"]]],[11,"builder","","Creates a builder that can configure a thread before…",8,[[["self"]],["scopedthreadbuilder"]]],[11,"name","","Sets the name for the new thread.",9,[[["string"]],["scopedthreadbuilder"]]],[11,"stack_size","","Sets the size of the stack for the new thread.",9,[[["usize"]],["scopedthreadbuilder"]]],[11,"spawn","","Spawns a scoped thread with this configuration.",9,[[["f"]],[["scopedjoinhandle"],["result",["scopedjoinhandle"]]]]],[11,"join","","Waits for the thread to finish and returns its result.",10,[[],["result"]]],[11,"thread","","Returns a handle to the underlying thread.",10,[[["self"]],["thread"]]],[11,"from","crossbeam_utils","",2,[[],["t"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","crossbeam_utils::atomic","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","crossbeam_utils::sync","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[],["t"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","crossbeam_utils::thread","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"drop","crossbeam_utils::sync","",12,[[["self"]]]],[11,"drop","","",7,[[["self"]]]],[11,"from","crossbeam_utils","",2,[[["t"]],["self"]]],[11,"from","crossbeam_utils::sync","",6,[[["t"]],["self"]]],[11,"clone","crossbeam_utils","",2,[[["self"]],["cachepadded"]]],[11,"clone","crossbeam_utils::sync","",5,[[["self"]],["unparker"]]],[11,"clone","","",7,[[["self"]],["waitgroup"]]],[11,"default","crossbeam_utils::atomic","",0,[[],["atomiccell"]]],[11,"default","crossbeam_utils","",2,[[],["cachepadded"]]],[11,"default","","",3,[[],["backoff"]]],[11,"default","crossbeam_utils::sync","",6,[[],["shardedlock"]]],[11,"eq","crossbeam_utils","",2,[[["self"],["cachepadded"]],["bool"]]],[11,"ne","","",2,[[["self"],["cachepadded"]],["bool"]]],[11,"deref","","",2,[[["self"]],["t"]]],[11,"deref","crossbeam_utils::sync","",11,[[["self"]],["t"]]],[11,"deref","","",12,[[["self"]],["t"]]],[11,"deref_mut","crossbeam_utils","",2,[[["self"]],["t"]]],[11,"deref_mut","crossbeam_utils::sync","",12,[[["self"]],["t"]]],[11,"fmt","crossbeam_utils::atomic","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","crossbeam_utils","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","crossbeam_utils::sync","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","crossbeam_utils::thread","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","crossbeam_utils::sync","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"hash","crossbeam_utils","",2,[[["self"],["__h"]]]]],"p":[[3,"AtomicCell"],[8,"AtomicConsume"],[3,"CachePadded"],[3,"Backoff"],[3,"Parker"],[3,"Unparker"],[3,"ShardedLock"],[3,"WaitGroup"],[3,"Scope"],[3,"ScopedThreadBuilder"],[3,"ScopedJoinHandle"],[3,"ShardedLockReadGuard"],[3,"ShardedLockWriteGuard"]]};
searchIndex["crypto_hash"] = {"doc":"A set of cryptographic hash functions provided by the…","i":[[3,"Hasher","crypto_hash","Generator of digests using a cryptographic hash function.",null,null],[4,"Algorithm","","Available cryptographic hash functions.",null,null],[13,"MD5","","Popular message digest algorithm, only available for…",0,null],[13,"SHA1","","SHA-1 algorithm from NIST FIPS, only available for…",0,null],[13,"SHA256","","SHA-2 family algorithm (256 bits).",0,null],[13,"SHA512","","SHA-2 family algorithm (512 bits).",0,null],[5,"digest","","Helper function for `Hasher` which generates a…",null,[[["algorithm"]],[["vec",["u8"]],["u8"]]]],[5,"hex_digest","","Helper function for `Hasher` which generates a…",null,[[["algorithm"]],["string"]]],[11,"new","","Create a new `Hasher` for the given `Algorithm`.",1,[[["algorithm"]],["hasher"]]],[11,"finish","","Generate a digest from the data written to the `Hasher`.",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["algorithm"]]],[11,"eq","","",0,[[["self"],["algorithm"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"write","","",1,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",1,[[["self"]],["result"]]]],"p":[[4,"Algorithm"],[3,"Hasher"]]};
searchIndex["curl"] = {"doc":"Rust bindings to the libcurl C library","i":[[3,"Error","curl","An error returned from various \"easy\" operations.",null,null],[3,"FormError","","An error from \"form add\" operations.",null,null],[3,"MultiError","","An error from \"multi\" operations.",null,null],[3,"ShareError","","An error returned from \"share\" operations.",null,null],[3,"Protocols","","An iterator over the list of protocols a version supports.",null,null],[3,"Version","","Version information about libcurl and the capabilities…",null,null],[5,"init","","Initializes the underlying libcurl library.",null,[[]]],[11,"new","","Creates a new error from the underlying code returned by…",0,[[["curlcode"]],["error"]]],[11,"set_extra","","Stores some extra information about this error inside this…",0,[[["self"],["string"]]]],[11,"is_unsupported_protocol","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_failed_init","","Returns whether this error corresponds to CURLE_FAILED_INIT.",0,[[["self"]],["bool"]]],[11,"is_url_malformed","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_couldnt_resolve_proxy","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_couldnt_resolve_host","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_couldnt_connect","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_remote_access_denied","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_partial_file","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_quote_error","","Returns whether this error corresponds to CURLE_QUOTE_ERROR.",0,[[["self"]],["bool"]]],[11,"is_http_returned_error","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_read_error","","Returns whether this error corresponds to CURLE_READ_ERROR.",0,[[["self"]],["bool"]]],[11,"is_write_error","","Returns whether this error corresponds to CURLE_WRITE_ERROR.",0,[[["self"]],["bool"]]],[11,"is_upload_failed","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_out_of_memory","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_operation_timedout","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_range_error","","Returns whether this error corresponds to CURLE_RANGE_ERROR.",0,[[["self"]],["bool"]]],[11,"is_http_post_error","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_ssl_connect_error","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_bad_download_resume","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_file_couldnt_read_file","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_function_not_found","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_aborted_by_callback","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_bad_function_argument","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_interface_failed","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_too_many_redirects","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_unknown_option","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_peer_failed_verification","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_got_nothing","","Returns whether this error corresponds to CURLE_GOT_NOTHING.",0,[[["self"]],["bool"]]],[11,"is_ssl_engine_notfound","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_ssl_engine_setfailed","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_send_error","","Returns whether this error corresponds to CURLE_SEND_ERROR.",0,[[["self"]],["bool"]]],[11,"is_recv_error","","Returns whether this error corresponds to CURLE_RECV_ERROR.",0,[[["self"]],["bool"]]],[11,"is_ssl_certproblem","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_ssl_cipher","","Returns whether this error corresponds to CURLE_SSL_CIPHER.",0,[[["self"]],["bool"]]],[11,"is_ssl_cacert","","Returns whether this error corresponds to CURLE_SSL_CACERT.",0,[[["self"]],["bool"]]],[11,"is_bad_content_encoding","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_filesize_exceeded","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_use_ssl_failed","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_send_fail_rewind","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_ssl_engine_initfailed","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_login_denied","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_conv_failed","","Returns whether this error corresponds to CURLE_CONV_FAILED.",0,[[["self"]],["bool"]]],[11,"is_conv_required","","Returns whether this error corresponds to CURLE_CONV_REQD.",0,[[["self"]],["bool"]]],[11,"is_ssl_cacert_badfile","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_ssl_crl_badfile","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_ssl_shutdown_failed","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_again","","Returns whether this error corresponds to CURLE_AGAIN.",0,[[["self"]],["bool"]]],[11,"is_ssl_issuer_error","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_chunk_failed","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"is_http2_error","","Returns whether this error corresponds to CURLE_HTTP2.",0,[[["self"]],["bool"]]],[11,"is_http2_stream_error","","Returns whether this error corresponds to…",0,[[["self"]],["bool"]]],[11,"code","","Returns the value of the underlying error corresponding to…",0,[[["self"]],["curlcode"]]],[11,"description","","Returns the general description of this error code, using…",0,[[["self"]],["str"]]],[11,"extra_description","","Returns the extra description of this error, if any is…",0,[[["self"]],[["str"],["option",["str"]]]]],[11,"new","","Creates a new error from the underlying code returned by…",1,[[["curlshcode"]],["shareerror"]]],[11,"is_bad_option","","Returns whether this error corresponds to…",1,[[["self"]],["bool"]]],[11,"is_in_use","","Returns whether this error corresponds to CURLSHE_IN_USE.",1,[[["self"]],["bool"]]],[11,"is_invalid","","Returns whether this error corresponds to CURLSHE_INVALID.",1,[[["self"]],["bool"]]],[11,"is_nomem","","Returns whether this error corresponds to CURLSHE_NOMEM.",1,[[["self"]],["bool"]]],[11,"code","","Returns the value of the underlying error corresponding to…",1,[[["self"]],["curlshcode"]]],[11,"description","","Returns curl's human-readable version of this error.",1,[[["self"]],["str"]]],[11,"new","","Creates a new error from the underlying code returned by…",2,[[["curlmcode"]],["multierror"]]],[11,"is_bad_handle","","Returns whether this error corresponds to CURLM_BAD_HANDLE.",2,[[["self"]],["bool"]]],[11,"is_bad_easy_handle","","Returns whether this error corresponds to…",2,[[["self"]],["bool"]]],[11,"is_out_of_memory","","Returns whether this error corresponds to…",2,[[["self"]],["bool"]]],[11,"is_internal_error","","Returns whether this error corresponds to…",2,[[["self"]],["bool"]]],[11,"is_bad_socket","","Returns whether this error corresponds to CURLM_BAD_SOCKET.",2,[[["self"]],["bool"]]],[11,"is_unknown_option","","Returns whether this error corresponds to…",2,[[["self"]],["bool"]]],[11,"is_call_perform","","Returns whether this error corresponds to…",2,[[["self"]],["bool"]]],[11,"code","","Returns the value of the underlying error corresponding to…",2,[[["self"]],["curlmcode"]]],[11,"description","","Returns curl's human-readable description of this error.",2,[[["self"]],["str"]]],[11,"new","","Creates a new error from the underlying code returned by…",3,[[["curlformcode"]],["formerror"]]],[11,"is_memory","","Returns whether this error corresponds to…",3,[[["self"]],["bool"]]],[11,"is_option_twice","","Returns whether this error corresponds to…",3,[[["self"]],["bool"]]],[11,"is_null","","Returns whether this error corresponds to CURL_FORMADD_NULL.",3,[[["self"]],["bool"]]],[11,"is_unknown_option","","Returns whether this error corresponds to…",3,[[["self"]],["bool"]]],[11,"is_incomplete","","Returns whether this error corresponds to…",3,[[["self"]],["bool"]]],[11,"is_illegal_array","","Returns whether this error corresponds to…",3,[[["self"]],["bool"]]],[11,"is_disabled","","Returns whether this error corresponds to…",3,[[["self"]],["bool"]]],[11,"code","","Returns the value of the underlying error corresponding to…",3,[[["self"]],["curlformcode"]]],[11,"description","","Returns a human-readable description of this error code.",3,[[["self"]],["str"]]],[11,"num","","Returns the libcurl version that this library is currently…",4,[[],["str"]]],[11,"get","","Returns the libcurl version that this library is currently…",4,[[],["version"]]],[11,"version","","Returns the human readable version string,",4,[[["self"]],["str"]]],[11,"version_num","","Returns a numeric representation of the version number",4,[[["self"]],["u32"]]],[11,"host","","Returns a human readable string of the host libcurl is…",4,[[["self"]],["str"]]],[11,"feature_ipv6","","Returns whether libcurl supports IPv6",4,[[["self"]],["bool"]]],[11,"feature_ssl","","Returns whether libcurl supports SSL",4,[[["self"]],["bool"]]],[11,"feature_libz","","Returns whether libcurl supports HTTP deflate via libz",4,[[["self"]],["bool"]]],[11,"feature_ntlm","","Returns whether libcurl supports HTTP NTLM",4,[[["self"]],["bool"]]],[11,"feature_gss_negotiate","","Returns whether libcurl supports HTTP GSSNEGOTIATE",4,[[["self"]],["bool"]]],[11,"feature_debug","","Returns whether libcurl was built with debug capabilities",4,[[["self"]],["bool"]]],[11,"feature_spnego","","Returns whether libcurl was built with SPNEGO authentication",4,[[["self"]],["bool"]]],[11,"feature_largefile","","Returns whether libcurl was built with large file support",4,[[["self"]],["bool"]]],[11,"feature_idn","","Returns whether libcurl was built with support for IDNA,…",4,[[["self"]],["bool"]]],[11,"feature_sspi","","Returns whether libcurl was built with support for SSPI.",4,[[["self"]],["bool"]]],[11,"feature_async_dns","","Returns whether libcurl was built with asynchronous name…",4,[[["self"]],["bool"]]],[11,"feature_conv","","Returns whether libcurl was built with support for…",4,[[["self"]],["bool"]]],[11,"feature_tlsauth_srp","","Returns whether libcurl was built with support for TLS-SRP.",4,[[["self"]],["bool"]]],[11,"feature_ntlm_wb","","Returns whether libcurl was built with support for NTLM…",4,[[["self"]],["bool"]]],[11,"feature_unix_domain_socket","","Returns whether libcurl was built with support for unix…",4,[[["self"]],["bool"]]],[11,"feature_http2","","Returns whether libcurl was built with support for HTTP2.",4,[[["self"]],["bool"]]],[11,"feature_http3","","Returns whether libcurl was built with support for HTTP3.",4,[[["self"]],["bool"]]],[11,"feature_brotli","","Returns whether libcurl was built with support for Brotli.",4,[[["self"]],["bool"]]],[11,"ssl_version","","Returns the version of OpenSSL that is used, or None if…",4,[[["self"]],[["str"],["option",["str"]]]]],[11,"libz_version","","Returns the version of libz that is used, or None if there…",4,[[["self"]],[["str"],["option",["str"]]]]],[11,"protocols","","Returns an iterator over the list of protocols that this…",4,[[["self"]],["protocols"]]],[11,"ares_version","","If available, the human readable version of ares that…",4,[[["self"]],[["str"],["option",["str"]]]]],[11,"ares_version_num","","If available, the version of ares that libcurl is linked…",4,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"libidn_version","","If available, the version of libidn that libcurl is linked…",4,[[["self"]],[["str"],["option",["str"]]]]],[11,"iconv_version_num","","If available, the version of iconv libcurl is linked…",4,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"libssh_version","","If available, the version of libssh that libcurl is linked…",4,[[["self"]],[["str"],["option",["str"]]]]],[11,"brotli_version_num","","If available, the version of brotli libcurl is linked…",4,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"brotli_version","","If available, the version of brotli libcurl is linked…",4,[[["self"]],[["str"],["option",["str"]]]]],[11,"nghttp2_version_num","","If available, the version of nghttp2 libcurl is linked…",4,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"nghttp2_version","","If available, the version of nghttp2 libcurl is linked…",4,[[["self"]],[["str"],["option",["str"]]]]],[11,"quic_version","","If available, the version of quic libcurl is linked against.",4,[[["self"]],[["str"],["option",["str"]]]]],[11,"cainfo","","If available, the built-in default of CURLOPT_CAINFO.",4,[[["self"]],[["str"],["option",["str"]]]]],[11,"capath","","If available, the built-in default of CURLOPT_CAPATH.",4,[[["self"]],[["str"],["option",["str"]]]]],[0,"easy","","Bindings to the \"easy\" libcurl API.",null,null],[3,"Form","curl::easy","Multipart/formdata for an HTTP POST request.",null,null],[3,"Part","","One part in a multipart upload, added to a `Form`.",null,null],[3,"Easy","","Raw bindings to a libcurl \"easy session\".",null,null],[3,"Transfer","","A scoped transfer of information which borrows an `Easy`…",null,null],[3,"Auth","","Structure which stores possible authentication methods to…",null,null],[3,"SslOpt","","Structure which stores possible ssl options to pass to…",null,null],[3,"Easy2","","Raw bindings to a libcurl \"easy session\".",null,null],[3,"Iter","","An iterator over `List`",null,null],[3,"List","","A linked list of a strings",null,null],[4,"NetRc","","Options for `.netrc` parsing.",null,null],[13,"Ignored","","Ignoring `.netrc` file and use information from url",5,null],[13,"Optional","","The use of your `~/.netrc` file is optional, and…",5,null],[13,"Required","","This value tells the library that use of the file is…",5,null],[4,"ProxyType","","Possible proxy types that libcurl currently understands.",null,null],[13,"Http","","",6,null],[13,"Http1","","",6,null],[13,"Socks4","","",6,null],[13,"Socks5","","",6,null],[13,"Socks4a","","",6,null],[13,"Socks5Hostname","","",6,null],[4,"HttpVersion","","Possible values to pass to the `http_version` method.",null,null],[13,"Any","","We don't care what http version to use, and we'd like the…",7,null],[13,"V10","","Please use HTTP 1.0 in the request",7,null],[13,"V11","","Please use HTTP 1.1 in the request",7,null],[13,"V2","","Please use HTTP 2 in the request (Added in CURL 7.33.0)",7,null],[13,"V2TLS","","Use version 2 for HTTPS, version 1.1 for HTTP (Added in…",7,null],[13,"V2PriorKnowledge","","Please use HTTP 2 without HTTP/1.1 Upgrade (Added in CURL…",7,null],[4,"IpResolve","","Possible values to pass to the `ip_resolve` method.",null,null],[13,"V4","","",8,null],[13,"V6","","",8,null],[13,"Any","","",8,null],[4,"SslVersion","","Possible values to pass to the `ssl_version` and…",null,null],[13,"Default","","",9,null],[13,"Tlsv1","","",9,null],[13,"Sslv2","","",9,null],[13,"Sslv3","","",9,null],[13,"Tlsv10","","",9,null],[13,"Tlsv11","","",9,null],[13,"Tlsv12","","",9,null],[13,"Tlsv13","","",9,null],[4,"TimeCondition","","Possible conditions for the `time_condition` method.",null,null],[13,"None","","",10,null],[13,"IfModifiedSince","","",10,null],[13,"IfUnmodifiedSince","","",10,null],[13,"LastModified","","",10,null],[4,"InfoType","","Possible data chunks that can be witnessed as part of the…",null,null],[13,"Text","","The data is informational text.",11,null],[13,"HeaderIn","","The data is header (or header-like) data received from the…",11,null],[13,"HeaderOut","","The data is header (or header-like) data sent to the peer.",11,null],[13,"DataIn","","The data is protocol data received from the peer.",11,null],[13,"DataOut","","The data is protocol data sent to the peer.",11,null],[13,"SslDataIn","","The data is SSL/TLS (binary) data received from the peer.",11,null],[13,"SslDataOut","","The data is SSL/TLS (binary) data sent to the peer.",11,null],[4,"ReadError","","Possible error codes that can be returned from the…",null,null],[13,"Abort","","Indicates that the connection should be aborted immediately",12,null],[13,"Pause","","Indicates that reading should be paused until `unpause` is…",12,null],[4,"SeekResult","","Possible return values from the `seek_function` callback.",null,null],[13,"Ok","","Indicates that the seek operation was a success",13,null],[13,"Fail","","Indicates that the seek operation failed, and the entire…",13,null],[13,"CantSeek","","Indicates that although the seek failed libcurl should…",13,null],[4,"WriteError","","Possible error codes that can be returned from the…",null,null],[13,"Pause","","Indicates that reading should be paused until `unpause` is…",14,null],[11,"new","","Creates a new blank form ready for the addition of new data.",15,[[],["form"]]],[11,"part","","Prepares adding a new part to this `Form`",15,[[["str"],["self"]],["part"]]],[11,"contents","","A pointer to the contents of this part, the actual data to…",16,[[["self"]],["self"]]],[11,"file_content","","Causes this file to be read and its contents used as data…",16,[[["self"],["p"]],["self"]]],[11,"file","","Makes this part a file upload part of the given file.",16,[[["self"],["p"]],["self"]]],[11,"content_type","","Used in combination with `Part::file`, provides the…",16,[[["str"],["self"]],["self"]]],[11,"filename","","Used in combination with `Part::file`, provides the…",16,[[["self"],["p"]],["self"]]],[11,"buffer","","This is used to provide a custom file upload part without…",16,[[["u8"],["self"],["p"],["vec",["u8"]]],["self"]]],[11,"content_header","","Specifies extra headers for the form POST section.",16,[[["self"],["list"]],["self"]]],[11,"add","","Attempts to add this part to the `Form` that it was…",16,[[["self"]],[["result",["formerror"]],["formerror"]]]],[11,"new","","Creates a new \"easy\" handle which is the core of almost…",17,[[],["easy"]]],[11,"verbose","","Same as `Easy2::verbose`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"show_header","","Same as `Easy2::show_header`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"progress","","Same as `Easy2::progress`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"signal","","Same as `Easy2::signal`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"wildcard_match","","Same as `Easy2::wildcard_match`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"unix_socket","","Same as `Easy2::unix_socket`",17,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"write_function","","Set callback for writing received data.",17,[[["self"],["f"]],[["result",["error"]],["error"]]]],[11,"read_function","","Read callback for data uploads.",17,[[["self"],["f"]],[["result",["error"]],["error"]]]],[11,"seek_function","","User callback for seeking in input stream.",17,[[["self"],["f"]],[["result",["error"]],["error"]]]],[11,"progress_function","","Callback to progress meter function",17,[[["self"],["f"]],[["result",["error"]],["error"]]]],[11,"ssl_ctx_function","","Callback to SSL context",17,[[["self"],["f"]],[["result",["error"]],["error"]]]],[11,"debug_function","","Specify a debug callback",17,[[["self"],["f"]],[["result",["error"]],["error"]]]],[11,"header_function","","Callback that receives header data",17,[[["self"],["f"]],[["result",["error"]],["error"]]]],[11,"fail_on_error","","Same as `Easy2::fail_on_error`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"url","","Same as `Easy2::url`",17,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"port","","Same as `Easy2::port`",17,[[["u16"],["self"]],[["result",["error"]],["error"]]]],[11,"proxy","","Same as `Easy2::proxy`",17,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"proxy_port","","Same as `Easy2::proxy_port`",17,[[["u16"],["self"]],[["result",["error"]],["error"]]]],[11,"proxy_type","","Same as `Easy2::proxy_type`",17,[[["self"],["proxytype"]],[["result",["error"]],["error"]]]],[11,"noproxy","","Same as `Easy2::noproxy`",17,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"http_proxy_tunnel","","Same as `Easy2::http_proxy_tunnel`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"interface","","Same as `Easy2::interface`",17,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"set_local_port","","Same as `Easy2::set_local_port`",17,[[["u16"],["self"]],[["result",["error"]],["error"]]]],[11,"local_port_range","","Same as `Easy2::local_port_range`",17,[[["u16"],["self"]],[["result",["error"]],["error"]]]],[11,"dns_servers","","Same as `Easy2::dns_servers`",17,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"dns_cache_timeout","","Same as `Easy2::dns_cache_timeout`",17,[[["self"],["duration"]],[["result",["error"]],["error"]]]],[11,"buffer_size","","Same as `Easy2::buffer_size`",17,[[["self"],["usize"]],[["result",["error"]],["error"]]]],[11,"tcp_nodelay","","Same as `Easy2::tcp_nodelay`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"tcp_keepalive","","Same as `Easy2::tcp_keepalive`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"tcp_keepintvl","","Same as `Easy2::tcp_keepintvl`",17,[[["self"],["duration"]],[["result",["error"]],["error"]]]],[11,"tcp_keepidle","","Same as `Easy2::tcp_keepidle`",17,[[["self"],["duration"]],[["result",["error"]],["error"]]]],[11,"address_scope","","Same as `Easy2::address_scope`",17,[[["self"],["u32"]],[["result",["error"]],["error"]]]],[11,"username","","Same as `Easy2::username`",17,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"password","","Same as `Easy2::password`",17,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"http_auth","","Same as `Easy2::http_auth`",17,[[["auth"],["self"]],[["result",["error"]],["error"]]]],[11,"proxy_username","","Same as `Easy2::proxy_username`",17,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"proxy_password","","Same as `Easy2::proxy_password`",17,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"proxy_auth","","Same as `Easy2::proxy_auth`",17,[[["auth"],["self"]],[["result",["error"]],["error"]]]],[11,"netrc","","Same as `Easy2::netrc`",17,[[["self"],["netrc"]],[["result",["error"]],["error"]]]],[11,"autoreferer","","Same as `Easy2::autoreferer`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"accept_encoding","","Same as `Easy2::accept_encoding`",17,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"transfer_encoding","","Same as `Easy2::transfer_encoding`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"follow_location","","Same as `Easy2::follow_location`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"unrestricted_auth","","Same as `Easy2::unrestricted_auth`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"max_redirections","","Same as `Easy2::max_redirections`",17,[[["self"],["u32"]],[["result",["error"]],["error"]]]],[11,"put","","Same as `Easy2::put`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"post","","Same as `Easy2::post`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"post_fields_copy","","Same as `Easy2::post_field_copy`",17,[[["self"]],[["result",["error"]],["error"]]]],[11,"post_field_size","","Same as `Easy2::post_field_size`",17,[[["self"],["u64"]],[["result",["error"]],["error"]]]],[11,"httppost","","Same as `Easy2::httppost`",17,[[["self"],["form"]],[["result",["error"]],["error"]]]],[11,"referer","","Same as `Easy2::referer`",17,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"useragent","","Same as `Easy2::useragent`",17,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"http_headers","","Same as `Easy2::http_headers`",17,[[["self"],["list"]],[["result",["error"]],["error"]]]],[11,"cookie","","Same as `Easy2::cookie`",17,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"cookie_file","","Same as `Easy2::cookie_file`",17,[[["path"],["self"],["asref",["path"]]],[["result",["error"]],["error"]]]],[11,"cookie_jar","","Same as `Easy2::cookie_jar`",17,[[["path"],["self"],["asref",["path"]]],[["result",["error"]],["error"]]]],[11,"cookie_session","","Same as `Easy2::cookie_session`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"cookie_list","","Same as `Easy2::cookie_list`",17,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"get","","Same as `Easy2::get`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"ignore_content_length","","Same as `Easy2::ignore_content_length`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"http_content_decoding","","Same as `Easy2::http_content_decoding`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"http_transfer_decoding","","Same as `Easy2::http_transfer_decoding`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"range","","Same as `Easy2::range`",17,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"resume_from","","Same as `Easy2::resume_from`",17,[[["self"],["u64"]],[["result",["error"]],["error"]]]],[11,"custom_request","","Same as `Easy2::custom_request`",17,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"fetch_filetime","","Same as `Easy2::fetch_filetime`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"nobody","","Same as `Easy2::nobody`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"in_filesize","","Same as `Easy2::in_filesize`",17,[[["self"],["u64"]],[["result",["error"]],["error"]]]],[11,"upload","","Same as `Easy2::upload`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"max_filesize","","Same as `Easy2::max_filesize`",17,[[["self"],["u64"]],[["result",["error"]],["error"]]]],[11,"time_condition","","Same as `Easy2::time_condition`",17,[[["self"],["timecondition"]],[["result",["error"]],["error"]]]],[11,"time_value","","Same as `Easy2::time_value`",17,[[["i64"],["self"]],[["result",["error"]],["error"]]]],[11,"timeout","","Same as `Easy2::timeout`",17,[[["self"],["duration"]],[["result",["error"]],["error"]]]],[11,"low_speed_limit","","Same as `Easy2::low_speed_limit`",17,[[["self"],["u32"]],[["result",["error"]],["error"]]]],[11,"low_speed_time","","Same as `Easy2::low_speed_time`",17,[[["self"],["duration"]],[["result",["error"]],["error"]]]],[11,"max_send_speed","","Same as `Easy2::max_send_speed`",17,[[["self"],["u64"]],[["result",["error"]],["error"]]]],[11,"max_recv_speed","","Same as `Easy2::max_recv_speed`",17,[[["self"],["u64"]],[["result",["error"]],["error"]]]],[11,"max_connects","","Same as `Easy2::max_connects`",17,[[["self"],["u32"]],[["result",["error"]],["error"]]]],[11,"fresh_connect","","Same as `Easy2::fresh_connect`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"forbid_reuse","","Same as `Easy2::forbid_reuse`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"connect_timeout","","Same as `Easy2::connect_timeout`",17,[[["self"],["duration"]],[["result",["error"]],["error"]]]],[11,"ip_resolve","","Same as `Easy2::ip_resolve`",17,[[["ipresolve"],["self"]],[["result",["error"]],["error"]]]],[11,"resolve","","Same as `Easy2::resolve`",17,[[["self"],["list"]],[["result",["error"]],["error"]]]],[11,"connect_only","","Same as `Easy2::connect_only`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"ssl_cert","","Same as `Easy2::ssl_cert`",17,[[["path"],["self"],["asref",["path"]]],[["result",["error"]],["error"]]]],[11,"ssl_cert_type","","Same as `Easy2::ssl_cert_type`",17,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"ssl_key","","Same as `Easy2::ssl_key`",17,[[["path"],["self"],["asref",["path"]]],[["result",["error"]],["error"]]]],[11,"ssl_key_type","","Same as `Easy2::ssl_key_type`",17,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"key_password","","Same as `Easy2::key_password`",17,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"ssl_engine","","Same as `Easy2::ssl_engine`",17,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"ssl_engine_default","","Same as `Easy2::ssl_engine_default`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"http_version","","Same as `Easy2::http_version`",17,[[["self"],["httpversion"]],[["result",["error"]],["error"]]]],[11,"ssl_version","","Same as `Easy2::ssl_version`",17,[[["self"],["sslversion"]],[["result",["error"]],["error"]]]],[11,"ssl_min_max_version","","Same as `Easy2::ssl_min_max_version`",17,[[["self"],["sslversion"]],[["result",["error"]],["error"]]]],[11,"ssl_verify_host","","Same as `Easy2::ssl_verify_host`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"ssl_verify_peer","","Same as `Easy2::ssl_verify_peer`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"cainfo","","Same as `Easy2::cainfo`",17,[[["path"],["self"],["asref",["path"]]],[["result",["error"]],["error"]]]],[11,"issuer_cert","","Same as `Easy2::issuer_cert`",17,[[["path"],["self"],["asref",["path"]]],[["result",["error"]],["error"]]]],[11,"capath","","Same as `Easy2::capath`",17,[[["path"],["self"],["asref",["path"]]],[["result",["error"]],["error"]]]],[11,"crlfile","","Same as `Easy2::crlfile`",17,[[["path"],["self"],["asref",["path"]]],[["result",["error"]],["error"]]]],[11,"certinfo","","Same as `Easy2::certinfo`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"random_file","","Same as `Easy2::random_file`",17,[[["path"],["self"],["asref",["path"]]],[["result",["error"]],["error"]]]],[11,"egd_socket","","Same as `Easy2::egd_socket`",17,[[["path"],["self"],["asref",["path"]]],[["result",["error"]],["error"]]]],[11,"ssl_cipher_list","","Same as `Easy2::ssl_cipher_list`",17,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"ssl_sessionid_cache","","Same as `Easy2::ssl_sessionid_cache`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"ssl_options","","Same as `Easy2::ssl_options`",17,[[["self"],["sslopt"]],[["result",["error"]],["error"]]]],[11,"time_condition_unmet","","Same as `Easy2::time_condition_unmet`",17,[[["self"]],[["error"],["result",["bool","error"]],["bool"]]]],[11,"effective_url","","Same as `Easy2::effective_url`",17,[[["self"]],[["error"],["result",["option","error"]],["option",["str"]]]]],[11,"effective_url_bytes","","Same as `Easy2::effective_url_bytes`",17,[[["self"]],[["result",["option","error"]],["error"],["option"]]]],[11,"response_code","","Same as `Easy2::response_code`",17,[[["self"]],[["error"],["u32"],["result",["u32","error"]]]]],[11,"http_connectcode","","Same as `Easy2::http_connectcode`",17,[[["self"]],[["error"],["u32"],["result",["u32","error"]]]]],[11,"filetime","","Same as `Easy2::filetime`",17,[[["self"]],[["option",["i64"]],["error"],["result",["option","error"]]]]],[11,"download_size","","Same as `Easy2::download_size`",17,[[["self"]],[["result",["f64","error"]],["f64"],["error"]]]],[11,"content_length_download","","Same as `Easy2::content_length_download`",17,[[["self"]],[["result",["f64","error"]],["f64"],["error"]]]],[11,"total_time","","Same as `Easy2::total_time`",17,[[["self"]],[["error"],["result",["duration","error"]],["duration"]]]],[11,"namelookup_time","","Same as `Easy2::namelookup_time`",17,[[["self"]],[["error"],["result",["duration","error"]],["duration"]]]],[11,"connect_time","","Same as `Easy2::connect_time`",17,[[["self"]],[["error"],["result",["duration","error"]],["duration"]]]],[11,"appconnect_time","","Same as `Easy2::appconnect_time`",17,[[["self"]],[["error"],["result",["duration","error"]],["duration"]]]],[11,"pretransfer_time","","Same as `Easy2::pretransfer_time`",17,[[["self"]],[["error"],["result",["duration","error"]],["duration"]]]],[11,"starttransfer_time","","Same as `Easy2::starttransfer_time`",17,[[["self"]],[["error"],["result",["duration","error"]],["duration"]]]],[11,"redirect_time","","Same as `Easy2::redirect_time`",17,[[["self"]],[["error"],["result",["duration","error"]],["duration"]]]],[11,"redirect_count","","Same as `Easy2::redirect_count`",17,[[["self"]],[["error"],["u32"],["result",["u32","error"]]]]],[11,"redirect_url","","Same as `Easy2::redirect_url`",17,[[["self"]],[["error"],["result",["option","error"]],["option",["str"]]]]],[11,"redirect_url_bytes","","Same as `Easy2::redirect_url_bytes`",17,[[["self"]],[["result",["option","error"]],["error"],["option"]]]],[11,"header_size","","Same as `Easy2::header_size`",17,[[["self"]],[["result",["u64","error"]],["u64"],["error"]]]],[11,"request_size","","Same as `Easy2::request_size`",17,[[["self"]],[["result",["u64","error"]],["u64"],["error"]]]],[11,"content_type","","Same as `Easy2::content_type`",17,[[["self"]],[["error"],["result",["option","error"]],["option",["str"]]]]],[11,"content_type_bytes","","Same as `Easy2::content_type_bytes`",17,[[["self"]],[["result",["option","error"]],["error"],["option"]]]],[11,"os_errno","","Same as `Easy2::os_errno`",17,[[["self"]],[["error"],["result",["i32","error"]],["i32"]]]],[11,"primary_ip","","Same as `Easy2::primary_ip`",17,[[["self"]],[["error"],["result",["option","error"]],["option",["str"]]]]],[11,"primary_port","","Same as `Easy2::primary_port`",17,[[["self"]],[["result",["u16","error"]],["u16"],["error"]]]],[11,"local_ip","","Same as `Easy2::local_ip`",17,[[["self"]],[["error"],["result",["option","error"]],["option",["str"]]]]],[11,"local_port","","Same as `Easy2::local_port`",17,[[["self"]],[["result",["u16","error"]],["u16"],["error"]]]],[11,"cookies","","Same as `Easy2::cookies`",17,[[["self"]],[["error"],["result",["list","error"]],["list"]]]],[11,"pipewait","","Same as `Easy2::pipewait`",17,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"perform","","Same as `Easy2::perform`",17,[[["self"]],[["result",["error"]],["error"]]]],[11,"transfer","","Creates a new scoped transfer which can be used to set…",17,[[["self"]],["transfer"]]],[11,"unpause_read","","Same as `Easy2::unpause_read`",17,[[["self"]],[["result",["error"]],["error"]]]],[11,"unpause_write","","Same as `Easy2::unpause_write`",17,[[["self"]],[["result",["error"]],["error"]]]],[11,"url_encode","","Same as `Easy2::url_encode`",17,[[["self"]],["string"]]],[11,"url_decode","","Same as `Easy2::url_decode`",17,[[["str"],["self"]],[["vec",["u8"]],["u8"]]]],[11,"reset","","Same as `Easy2::reset`",17,[[["self"]]]],[11,"recv","","Same as `Easy2::recv`",17,[[["self"]],[["error"],["result",["usize","error"]],["usize"]]]],[11,"send","","Same as `Easy2::send`",17,[[["self"]],[["error"],["result",["usize","error"]],["usize"]]]],[11,"raw","","Same as `Easy2::raw`",17,[[["self"]]]],[11,"take_error_buf","","Same as `Easy2::take_error_buf`",17,[[["self"]],[["option",["string"]],["string"]]]],[11,"write_function","","Same as `Easy::write_function`, just takes a non `'static`…",18,[[["self"],["f"]],[["result",["error"]],["error"]]]],[11,"read_function","","Same as `Easy::read_function`, just takes a non `'static`…",18,[[["self"],["f"]],[["result",["error"]],["error"]]]],[11,"seek_function","","Same as `Easy::seek_function`, just takes a non `'static`…",18,[[["self"],["f"]],[["result",["error"]],["error"]]]],[11,"progress_function","","Same as `Easy::progress_function`, just takes a non…",18,[[["self"],["f"]],[["result",["error"]],["error"]]]],[11,"ssl_ctx_function","","Same as `Easy::ssl_ctx_function`, just takes a non…",18,[[["self"],["f"]],[["result",["error"]],["error"]]]],[11,"debug_function","","Same as `Easy::debug_function`, just takes a non `'static`…",18,[[["self"],["f"]],[["result",["error"]],["error"]]]],[11,"header_function","","Same as `Easy::header_function`, just takes a non…",18,[[["self"],["f"]],[["result",["error"]],["error"]]]],[11,"perform","","Same as `Easy::perform`.",18,[[["self"]],[["result",["error"]],["error"]]]],[11,"unpause_read","","Same as `Easy::unpause_read`.",18,[[["self"]],[["result",["error"]],["error"]]]],[11,"unpause_write","","Same as `Easy::unpause_write`",18,[[["self"]],[["result",["error"]],["error"]]]],[11,"new","","Creates a new \"easy\" handle which is the core of almost…",19,[[["h"]],["easy2"]]],[11,"reset","","Re-initializes this handle to the default values.",19,[[["self"]]]],[11,"verbose","","Configures this handle to have verbose output to help…",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"show_header","","Indicates whether header information is streamed to the…",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"progress","","Indicates whether a progress meter will be shown for…",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"signal","","Inform libcurl whether or not it should install signal…",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"wildcard_match","","Indicates whether multiple files will be transferred based…",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"unix_socket","","Provides the unix domain socket which this handle will…",19,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"get_ref","","Acquires a reference to the underlying handler for events.",19,[[["self"]],["h"]]],[11,"get_mut","","Acquires a reference to the underlying handler for events.",19,[[["self"]],["h"]]],[11,"fail_on_error","","Indicates whether this library will fail on HTTP response…",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"url","","Provides the URL which this handle will work with.",19,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"port","","Configures the port number to connect to, instead of the…",19,[[["u16"],["self"]],[["result",["error"]],["error"]]]],[11,"proxy","","Provide the URL of a proxy to use.",19,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"proxy_port","","Provide port number the proxy is listening on.",19,[[["u16"],["self"]],[["result",["error"]],["error"]]]],[11,"proxy_type","","Indicates the type of proxy being used.",19,[[["self"],["proxytype"]],[["result",["error"]],["error"]]]],[11,"noproxy","","Provide a list of hosts that should not be proxied to.",19,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"http_proxy_tunnel","","Inform curl whether it should tunnel all operations…",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"interface","","Tell curl which interface to bind to for an outgoing…",19,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"set_local_port","","Indicate which port should be bound to locally for this…",19,[[["u16"],["self"]],[["result",["error"]],["error"]]]],[11,"local_port_range","","Indicates the number of attempts libcurl will perform to…",19,[[["u16"],["self"]],[["result",["error"]],["error"]]]],[11,"dns_servers","","Sets the DNS servers that wil be used.",19,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"dns_cache_timeout","","Sets the timeout of how long name resolves will be kept in…",19,[[["self"],["duration"]],[["result",["error"]],["error"]]]],[11,"buffer_size","","Specify the preferred receive buffer size, in bytes.",19,[[["self"],["usize"]],[["result",["error"]],["error"]]]],[11,"tcp_nodelay","","Configures whether the TCP_NODELAY option is set, or…",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"tcp_keepalive","","Configures whether TCP keepalive probes will be sent.",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"tcp_keepidle","","Configures the TCP keepalive idle time wait.",19,[[["self"],["duration"]],[["result",["error"]],["error"]]]],[11,"tcp_keepintvl","","Configures the delay between keepalive probes.",19,[[["self"],["duration"]],[["result",["error"]],["error"]]]],[11,"address_scope","","Configures the scope for local IPv6 addresses.",19,[[["self"],["u32"]],[["result",["error"]],["error"]]]],[11,"username","","Configures the username to pass as authentication for this…",19,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"password","","Configures the password to pass as authentication for this…",19,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"http_auth","","Set HTTP server authentication methods to try",19,[[["auth"],["self"]],[["result",["error"]],["error"]]]],[11,"proxy_username","","Configures the proxy username to pass as authentication…",19,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"proxy_password","","Configures the proxy password to pass as authentication…",19,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"proxy_auth","","Set HTTP proxy authentication methods to try",19,[[["auth"],["self"]],[["result",["error"]],["error"]]]],[11,"netrc","","Enable .netrc parsing",19,[[["self"],["netrc"]],[["result",["error"]],["error"]]]],[11,"autoreferer","","Indicates whether the referer header is automatically…",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"accept_encoding","","Enables automatic decompression of HTTP downloads.",19,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"transfer_encoding","","Request the HTTP Transfer Encoding.",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"follow_location","","Follow HTTP 3xx redirects.",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"unrestricted_auth","","Send credentials to hosts other than the first as well.",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"max_redirections","","Set the maximum number of redirects allowed.",19,[[["self"],["u32"]],[["result",["error"]],["error"]]]],[11,"put","","Make an HTTP PUT request.",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"post","","Make an HTTP POST request.",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"post_fields_copy","","Configures the data that will be uploaded as part of a POST.",19,[[["self"]],[["result",["error"]],["error"]]]],[11,"post_field_size","","Configures the size of data that's going to be uploaded as…",19,[[["self"],["u64"]],[["result",["error"]],["error"]]]],[11,"httppost","","Tells libcurl you want a multipart/formdata HTTP POST to…",19,[[["self"],["form"]],[["result",["error"]],["error"]]]],[11,"referer","","Sets the HTTP referer header",19,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"useragent","","Sets the HTTP user-agent header",19,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"http_headers","","Add some headers to this HTTP request.",19,[[["self"],["list"]],[["result",["error"]],["error"]]]],[11,"cookie","","Set the contents of the HTTP Cookie header.",19,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"cookie_file","","Set the file name to read cookies from.",19,[[["path"],["self"],["asref",["path"]]],[["result",["error"]],["error"]]]],[11,"cookie_jar","","Set the file name to store cookies to.",19,[[["path"],["self"],["asref",["path"]]],[["result",["error"]],["error"]]]],[11,"cookie_session","","Start a new cookie session",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"cookie_list","","Add to or manipulate cookies held in memory.",19,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"get","","Ask for a HTTP GET request.",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"ignore_content_length","","Ignore the content-length header.",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"http_content_decoding","","Enable or disable HTTP content decoding.",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"http_transfer_decoding","","Enable or disable HTTP transfer decoding.",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"range","","Indicates the range that this request should retrieve.",19,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"resume_from","","Set a point to resume transfer from",19,[[["self"],["u64"]],[["result",["error"]],["error"]]]],[11,"custom_request","","Set a custom request string",19,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"fetch_filetime","","Get the modification time of the remote resource",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"nobody","","Indicate whether to download the request without getting…",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"in_filesize","","Set the size of the input file to send off.",19,[[["self"],["u64"]],[["result",["error"]],["error"]]]],[11,"upload","","Enable or disable data upload.",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"max_filesize","","Configure the maximum file size to download.",19,[[["self"],["u64"]],[["result",["error"]],["error"]]]],[11,"time_condition","","Selects a condition for a time request.",19,[[["self"],["timecondition"]],[["result",["error"]],["error"]]]],[11,"time_value","","Sets the time value for a conditional request.",19,[[["i64"],["self"]],[["result",["error"]],["error"]]]],[11,"timeout","","Set maximum time the request is allowed to take.",19,[[["self"],["duration"]],[["result",["error"]],["error"]]]],[11,"low_speed_limit","","Set the low speed limit in bytes per second.",19,[[["self"],["u32"]],[["result",["error"]],["error"]]]],[11,"low_speed_time","","Set the low speed time period.",19,[[["self"],["duration"]],[["result",["error"]],["error"]]]],[11,"max_send_speed","","Rate limit data upload speed",19,[[["self"],["u64"]],[["result",["error"]],["error"]]]],[11,"max_recv_speed","","Rate limit data download speed",19,[[["self"],["u64"]],[["result",["error"]],["error"]]]],[11,"max_connects","","Set the maximum connection cache size.",19,[[["self"],["u32"]],[["result",["error"]],["error"]]]],[11,"fresh_connect","","Force a new connection to be used.",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"forbid_reuse","","Make connection get closed at once after use.",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"connect_timeout","","Timeout for the connect phase",19,[[["self"],["duration"]],[["result",["error"]],["error"]]]],[11,"ip_resolve","","Specify which IP protocol version to use",19,[[["ipresolve"],["self"]],[["result",["error"]],["error"]]]],[11,"resolve","","Specify custom host name to IP address resolves.",19,[[["self"],["list"]],[["result",["error"]],["error"]]]],[11,"connect_only","","Configure whether to stop when connected to target server",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"ssl_cert","","Sets the SSL client certificate.",19,[[["path"],["self"],["asref",["path"]]],[["result",["error"]],["error"]]]],[11,"ssl_cert_type","","Specify type of the client SSL certificate.",19,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"ssl_key","","Specify private keyfile for TLS and SSL client cert.",19,[[["path"],["self"],["asref",["path"]]],[["result",["error"]],["error"]]]],[11,"ssl_key_type","","Set type of the private key file.",19,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"key_password","","Set passphrase to private key.",19,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"ssl_engine","","Set the SSL engine identifier.",19,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"ssl_engine_default","","Make this handle's SSL engine the default.",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"http_version","","Set preferred HTTP version.",19,[[["self"],["httpversion"]],[["result",["error"]],["error"]]]],[11,"ssl_version","","Set preferred TLS/SSL version.",19,[[["self"],["sslversion"]],[["result",["error"]],["error"]]]],[11,"ssl_min_max_version","","Set preferred TLS/SSL version with minimum version and…",19,[[["self"],["sslversion"]],[["result",["error"]],["error"]]]],[11,"ssl_verify_host","","Verify the certificate's name against host.",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"ssl_verify_peer","","Verify the peer's SSL certificate.",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"cainfo","","Specify the path to Certificate Authority (CA) bundle",19,[[["path"],["self"],["asref",["path"]]],[["result",["error"]],["error"]]]],[11,"issuer_cert","","Set the issuer SSL certificate filename",19,[[["path"],["self"],["asref",["path"]]],[["result",["error"]],["error"]]]],[11,"capath","","Specify directory holding CA certificates",19,[[["path"],["self"],["asref",["path"]]],[["result",["error"]],["error"]]]],[11,"crlfile","","Specify a Certificate Revocation List file",19,[[["path"],["self"],["asref",["path"]]],[["result",["error"]],["error"]]]],[11,"certinfo","","Request SSL certificate information",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"random_file","","Specify a source for random data",19,[[["path"],["self"],["asref",["path"]]],[["result",["error"]],["error"]]]],[11,"egd_socket","","Specify EGD socket path.",19,[[["path"],["self"],["asref",["path"]]],[["result",["error"]],["error"]]]],[11,"ssl_cipher_list","","Specify ciphers to use for TLS.",19,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"ssl_sessionid_cache","","Enable or disable use of the SSL session-ID cache",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"ssl_options","","Set SSL behavior options",19,[[["self"],["sslopt"]],[["result",["error"]],["error"]]]],[11,"time_condition_unmet","","Get info on unmet time conditional",19,[[["self"]],[["error"],["result",["bool","error"]],["bool"]]]],[11,"effective_url","","Get the last used URL",19,[[["self"]],[["error"],["result",["option","error"]],["option",["str"]]]]],[11,"effective_url_bytes","","Get the last used URL, in bytes",19,[[["self"]],[["result",["option","error"]],["error"],["option"]]]],[11,"response_code","","Get the last response code",19,[[["self"]],[["error"],["u32"],["result",["u32","error"]]]]],[11,"http_connectcode","","Get the CONNECT response code",19,[[["self"]],[["error"],["u32"],["result",["u32","error"]]]]],[11,"filetime","","Get the remote time of the retrieved document",19,[[["self"]],[["option",["i64"]],["error"],["result",["option","error"]]]]],[11,"download_size","","Get the number of downloaded bytes",19,[[["self"]],[["result",["f64","error"]],["f64"],["error"]]]],[11,"content_length_download","","Get the content-length of the download",19,[[["self"]],[["result",["f64","error"]],["f64"],["error"]]]],[11,"total_time","","Get total time of previous transfer",19,[[["self"]],[["error"],["result",["duration","error"]],["duration"]]]],[11,"namelookup_time","","Get the name lookup time",19,[[["self"]],[["error"],["result",["duration","error"]],["duration"]]]],[11,"connect_time","","Get the time until connect",19,[[["self"]],[["error"],["result",["duration","error"]],["duration"]]]],[11,"appconnect_time","","Get the time until the SSL/SSH handshake is completed",19,[[["self"]],[["error"],["result",["duration","error"]],["duration"]]]],[11,"pretransfer_time","","Get the time until the file transfer start",19,[[["self"]],[["error"],["result",["duration","error"]],["duration"]]]],[11,"starttransfer_time","","Get the time until the first byte is received",19,[[["self"]],[["error"],["result",["duration","error"]],["duration"]]]],[11,"redirect_time","","Get the time for all redirection steps",19,[[["self"]],[["error"],["result",["duration","error"]],["duration"]]]],[11,"redirect_count","","Get the number of redirects",19,[[["self"]],[["error"],["u32"],["result",["u32","error"]]]]],[11,"redirect_url","","Get the URL a redirect would go to",19,[[["self"]],[["error"],["result",["option","error"]],["option",["str"]]]]],[11,"redirect_url_bytes","","Get the URL a redirect would go to, in bytes",19,[[["self"]],[["result",["option","error"]],["error"],["option"]]]],[11,"header_size","","Get size of retrieved headers",19,[[["self"]],[["result",["u64","error"]],["u64"],["error"]]]],[11,"request_size","","Get size of sent request.",19,[[["self"]],[["result",["u64","error"]],["u64"],["error"]]]],[11,"content_type","","Get Content-Type",19,[[["self"]],[["error"],["result",["option","error"]],["option",["str"]]]]],[11,"content_type_bytes","","Get Content-Type, in bytes",19,[[["self"]],[["result",["option","error"]],["error"],["option"]]]],[11,"os_errno","","Get errno number from last connect failure.",19,[[["self"]],[["error"],["result",["i32","error"]],["i32"]]]],[11,"primary_ip","","Get IP address of last connection.",19,[[["self"]],[["error"],["result",["option","error"]],["option",["str"]]]]],[11,"primary_port","","Get the latest destination port number",19,[[["self"]],[["result",["u16","error"]],["u16"],["error"]]]],[11,"local_ip","","Get local IP address of last connection",19,[[["self"]],[["error"],["result",["option","error"]],["option",["str"]]]]],[11,"local_port","","Get the latest local port number",19,[[["self"]],[["result",["u16","error"]],["u16"],["error"]]]],[11,"cookies","","Get all known cookies",19,[[["self"]],[["error"],["result",["list","error"]],["list"]]]],[11,"pipewait","","Wait for pipelining/multiplexing",19,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"perform","","After options have been set, this will perform the…",19,[[["self"]],[["result",["error"]],["error"]]]],[11,"unpause_read","","Unpause reading on a connection.",19,[[["self"]],[["result",["error"]],["error"]]]],[11,"unpause_write","","Unpause writing on a connection.",19,[[["self"]],[["result",["error"]],["error"]]]],[11,"url_encode","","URL encodes a string `s`",19,[[["self"]],["string"]]],[11,"url_decode","","URL decodes a string `s`, returning `None` if it fails",19,[[["str"],["self"]],[["vec",["u8"]],["u8"]]]],[11,"recv","","Receives data from a connected socket.",19,[[["self"]],[["error"],["result",["usize","error"]],["usize"]]]],[11,"send","","Sends data over the connected socket.",19,[[["self"]],[["error"],["result",["usize","error"]],["usize"]]]],[11,"raw","","Get a pointer to the raw underlying CURL handle.",19,[[["self"]]]],[11,"take_error_buf","","Returns the contents of the internal error buffer, if…",19,[[["self"]],[["option",["string"]],["string"]]]],[11,"new","","Creates a new set of authentications with no members.",20,[[],["auth"]]],[11,"basic","","HTTP Basic authentication.",20,[[["self"],["bool"]],["auth"]]],[11,"digest","","HTTP Digest authentication.",20,[[["self"],["bool"]],["auth"]]],[11,"digest_ie","","HTTP Digest authentication with an IE flavor.",20,[[["self"],["bool"]],["auth"]]],[11,"gssnegotiate","","HTTP Negotiate (SPNEGO) authentication.",20,[[["self"],["bool"]],["auth"]]],[11,"ntlm","","HTTP NTLM authentication.",20,[[["self"],["bool"]],["auth"]]],[11,"ntlm_wb","","NTLM delegating to winbind helper.",20,[[["self"],["bool"]],["auth"]]],[11,"new","","Creates a new set of SSL options.",21,[[],["sslopt"]]],[11,"no_revoke","","Tells libcurl to disable certificate revocation checks for…",21,[[["self"],["bool"]],["sslopt"]]],[11,"allow_beast","","Tells libcurl to not attempt to use any workarounds for a…",21,[[["self"],["bool"]],["sslopt"]]],[11,"new","","Creates a new empty list of strings.",22,[[],["list"]]],[11,"append","","Appends some data into this list.",22,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"iter","","Returns an iterator over the nodes in this list.",22,[[["self"]],["iter"]]],[8,"Handler","","A trait for the various callbacks used by libcurl to…",null,null],[11,"write","","Callback invoked whenever curl has downloaded data for the…",23,[[["self"]],[["result",["usize","writeerror"]],["usize"],["writeerror"]]]],[11,"read","","Read callback for data uploads.",23,[[["self"]],[["readerror"],["usize"],["result",["usize","readerror"]]]]],[11,"seek","","User callback for seeking in input stream.",23,[[["self"],["seekfrom"]],["seekresult"]]],[11,"debug","","Specify a debug callback",23,[[["self"],["infotype"]]]],[11,"header","","Callback that receives header data",23,[[["self"]],["bool"]]],[11,"progress","","Callback to progress meter function",23,[[["self"],["f64"]],["bool"]]],[11,"ssl_ctx","","Callback to SSL context",23,[[["self"]],[["result",["error"]],["error"]]]],[11,"open_socket","","Callback to open sockets for libcurl.",23,[[["self"],["c_int"]],[["curl_socket_t"],["option",["curl_socket_t"]]]]],[0,"multi","curl","Multi - initiating multiple requests simultaneously",null,null],[3,"Multi","curl::multi","A multi handle for initiating multiple connections…",null,null],[3,"Message","","Message from the `messages` function of a multi handle.",null,null],[3,"EasyHandle","","Wrapper around an easy handle while it's owned by a multi…",null,null],[3,"Easy2Handle","","Wrapper around an easy handle while it's owned by a multi…",null,null],[3,"Events","","Notification of the events that have happened on a socket.",null,null],[3,"SocketEvents","","Notification of events that are requested on a socket.",null,null],[3,"WaitFd","","File descriptor to wait on for use with the `wait` method…",null,null],[6,"Socket","","Raw underlying socket type that the multi handles use",null,null],[11,"new","","Creates a new multi session through which multiple HTTP…",24,[[],["multi"]]],[11,"socket_function","","Set the callback informed about what to wait for",24,[[["self"],["f"]],[["multierror"],["result",["multierror"]]]]],[11,"assign","","Set data to associate with an internal socket",24,[[["usize"],["self"],["socket"]],[["multierror"],["result",["multierror"]]]]],[11,"timer_function","","Set callback to receive timeout values",24,[[["self"],["f"]],[["multierror"],["result",["multierror"]]]]],[11,"pipelining","","Enable or disable HTTP pipelining and multiplexing.",24,[[["self"],["bool"]],[["multierror"],["result",["multierror"]]]]],[11,"set_max_host_connections","","Sets the max number of connections to a single host.",24,[[["self"],["usize"]],[["multierror"],["result",["multierror"]]]]],[11,"set_max_total_connections","","Sets the max simultaneously open connections.",24,[[["self"],["usize"]],[["multierror"],["result",["multierror"]]]]],[11,"set_max_connects","","Set size of connection cache.",24,[[["self"],["usize"]],[["multierror"],["result",["multierror"]]]]],[11,"set_pipeline_length","","Sets the pipeline length.",24,[[["self"],["usize"]],[["multierror"],["result",["multierror"]]]]],[11,"add","","Add an easy handle to a multi session",24,[[["easy"],["self"]],[["easyhandle"],["multierror"],["result",["easyhandle","multierror"]]]]],[11,"add2","","Same as `add`, but works with the `Easy2` type.",24,[[["easy2"],["self"]],[["result",["easy2handle","multierror"]],["multierror"],["easy2handle"]]]],[11,"remove","","Remove an easy handle from this multi session",24,[[["easyhandle"],["self"]],[["result",["easy","multierror"]],["easy"],["multierror"]]]],[11,"remove2","","Same as `remove`, but for `Easy2Handle`.",24,[[["self"],["easy2handle"]],[["easy2"],["result",["easy2","multierror"]],["multierror"]]]],[11,"messages","","Read multi stack informationals",24,[[["self"],["f"]]]],[11,"action","","Inform of reads/writes available data given an action",24,[[["events"],["self"],["socket"]],[["u32"],["multierror"],["result",["u32","multierror"]]]]],[11,"timeout","","Inform libcurl that a timeout has expired and sockets…",24,[[["self"]],[["u32"],["multierror"],["result",["u32","multierror"]]]]],[11,"get_timeout","","Get how long to wait for action before proceeding",24,[[["self"]],[["multierror"],["option",["duration"]],["result",["option","multierror"]]]]],[11,"wait","","Block until activity is detected or a timeout passes.",24,[[["duration"],["self"]],[["u32"],["multierror"],["result",["u32","multierror"]]]]],[11,"perform","","Reads/writes available data from each easy handle.",24,[[["self"]],[["u32"],["multierror"],["result",["u32","multierror"]]]]],[11,"fdset2","","Extracts file descriptor information from a multi handle",24,[[["fd_set"],["self"],["option",["fd_set"]]],[["result",["option","multierror"]],["option",["i32"]],["multierror"]]]],[11,"close","","Attempt to close the multi handle and clean up all…",24,[[["self"]],[["multierror"],["result",["multierror"]]]]],[11,"raw","","Get a pointer to the raw underlying CURLM handle.",24,[[["self"]]]],[11,"set_token","","Sets an internal private token for this `EasyHandle`.",25,[[["self"],["usize"]],[["result",["error"]],["error"]]]],[11,"time_condition_unmet","","Same as `Easy2::time_condition_unmet`.",25,[[["self"]],[["error"],["result",["bool","error"]],["bool"]]]],[11,"effective_url","","Same as `Easy2::effective_url`.",25,[[["self"]],[["error"],["result",["option","error"]],["option",["str"]]]]],[11,"effective_url_bytes","","Same as `Easy2::effective_url_bytes`.",25,[[["self"]],[["result",["option","error"]],["error"],["option"]]]],[11,"response_code","","Same as `Easy2::response_code`.",25,[[["self"]],[["error"],["u32"],["result",["u32","error"]]]]],[11,"http_connectcode","","Same as `Easy2::http_connectcode`.",25,[[["self"]],[["error"],["u32"],["result",["u32","error"]]]]],[11,"filetime","","Same as `Easy2::filetime`.",25,[[["self"]],[["option",["i64"]],["error"],["result",["option","error"]]]]],[11,"download_size","","Same as `Easy2::download_size`.",25,[[["self"]],[["result",["f64","error"]],["f64"],["error"]]]],[11,"content_length_download","","Same as `Easy2::content_length_download`.",25,[[["self"]],[["result",["f64","error"]],["f64"],["error"]]]],[11,"total_time","","Same as `Easy2::total_time`.",25,[[["self"]],[["error"],["result",["duration","error"]],["duration"]]]],[11,"namelookup_time","","Same as `Easy2::namelookup_time`.",25,[[["self"]],[["error"],["result",["duration","error"]],["duration"]]]],[11,"connect_time","","Same as `Easy2::connect_time`.",25,[[["self"]],[["error"],["result",["duration","error"]],["duration"]]]],[11,"appconnect_time","","Same as `Easy2::appconnect_time`.",25,[[["self"]],[["error"],["result",["duration","error"]],["duration"]]]],[11,"pretransfer_time","","Same as `Easy2::pretransfer_time`.",25,[[["self"]],[["error"],["result",["duration","error"]],["duration"]]]],[11,"starttransfer_time","","Same as `Easy2::starttransfer_time`.",25,[[["self"]],[["error"],["result",["duration","error"]],["duration"]]]],[11,"redirect_time","","Same as `Easy2::redirect_time`.",25,[[["self"]],[["error"],["result",["duration","error"]],["duration"]]]],[11,"redirect_count","","Same as `Easy2::redirect_count`.",25,[[["self"]],[["error"],["u32"],["result",["u32","error"]]]]],[11,"redirect_url","","Same as `Easy2::redirect_url`.",25,[[["self"]],[["error"],["result",["option","error"]],["option",["str"]]]]],[11,"redirect_url_bytes","","Same as `Easy2::redirect_url_bytes`.",25,[[["self"]],[["result",["option","error"]],["error"],["option"]]]],[11,"header_size","","Same as `Easy2::header_size`.",25,[[["self"]],[["result",["u64","error"]],["u64"],["error"]]]],[11,"request_size","","Same as `Easy2::request_size`.",25,[[["self"]],[["result",["u64","error"]],["u64"],["error"]]]],[11,"content_type","","Same as `Easy2::content_type`.",25,[[["self"]],[["error"],["result",["option","error"]],["option",["str"]]]]],[11,"content_type_bytes","","Same as `Easy2::content_type_bytes`.",25,[[["self"]],[["result",["option","error"]],["error"],["option"]]]],[11,"os_errno","","Same as `Easy2::os_errno`.",25,[[["self"]],[["error"],["result",["i32","error"]],["i32"]]]],[11,"primary_ip","","Same as `Easy2::primary_ip`.",25,[[["self"]],[["error"],["result",["option","error"]],["option",["str"]]]]],[11,"primary_port","","Same as `Easy2::primary_port`.",25,[[["self"]],[["result",["u16","error"]],["u16"],["error"]]]],[11,"local_ip","","Same as `Easy2::local_ip`.",25,[[["self"]],[["error"],["result",["option","error"]],["option",["str"]]]]],[11,"local_port","","Same as `Easy2::local_port`.",25,[[["self"]],[["result",["u16","error"]],["u16"],["error"]]]],[11,"cookies","","Same as `Easy2::cookies`.",25,[[["self"]],[["error"],["result",["list","error"]],["list"]]]],[11,"unpause_read","","Unpause reading on a connection.",25,[[["self"]],[["result",["error"]],["error"]]]],[11,"unpause_write","","Unpause writing on a connection.",25,[[["self"]],[["result",["error"]],["error"]]]],[11,"raw","","Get a pointer to the raw underlying CURL handle.",25,[[["self"]]]],[11,"get_ref","","Acquires a reference to the underlying handler for events.",26,[[["self"]],["h"]]],[11,"get_mut","","Acquires a reference to the underlying handler for events.",26,[[["self"]],["h"]]],[11,"set_token","","Same as `EasyHandle::set_token`",26,[[["self"],["usize"]],[["result",["error"]],["error"]]]],[11,"time_condition_unmet","","Same as `Easy2::time_condition_unmet`.",26,[[["self"]],[["error"],["result",["bool","error"]],["bool"]]]],[11,"effective_url","","Same as `Easy2::effective_url`.",26,[[["self"]],[["error"],["result",["option","error"]],["option",["str"]]]]],[11,"effective_url_bytes","","Same as `Easy2::effective_url_bytes`.",26,[[["self"]],[["result",["option","error"]],["error"],["option"]]]],[11,"response_code","","Same as `Easy2::response_code`.",26,[[["self"]],[["error"],["u32"],["result",["u32","error"]]]]],[11,"http_connectcode","","Same as `Easy2::http_connectcode`.",26,[[["self"]],[["error"],["u32"],["result",["u32","error"]]]]],[11,"filetime","","Same as `Easy2::filetime`.",26,[[["self"]],[["option",["i64"]],["error"],["result",["option","error"]]]]],[11,"download_size","","Same as `Easy2::download_size`.",26,[[["self"]],[["result",["f64","error"]],["f64"],["error"]]]],[11,"content_length_download","","Same as `Easy2::content_length_download`.",26,[[["self"]],[["result",["f64","error"]],["f64"],["error"]]]],[11,"total_time","","Same as `Easy2::total_time`.",26,[[["self"]],[["error"],["result",["duration","error"]],["duration"]]]],[11,"namelookup_time","","Same as `Easy2::namelookup_time`.",26,[[["self"]],[["error"],["result",["duration","error"]],["duration"]]]],[11,"connect_time","","Same as `Easy2::connect_time`.",26,[[["self"]],[["error"],["result",["duration","error"]],["duration"]]]],[11,"appconnect_time","","Same as `Easy2::appconnect_time`.",26,[[["self"]],[["error"],["result",["duration","error"]],["duration"]]]],[11,"pretransfer_time","","Same as `Easy2::pretransfer_time`.",26,[[["self"]],[["error"],["result",["duration","error"]],["duration"]]]],[11,"starttransfer_time","","Same as `Easy2::starttransfer_time`.",26,[[["self"]],[["error"],["result",["duration","error"]],["duration"]]]],[11,"redirect_time","","Same as `Easy2::redirect_time`.",26,[[["self"]],[["error"],["result",["duration","error"]],["duration"]]]],[11,"redirect_count","","Same as `Easy2::redirect_count`.",26,[[["self"]],[["error"],["u32"],["result",["u32","error"]]]]],[11,"redirect_url","","Same as `Easy2::redirect_url`.",26,[[["self"]],[["error"],["result",["option","error"]],["option",["str"]]]]],[11,"redirect_url_bytes","","Same as `Easy2::redirect_url_bytes`.",26,[[["self"]],[["result",["option","error"]],["error"],["option"]]]],[11,"header_size","","Same as `Easy2::header_size`.",26,[[["self"]],[["result",["u64","error"]],["u64"],["error"]]]],[11,"request_size","","Same as `Easy2::request_size`.",26,[[["self"]],[["result",["u64","error"]],["u64"],["error"]]]],[11,"content_type","","Same as `Easy2::content_type`.",26,[[["self"]],[["error"],["result",["option","error"]],["option",["str"]]]]],[11,"content_type_bytes","","Same as `Easy2::content_type_bytes`.",26,[[["self"]],[["result",["option","error"]],["error"],["option"]]]],[11,"os_errno","","Same as `Easy2::os_errno`.",26,[[["self"]],[["error"],["result",["i32","error"]],["i32"]]]],[11,"primary_ip","","Same as `Easy2::primary_ip`.",26,[[["self"]],[["error"],["result",["option","error"]],["option",["str"]]]]],[11,"primary_port","","Same as `Easy2::primary_port`.",26,[[["self"]],[["result",["u16","error"]],["u16"],["error"]]]],[11,"local_ip","","Same as `Easy2::local_ip`.",26,[[["self"]],[["error"],["result",["option","error"]],["option",["str"]]]]],[11,"local_port","","Same as `Easy2::local_port`.",26,[[["self"]],[["result",["u16","error"]],["u16"],["error"]]]],[11,"cookies","","Same as `Easy2::cookies`.",26,[[["self"]],[["error"],["result",["list","error"]],["list"]]]],[11,"unpause_read","","Unpause reading on a connection.",26,[[["self"]],[["result",["error"]],["error"]]]],[11,"unpause_write","","Unpause writing on a connection.",26,[[["self"]],[["result",["error"]],["error"]]]],[11,"raw","","Get a pointer to the raw underlying CURL handle.",26,[[["self"]]]],[11,"result","","If this message indicates that a transfer has finished,…",27,[[["self"]],[["result",["error"]],["option",["result"]]]]],[11,"result_for","","Same as `result`, except only returns `Some` for the…",27,[[["self"],["easyhandle"]],[["result",["error"]],["option",["result"]]]]],[11,"result_for2","","Same as `result`, except only returns `Some` for the…",27,[[["easy2handle"],["self"]],[["result",["error"]],["option",["result"]]]]],[11,"is_for","","Returns whether this easy message was for the specified…",27,[[["self"],["easyhandle"]],["bool"]]],[11,"is_for2","","Same as `is_for`, but for `Easy2Handle`.",27,[[["easy2handle"],["self"]],["bool"]]],[11,"token","","Returns the token associated with the easy handle that…",27,[[["self"]],[["error"],["result",["usize","error"]],["usize"]]]],[11,"new","","Creates a new blank event bit mask.",28,[[],["events"]]],[11,"input","","Set or unset the whether these events indicate that input…",28,[[["self"],["bool"]],["events"]]],[11,"output","","Set or unset the whether these events indicate that output…",28,[[["self"],["bool"]],["events"]]],[11,"error","","Set or unset the whether these events indicate that an…",28,[[["self"],["bool"]],["events"]]],[11,"input","","Wait for incoming data. For the socket to become readable.",29,[[["self"]],["bool"]]],[11,"output","","Wait for outgoing data. For the socket to become writable.",29,[[["self"]],["bool"]]],[11,"input_and_output","","Wait for incoming and outgoing data. For the socket to…",29,[[["self"]],["bool"]]],[11,"remove","","The specified socket/file descriptor is no longer used by…",29,[[["self"]],["bool"]]],[11,"new","","Constructs an empty (invalid) WaitFd.",30,[[],["waitfd"]]],[11,"set_fd","","Set the file descriptor to wait for.",30,[[["self"],["socket"]]]],[11,"poll_on_read","","Indicate that the socket should poll on read events such…",30,[[["self"],["bool"]],["waitfd"]]],[11,"poll_on_priority_read","","Indicate that the socket should poll on high priority read…",30,[[["self"],["bool"]],["waitfd"]]],[11,"poll_on_write","","Indicate that the socket should poll on write events such…",30,[[["self"],["bool"]],["waitfd"]]],[11,"received_read","","After a call to `wait`, returns `true` if `poll_on_read`…",30,[[["self"]],["bool"]]],[11,"received_priority_read","","After a call to `wait`, returns `true` if…",30,[[["self"]],["bool"]]],[11,"received_write","","After a call to `wait`, returns `true` if `poll_on_write`…",30,[[["self"]],["bool"]]],[11,"from","curl","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"into_iter","","",31,[[],["i"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","curl::easy","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"into_iter","","",32,[[],["i"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","curl::multi","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"drop","curl::easy","",15,[[["self"]]]],[11,"drop","","",18,[[["self"]]]],[11,"drop","","",19,[[["self"]]]],[11,"drop","","",22,[[["self"]]]],[11,"drop","curl::multi","",24,[[["self"]]]],[11,"from","curl","",0,[[["nulerror"]],["error"]]],[11,"from","curl::multi","",30,[[["pollfd"]],["waitfd"]]],[11,"next","curl","",31,[[["self"]],[["str"],["option",["str"]]]]],[11,"next","curl::easy","",32,[[["self"]],["option"]]],[11,"clone","curl","",0,[[["self"]],["error"]]],[11,"clone","","",1,[[["self"]],["shareerror"]]],[11,"clone","","",2,[[["self"]],["multierror"]]],[11,"clone","","",3,[[["self"]],["formerror"]]],[11,"clone","","",31,[[["self"]],["protocols"]]],[11,"clone","curl::easy","",6,[[["self"]],["proxytype"]]],[11,"clone","","",10,[[["self"]],["timecondition"]]],[11,"clone","","",8,[[["self"]],["ipresolve"]]],[11,"clone","","",7,[[["self"]],["httpversion"]]],[11,"clone","","",9,[[["self"]],["sslversion"]]],[11,"clone","","",13,[[["self"]],["seekresult"]]],[11,"clone","","",11,[[["self"]],["infotype"]]],[11,"clone","","",5,[[["self"]],["netrc"]]],[11,"clone","","",20,[[["self"]],["auth"]]],[11,"clone","","",21,[[["self"]],["sslopt"]]],[11,"clone","","",32,[[["self"]],["iter"]]],[11,"eq","curl","",0,[[["self"],["error"]],["bool"]]],[11,"ne","","",0,[[["self"],["error"]],["bool"]]],[11,"eq","","",1,[[["shareerror"],["self"]],["bool"]]],[11,"ne","","",1,[[["shareerror"],["self"]],["bool"]]],[11,"eq","","",2,[[["multierror"],["self"]],["bool"]]],[11,"ne","","",2,[[["multierror"],["self"]],["bool"]]],[11,"eq","","",3,[[["formerror"],["self"]],["bool"]]],[11,"ne","","",3,[[["formerror"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","curl::easy","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","curl::multi","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","curl","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"write","curl::easy","Callback invoked whenever curl has downloaded data for the…",23,[[["self"]],[["result",["usize","writeerror"]],["usize"],["writeerror"]]]],[11,"read","","Read callback for data uploads.",23,[[["self"]],[["readerror"],["usize"],["result",["usize","readerror"]]]]],[11,"seek","","User callback for seeking in input stream.",23,[[["self"],["seekfrom"]],["seekresult"]]],[11,"debug","","Specify a debug callback",23,[[["self"],["infotype"]]]],[11,"header","","Callback that receives header data",23,[[["self"]],["bool"]]],[11,"progress","","Callback to progress meter function",23,[[["self"],["f64"]],["bool"]]],[11,"ssl_ctx","","Callback to SSL context",23,[[["self"]],[["result",["error"]],["error"]]]],[11,"open_socket","","Callback to open sockets for libcurl.",23,[[["self"],["c_int"]],[["curl_socket_t"],["option",["curl_socket_t"]]]]]],"p":[[3,"Error"],[3,"ShareError"],[3,"MultiError"],[3,"FormError"],[3,"Version"],[4,"NetRc"],[4,"ProxyType"],[4,"HttpVersion"],[4,"IpResolve"],[4,"SslVersion"],[4,"TimeCondition"],[4,"InfoType"],[4,"ReadError"],[4,"SeekResult"],[4,"WriteError"],[3,"Form"],[3,"Part"],[3,"Easy"],[3,"Transfer"],[3,"Easy2"],[3,"Auth"],[3,"SslOpt"],[3,"List"],[8,"Handler"],[3,"Multi"],[3,"EasyHandle"],[3,"Easy2Handle"],[3,"Message"],[3,"Events"],[3,"SocketEvents"],[3,"WaitFd"],[3,"Protocols"],[3,"Iter"]]};
searchIndex["curl_sys"] = {"doc":"","i":[[3,"fd_set","curl_sys","",null,null],[3,"curl_fileinfo","","",null,null],[12,"filename","","",0,null],[12,"filetype","","",0,null],[12,"time","","",0,null],[12,"perm","","",0,null],[12,"uid","","",0,null],[12,"gid","","",0,null],[12,"size","","",0,null],[12,"hardlinks","","",0,null],[12,"strings_time","","",0,null],[12,"strings_perm","","",0,null],[12,"strings_user","","",0,null],[12,"strings_group","","",0,null],[12,"strings_target","","",0,null],[12,"flags","","",0,null],[12,"b_data","","",0,null],[12,"b_size","","",0,null],[12,"b_used","","",0,null],[3,"curl_forms","","",null,null],[12,"option","","",1,null],[12,"value","","",1,null],[3,"curl_slist","","",null,null],[12,"data","","",2,null],[12,"next","","",2,null],[3,"curl_certinfo","","",null,null],[12,"num_of_certs","","",3,null],[12,"certinfo","","",3,null],[3,"curl_version_info_data","","",null,null],[12,"age","","",4,null],[12,"version","","",4,null],[12,"version_num","","",4,null],[12,"host","","",4,null],[12,"features","","",4,null],[12,"ssl_version","","",4,null],[12,"ssl_version_num","","",4,null],[12,"libz_version","","",4,null],[12,"protocols","","",4,null],[12,"ares","","",4,null],[12,"ares_num","","",4,null],[12,"libidn","","",4,null],[12,"iconv_ver_num","","",4,null],[12,"libssh_version","","",4,null],[12,"brotli_ver_num","","",4,null],[12,"brotli_version","","",4,null],[12,"nghttp2_ver_num","","",4,null],[12,"nghttp2_version","","",4,null],[12,"quic_version","","",4,null],[12,"cainfo","","",4,null],[12,"capath","","",4,null],[3,"CURLMsg","","",null,null],[12,"msg","","",5,null],[12,"easy_handle","","",5,null],[12,"data","","",5,null],[3,"curl_waitfd","","",null,null],[12,"fd","","",6,null],[12,"events","","",6,null],[12,"revents","","",6,null],[3,"curl_sockaddr","","",null,null],[12,"family","","",7,null],[12,"socktype","","",7,null],[12,"protocol","","",7,null],[12,"addrlen","","",7,null],[12,"addr","","",7,null],[4,"CURL","","",null,null],[4,"curl_httppost","","",null,null],[4,"CURLSH","","",null,null],[4,"CURLM","","",null,null],[5,"curl_formadd","","",null,null],[5,"curl_formget","","",null,null],[5,"curl_formfree","","",null,null],[5,"curl_version","","",null,null],[5,"curl_easy_escape","","",null,null],[5,"curl_easy_unescape","","",null,null],[5,"curl_free","","",null,null],[5,"curl_global_init","","",null,null],[5,"curl_global_init_mem","","",null,null],[5,"curl_global_cleanup","","",null,null],[5,"curl_slist_append","","",null,null],[5,"curl_slist_free_all","","",null,null],[5,"curl_getdate","","",null,null],[5,"curl_share_init","","",null,null],[5,"curl_share_setopt","","",null,null],[5,"curl_share_cleanup","","",null,null],[5,"curl_version_info","","",null,null],[5,"curl_easy_strerror","","",null,null],[5,"curl_share_strerror","","",null,null],[5,"curl_easy_pause","","",null,null],[5,"curl_easy_init","","",null,null],[5,"curl_easy_setopt","","",null,null],[5,"curl_easy_perform","","",null,null],[5,"curl_easy_cleanup","","",null,null],[5,"curl_easy_getinfo","","",null,null],[5,"curl_easy_duphandle","","",null,null],[5,"curl_easy_reset","","",null,null],[5,"curl_easy_recv","","",null,null],[5,"curl_easy_send","","",null,null],[5,"curl_multi_init","","",null,null],[5,"curl_multi_add_handle","","",null,null],[5,"curl_multi_remove_handle","","",null,null],[5,"curl_multi_fdset","","",null,null],[5,"curl_multi_wait","","",null,null],[5,"curl_multi_perform","","",null,null],[5,"curl_multi_cleanup","","",null,null],[5,"curl_multi_info_read","","",null,null],[5,"curl_multi_strerror","","",null,null],[5,"curl_multi_socket","","",null,null],[5,"curl_multi_socket_action","","",null,null],[5,"curl_multi_socket_all","","",null,null],[5,"curl_multi_timeout","","",null,null],[5,"curl_multi_setopt","","",null,null],[5,"curl_multi_assign","","",null,null],[6,"CURLINFO","","",null,null],[6,"CURLoption","","",null,null],[6,"CURLcode","","",null,null],[6,"CURLversion","","",null,null],[6,"curl_off_t","","",null,null],[6,"curl_socket_t","","",null,null],[6,"curl_progress_callback","","",null,null],[6,"curl_write_callback","","",null,null],[6,"curlfiletype","","",null,null],[6,"curl_chunk_bgn_callback","","",null,null],[6,"curl_chunk_end_callback","","",null,null],[6,"curl_fnmatch_callback","","",null,null],[6,"curl_seek_callback","","",null,null],[6,"curl_read_callback","","",null,null],[6,"curlioerr","","",null,null],[6,"curliocmd","","",null,null],[6,"curl_ioctl_callback","","",null,null],[6,"curl_malloc_callback","","",null,null],[6,"curl_free_callback","","",null,null],[6,"curl_realloc_callback","","",null,null],[6,"curl_strdup_callback","","",null,null],[6,"curl_calloc_callback","","",null,null],[6,"curl_infotype","","",null,null],[6,"curl_debug_callback","","",null,null],[6,"curl_conv_callback","","",null,null],[6,"curl_ssl_ctx_callback","","",null,null],[6,"curl_proxytype","","",null,null],[6,"curl_usessl","","",null,null],[6,"curl_TimeCond","","",null,null],[6,"CURLformoption","","",null,null],[6,"CURLFORMcode","","",null,null],[6,"curl_formget_callback","","",null,null],[6,"curl_closepolicy","","",null,null],[6,"curl_lock_data","","",null,null],[6,"curl_lock_access","","",null,null],[6,"curl_lock_function","","",null,null],[6,"curl_unlock_function","","",null,null],[6,"CURLSHcode","","",null,null],[6,"CURLSHoption","","",null,null],[6,"CURLMcode","","",null,null],[6,"CURLMSG","","",null,null],[6,"curl_socket_callback","","",null,null],[6,"curl_multi_timer_callback","","",null,null],[6,"CURLMoption","","",null,null],[6,"curl_opensocket_callback","","",null,null],[6,"curlsocktype","","",null,null],[17,"CURL_SOCKET_BAD","","",null,null],[17,"CURL_WRITEFUNC_PAUSE","","",null,null],[17,"CURLFILETYPE_FILE","","",null,null],[17,"CURLFILETYPE_DIRECTORY","","",null,null],[17,"CURLFILETYPE_SYMLINK","","",null,null],[17,"CURLFILETYPE_DEVICE_BLOCK","","",null,null],[17,"CURLFILETYPE_DEVICE_CHAR","","",null,null],[17,"CURLFILETYPE_NAMEDPIPE","","",null,null],[17,"CURLFILETYPE_SOCKET","","",null,null],[17,"CURLFILETYPE_DOOR","","",null,null],[17,"CURLFILETYPE_UNKNOWN","","",null,null],[17,"CURLFINFOFLAG_KNOWN_FILENAME","","",null,null],[17,"CURLFINFOFLAG_KNOWN_FILETYPE","","",null,null],[17,"CURLFINFOFLAG_KNOWN_TIME","","",null,null],[17,"CURLFINFOFLAG_KNOWN_PERM","","",null,null],[17,"CURLFINFOFLAG_KNOWN_UID","","",null,null],[17,"CURLFINFOFLAG_KNOWN_GID","","",null,null],[17,"CURLFINFOFLAG_KNOWN_SIZE","","",null,null],[17,"CURLFINFOFLAG_KNOWN_HLINKCOUNT","","",null,null],[17,"CURL_CHUNK_BGN_FUNC_OK","","",null,null],[17,"CURL_CHUNK_BGN_FUNC_FAIL","","",null,null],[17,"CURL_CHUNK_BGN_FUNC_SKIP","","",null,null],[17,"CURL_CHUNK_END_FUNC_OK","","",null,null],[17,"CURL_CHUNK_END_FUNC_FAIL","","",null,null],[17,"CURL_FNMATCHFUNC_MATCH","","",null,null],[17,"CURL_FNMATCHFUNC_NOMATCH","","",null,null],[17,"CURL_FNMATCHFUNC_FAIL","","",null,null],[17,"CURL_SEEKFUNC_OK","","",null,null],[17,"CURL_SEEKFUNC_FAIL","","",null,null],[17,"CURL_SEEKFUNC_CANTSEEK","","",null,null],[17,"CURL_READFUNC_ABORT","","",null,null],[17,"CURL_READFUNC_PAUSE","","",null,null],[17,"CURLIOE_OK","","",null,null],[17,"CURLIOE_UNKNOWNCMD","","",null,null],[17,"CURLIOE_FAILRESTART","","",null,null],[17,"CURLIOCMD_NOP","","",null,null],[17,"CURLIOCMD_RESTARTREAD","","",null,null],[17,"CURLINFO_TEXT","","",null,null],[17,"CURLINFO_HEADER_IN","","",null,null],[17,"CURLINFO_HEADER_OUT","","",null,null],[17,"CURLINFO_DATA_IN","","",null,null],[17,"CURLINFO_DATA_OUT","","",null,null],[17,"CURLINFO_SSL_DATA_IN","","",null,null],[17,"CURLINFO_SSL_DATA_OUT","","",null,null],[17,"CURLE_OK","","",null,null],[17,"CURLE_UNSUPPORTED_PROTOCOL","","",null,null],[17,"CURLE_FAILED_INIT","","",null,null],[17,"CURLE_URL_MALFORMAT","","",null,null],[17,"CURLE_COULDNT_RESOLVE_PROXY","","",null,null],[17,"CURLE_COULDNT_RESOLVE_HOST","","",null,null],[17,"CURLE_COULDNT_CONNECT","","",null,null],[17,"CURLE_FTP_WEIRD_SERVER_REPLY","","",null,null],[17,"CURLE_REMOTE_ACCESS_DENIED","","",null,null],[17,"CURLE_FTP_WEIRD_PASS_REPLY","","",null,null],[17,"CURLE_FTP_WEIRD_PASV_REPLY","","",null,null],[17,"CURLE_FTP_WEIRD_227_FORMAT","","",null,null],[17,"CURLE_FTP_CANT_GET_HOST","","",null,null],[17,"CURLE_HTTP2","","",null,null],[17,"CURLE_FTP_COULDNT_SET_TYPE","","",null,null],[17,"CURLE_PARTIAL_FILE","","",null,null],[17,"CURLE_FTP_COULDNT_RETR_FILE","","",null,null],[17,"CURLE_OBSOLETE20","","",null,null],[17,"CURLE_QUOTE_ERROR","","",null,null],[17,"CURLE_HTTP_RETURNED_ERROR","","",null,null],[17,"CURLE_WRITE_ERROR","","",null,null],[17,"CURLE_OBSOLETE24","","",null,null],[17,"CURLE_UPLOAD_FAILED","","",null,null],[17,"CURLE_READ_ERROR","","",null,null],[17,"CURLE_OUT_OF_MEMORY","","",null,null],[17,"CURLE_OPERATION_TIMEDOUT","","",null,null],[17,"CURLE_OBSOLETE29","","",null,null],[17,"CURLE_FTP_PORT_FAILED","","",null,null],[17,"CURLE_FTP_COULDNT_USE_REST","","",null,null],[17,"CURLE_OBSOLETE32","","",null,null],[17,"CURLE_RANGE_ERROR","","",null,null],[17,"CURLE_HTTP_POST_ERROR","","",null,null],[17,"CURLE_SSL_CONNECT_ERROR","","",null,null],[17,"CURLE_BAD_DOWNLOAD_RESUME","","",null,null],[17,"CURLE_FILE_COULDNT_READ_FILE","","",null,null],[17,"CURLE_LDAP_CANNOT_BIND","","",null,null],[17,"CURLE_LDAP_SEARCH_FAILED","","",null,null],[17,"CURLE_OBSOLETE40","","",null,null],[17,"CURLE_FUNCTION_NOT_FOUND","","",null,null],[17,"CURLE_ABORTED_BY_CALLBACK","","",null,null],[17,"CURLE_BAD_FUNCTION_ARGUMENT","","",null,null],[17,"CURLE_OBSOLETE44","","",null,null],[17,"CURLE_INTERFACE_FAILED","","",null,null],[17,"CURLE_OBSOLETE46","","",null,null],[17,"CURLE_TOO_MANY_REDIRECTS","","",null,null],[17,"CURLE_UNKNOWN_OPTION","","",null,null],[17,"CURLE_TELNET_OPTION_SYNTAX","","",null,null],[17,"CURLE_OBSOLETE50","","",null,null],[17,"CURLE_PEER_FAILED_VERIFICATION","","",null,null],[17,"CURLE_GOT_NOTHING","","",null,null],[17,"CURLE_SSL_ENGINE_NOTFOUND","","",null,null],[17,"CURLE_SSL_ENGINE_SETFAILED","","",null,null],[17,"CURLE_SEND_ERROR","","",null,null],[17,"CURLE_RECV_ERROR","","",null,null],[17,"CURLE_OBSOLETE57","","",null,null],[17,"CURLE_SSL_CERTPROBLEM","","",null,null],[17,"CURLE_SSL_CIPHER","","",null,null],[17,"CURLE_SSL_CACERT","","",null,null],[17,"CURLE_BAD_CONTENT_ENCODING","","",null,null],[17,"CURLE_LDAP_INVALID_URL","","",null,null],[17,"CURLE_FILESIZE_EXCEEDED","","",null,null],[17,"CURLE_USE_SSL_FAILED","","",null,null],[17,"CURLE_SEND_FAIL_REWIND","","",null,null],[17,"CURLE_SSL_ENGINE_INITFAILED","","",null,null],[17,"CURLE_LOGIN_DENIED","","",null,null],[17,"CURLE_TFTP_NOTFOUND","","",null,null],[17,"CURLE_TFTP_PERM","","",null,null],[17,"CURLE_REMOTE_DISK_FULL","","",null,null],[17,"CURLE_TFTP_ILLEGAL","","",null,null],[17,"CURLE_TFTP_UNKNOWNID","","",null,null],[17,"CURLE_REMOTE_FILE_EXISTS","","",null,null],[17,"CURLE_TFTP_NOSUCHUSER","","",null,null],[17,"CURLE_CONV_FAILED","","",null,null],[17,"CURLE_CONV_REQD","","",null,null],[17,"CURLE_SSL_CACERT_BADFILE","","",null,null],[17,"CURLE_REMOTE_FILE_NOT_FOUND","","",null,null],[17,"CURLE_SSH","","",null,null],[17,"CURLE_SSL_SHUTDOWN_FAILED","","",null,null],[17,"CURLE_AGAIN","","",null,null],[17,"CURLE_SSL_CRL_BADFILE","","",null,null],[17,"CURLE_SSL_ISSUER_ERROR","","",null,null],[17,"CURLE_FTP_PRET_FAILED","","",null,null],[17,"CURLE_RTSP_CSEQ_ERROR","","",null,null],[17,"CURLE_RTSP_SESSION_ERROR","","",null,null],[17,"CURLE_FTP_BAD_FILE_LIST","","",null,null],[17,"CURLE_CHUNK_FAILED","","",null,null],[17,"CURLE_NO_CONNECTION_AVAILABLE","","",null,null],[17,"CURLE_SSL_PINNEDPUBKEYNOTMATCH","","",null,null],[17,"CURLE_SSL_INVALIDCERTSTATUS","","",null,null],[17,"CURLE_HTTP2_STREAM","","",null,null],[17,"CURLE_RECURSIVE_API_CALL","","",null,null],[17,"CURLPROXY_HTTP","","",null,null],[17,"CURLPROXY_HTTP_1_0","","",null,null],[17,"CURLPROXY_SOCKS4","","",null,null],[17,"CURLPROXY_SOCKS5","","",null,null],[17,"CURLPROXY_SOCKS4A","","",null,null],[17,"CURLPROXY_SOCKS5_HOSTNAME","","",null,null],[17,"CURLAUTH_NONE","","",null,null],[17,"CURLAUTH_BASIC","","",null,null],[17,"CURLAUTH_DIGEST","","",null,null],[17,"CURLAUTH_GSSNEGOTIATE","","",null,null],[17,"CURLAUTH_NTLM","","",null,null],[17,"CURLAUTH_DIGEST_IE","","",null,null],[17,"CURLAUTH_NTLM_WB","","",null,null],[17,"CURLAUTH_ANY","","",null,null],[17,"CURLAUTH_ANYSAFE","","",null,null],[17,"CURLGSSAPI_DELEGATION_NONE","","",null,null],[17,"CURLGSSAPI_DELEGATION_POLICY_FLAG","","",null,null],[17,"CURLGSSAPI_DELEGATION_FLAG","","",null,null],[17,"CURL_NETRC_IGNORED","","",null,null],[17,"CURL_NETRC_OPTIONAL","","",null,null],[17,"CURL_NETRC_REQUIRED","","",null,null],[17,"CURLUSESSL_NONE","","",null,null],[17,"CURLUSESSL_TRY","","",null,null],[17,"CURLUSESSL_CONTROL","","",null,null],[17,"CURLUSESSL_ALL","","",null,null],[17,"CURLPROTO_HTTP","","",null,null],[17,"CURLPROTO_HTTPS","","",null,null],[17,"CURLPROTO_FILE","","",null,null],[17,"CURLOPTTYPE_LONG","","",null,null],[17,"CURLOPTTYPE_OBJECTPOINT","","",null,null],[17,"CURLOPTTYPE_FUNCTIONPOINT","","",null,null],[17,"CURLOPTTYPE_OFF_T","","",null,null],[17,"CURLOPT_FILE","","",null,null],[17,"CURLOPT_URL","","",null,null],[17,"CURLOPT_PORT","","",null,null],[17,"CURLOPT_PROXY","","",null,null],[17,"CURLOPT_USERPWD","","",null,null],[17,"CURLOPT_PROXYUSERPWD","","",null,null],[17,"CURLOPT_RANGE","","",null,null],[17,"CURLOPT_INFILE","","",null,null],[17,"CURLOPT_ERRORBUFFER","","",null,null],[17,"CURLOPT_WRITEFUNCTION","","",null,null],[17,"CURLOPT_READFUNCTION","","",null,null],[17,"CURLOPT_TIMEOUT","","",null,null],[17,"CURLOPT_INFILESIZE","","",null,null],[17,"CURLOPT_POSTFIELDS","","",null,null],[17,"CURLOPT_REFERER","","",null,null],[17,"CURLOPT_FTPPORT","","",null,null],[17,"CURLOPT_USERAGENT","","",null,null],[17,"CURLOPT_LOW_SPEED_LIMIT","","",null,null],[17,"CURLOPT_LOW_SPEED_TIME","","",null,null],[17,"CURLOPT_RESUME_FROM","","",null,null],[17,"CURLOPT_COOKIE","","",null,null],[17,"CURLOPT_HTTPHEADER","","",null,null],[17,"CURLOPT_HTTPPOST","","",null,null],[17,"CURLOPT_SSLCERT","","",null,null],[17,"CURLOPT_KEYPASSWD","","",null,null],[17,"CURLOPT_CRLF","","",null,null],[17,"CURLOPT_QUOTE","","",null,null],[17,"CURLOPT_WRITEHEADER","","",null,null],[17,"CURLOPT_COOKIEFILE","","",null,null],[17,"CURLOPT_SSLVERSION","","",null,null],[17,"CURLOPT_TIMECONDITION","","",null,null],[17,"CURLOPT_TIMEVALUE","","",null,null],[17,"CURLOPT_CUSTOMREQUEST","","",null,null],[17,"CURLOPT_STDERR","","",null,null],[17,"CURLOPT_POSTQUOTE","","",null,null],[17,"CURLOPT_WRITEINFO","","",null,null],[17,"CURLOPT_VERBOSE","","",null,null],[17,"CURLOPT_HEADER","","",null,null],[17,"CURLOPT_NOPROGRESS","","",null,null],[17,"CURLOPT_NOBODY","","",null,null],[17,"CURLOPT_FAILONERROR","","",null,null],[17,"CURLOPT_UPLOAD","","",null,null],[17,"CURLOPT_POST","","",null,null],[17,"CURLOPT_DIRLISTONLY","","",null,null],[17,"CURLOPT_APPEND","","",null,null],[17,"CURLOPT_NETRC","","",null,null],[17,"CURLOPT_FOLLOWLOCATION","","",null,null],[17,"CURLOPT_TRANSFERTEXT","","",null,null],[17,"CURLOPT_PUT","","",null,null],[17,"CURLOPT_PROGRESSFUNCTION","","",null,null],[17,"CURLOPT_PROGRESSDATA","","",null,null],[17,"CURLOPT_AUTOREFERER","","",null,null],[17,"CURLOPT_PROXYPORT","","",null,null],[17,"CURLOPT_POSTFIELDSIZE","","",null,null],[17,"CURLOPT_HTTPPROXYTUNNEL","","",null,null],[17,"CURLOPT_INTERFACE","","",null,null],[17,"CURLOPT_KRBLEVEL","","",null,null],[17,"CURLOPT_SSL_VERIFYPEER","","",null,null],[17,"CURLOPT_CAINFO","","",null,null],[17,"CURLOPT_MAXREDIRS","","",null,null],[17,"CURLOPT_FILETIME","","",null,null],[17,"CURLOPT_TELNETOPTIONS","","",null,null],[17,"CURLOPT_MAXCONNECTS","","",null,null],[17,"CURLOPT_CLOSEPOLICY","","",null,null],[17,"CURLOPT_FRESH_CONNECT","","",null,null],[17,"CURLOPT_FORBID_REUSE","","",null,null],[17,"CURLOPT_RANDOM_FILE","","",null,null],[17,"CURLOPT_EGDSOCKET","","",null,null],[17,"CURLOPT_CONNECTTIMEOUT","","",null,null],[17,"CURLOPT_HEADERFUNCTION","","",null,null],[17,"CURLOPT_HTTPGET","","",null,null],[17,"CURLOPT_SSL_VERIFYHOST","","",null,null],[17,"CURLOPT_COOKIEJAR","","",null,null],[17,"CURLOPT_SSL_CIPHER_LIST","","",null,null],[17,"CURLOPT_HTTP_VERSION","","",null,null],[17,"CURLOPT_FTP_USE_EPSV","","",null,null],[17,"CURLOPT_SSLCERTTYPE","","",null,null],[17,"CURLOPT_SSLKEY","","",null,null],[17,"CURLOPT_SSLKEYTYPE","","",null,null],[17,"CURLOPT_SSLENGINE","","",null,null],[17,"CURLOPT_SSLENGINE_DEFAULT","","",null,null],[17,"CURLOPT_DNS_USE_GLOBAL_CACHE","","",null,null],[17,"CURLOPT_DNS_CACHE_TIMEOUT","","",null,null],[17,"CURLOPT_PREQUOTE","","",null,null],[17,"CURLOPT_DEBUGFUNCTION","","",null,null],[17,"CURLOPT_DEBUGDATA","","",null,null],[17,"CURLOPT_COOKIESESSION","","",null,null],[17,"CURLOPT_CAPATH","","",null,null],[17,"CURLOPT_BUFFERSIZE","","",null,null],[17,"CURLOPT_NOSIGNAL","","",null,null],[17,"CURLOPT_SHARE","","",null,null],[17,"CURLOPT_PROXYTYPE","","",null,null],[17,"CURLOPT_ACCEPT_ENCODING","","",null,null],[17,"CURLOPT_PRIVATE","","",null,null],[17,"CURLOPT_HTTP200ALIASES","","",null,null],[17,"CURLOPT_UNRESTRICTED_AUTH","","",null,null],[17,"CURLOPT_FTP_USE_EPRT","","",null,null],[17,"CURLOPT_HTTPAUTH","","",null,null],[17,"CURLOPT_SSL_CTX_FUNCTION","","",null,null],[17,"CURLOPT_SSL_CTX_DATA","","",null,null],[17,"CURLOPT_FTP_CREATE_MISSING_DIRS","","",null,null],[17,"CURLOPT_PROXYAUTH","","",null,null],[17,"CURLOPT_FTP_RESPONSE_TIMEOUT","","",null,null],[17,"CURLOPT_IPRESOLVE","","",null,null],[17,"CURLOPT_MAXFILESIZE","","",null,null],[17,"CURLOPT_INFILESIZE_LARGE","","",null,null],[17,"CURLOPT_RESUME_FROM_LARGE","","",null,null],[17,"CURLOPT_MAXFILESIZE_LARGE","","",null,null],[17,"CURLOPT_NETRC_FILE","","",null,null],[17,"CURLOPT_USE_SSL","","",null,null],[17,"CURLOPT_POSTFIELDSIZE_LARGE","","",null,null],[17,"CURLOPT_TCP_NODELAY","","",null,null],[17,"CURLOPT_FTPSSLAUTH","","",null,null],[17,"CURLOPT_IOCTLFUNCTION","","",null,null],[17,"CURLOPT_IOCTLDATA","","",null,null],[17,"CURLOPT_FTP_ACCOUNT","","",null,null],[17,"CURLOPT_COOKIELIST","","",null,null],[17,"CURLOPT_IGNORE_CONTENT_LENGTH","","",null,null],[17,"CURLOPT_FTP_SKIP_PASV_IP","","",null,null],[17,"CURLOPT_FTP_FILEMETHOD","","",null,null],[17,"CURLOPT_LOCALPORT","","",null,null],[17,"CURLOPT_LOCALPORTRANGE","","",null,null],[17,"CURLOPT_CONNECT_ONLY","","",null,null],[17,"CURLOPT_CONV_FROM_NETWORK_FUNCTION","","",null,null],[17,"CURLOPT_CONV_TO_NETWORK_FUNCTION","","",null,null],[17,"CURLOPT_CONV_FROM_UTF8_FUNCTION","","",null,null],[17,"CURLOPT_MAX_SEND_SPEED_LARGE","","",null,null],[17,"CURLOPT_MAX_RECV_SPEED_LARGE","","",null,null],[17,"CURLOPT_FTP_ALTERNATIVE_TO_USER","","",null,null],[17,"CURLOPT_SOCKOPTFUNCTION","","",null,null],[17,"CURLOPT_SOCKOPTDATA","","",null,null],[17,"CURLOPT_SSL_SESSIONID_CACHE","","",null,null],[17,"CURLOPT_SSH_AUTH_TYPES","","",null,null],[17,"CURLOPT_SSH_PUBLIC_KEYFILE","","",null,null],[17,"CURLOPT_SSH_PRIVATE_KEYFILE","","",null,null],[17,"CURLOPT_FTP_SSL_CCC","","",null,null],[17,"CURLOPT_TIMEOUT_MS","","",null,null],[17,"CURLOPT_CONNECTTIMEOUT_MS","","",null,null],[17,"CURLOPT_HTTP_TRANSFER_DECODING","","",null,null],[17,"CURLOPT_HTTP_CONTENT_DECODING","","",null,null],[17,"CURLOPT_NEW_FILE_PERMS","","",null,null],[17,"CURLOPT_NEW_DIRECTORY_PERMS","","",null,null],[17,"CURLOPT_POSTREDIR","","",null,null],[17,"CURLOPT_SSH_HOST_PUBLIC_KEY_MD5","","",null,null],[17,"CURLOPT_OPENSOCKETFUNCTION","","",null,null],[17,"CURLOPT_OPENSOCKETDATA","","",null,null],[17,"CURLOPT_COPYPOSTFIELDS","","",null,null],[17,"CURLOPT_PROXY_TRANSFER_MODE","","",null,null],[17,"CURLOPT_SEEKFUNCTION","","",null,null],[17,"CURLOPT_SEEKDATA","","",null,null],[17,"CURLOPT_CRLFILE","","",null,null],[17,"CURLOPT_ISSUERCERT","","",null,null],[17,"CURLOPT_ADDRESS_SCOPE","","",null,null],[17,"CURLOPT_CERTINFO","","",null,null],[17,"CURLOPT_USERNAME","","",null,null],[17,"CURLOPT_PASSWORD","","",null,null],[17,"CURLOPT_PROXYUSERNAME","","",null,null],[17,"CURLOPT_PROXYPASSWORD","","",null,null],[17,"CURLOPT_NOPROXY","","",null,null],[17,"CURLOPT_TFTP_BLKSIZE","","",null,null],[17,"CURLOPT_SOCKS5_GSSAPI_SERVICE","","",null,null],[17,"CURLOPT_SOCKS5_GSSAPI_NEC","","",null,null],[17,"CURLOPT_PROTOCOLS","","",null,null],[17,"CURLOPT_REDIR_PROTOCOLS","","",null,null],[17,"CURLOPT_SSH_KNOWNHOSTS","","",null,null],[17,"CURLOPT_SSH_KEYFUNCTION","","",null,null],[17,"CURLOPT_SSH_KEYDATA","","",null,null],[17,"CURLOPT_MAIL_FROM","","",null,null],[17,"CURLOPT_MAIL_RCPT","","",null,null],[17,"CURLOPT_FTP_USE_PRET","","",null,null],[17,"CURLOPT_RTSP_REQUEST","","",null,null],[17,"CURLOPT_RTSP_SESSION_ID","","",null,null],[17,"CURLOPT_RTSP_STREAM_URI","","",null,null],[17,"CURLOPT_RTSP_TRANSPORT","","",null,null],[17,"CURLOPT_RTSP_CLIENT_CSEQ","","",null,null],[17,"CURLOPT_RTSP_SERVER_CSEQ","","",null,null],[17,"CURLOPT_INTERLEAVEDATA","","",null,null],[17,"CURLOPT_INTERLEAVEFUNCTION","","",null,null],[17,"CURLOPT_WILDCARDMATCH","","",null,null],[17,"CURLOPT_CHUNK_BGN_FUNCTION","","",null,null],[17,"CURLOPT_CHUNK_END_FUNCTION","","",null,null],[17,"CURLOPT_FNMATCH_FUNCTION","","",null,null],[17,"CURLOPT_CHUNK_DATA","","",null,null],[17,"CURLOPT_FNMATCH_DATA","","",null,null],[17,"CURLOPT_RESOLVE","","",null,null],[17,"CURLOPT_TLSAUTH_USERNAME","","",null,null],[17,"CURLOPT_TLSAUTH_PASSWORD","","",null,null],[17,"CURLOPT_TLSAUTH_TYPE","","",null,null],[17,"CURLOPT_TRANSFER_ENCODING","","",null,null],[17,"CURLOPT_CLOSESOCKETFUNCTION","","",null,null],[17,"CURLOPT_CLOSESOCKETDATA","","",null,null],[17,"CURLOPT_GSSAPI_DELEGATION","","",null,null],[17,"CURLOPT_DNS_SERVERS","","",null,null],[17,"CURLOPT_TCP_KEEPALIVE","","",null,null],[17,"CURLOPT_TCP_KEEPIDLE","","",null,null],[17,"CURLOPT_TCP_KEEPINTVL","","",null,null],[17,"CURLOPT_SSL_OPTIONS","","",null,null],[17,"CURLOPT_UNIX_SOCKET_PATH","","",null,null],[17,"CURLOPT_PIPEWAIT","","",null,null],[17,"CURL_IPRESOLVE_WHATEVER","","",null,null],[17,"CURL_IPRESOLVE_V4","","",null,null],[17,"CURL_IPRESOLVE_V6","","",null,null],[17,"CURLSSLOPT_ALLOW_BEAST","","",null,null],[17,"CURLSSLOPT_NO_REVOKE","","",null,null],[17,"CURL_HTTP_VERSION_NONE","","These enums are for use with the CURLOPT_HTTP_VERSION…",null,null],[17,"CURL_HTTP_VERSION_1_0","","Please use HTTP 1.0 in the request",null,null],[17,"CURL_HTTP_VERSION_1_1","","Please use HTTP 1.1 in the request",null,null],[17,"CURL_HTTP_VERSION_2_0","","Please use HTTP 2 in the request (Added in CURL 7.33.0)",null,null],[17,"CURL_HTTP_VERSION_2TLS","","Use version 2 for HTTPS, version 1.1 for HTTP (Added in…",null,null],[17,"CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE","","Please use HTTP 2 without HTTP/1.1 Upgrade (Added in CURL…",null,null],[17,"CURL_SSLVERSION_DEFAULT","","",null,null],[17,"CURL_SSLVERSION_TLSv1","","",null,null],[17,"CURL_SSLVERSION_SSLv2","","",null,null],[17,"CURL_SSLVERSION_SSLv3","","",null,null],[17,"CURL_SSLVERSION_TLSv1_0","","",null,null],[17,"CURL_SSLVERSION_TLSv1_1","","",null,null],[17,"CURL_SSLVERSION_TLSv1_2","","",null,null],[17,"CURL_SSLVERSION_TLSv1_3","","",null,null],[17,"CURLOPT_READDATA","","",null,null],[17,"CURLOPT_WRITEDATA","","",null,null],[17,"CURLOPT_HEADERDATA","","",null,null],[17,"CURL_TIMECOND_NONE","","",null,null],[17,"CURL_TIMECOND_IFMODSINCE","","",null,null],[17,"CURL_TIMECOND_IFUNMODSINCE","","",null,null],[17,"CURL_TIMECOND_LASTMOD","","",null,null],[17,"CURLFORM_NOTHING","","",null,null],[17,"CURLFORM_COPYNAME","","",null,null],[17,"CURLFORM_PTRNAME","","",null,null],[17,"CURLFORM_NAMELENGTH","","",null,null],[17,"CURLFORM_COPYCONTENTS","","",null,null],[17,"CURLFORM_PTRCONTENTS","","",null,null],[17,"CURLFORM_CONTENTSLENGTH","","",null,null],[17,"CURLFORM_FILECONTENT","","",null,null],[17,"CURLFORM_ARRAY","","",null,null],[17,"CURLFORM_OBSOLETE","","",null,null],[17,"CURLFORM_FILE","","",null,null],[17,"CURLFORM_BUFFER","","",null,null],[17,"CURLFORM_BUFFERPTR","","",null,null],[17,"CURLFORM_BUFFERLENGTH","","",null,null],[17,"CURLFORM_CONTENTTYPE","","",null,null],[17,"CURLFORM_CONTENTHEADER","","",null,null],[17,"CURLFORM_FILENAME","","",null,null],[17,"CURLFORM_END","","",null,null],[17,"CURLFORM_STREAM","","",null,null],[17,"CURL_FORMADD_OK","","",null,null],[17,"CURL_FORMADD_MEMORY","","",null,null],[17,"CURL_FORMADD_OPTION_TWICE","","",null,null],[17,"CURL_FORMADD_NULL","","",null,null],[17,"CURL_FORMADD_UNKNOWN_OPTION","","",null,null],[17,"CURL_FORMADD_INCOMPLETE","","",null,null],[17,"CURL_FORMADD_ILLEGAL_ARRAY","","",null,null],[17,"CURL_FORMADD_DISABLED","","",null,null],[17,"CURLINFO_STRING","","",null,null],[17,"CURLINFO_LONG","","",null,null],[17,"CURLINFO_DOUBLE","","",null,null],[17,"CURLINFO_SLIST","","",null,null],[17,"CURLINFO_MASK","","",null,null],[17,"CURLINFO_TYPEMASK","","",null,null],[17,"CURLINFO_EFFECTIVE_URL","","",null,null],[17,"CURLINFO_RESPONSE_CODE","","",null,null],[17,"CURLINFO_TOTAL_TIME","","",null,null],[17,"CURLINFO_NAMELOOKUP_TIME","","",null,null],[17,"CURLINFO_CONNECT_TIME","","",null,null],[17,"CURLINFO_PRETRANSFER_TIME","","",null,null],[17,"CURLINFO_SIZE_UPLOAD","","",null,null],[17,"CURLINFO_SIZE_DOWNLOAD","","",null,null],[17,"CURLINFO_SPEED_DOWNLOAD","","",null,null],[17,"CURLINFO_SPEED_UPLOAD","","",null,null],[17,"CURLINFO_HEADER_SIZE","","",null,null],[17,"CURLINFO_REQUEST_SIZE","","",null,null],[17,"CURLINFO_SSL_VERIFYRESULT","","",null,null],[17,"CURLINFO_FILETIME","","",null,null],[17,"CURLINFO_CONTENT_LENGTH_DOWNLOAD","","",null,null],[17,"CURLINFO_CONTENT_LENGTH_UPLOAD","","",null,null],[17,"CURLINFO_STARTTRANSFER_TIME","","",null,null],[17,"CURLINFO_CONTENT_TYPE","","",null,null],[17,"CURLINFO_REDIRECT_TIME","","",null,null],[17,"CURLINFO_REDIRECT_COUNT","","",null,null],[17,"CURLINFO_PRIVATE","","",null,null],[17,"CURLINFO_HTTP_CONNECTCODE","","",null,null],[17,"CURLINFO_HTTPAUTH_AVAIL","","",null,null],[17,"CURLINFO_PROXYAUTH_AVAIL","","",null,null],[17,"CURLINFO_OS_ERRNO","","",null,null],[17,"CURLINFO_NUM_CONNECTS","","",null,null],[17,"CURLINFO_SSL_ENGINES","","",null,null],[17,"CURLINFO_COOKIELIST","","",null,null],[17,"CURLINFO_LASTSOCKET","","",null,null],[17,"CURLINFO_FTP_ENTRY_PATH","","",null,null],[17,"CURLINFO_REDIRECT_URL","","",null,null],[17,"CURLINFO_PRIMARY_IP","","",null,null],[17,"CURLINFO_APPCONNECT_TIME","","",null,null],[17,"CURLINFO_CERTINFO","","",null,null],[17,"CURLINFO_CONDITION_UNMET","","",null,null],[17,"CURLINFO_RTSP_SESSION_ID","","",null,null],[17,"CURLINFO_RTSP_CLIENT_CSEQ","","",null,null],[17,"CURLINFO_RTSP_SERVER_CSEQ","","",null,null],[17,"CURLINFO_RTSP_CSEQ_RECV","","",null,null],[17,"CURLINFO_PRIMARY_PORT","","",null,null],[17,"CURLINFO_LOCAL_IP","","",null,null],[17,"CURLINFO_LOCAL_PORT","","",null,null],[17,"CURLCLOSEPOLICY_NONE","","",null,null],[17,"CURLCLOSEPOLICY_OLDEST","","",null,null],[17,"CURLCLOSEPOLICY_LEAST_RECENTLY_USED","","",null,null],[17,"CURLCLOSEPOLICY_LEAST_TRAFFIC","","",null,null],[17,"CURLCLOSEPOLICY_SLOWEST","","",null,null],[17,"CURLCLOSEPOLICY_CALLBACK","","",null,null],[17,"CURL_GLOBAL_SSL","","",null,null],[17,"CURL_GLOBAL_WIN32","","",null,null],[17,"CURL_GLOBAL_ALL","","",null,null],[17,"CURL_GLOBAL_NOTHING","","",null,null],[17,"CURL_GLOBAL_DEFAULT","","",null,null],[17,"CURL_LOCK_DATA_NONE","","",null,null],[17,"CURL_LOCK_DATA_SHARE","","",null,null],[17,"CURL_LOCK_DATA_COOKIE","","",null,null],[17,"CURL_LOCK_DATA_DNS","","",null,null],[17,"CURL_LOCK_DATA_SSL_SESSION","","",null,null],[17,"CURL_LOCK_DATA_CONNECT","","",null,null],[17,"CURL_LOCK_ACCESS_NONE","","",null,null],[17,"CURL_LOCK_ACCESS_SHARED","","",null,null],[17,"CURL_LOCK_ACCESS_SINGLE","","",null,null],[17,"CURLSHE_OK","","",null,null],[17,"CURLSHE_BAD_OPTION","","",null,null],[17,"CURLSHE_IN_USE","","",null,null],[17,"CURLSHE_INVALID","","",null,null],[17,"CURLSHE_NOMEM","","",null,null],[17,"CURLSHOPT_NONE","","",null,null],[17,"CURLSHOPT_SHARE","","",null,null],[17,"CURLSHOPT_UNSHARE","","",null,null],[17,"CURLSHOPT_LOCKFUNC","","",null,null],[17,"CURLSHOPT_UNLOCKFUNC","","",null,null],[17,"CURLSHOPT_USERDATA","","",null,null],[17,"CURLVERSION_FIRST","","",null,null],[17,"CURLVERSION_SECOND","","",null,null],[17,"CURLVERSION_THIRD","","",null,null],[17,"CURLVERSION_FOURTH","","",null,null],[17,"CURLVERSION_FIFTH","","",null,null],[17,"CURLVERSION_SIXTH","","",null,null],[17,"CURLVERSION_SEVENTH","","",null,null],[17,"CURLVERSION_NOW","","",null,null],[17,"CURL_VERSION_IPV6","","",null,null],[17,"CURL_VERSION_KERBEROS4","","",null,null],[17,"CURL_VERSION_SSL","","",null,null],[17,"CURL_VERSION_LIBZ","","",null,null],[17,"CURL_VERSION_NTLM","","",null,null],[17,"CURL_VERSION_GSSNEGOTIATE","","",null,null],[17,"CURL_VERSION_DEBUG","","",null,null],[17,"CURL_VERSION_ASYNCHDNS","","",null,null],[17,"CURL_VERSION_SPNEGO","","",null,null],[17,"CURL_VERSION_LARGEFILE","","",null,null],[17,"CURL_VERSION_IDN","","",null,null],[17,"CURL_VERSION_SSPI","","",null,null],[17,"CURL_VERSION_CONV","","",null,null],[17,"CURL_VERSION_CURLDEBUG","","",null,null],[17,"CURL_VERSION_TLSAUTH_SRP","","",null,null],[17,"CURL_VERSION_NTLM_WB","","",null,null],[17,"CURL_VERSION_HTTP2","","",null,null],[17,"CURL_VERSION_UNIX_SOCKETS","","",null,null],[17,"CURL_VERSION_BROTLI","","",null,null],[17,"CURL_VERSION_HTTP3","","",null,null],[17,"CURLPAUSE_RECV","","",null,null],[17,"CURLPAUSE_RECV_CONT","","",null,null],[17,"CURLPAUSE_SEND","","",null,null],[17,"CURLPAUSE_SEND_CONT","","",null,null],[17,"CURLM_CALL_MULTI_PERFORM","","",null,null],[17,"CURLM_OK","","",null,null],[17,"CURLM_BAD_HANDLE","","",null,null],[17,"CURLM_BAD_EASY_HANDLE","","",null,null],[17,"CURLM_OUT_OF_MEMORY","","",null,null],[17,"CURLM_INTERNAL_ERROR","","",null,null],[17,"CURLM_BAD_SOCKET","","",null,null],[17,"CURLM_UNKNOWN_OPTION","","",null,null],[17,"CURLMSG_NONE","","",null,null],[17,"CURLMSG_DONE","","",null,null],[17,"CURL_WAIT_POLLIN","","",null,null],[17,"CURL_WAIT_POLLPRI","","",null,null],[17,"CURL_WAIT_POLLOUT","","",null,null],[17,"CURL_POLL_NONE","","",null,null],[17,"CURL_POLL_IN","","",null,null],[17,"CURL_POLL_OUT","","",null,null],[17,"CURL_POLL_INOUT","","",null,null],[17,"CURL_POLL_REMOVE","","",null,null],[17,"CURL_CSELECT_IN","","",null,null],[17,"CURL_CSELECT_OUT","","",null,null],[17,"CURL_CSELECT_ERR","","",null,null],[17,"CURL_SOCKET_TIMEOUT","","",null,null],[17,"CURLMOPT_SOCKETFUNCTION","","",null,null],[17,"CURLMOPT_SOCKETDATA","","",null,null],[17,"CURLMOPT_PIPELINING","","",null,null],[17,"CURLMOPT_TIMERFUNCTION","","",null,null],[17,"CURLMOPT_TIMERDATA","","",null,null],[17,"CURLMOPT_MAXCONNECTS","","",null,null],[17,"CURLMOPT_MAX_HOST_CONNECTIONS","","",null,null],[17,"CURLMOPT_MAX_PIPELINE_LENGTH","","",null,null],[17,"CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE","","",null,null],[17,"CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE","","",null,null],[17,"CURLMOPT_PIPELINING_SITE_BL","","",null,null],[17,"CURLMOPT_PIPELINING_SERVER_BL","","",null,null],[17,"CURLMOPT_MAX_TOTAL_CONNECTIONS","","",null,null],[17,"CURLPIPE_NOTHING","","",null,null],[17,"CURLPIPE_HTTP1","","",null,null],[17,"CURLPIPE_MULTIPLEX","","",null,null],[17,"CURL_ERROR_SIZE","","",null,null],[17,"CURLSOCKTYPE_IPCXN","","",null,null],[17,"CURLSOCKTYPE_ACCEPT","","",null,null],[17,"CURLSOCKTYPE_LAST","","",null,null],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"clone","","",8,[[["self"]],["fd_set"]]]],"p":[[3,"curl_fileinfo"],[3,"curl_forms"],[3,"curl_slist"],[3,"curl_certinfo"],[3,"curl_version_info_data"],[3,"CURLMsg"],[3,"curl_waitfd"],[3,"curl_sockaddr"],[3,"fd_set"],[4,"CURL"],[4,"curl_httppost"],[4,"CURLSH"],[4,"CURLM"]]};
searchIndex["diffus"] = {"doc":"","i":[[0,"diffable_impls","diffus","",null,null],[0,"borrow","diffus::diffable_impls","",null,null],[0,"collection","","",null,null],[0,"map","","",null,null],[0,"option","","",null,null],[0,"primitives","","",null,null],[0,"set","","",null,null],[0,"string","","",null,null],[0,"edit","diffus","",null,null],[4,"Edit","diffus::edit","",null,null],[13,"Copy","","",0,null],[13,"Change","","",0,null],[0,"collection","","",null,null],[4,"Edit","diffus::edit::collection","",null,null],[13,"Copy","","",1,null],[13,"Insert","","",1,null],[13,"Remove","","",1,null],[13,"Change","","",1,null],[11,"is_copy","","",1,[[["self"]],["bool"]]],[11,"is_insert","","",1,[[["self"]],["bool"]]],[11,"is_remove","","",1,[[["self"]],["bool"]]],[11,"is_change","","",1,[[["self"]],["bool"]]],[11,"copy","","",1,[[["self"]],[["t"],["option"]]]],[11,"insert","","",1,[[["self"]],[["t"],["option"]]]],[11,"remove","","",1,[[["self"]],[["t"],["option"]]]],[11,"change","","",1,[[["self"]],[["option"],["diff"]]]],[0,"enm","diffus::edit","",null,null],[4,"Edit","diffus::edit::enm","",null,null],[13,"Copy","","",2,null],[13,"VariantChanged","","",2,null],[13,"AssociatedChanged","","",2,null],[11,"is_copy","","",2,[[["self"]],["bool"]]],[11,"is_variant_changed","","",2,[[["self"]],["bool"]]],[11,"is_associated_changed","","",2,[[["self"]],["bool"]]],[11,"variant_changed","","",2,[[["self"]],["option"]]],[11,"associated_change","","",2,[[["self"]],[["option"],["diff"]]]],[0,"map","diffus::edit","",null,null],[4,"Edit","diffus::edit::map","",null,null],[13,"Copy","","",3,null],[13,"Insert","","",3,null],[13,"Remove","","",3,null],[13,"Change","","",3,null],[11,"is_insert","","",3,[[["self"]],["bool"]]],[11,"is_remove","","",3,[[["self"]],["bool"]]],[11,"is_copy","","",3,[[["self"]],["bool"]]],[11,"is_change","","",3,[[["self"]],["bool"]]],[11,"insert","","",3,[[["self"]],[["option"],["t"]]]],[11,"remove","","",3,[[["self"]],[["option"],["t"]]]],[11,"change","","",3,[[["self"]],["option"]]],[11,"copy","","",3,[[["self"]],[["option"],["t"]]]],[0,"set","diffus::edit","",null,null],[4,"Edit","diffus::edit::set","",null,null],[13,"Copy","","",4,null],[13,"Insert","","",4,null],[13,"Remove","","",4,null],[11,"is_copy","","",4,[[["self"]],["bool"]]],[11,"is_insert","","",4,[[["self"]],["bool"]]],[11,"is_remove","","",4,[[["self"]],["bool"]]],[11,"copy","","",4,[[["self"]],[["option"],["t"]]]],[11,"insert","","",4,[[["self"]],[["option"],["t"]]]],[11,"remove","","",4,[[["self"]],[["option"],["t"]]]],[0,"string","diffus::edit","",null,null],[4,"Edit","diffus::edit::string","",null,null],[13,"Copy","","",5,null],[13,"Insert","","",5,null],[13,"Remove","","",5,null],[11,"is_copy","","",5,[[["self"]],["bool"]]],[11,"is_insert","","",5,[[["self"]],["bool"]]],[11,"is_remove","","",5,[[["self"]],["bool"]]],[11,"copy","","",5,[[],[["option",["char"]],["char"]]]],[11,"insert","","",5,[[],[["option",["char"]],["char"]]]],[11,"remove","","",5,[[],[["option",["char"]],["char"]]]],[11,"is_copy","diffus::edit","",0,[[["self"]],["bool"]]],[11,"copy","","",0,[[["self"]],[["option"],["t"]]]],[11,"is_change","","",0,[[["self"]],["bool"]]],[11,"change","","",0,[[["self"]],["option"]]],[0,"same","diffus","",null,null],[8,"Diffable","","",null,null],[16,"Diff","","",6,null],[10,"diff","","",6,[[["self"]],["edit"]]],[8,"Same","","",null,null],[10,"same","","",7,[[["self"]],["bool"]]],[11,"from","diffus::edit","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","diffus::edit::collection","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","diffus::edit::enm","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","diffus::edit::map","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","diffus::edit::set","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","diffus::edit::string","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"into","diffus::edit","",0,[[],["edit"]]],[11,"clone","diffus::edit::string","",5,[[["self"]],["edit"]]],[11,"eq","diffus::edit::collection","",1,[[["self"],["edit"]],["bool"]]],[11,"ne","","",1,[[["self"],["edit"]],["bool"]]],[11,"eq","diffus::edit::enm","",2,[[["self"],["edit"]],["bool"]]],[11,"ne","","",2,[[["self"],["edit"]],["bool"]]],[11,"eq","diffus::edit::map","",3,[[["edit"],["self"]],["bool"]]],[11,"ne","","",3,[[["edit"],["self"]],["bool"]]],[11,"eq","diffus::edit::set","",4,[[["self"],["edit"]],["bool"]]],[11,"ne","","",4,[[["self"],["edit"]],["bool"]]],[11,"eq","diffus::edit::string","",5,[[["edit"],["self"]],["bool"]]],[11,"ne","","",5,[[["edit"],["self"]],["bool"]]],[11,"eq","diffus::edit","",0,[[["edit"],["self"]],["bool"]]],[11,"ne","","",0,[[["edit"],["self"]],["bool"]]],[11,"fmt","diffus::edit::collection","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","diffus::edit::enm","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","diffus::edit::map","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","diffus::edit::set","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","diffus::edit::string","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","diffus::edit","",0,[[["formatter"],["self"]],["result"]]]],"p":[[4,"Edit"],[4,"Edit"],[4,"Edit"],[4,"Edit"],[4,"Edit"],[4,"Edit"],[8,"Diffable"],[8,"Same"]]};
searchIndex["either"] = {"doc":"The enum [`Either`] with variants `Left` and `Right` is a…","i":[[4,"Either","either","The enum `Either` with variants `Left` and `Right` is a…",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[11,"is_left","","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],[["l"],["either"],["r"]]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],[["either"],["l"],["r"]]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[],["either"]]],[11,"left_or","","Return left value or given value",0,[[["l"]],["l"]]],[11,"left_or_default","","Return left or a default",0,[[],["l"]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[["f"]],["l"]]],[11,"right_or","","Return right value or given value",0,[[["r"]],["r"]]],[11,"right_or_default","","Return right or a default",0,[[],["r"]]],[11,"right_or_else","","Returns right value or computes it from a closure",0,[[["f"]],["r"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[],["t"]]],[11,"map","","Map `f` over the contained value and return the result in…",0,[[["f"]],["either"]]],[14,"try_left","","Macro for unwrapping the left side of an `Either`, which…",null,null],[14,"try_right","","Dual to `try_left!`, see its documentation for more…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"as_mut","","",0,[[["self"]],["str"]]],[11,"as_mut","","",0,[[["self"]],["path"]]],[11,"as_mut","","",0,[[["self"]],["osstr"]]],[11,"as_mut","","",0,[[["self"]],["cstr"]]],[11,"as_mut","","",0,[[["self"]],["target"]]],[11,"as_mut","","",0,[[["self"]]]],[11,"as_ref","","",0,[[["self"]],["target"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",0,[[["self"]],["path"]]],[11,"as_ref","","",0,[[["self"]],["osstr"]]],[11,"as_ref","","",0,[[["self"]],["cstr"]]],[11,"as_ref","","",0,[[["self"]]]],[11,"from","","",0,[[["result"]],["self"]]],[11,"into","","",0,[[],["result"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"extend","","",0,[[["self"],["t"]]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,[[["self"]]]],[11,"fold","","",0,[[["acc"],["g"]],["acc"]]],[11,"count","","",0,[[],["usize"]]],[11,"last","","",0,[[],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"clone","","",0,[[["self"]],["either"]]],[11,"cmp","","",0,[[["self"],["either"]],["ordering"]]],[11,"eq","","",0,[[["self"],["either"]],["bool"]]],[11,"ne","","",0,[[["self"],["either"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["either"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["self"],["either"]],["bool"]]],[11,"le","","",0,[[["self"],["either"]],["bool"]]],[11,"gt","","",0,[[["self"],["either"]],["bool"]]],[11,"ge","","",0,[[["self"],["either"]],["bool"]]],[11,"deref","","",0,[[["self"]]]],[11,"deref_mut","","",0,[[["self"]]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],[["option",["error"]],["error"]]]],[11,"fill_buf","","",0,[[["self"]],["result"]]],[11,"consume","","",0,[[["self"],["usize"]]]],[11,"read","","",0,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read_to_end","","",0,[[["self"],["vec"]],[["result",["usize"]],["usize"]]]],[11,"write","","",0,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",0,[[["self"]],["result"]]]],"p":[[4,"Either"]]};
searchIndex["env_logger"] = {"doc":"A simple logger configured via environment variables which…","i":[[3,"Env","env_logger","Set of environment variables to configure from.",null,null],[3,"Logger","","The env logger.",null,null],[3,"Builder","","`Builder` acts as builder for initializing a `Logger`.",null,null],[4,"Target","","Log target, either `stdout` or `stderr`.",null,null],[13,"Stdout","","Logs will be sent to standard output.",0,null],[13,"Stderr","","Logs will be sent to standard error.",0,null],[4,"WriteStyle","","Whether or not to print styles to the target.",null,null],[13,"Auto","","Try to print styles, but don't force the issue.",1,null],[13,"Always","","Try very hard to print styles.",1,null],[13,"Never","","Never print styles.",1,null],[5,"try_init","","Attempts to initialize the global logger with an env logger.",null,[[],[["result",["setloggererror"]],["setloggererror"]]]],[5,"init","","Initializes the global logger with an env logger.",null,[[]]],[5,"try_init_from_env","","Attempts to initialize the global logger with an env…",null,[[["e"]],[["result",["setloggererror"]],["setloggererror"]]]],[5,"init_from_env","","Initializes the global logger with an env logger from the…",null,[[["e"]]]],[5,"builder","","Create a new builder with the default environment variables.",null,[[],["builder"]]],[5,"from_env","","Create a builder from the given environment variables.",null,[[["e"]],["builder"]]],[0,"filter","","Filtering for log records.",null,null],[3,"Filter","env_logger::filter","A log filter.",null,null],[3,"Builder","","A builder for a log filter.",null,null],[11,"filter","","Returns the maximum `LevelFilter` that this filter…",2,[[["self"]],["levelfilter"]]],[11,"matches","","Checks if this record matches the configured filter.",2,[[["self"],["record"]],["bool"]]],[11,"enabled","","Determines if a log message with the specified metadata…",2,[[["self"],["metadata"]],["bool"]]],[11,"new","","Initializes the filter builder with defaults.",3,[[],["builder"]]],[11,"from_env","","Initializes the filter builder from an environment.",3,[[["str"]],["builder"]]],[11,"filter_module","","Adds a directive to the filter for a specific module.",3,[[["str"],["self"],["levelfilter"]],["self"]]],[11,"filter_level","","Adds a directive to the filter for all modules.",3,[[["self"],["levelfilter"]],["self"]]],[11,"filter","","Adds a directive to the filter.",3,[[["str"],["option",["str"]],["self"],["levelfilter"]],["self"]]],[11,"parse","","Parses the directives string.",3,[[["str"],["self"]],["self"]]],[11,"build","","Build a log filter.",3,[[["self"]],["filter"]]],[0,"fmt","env_logger","Formatting for log records.",null,null],[3,"Timestamp","env_logger::fmt","An [RFC3339] formatted timestamp.",null,null],[3,"Style","","A set of styles to apply to the terminal output.",null,null],[3,"StyledValue","","A value that can be printed using the given styles.",null,null],[3,"Formatter","","A formatter to write logs into.",null,null],[4,"Color","","The set of available colors for the terminal…",null,null],[13,"Black","","",4,null],[13,"Blue","","",4,null],[13,"Green","","",4,null],[13,"Red","","",4,null],[13,"Cyan","","",4,null],[13,"Magenta","","",4,null],[13,"Yellow","","",4,null],[13,"White","","",4,null],[13,"Ansi256","","",4,null],[13,"Rgb","","",4,null],[4,"Target","","Log target, either `stdout` or `stderr`.",null,null],[13,"Stdout","","Logs will be sent to standard output.",0,null],[13,"Stderr","","Logs will be sent to standard error.",0,null],[4,"WriteStyle","","Whether or not to print styles to the target.",null,null],[13,"Auto","","Try to print styles, but don't force the issue.",1,null],[13,"Always","","Try very hard to print styles.",1,null],[13,"Never","","Never print styles.",1,null],[4,"TimestampPrecision","","Formatting precision of timestamps.",null,null],[13,"Seconds","","Full second precision (0 decimal digits)",5,null],[13,"Millis","","Millisecond precision (3 decimal digits)",5,null],[13,"Micros","","Microsecond precision (6 decimal digits)",5,null],[13,"Nanos","","Nanosecond precision (9 decimal digits)",5,null],[11,"timestamp","","Get a [`Timestamp`] for the current date and time in UTC.",6,[[["self"]],["timestamp"]]],[11,"timestamp_seconds","","Get a [`Timestamp`] for the current date and time in UTC…",6,[[["self"]],["timestamp"]]],[11,"timestamp_millis","","Get a [`Timestamp`] for the current date and time in UTC…",6,[[["self"]],["timestamp"]]],[11,"timestamp_micros","","Get a [`Timestamp`] for the current date and time in UTC…",6,[[["self"]],["timestamp"]]],[11,"timestamp_nanos","","Get a [`Timestamp`] for the current date and time in UTC…",6,[[["self"]],["timestamp"]]],[11,"style","","Begin a new [`Style`].",6,[[["self"]],["style"]]],[11,"default_level_style","","Get the default [`Style`] for the given level.",6,[[["level"],["self"]],["style"]]],[11,"default_styled_level","","Get a printable [`Style`] for the given level.",6,[[["level"],["self"]],[["styledvalue",["level"]],["level"]]]],[11,"set_color","","Set the text color.",7,[[["self"],["color"]],["style"]]],[11,"set_bold","","Set the text weight.",7,[[["self"],["bool"]],["style"]]],[11,"set_intense","","Set the text intensity.",7,[[["self"],["bool"]],["style"]]],[11,"set_bg","","Set the background color.",7,[[["self"],["color"]],["style"]]],[11,"value","","Wrap a value in the style.",7,[[["self"],["t"]],["styledvalue"]]],[17,"DEFAULT_FILTER_ENV","env_logger","The default name for the environment variable to read…",null,null],[17,"DEFAULT_WRITE_STYLE_ENV","","The default name for the environment variable to read…",null,null],[11,"new","","Initializes the log builder with defaults.",8,[[],["builder"]]],[11,"from_env","","Initializes the log builder from the environment.",8,[[["e"]],["self"]]],[11,"from_default_env","","Initializes the log builder from the environment using…",8,[[],["self"]]],[11,"format","","Sets the format function for formatting the log output.",8,[[["self"],["f"]],["self"]]],[11,"default_format","","Use the default format.",8,[[["self"]],["self"]]],[11,"format_level","","Whether or not to write the level in the default format.",8,[[["self"],["bool"]],["self"]]],[11,"format_module_path","","Whether or not to write the module path in the default…",8,[[["self"],["bool"]],["self"]]],[11,"format_indent","","Configures the amount of spaces to use to indent multiline…",8,[[["self"],["usize"],["option",["usize"]]],["self"]]],[11,"format_timestamp","","Configures if timestamp should be included and in what…",8,[[["timestampprecision"],["self"],["option",["timestampprecision"]]],["self"]]],[11,"format_timestamp_secs","","Configures the timestamp to use second precision.",8,[[["self"]],["self"]]],[11,"format_timestamp_millis","","Configures the timestamp to use millisecond precision.",8,[[["self"]],["self"]]],[11,"format_timestamp_micros","","Configures the timestamp to use microsecond precision.",8,[[["self"]],["self"]]],[11,"format_timestamp_nanos","","Configures the timestamp to use nanosecond precision.",8,[[["self"]],["self"]]],[11,"filter_module","","Adds a directive to the filter for a specific module.",8,[[["str"],["self"],["levelfilter"]],["self"]]],[11,"filter_level","","Adds a directive to the filter for all modules.",8,[[["self"],["levelfilter"]],["self"]]],[11,"filter","","Adds filters to the logger.",8,[[["str"],["option",["str"]],["self"],["levelfilter"]],["self"]]],[11,"parse_filters","","Parses the directives string in the same form as the…",8,[[["str"],["self"]],["self"]]],[11,"target","","Sets the target for the log output.",8,[[["self"],["target"]],["self"]]],[11,"write_style","","Sets whether or not styles will be written.",8,[[["writestyle"],["self"]],["self"]]],[11,"parse_write_style","","Parses whether or not to write styles in the same form as…",8,[[["str"],["self"]],["self"]]],[11,"is_test","","Sets whether or not the logger will be used in unit tests.",8,[[["self"],["bool"]],["self"]]],[11,"try_init","","Initializes the global logger with the built env logger.",8,[[["self"]],[["result",["setloggererror"]],["setloggererror"]]]],[11,"init","","Initializes the global logger with the built env logger.",8,[[["self"]]]],[11,"build","","Build an env logger.",8,[[["self"]],["logger"]]],[11,"from_env","","Creates the logger from the environment.",9,[[["e"]],["self"]]],[11,"from_default_env","","Creates the logger from the environment using default…",9,[[],["self"]]],[11,"filter","","Returns the maximum `LevelFilter` that this env logger…",9,[[["self"]],["levelfilter"]]],[11,"matches","","Checks if this record matches the configured filter.",9,[[["self"],["record"]],["bool"]]],[11,"new","","Get a default set of environment variables.",10,[[],["self"]]],[11,"filter","","Specify an environment variable to read the filter from.",10,[[["e"]],["self"]]],[11,"filter_or","","Specify an environment variable to read the filter from.",10,[[["v"],["e"]],["self"]]],[11,"default_filter_or","","Use the default environment variable to read the filter…",10,[[["v"]],["self"]]],[11,"write_style","","Specify an environment variable to read the style from.",10,[[["e"]],["self"]]],[11,"write_style_or","","Specify an environment variable to read the style from.",10,[[["v"],["e"]],["self"]]],[11,"default_write_style_or","","Use the default environment variable to read the style from.",10,[[["v"]],["self"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","env_logger::filter","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","env_logger::fmt","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","env_logger","",10,[[["t"]],["self"]]],[11,"clone","env_logger::fmt","",7,[[["self"]],["style"]]],[11,"clone","","",4,[[["self"]],["color"]]],[11,"clone","env_logger","",0,[[["self"]],["target"]]],[11,"clone","","",1,[[["self"]],["writestyle"]]],[11,"clone","env_logger::fmt","",5,[[["self"]],["timestampprecision"]]],[11,"default","env_logger::filter","",3,[[],["self"]]],[11,"default","env_logger","",0,[[],["self"]]],[11,"default","","",1,[[],["self"]]],[11,"default","env_logger::fmt","",5,[[],["self"]]],[11,"default","env_logger","",8,[[],["builder"]]],[11,"default","","",10,[[],["self"]]],[11,"eq","env_logger::fmt","",4,[[["self"],["color"]],["bool"]]],[11,"ne","","",4,[[["self"],["color"]],["bool"]]],[11,"eq","env_logger","",0,[[["target"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["writestyle"]],["bool"]]],[11,"fmt","env_logger::filter","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","env_logger::fmt","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","env_logger","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","env_logger::fmt","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","env_logger","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","env_logger::fmt","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"hash","env_logger","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"fmt","env_logger::fmt","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"write","","",6,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",6,[[["self"]],["result"]]],[11,"enabled","env_logger","",9,[[["self"],["metadata"]],["bool"]]],[11,"log","","",9,[[["self"],["record"]]]],[11,"flush","","",9,[[["self"]]]]],"p":[[4,"Target"],[4,"WriteStyle"],[3,"Filter"],[3,"Builder"],[4,"Color"],[4,"TimestampPrecision"],[3,"Formatter"],[3,"Style"],[3,"Builder"],[3,"Logger"],[3,"Env"],[3,"Timestamp"],[3,"StyledValue"]]};
searchIndex["filetime"] = {"doc":"Timestamps for files in Rust","i":[[3,"FileTime","filetime","A helper structure to represent a timestamp for a file.",null,null],[5,"set_file_times","","Set the last access and modification times for a file on…",null,[[["filetime"],["p"]],["result"]]],[5,"set_file_handle_times","","Set the last access and modification times for a file…",null,[[["filetime"],["file"],["option",["filetime"]]],["result"]]],[5,"set_symlink_file_times","","Set the last access and modification times for a file on…",null,[[["filetime"],["p"]],["result"]]],[5,"set_file_mtime","","Set the last modification time for a file on the filesystem.",null,[[["filetime"],["p"]],["result"]]],[5,"set_file_atime","","Set the last access time for a file on the filesystem.",null,[[["filetime"],["p"]],["result"]]],[11,"zero","","Creates a new timestamp representing a 0 time.",0,[[],["filetime"]]],[11,"now","","Creates a new timestamp representing the current system…",0,[[],["filetime"]]],[11,"from_unix_time","","Creates a new instance of `FileTime` with a number of…",0,[[["i64"],["u32"]],["filetime"]]],[11,"from_last_modification_time","","Creates a new timestamp from the last modification time…",0,[[["metadata"]],["filetime"]]],[11,"from_last_access_time","","Creates a new timestamp from the last access time listed…",0,[[["metadata"]],["filetime"]]],[11,"from_creation_time","","Creates a new timestamp from the creation time listed in…",0,[[["metadata"]],[["filetime"],["option",["filetime"]]]]],[11,"from_system_time","","Creates a new timestamp from the given SystemTime.",0,[[["systemtime"]],["filetime"]]],[11,"seconds","","Returns the whole number of seconds represented by this…",0,[[["self"]],["i64"]]],[11,"unix_seconds","","Returns the whole number of seconds represented by this…",0,[[["self"]],["i64"]]],[11,"nanoseconds","","Returns the nanosecond precision of this timestamp.",0,[[["self"]],["u32"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",0,[[["systemtime"]],["filetime"]]],[11,"clone","","",0,[[["self"]],["filetime"]]],[11,"cmp","","",0,[[["self"],["filetime"]],["ordering"]]],[11,"eq","","",0,[[["self"],["filetime"]],["bool"]]],[11,"ne","","",0,[[["self"],["filetime"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["filetime"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["self"],["filetime"]],["bool"]]],[11,"le","","",0,[[["self"],["filetime"]],["bool"]]],[11,"gt","","",0,[[["self"],["filetime"]],["bool"]]],[11,"ge","","",0,[[["self"],["filetime"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"hash","","",0,[[["self"],["__h"]]]]],"p":[[3,"FileTime"]]};
searchIndex["fixedbitset"] = {"doc":"`FixedBitSet` is a simple fixed size set of bits.","i":[[3,"FixedBitSet","fixedbitset","`FixedBitSet` is a simple fixed size set of bits that each…",null,null],[3,"Difference","","An iterator producing elements in the difference of two…",null,null],[3,"SymmetricDifference","","An iterator producing elements in the symmetric difference…",null,null],[3,"Intersection","","An iterator producing elements in the intersection of two…",null,null],[3,"Union","","An iterator producing elements in the union of two sets.",null,null],[3,"Ones","","An  iterator producing the indices of the set bit in a set.",null,null],[8,"IndexRange","","IndexRange is implemented by Rust's built-in range types,…",null,null],[11,"start","","Start index (inclusive)",0,[[["self"]],["option"]]],[11,"end","","End index (exclusive)",0,[[["self"]],["option"]]],[11,"with_capacity","","Create a new FixedBitSet with a specific number of bits,…",1,[[["usize"]],["self"]]],[11,"grow","","Grow capacity to bits, all new bits initialized to zero",1,[[["self"],["usize"]]]],[11,"len","","Return the length of the `FixedBitSet` in bits.",1,[[["self"]],["usize"]]],[11,"contains","","Return true if the bit is enabled in the FixedBitSet,…",1,[[["self"],["usize"]],["bool"]]],[11,"clear","","Clear all bits.",1,[[["self"]]]],[11,"insert","","Enable `bit`.",1,[[["self"],["usize"]]]],[11,"put","","Enable `bit`, and return its previous value.",1,[[["self"],["usize"]],["bool"]]],[11,"toggle","","Toggle `bit` (inverting its state).",1,[[["self"],["usize"]]]],[11,"set","","Panics if bit is out of bounds.",1,[[["self"],["usize"],["bool"]]]],[11,"copy_bit","","Copies boolean value from specified bit to the specified…",1,[[["self"],["usize"]]]],[11,"count_ones","","Count the number of set bits in the given bit range.",1,[[["indexrange"],["self"]],["usize"]]],[11,"set_range","","Sets every bit in the given range to the given state…",1,[[["indexrange"],["self"],["bool"]]]],[11,"insert_range","","Enables every bit in the given range.",1,[[["indexrange"],["self"]]]],[11,"as_slice","","View the bitset as a slice of `u32` blocks",1,[[["self"]]]],[11,"as_mut_slice","","View the bitset as a mutable slice of `u32` blocks.…",1,[[["self"]]]],[11,"ones","","Iterates over all enabled bits.",1,[[["self"]],["ones"]]],[11,"intersection","","Returns a lazy iterator over the intersection of two…",1,[[["fixedbitset"],["self"]],["intersection"]]],[11,"union","","Returns a lazy iterator over the union of two…",1,[[["fixedbitset"],["self"]],["union"]]],[11,"difference","","Returns a lazy iterator over the difference of two…",1,[[["fixedbitset"],["self"]],["difference"]]],[11,"symmetric_difference","","Returns a lazy iterator over the symmetric difference of…",1,[[["fixedbitset"],["self"]],["symmetricdifference"]]],[11,"union_with","","In-place union of two `FixedBitSet`s.",1,[[["self"],["fixedbitset"]]]],[11,"intersect_with","","In-place intersection of two `FixedBitSet`s.",1,[[["self"],["fixedbitset"]]]],[11,"symmetric_difference_with","","In-place symmetric difference of two `FixedBitSet`s.",1,[[["self"],["fixedbitset"]]]],[11,"is_disjoint","","Returns `true` if `self` has no elements in common with…",1,[[["self"],["fixedbitset"]],["bool"]]],[11,"is_subset","","Returns `true` if the set is a subset of another, i.e.…",1,[[["self"],["fixedbitset"]],["bool"]]],[11,"is_superset","","Returns `true` if the set is a superset of another, i.e.…",1,[[["self"],["fixedbitset"]],["bool"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into_iter","","",6,[[],["i"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"eq","","",1,[[["self"],["fixedbitset"]],["bool"]]],[11,"ne","","",1,[[["self"],["fixedbitset"]],["bool"]]],[11,"cmp","","",1,[[["self"],["fixedbitset"]],["ordering"]]],[11,"partial_cmp","","",1,[[["self"],["fixedbitset"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",1,[[["self"],["fixedbitset"]],["bool"]]],[11,"le","","",1,[[["self"],["fixedbitset"]],["bool"]]],[11,"gt","","",1,[[["self"],["fixedbitset"]],["bool"]]],[11,"ge","","",1,[[["self"],["fixedbitset"]],["bool"]]],[11,"bitand_assign","","",1,[[["self"]]]],[11,"bitor_assign","","",1,[[["self"]]]],[11,"bitxor_assign","","",1,[[["self"]]]],[11,"index","","",1,[[["self"],["usize"]],["bool"]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"next","","",6,[[["self"]],["option"]]],[11,"extend","","",1,[[["self"],["intoiterator"]]]],[11,"from_iter","","",1,[[["intoiterator"]],["self"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"default","","",1,[[],["fixedbitset"]]],[11,"start","","Start index (inclusive)",0,[[["self"]],["option"]]],[11,"end","","End index (exclusive)",0,[[["self"]],["option"]]]],"p":[[8,"IndexRange"],[3,"FixedBitSet"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Intersection"],[3,"Union"],[3,"Ones"]]};
searchIndex["flate2"] = {"doc":"A DEFLATE-based stream compression/decompression library","i":[[3,"Crc","flate2","The CRC calculated by a [`CrcReader`].",null,null],[3,"CrcReader","","A wrapper around a [`Read`] that calculates the CRC.",null,null],[3,"CrcWriter","","A wrapper around a [`Write`] that calculates the CRC.",null,null],[3,"GzBuilder","","A builder structure to create a new gzip Encoder.",null,null],[3,"GzHeader","","A structure representing the header of a gzip stream.",null,null],[3,"Compress","","Raw in-memory compression stream for blocks of data.",null,null],[3,"CompressError","","Error returned when a compression object is used…",null,null],[3,"Decompress","","Raw in-memory decompression stream for blocks of data.",null,null],[3,"DecompressError","","Error returned when a decompression object finds that the…",null,null],[3,"Compression","","When compressing data, the compression level can be…",null,null],[4,"Status","","Possible status results of compressing some data or…",null,null],[13,"Ok","","Indicates success.",0,null],[13,"BufError","","Indicates that forward progress is not possible due to…",0,null],[13,"StreamEnd","","Indicates that all input has been consumed and all output…",0,null],[4,"FlushCompress","","Values which indicate the form of flushing to be used when…",null,null],[13,"None","","A typical parameter for passing to…",1,null],[13,"Sync","","All pending output is flushed to the output buffer and the…",1,null],[13,"Partial","","All pending output is flushed to the output buffer, but…",1,null],[13,"Full","","All output is flushed as with `Flush::Sync` and the…",1,null],[13,"Finish","","Pending input is processed and pending output is flushed.",1,null],[4,"FlushDecompress","","Values which indicate the form of flushing to be used when…",null,null],[13,"None","","A typical parameter for passing to…",2,null],[13,"Sync","","All pending output is flushed to the output buffer and the…",2,null],[13,"Finish","","Pending input is processed and pending output is flushed.",2,null],[11,"new","","Create a new CRC.",3,[[],["crc"]]],[11,"sum","","Returns the current crc32 checksum.",3,[[["self"]],["u32"]]],[11,"amount","","The number of bytes that have been used to calculate the…",3,[[["self"]],["u32"]]],[11,"update","","Update the CRC with the bytes in `data`.",3,[[["self"]]]],[11,"reset","","Reset the CRC.",3,[[["self"]]]],[11,"combine","","Combine the CRC with the CRC for the subsequent block of…",3,[[["self"],["crc"]]]],[11,"new","","Create a new CrcReader.",4,[[["r"]],["crcreader"]]],[11,"crc","","Get the Crc for this CrcReader.",4,[[["self"]],["crc"]]],[11,"into_inner","","Get the reader that is wrapped by this CrcReader.",4,[[],["r"]]],[11,"get_ref","","Get the reader that is wrapped by this CrcReader by…",4,[[["self"]],["r"]]],[11,"get_mut","","Get a mutable reference to the reader that is wrapped by…",4,[[["self"]],["r"]]],[11,"reset","","Reset the Crc in this CrcReader.",4,[[["self"]]]],[11,"crc","","Get the Crc for this CrcWriter.",5,[[["self"]],["crc"]]],[11,"into_inner","","Get the writer that is wrapped by this CrcWriter.",5,[[],["w"]]],[11,"get_ref","","Get the writer that is wrapped by this CrcWriter by…",5,[[["self"]],["w"]]],[11,"get_mut","","Get a mutable reference to the writer that is wrapped by…",5,[[["self"]],["w"]]],[11,"reset","","Reset the Crc in this CrcWriter.",5,[[["self"]]]],[11,"new","","Create a new CrcWriter.",5,[[["w"]],["crcwriter"]]],[11,"filename","","Returns the `filename` field of this gzip stream's header,…",6,[[["self"]],["option"]]],[11,"extra","","Returns the `extra` field of this gzip stream's header, if…",6,[[["self"]],["option"]]],[11,"comment","","Returns the `comment` field of this gzip stream's header,…",6,[[["self"]],["option"]]],[11,"operating_system","","Returns the `operating_system` field of this gzip stream's…",6,[[["self"]],["u8"]]],[11,"mtime","","This gives the most recent modification time of the…",6,[[["self"]],["u32"]]],[11,"mtime_as_datetime","","Returns the most recent modification time represented by a…",6,[[["self"]],[["option",["systemtime"]],["systemtime"]]]],[11,"new","","Create a new blank builder with no header by default.",7,[[],["gzbuilder"]]],[11,"mtime","","Configure the `mtime` field in the gzip header.",7,[[["u32"]],["gzbuilder"]]],[11,"operating_system","","Configure the `operating_system` field in the gzip header.",7,[[["u8"]],["gzbuilder"]]],[11,"extra","","Configure the `extra` field in the gzip header.",7,[[["into",["vec"]],["vec",["u8"]]],["gzbuilder"]]],[11,"filename","","Configure the `filename` field in the gzip header.",7,[[["into",["vec"]],["vec",["u8"]]],["gzbuilder"]]],[11,"comment","","Configure the `comment` field in the gzip header.",7,[[["into",["vec"]],["vec",["u8"]]],["gzbuilder"]]],[11,"write","","Consume this builder, creating a writer encoder in the…",7,[[["write"],["compression"]],[["write"],["gzencoder"]]]],[11,"read","","Consume this builder, creating a reader encoder in the…",7,[[["read"],["compression"]],[["gzencoder"],["read"]]]],[11,"buf_read","","Consume this builder, creating a reader encoder in the…",7,[[["compression"],["r"]],["gzencoder"]]],[11,"needs_dictionary","","Indicates whether decompression failed due to requiring a…",8,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"new","","Creates a new object ready for compressing data that it's…",9,[[["compression"],["bool"]],["compress"]]],[11,"new_with_window_bits","","Creates a new object ready for compressing data that it's…",9,[[["u8"],["compression"],["bool"]],["compress"]]],[11,"total_in","","Returns the total number of input bytes which have been…",9,[[["self"]],["u64"]]],[11,"total_out","","Returns the total number of output bytes which have been…",9,[[["self"]],["u64"]]],[11,"set_dictionary","","Specifies the compression dictionary to use.",9,[[["self"]],[["u32"],["result",["u32","compresserror"]],["compresserror"]]]],[11,"reset","","Quickly resets this compressor without having to…",9,[[["self"]]]],[11,"set_level","","Dynamically updates the compression level.",9,[[["self"],["compression"]],[["result",["compresserror"]],["compresserror"]]]],[11,"compress","","Compresses the input data into the output, consuming only…",9,[[["flushcompress"],["self"]],[["result",["status","compresserror"]],["status"],["compresserror"]]]],[11,"compress_vec","","Compresses the input data into the extra space of the…",9,[[["flushcompress"],["self"],["vec"]],[["result",["status","compresserror"]],["status"],["compresserror"]]]],[11,"new","","Creates a new object ready for decompressing data that…",10,[[["bool"]],["decompress"]]],[11,"new_with_window_bits","","Creates a new object ready for decompressing data that…",10,[[["u8"],["bool"]],["decompress"]]],[11,"total_in","","Returns the total number of input bytes which have been…",10,[[["self"]],["u64"]]],[11,"total_out","","Returns the total number of output bytes which have been…",10,[[["self"]],["u64"]]],[11,"decompress","","Decompresses the input data into the output, consuming…",10,[[["flushdecompress"],["self"]],[["decompresserror"],["status"],["result",["status","decompresserror"]]]]],[11,"decompress_vec","","Decompresses the input data into the extra space in the…",10,[[["flushdecompress"],["self"],["vec"]],[["decompresserror"],["status"],["result",["status","decompresserror"]]]]],[11,"set_dictionary","","Specifies the decompression dictionary to use.",10,[[["self"]],[["result",["u32","decompresserror"]],["u32"],["decompresserror"]]]],[11,"reset","","Performs the equivalent of replacing this decompression…",10,[[["self"],["bool"]]]],[0,"read","","Types which operate over [`Read`] streams, both encoders…",null,null],[3,"DeflateDecoder","flate2::read","A DEFLATE decoder, or decompressor.",null,null],[3,"DeflateEncoder","","A DEFLATE encoder, or compressor.",null,null],[3,"GzDecoder","","A gzip streaming decoder",null,null],[3,"GzEncoder","","A gzip streaming encoder",null,null],[3,"MultiGzDecoder","","A gzip streaming decoder that decodes all members of a…",null,null],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",null,null],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",null,null],[0,"write","flate2","Types which operate over [`Write`] streams, both encoders…",null,null],[3,"DeflateDecoder","flate2::write","A DEFLATE decoder, or decompressor.",null,null],[3,"DeflateEncoder","","A DEFLATE encoder, or compressor.",null,null],[3,"GzDecoder","","A gzip streaming decoder",null,null],[3,"GzEncoder","","A gzip streaming encoder",null,null],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",null,null],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",null,null],[0,"bufread","flate2","Types which operate over [`BufRead`] streams, both…",null,null],[3,"DeflateDecoder","flate2::bufread","A DEFLATE decoder, or decompressor.",null,null],[3,"DeflateEncoder","","A DEFLATE encoder, or compressor.",null,null],[3,"GzDecoder","","A gzip streaming decoder",null,null],[3,"GzEncoder","","A gzip streaming encoder",null,null],[3,"MultiGzDecoder","","A gzip streaming decoder that decodes all members of a…",null,null],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",null,null],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",null,null],[11,"new","flate2","Creates a new description of the compression level with an…",11,[[["u32"]],["compression"]]],[11,"none","","No compression is to be performed, this may actually…",11,[[],["compression"]]],[11,"fast","","Optimize for the best speed of encoding.",11,[[],["compression"]]],[11,"best","","Optimize for the size of data being encoded.",11,[[],["compression"]]],[11,"level","","Returns an integer representing the compression level,…",11,[[["self"]],["u32"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","flate2::bufread","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","flate2::read","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","flate2::write","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","flate2::bufread","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","flate2::read","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","flate2::write","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","flate2::bufread","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","flate2::read","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","flate2::write","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"drop","","",25,[[["self"]]]],[11,"clone","flate2","",6,[[["self"]],["gzheader"]]],[11,"clone","","",1,[[["self"]],["flushcompress"]]],[11,"clone","","",2,[[["self"]],["flushdecompress"]]],[11,"clone","","",0,[[["self"]],["status"]]],[11,"clone","","",11,[[["self"]],["compression"]]],[11,"default","","",6,[[],["gzheader"]]],[11,"default","","",11,[[],["compression"]]],[11,"eq","","",6,[[["self"],["gzheader"]],["bool"]]],[11,"ne","","",6,[[["self"],["gzheader"]],["bool"]]],[11,"eq","","",1,[[["flushcompress"],["self"]],["bool"]]],[11,"eq","","",2,[[["flushdecompress"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["status"]],["bool"]]],[11,"eq","","",11,[[["compression"],["self"]],["bool"]]],[11,"ne","","",11,[[["compression"],["self"]],["bool"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","flate2::bufread","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","flate2::read","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","flate2::write","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","flate2::bufread","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","flate2::read","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","flate2::write","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","flate2","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","flate2::bufread","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","flate2::read","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","flate2::write","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","flate2","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fill_buf","","",4,[[["self"]],["result"]]],[11,"consume","","",4,[[["self"],["usize"]]]],[11,"read","","",4,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read","flate2::bufread","",13,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read","","",14,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read","flate2::read","",15,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read","","",16,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read","flate2::write","",17,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read","","",18,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read","flate2::bufread","",19,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read","","",20,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read","","",21,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read","flate2::read","",22,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read","","",23,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read","","",24,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read","flate2::write","",25,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read","","",26,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read","flate2::bufread","",27,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read","","",28,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read","flate2::read","",29,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read","","",30,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read","flate2::write","",31,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read","","",32,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"write","flate2","",5,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",5,[[["self"]],["result"]]],[11,"write","flate2::bufread","",13,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",13,[[["self"]],["result"]]],[11,"write","","",14,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",14,[[["self"]],["result"]]],[11,"write","flate2::read","",15,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",15,[[["self"]],["result"]]],[11,"write","","",16,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",16,[[["self"]],["result"]]],[11,"write","flate2::write","",17,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",17,[[["self"]],["result"]]],[11,"write","","",18,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",18,[[["self"]],["result"]]],[11,"write","flate2::bufread","",19,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",19,[[["self"]],["result"]]],[11,"write","","",20,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",20,[[["self"]],["result"]]],[11,"write","","",21,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",21,[[["self"]],["result"]]],[11,"write","flate2::read","",22,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",22,[[["self"]],["result"]]],[11,"write","","",23,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",23,[[["self"]],["result"]]],[11,"write","","",24,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",24,[[["self"]],["result"]]],[11,"write","flate2::write","",25,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",25,[[["self"]],["result"]]],[11,"write","","",26,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",26,[[["self"]],["result"]]],[11,"write","flate2::bufread","",27,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",27,[[["self"]],["result"]]],[11,"write","","",28,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",28,[[["self"]],["result"]]],[11,"write","flate2::read","",29,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",29,[[["self"]],["result"]]],[11,"write","","",30,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",30,[[["self"]],["result"]]],[11,"write","flate2::write","",31,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",31,[[["self"]],["result"]]],[11,"write","","",32,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",32,[[["self"]],["result"]]],[11,"new","flate2::bufread","Creates a new encoder which will read uncompressed data…",13,[[["compression"],["r"]],["deflateencoder"]]],[11,"reset","","Resets the state of this encoder entirely, swapping out…",13,[[["self"],["r"]],["r"]]],[11,"get_ref","","Acquires a reference to the underlying reader",13,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",13,[[["self"]],["r"]]],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",13,[[],["r"]]],[11,"total_in","","Returns the number of bytes that have been read into this…",13,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the compressor has…",13,[[["self"]],["u64"]]],[11,"new","","Creates a new decoder which will decompress data read from…",14,[[["r"]],["deflatedecoder"]]],[11,"reset","","Resets the state of this decoder entirely, swapping out…",14,[[["self"],["r"]],["r"]]],[11,"reset_data","","Resets the state of this decoder's data",14,[[["self"]]]],[11,"get_ref","","Acquires a reference to the underlying stream",14,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",14,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",14,[[],["r"]]],[11,"total_in","","Returns the number of bytes that the decompressor has…",14,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the decompressor has…",14,[[["self"]],["u64"]]],[11,"new","flate2::read","Creates a new encoder which will read uncompressed data…",15,[[["compression"],["r"]],["deflateencoder"]]],[11,"reset","","Resets the state of this encoder entirely, swapping out…",15,[[["self"],["r"]],["r"]]],[11,"get_ref","","Acquires a reference to the underlying reader",15,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",15,[[["self"]],["r"]]],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",15,[[],["r"]]],[11,"total_in","","Returns the number of bytes that have been read into this…",15,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the compressor has…",15,[[["self"]],["u64"]]],[11,"new","","Creates a new decoder which will decompress data read from…",16,[[["r"]],["deflatedecoder"]]],[11,"new_with_buf","","Same as `new`, but the intermediate buffer for data is…",16,[[["u8"],["vec",["u8"]],["r"]],["deflatedecoder"]]],[11,"reset","","Resets the state of this decoder entirely, swapping out…",16,[[["self"],["r"]],["r"]]],[11,"get_ref","","Acquires a reference to the underlying stream",16,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",16,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",16,[[],["r"]]],[11,"total_in","","Returns the number of bytes that the decompressor has…",16,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the decompressor has…",16,[[["self"]],["u64"]]],[11,"new","flate2::write","Creates a new encoder which will write compressed data to…",17,[[["w"],["compression"]],["deflateencoder"]]],[11,"get_ref","","Acquires a reference to the underlying writer.",17,[[["self"]],["w"]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",17,[[["self"]],["w"]]],[11,"reset","","Resets the state of this encoder entirely, swapping out…",17,[[["w"],["self"]],["result"]]],[11,"try_finish","","Attempt to finish this output stream, writing out final…",17,[[["self"]],["result"]]],[11,"finish","","Consumes this encoder, flushing the output stream.",17,[[],["result"]]],[11,"flush_finish","","Consumes this encoder, flushing the output stream.",17,[[],["result"]]],[11,"total_in","","Returns the number of bytes that have been written to this…",17,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the compressor has…",17,[[["self"]],["u64"]]],[11,"new","","Creates a new decoder which will write uncompressed data…",18,[[["w"]],["deflatedecoder"]]],[11,"get_ref","","Acquires a reference to the underlying writer.",18,[[["self"]],["w"]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",18,[[["self"]],["w"]]],[11,"reset","","Resets the state of this decoder entirely, swapping out…",18,[[["w"],["self"]],["result"]]],[11,"try_finish","","Attempt to finish this output stream, writing out final…",18,[[["self"]],["result"]]],[11,"finish","","Consumes this encoder, flushing the output stream.",18,[[],["result"]]],[11,"total_in","","Returns the number of bytes that the decompressor has…",18,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the decompressor has…",18,[[["self"]],["u64"]]],[11,"new","flate2::bufread","Creates a new encoder which will use the given compression…",19,[[["compression"],["r"]],["gzencoder"]]],[11,"get_ref","","Acquires a reference to the underlying reader.",19,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying reader.",19,[[["self"]],["r"]]],[11,"into_inner","","Returns the underlying stream, consuming this encoder",19,[[],["r"]]],[11,"new","","Creates a new decoder from the given reader, immediately…",20,[[["r"]],["gzdecoder"]]],[11,"header","","Returns the header associated with this stream, if it was…",20,[[["self"]],[["option",["gzheader"]],["gzheader"]]]],[11,"get_ref","","Acquires a reference to the underlying reader.",20,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",20,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",20,[[],["r"]]],[11,"new","","Creates a new decoder from the given reader, immediately…",21,[[["r"]],["multigzdecoder"]]],[11,"header","","Returns the current header associated with this stream, if…",21,[[["self"]],[["option",["gzheader"]],["gzheader"]]]],[11,"get_ref","","Acquires a reference to the underlying reader.",21,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",21,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",21,[[],["r"]]],[11,"new","flate2::read","Creates a new encoder which will use the given compression…",22,[[["compression"],["r"]],["gzencoder"]]],[11,"get_ref","","Acquires a reference to the underlying reader.",22,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying reader.",22,[[["self"]],["r"]]],[11,"into_inner","","Returns the underlying stream, consuming this encoder",22,[[],["r"]]],[11,"new","","Creates a new decoder from the given reader, immediately…",23,[[["r"]],["gzdecoder"]]],[11,"header","","Returns the header associated with this stream, if it was…",23,[[["self"]],[["option",["gzheader"]],["gzheader"]]]],[11,"get_ref","","Acquires a reference to the underlying reader.",23,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",23,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",23,[[],["r"]]],[11,"new","","Creates a new decoder from the given reader, immediately…",24,[[["r"]],["multigzdecoder"]]],[11,"header","","Returns the current header associated with this stream, if…",24,[[["self"]],[["option",["gzheader"]],["gzheader"]]]],[11,"get_ref","","Acquires a reference to the underlying reader.",24,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",24,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",24,[[],["r"]]],[11,"new","flate2::write","Creates a new encoder which will use the given compression…",25,[[["w"],["compression"]],["gzencoder"]]],[11,"get_ref","","Acquires a reference to the underlying writer.",25,[[["self"]],["w"]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",25,[[["self"]],["w"]]],[11,"try_finish","","Attempt to finish this output stream, writing out final…",25,[[["self"]],["result"]]],[11,"finish","","Finish encoding this stream, returning the underlying…",25,[[],["result"]]],[11,"new","","Creates a new decoder which will write uncompressed data…",26,[[["w"]],["gzdecoder"]]],[11,"header","","Returns the header associated with this stream.",26,[[["self"]],[["option",["gzheader"]],["gzheader"]]]],[11,"get_ref","","Acquires a reference to the underlying writer.",26,[[["self"]],["w"]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",26,[[["self"]],["w"]]],[11,"try_finish","","Attempt to finish this output stream, writing out final…",26,[[["self"]],["result"]]],[11,"finish","","Consumes this decoder, flushing the output stream.",26,[[],["result"]]],[11,"new","flate2::bufread","Creates a new encoder which will read uncompressed data…",27,[[["compression"],["r"]],["zlibencoder"]]],[11,"reset","","Resets the state of this encoder entirely, swapping out…",27,[[["self"],["r"]],["r"]]],[11,"get_ref","","Acquires a reference to the underlying reader",27,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",27,[[["self"]],["r"]]],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",27,[[],["r"]]],[11,"total_in","","Returns the number of bytes that have been read into this…",27,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the compressor has…",27,[[["self"]],["u64"]]],[11,"new","","Creates a new decoder which will decompress data read from…",28,[[["r"]],["zlibdecoder"]]],[11,"reset","","Resets the state of this decoder entirely, swapping out…",28,[[["self"],["r"]],["r"]]],[11,"get_ref","","Acquires a reference to the underlying stream",28,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",28,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",28,[[],["r"]]],[11,"total_in","","Returns the number of bytes that the decompressor has…",28,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the decompressor has…",28,[[["self"]],["u64"]]],[11,"new","flate2::read","Creates a new encoder which will read uncompressed data…",29,[[["compression"],["r"]],["zlibencoder"]]],[11,"reset","","Resets the state of this encoder entirely, swapping out…",29,[[["self"],["r"]],["r"]]],[11,"get_ref","","Acquires a reference to the underlying stream",29,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",29,[[["self"]],["r"]]],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",29,[[],["r"]]],[11,"total_in","","Returns the number of bytes that have been read into this…",29,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the compressor has…",29,[[["self"]],["u64"]]],[11,"new","","Creates a new decoder which will decompress data read from…",30,[[["r"]],["zlibdecoder"]]],[11,"new_with_buf","","Same as `new`, but the intermediate buffer for data is…",30,[[["u8"],["vec",["u8"]],["r"]],["zlibdecoder"]]],[11,"reset","","Resets the state of this decoder entirely, swapping out…",30,[[["self"],["r"]],["r"]]],[11,"get_ref","","Acquires a reference to the underlying stream",30,[[["self"]],["r"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",30,[[["self"]],["r"]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",30,[[],["r"]]],[11,"total_in","","Returns the number of bytes that the decompressor has…",30,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the decompressor has…",30,[[["self"]],["u64"]]],[11,"new","flate2::write","Creates a new encoder which will write compressed data to…",31,[[["w"],["compression"]],["zlibencoder"]]],[11,"get_ref","","Acquires a reference to the underlying writer.",31,[[["self"]],["w"]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",31,[[["self"]],["w"]]],[11,"reset","","Resets the state of this encoder entirely, swapping out…",31,[[["w"],["self"]],["result"]]],[11,"try_finish","","Attempt to finish this output stream, writing out final…",31,[[["self"]],["result"]]],[11,"finish","","Consumes this encoder, flushing the output stream.",31,[[],["result"]]],[11,"flush_finish","","Consumes this encoder, flushing the output stream.",31,[[],["result"]]],[11,"total_in","","Returns the number of bytes that have been written to this…",31,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the compressor has…",31,[[["self"]],["u64"]]],[11,"new","","Creates a new decoder which will write uncompressed data…",32,[[["w"]],["zlibdecoder"]]],[11,"get_ref","","Acquires a reference to the underlying writer.",32,[[["self"]],["w"]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",32,[[["self"]],["w"]]],[11,"reset","","Resets the state of this decoder entirely, swapping out…",32,[[["w"],["self"]],["result"]]],[11,"try_finish","","Attempt to finish this output stream, writing out final…",32,[[["self"]],["result"]]],[11,"finish","","Consumes this encoder, flushing the output stream.",32,[[],["result"]]],[11,"total_in","","Returns the number of bytes that the decompressor has…",32,[[["self"]],["u64"]]],[11,"total_out","","Returns the number of bytes that the decompressor has…",32,[[["self"]],["u64"]]]],"p":[[4,"Status"],[4,"FlushCompress"],[4,"FlushDecompress"],[3,"Crc"],[3,"CrcReader"],[3,"CrcWriter"],[3,"GzHeader"],[3,"GzBuilder"],[3,"DecompressError"],[3,"Compress"],[3,"Decompress"],[3,"Compression"],[3,"CompressError"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"GzEncoder"],[3,"GzDecoder"],[3,"MultiGzDecoder"],[3,"GzEncoder"],[3,"GzDecoder"],[3,"MultiGzDecoder"],[3,"GzEncoder"],[3,"GzDecoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"]]};
searchIndex["fnv"] = {"doc":"An implementation of the [Fowler–Noll–Vo hash…","i":[[3,"FnvHasher","fnv","An implementation of the Fowler–Noll–Vo hash function.",null,null],[6,"FnvBuildHasher","","A builder for default FNV hashers.",null,null],[6,"FnvHashMap","","A `HashMap` using a default FNV hasher.",null,null],[6,"FnvHashSet","","A `HashSet` using a default FNV hasher.",null,null],[11,"with_key","","Create an FNV hasher starting with a state corresponding…",0,[[["u64"]],["fnvhasher"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"default","","",0,[[],["fnvhasher"]]],[11,"finish","","",0,[[["self"]],["u64"]]],[11,"write","","",0,[[["self"]]]]],"p":[[3,"FnvHasher"]]};
searchIndex["foreign_types"] = {"doc":"A framework for Rust wrappers over C APIs.","i":[[3,"Opaque","foreign_types","An opaque type used to define `ForeignTypeRef` types.",null,null],[8,"ForeignType","","A type implemented by wrappers over foreign types.",null,null],[16,"CType","","The raw C type.",0,null],[16,"Ref","","The type representing a reference to this type.",0,null],[10,"from_ptr","","Constructs an instance of this type from its raw type.",0,[[],["self"]]],[10,"as_ptr","","Returns a raw pointer to the wrapped value.",0,[[["self"]]]],[8,"ForeignTypeRef","","A trait implemented by types which reference borrowed…",null,null],[16,"CType","","The raw C type.",1,null],[11,"from_ptr","","Constructs a shared instance of this type from its raw type.",1,[[],["self"]]],[11,"from_ptr_mut","","Constructs a mutable reference of this type from its raw…",1,[[],["self"]]],[11,"as_ptr","","Returns a raw pointer to the wrapped value.",1,[[["self"]]]],[14,"foreign_type","","A macro to easily define wrappers for foreign types.",null,null],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]]],"p":[[8,"ForeignType"],[8,"ForeignTypeRef"],[3,"Opaque"]]};
searchIndex["foreign_types_shared"] = {"doc":"Internal crate used by foreign-types","i":[[3,"Opaque","foreign_types_shared","An opaque type used to define `ForeignTypeRef` types.",null,null],[8,"ForeignType","","A type implemented by wrappers over foreign types.",null,null],[16,"CType","","The raw C type.",0,null],[16,"Ref","","The type representing a reference to this type.",0,null],[10,"from_ptr","","Constructs an instance of this type from its raw type.",0,[[],["self"]]],[10,"as_ptr","","Returns a raw pointer to the wrapped value.",0,[[["self"]]]],[8,"ForeignTypeRef","","A trait implemented by types which reference borrowed…",null,null],[16,"CType","","The raw C type.",1,null],[11,"from_ptr","","Constructs a shared instance of this type from its raw type.",1,[[],["self"]]],[11,"from_ptr_mut","","Constructs a mutable reference of this type from its raw…",1,[[],["self"]]],[11,"as_ptr","","Returns a raw pointer to the wrapped value.",1,[[["self"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]]],"p":[[8,"ForeignType"],[8,"ForeignTypeRef"],[3,"Opaque"]]};
searchIndex["getrandom"] = {"doc":"Interface to the random number generator of the operating…","i":[[3,"Error","getrandom","A small and `no_std` compatible error type.",null,null],[5,"getrandom","","Fill `dest` with random bytes from the system's preferred…",null,[[],[["result",["error"]],["error"]]]],[18,"UNKNOWN","","Unknown error.",0,null],[18,"UNAVAILABLE","","System entropy source is unavailable.",0,null],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",0,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",0,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",0,[[],[["i32"],["option",["i32"]]]]],[11,"code","","Extract the bare error code.",0,[[],["nonzerou32"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["nonzerou32"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["error"]],["bool"]]],[11,"ne","","",0,[[["self"],["error"]],["bool"]]],[11,"clone","","",0,[[["self"]],["error"]]]],"p":[[3,"Error"]]};
searchIndex["git2"] = {"doc":"libgit2 bindings for Rust","i":[[3,"ApplyOptions","git2","Options to specify when applying a diff",null,null],[3,"Blame","","Opaque structure to hold blame results.",null,null],[3,"BlameHunk","","Structure that represents a blame hunk.",null,null],[3,"BlameIter","","An iterator over the hunks in a blame.",null,null],[3,"BlameOptions","","Blame options",null,null],[3,"Blob","","A structure to represent a git [blob][1]",null,null],[3,"BlobWriter","","A structure to represent a git writestream for blobs",null,null],[3,"Branch","","A structure to represent a git [branch][1]",null,null],[3,"Branches","","An iterator over the branches inside of a repository.",null,null],[3,"Buf","","A structure to wrap an intermediate buffer used by libgit2.",null,null],[3,"CherrypickOptions","","Options to specify when cherry picking",null,null],[3,"Commit","","A structure to represent a git [commit][1]",null,null],[3,"Parents","","An iterator over the parent commits of a commit.",null,null],[3,"Config","","A structure representing a git configuration key/value store",null,null],[3,"ConfigEntries","","An iterator over the `ConfigEntry` values of a `Config`…",null,null],[3,"ConfigEntry","","A struct representing a certain entry owned by a `Config`…",null,null],[3,"Cred","","A structure to represent git credentials in libgit2.",null,null],[3,"CredentialHelper","","Management of the gitcredentials(7) interface.",null,null],[12,"username","","A public field representing the currently discovered…",0,null],[3,"Describe","","The result of a `describe` operation on either an…",null,null],[3,"DescribeFormatOptions","","Options which can be used to customize how a description…",null,null],[3,"DescribeOptions","","Options which indicate how a `Describe` is created.",null,null],[3,"Deltas","","An iterator over the diffs in a delta",null,null],[3,"Diff","","The diff object that contains all individual file deltas.",null,null],[3,"DiffDelta","","Description of changes to one entry.",null,null],[3,"DiffFile","","Description of one side of a delta.",null,null],[3,"DiffOptions","","Structure describing options about how the diff should be…",null,null],[3,"DiffBinary","","Structure describing the binary contents of a diff.",null,null],[3,"DiffBinaryFile","","The contents of one of the files in a binary diff.",null,null],[3,"DiffFindOptions","","Control behavior of rename and copy detection",null,null],[3,"DiffHunk","","Structure describing a hunk of a diff.",null,null],[3,"DiffLine","","Structure describing a line (or data span) of a diff.",null,null],[3,"DiffStats","","Structure describing a hunk of a diff.",null,null],[3,"Error","","A structure to represent errors coming out of libgit2.",null,null],[3,"Index","","A structure to represent a git [index][1]",null,null],[3,"IndexConflict","","A structure to represent the information returned when a…",null,null],[12,"ancestor","","The ancestor index entry of the two conflicting index…",1,null],[12,"our","","The index entry originating from the user's copy of the…",1,null],[12,"their","","The index entry originating from the external repository.…",1,null],[3,"IndexConflicts","","An iterator over the conflicting entries in an index",null,null],[3,"IndexEntries","","An iterator over the entries in an index",null,null],[3,"IndexEntry","","A structure to represent an entry or a file inside of an…",null,null],[12,"ctime","","",2,null],[12,"mtime","","",2,null],[12,"dev","","",2,null],[12,"ino","","",2,null],[12,"mode","","",2,null],[12,"uid","","",2,null],[12,"gid","","",2,null],[12,"file_size","","",2,null],[12,"id","","",2,null],[12,"flags","","",2,null],[12,"flags_extended","","",2,null],[12,"path","","",2,null],[3,"Progress","","Struct representing the progress by an in-flight transfer.",null,null],[3,"AnnotatedCommit","","A structure to represent an annotated commit, the input to…",null,null],[3,"MergeOptions","","Options to specify when merging.",null,null],[3,"Note","","A structure representing a [note][note] in git.",null,null],[3,"Notes","","An iterator over all of the notes within a repository.",null,null],[3,"Object","","A structure to represent a git [object][1]",null,null],[3,"Odb","","A structure to represent a git object database",null,null],[3,"OdbObject","","An object from the Object Database.",null,null],[3,"OdbPackwriter","","A stream to write a packfile to the ODB",null,null],[3,"OdbReader","","A structure to represent a git ODB rstream",null,null],[3,"OdbWriter","","A structure to represent a git ODB wstream",null,null],[3,"Oid","","Unique identity of any object (commit, tree, blob, tag).",null,null],[3,"PackBuilder","","A builder for creating a packfile",null,null],[3,"Patch","","A structure representing the text changes in a single diff…",null,null],[3,"Pathspec","","Structure representing a compiled pathspec used for…",null,null],[3,"PathspecFailedEntries","","Iterator over the failed list of pathspec items that did…",null,null],[3,"PathspecMatchList","","List of filenames matching a pathspec.",null,null],[3,"PathspecDiffEntries","","Iterator over the matching diff deltas.",null,null],[3,"PathspecEntries","","Iterator over the matched paths in a pathspec.",null,null],[3,"ProxyOptions","","Options which can be specified to various fetch operations.",null,null],[3,"Rebase","","Representation of a rebase",null,null],[3,"RebaseOperation","","A rebase operation",null,null],[3,"RebaseOptions","","Rebase options",null,null],[3,"Reference","","A structure to represent a git [reference][1].",null,null],[3,"ReferenceNames","","An iterator over the names of references in a repository.",null,null],[3,"References","","An iterator over the references in a repository.",null,null],[3,"Reflog","","A reference log of a git repository.",null,null],[3,"ReflogEntry","","An entry inside the reflog of a repository",null,null],[3,"ReflogIter","","An iterator over the entries inside of a reflog.",null,null],[3,"Refspec","","A structure to represent a git [refspec][1].",null,null],[3,"FetchOptions","","Options which can be specified to various fetch operations.",null,null],[3,"PushOptions","","Options to control the behavior of a git push.",null,null],[3,"Refspecs","","An iterator over the refspecs that a remote contains.",null,null],[3,"Remote","","A structure representing a [remote][1] of a git repository.",null,null],[3,"RemoteConnection","","Holds callbacks for a connection to a `Remote`.…",null,null],[3,"RemoteHead","","Description of a reference advertised bya remote server,…",null,null],[3,"RemoteCallbacks","","A structure to contain the callbacks which are invoked…",null,null],[3,"Repository","","An owned git repository, representing all state associated…",null,null],[3,"RepositoryInitOptions","","Options which can be used to configure how a repository is…",null,null],[3,"Revspec","","A revspec represents a range of revisions within a…",null,null],[3,"Revwalk","","A revwalk allows traversal of the commit graph defined by…",null,null],[3,"Signature","","A Signature is used to indicate authorship of various…",null,null],[3,"StashApplyOptions","","Stash application options structure",null,null],[3,"StatusEntry","","A structure representing an entry in the `Statuses`…",null,null],[3,"StatusIter","","An iterator over the statuses in a `Statuses` instance.",null,null],[3,"StatusOptions","","Options that can be provided to `repo.statuses()` to…",null,null],[3,"Statuses","","A container for a list of status information about a…",null,null],[3,"Submodule","","A structure to represent a git [submodule][1]",null,null],[3,"SubmoduleUpdateOptions","","Options to update a submodule.",null,null],[3,"Tag","","A structure to represent a git [tag][1]",null,null],[3,"IndexTime","","Time structure used in a git index entry.",null,null],[3,"Time","","Time in a signature",null,null],[3,"Tree","","A structure to represent a git [tree][1]",null,null],[3,"TreeEntry","","A structure representing an entry inside of a tree. An…",null,null],[3,"TreeIter","","An iterator over the entries in a tree.",null,null],[3,"TreeBuilder","","Constructor for in-memory trees",null,null],[3,"Sort","","Orderings that may be specified for Revwalk iteration.",null,null],[3,"CredentialType","","Types of credentials that can be requested by a credential…",null,null],[3,"IndexEntryFlag","","Flags for the `flags` field of an IndexEntry.",null,null],[3,"IndexEntryExtendedFlag","","Flags for the `extended_flags` field of an IndexEntry.",null,null],[3,"IndexAddOption","","Flags for APIs that add files matching pathspec",null,null],[3,"RepositoryOpenFlags","","Flags for `Repository::open_ext`",null,null],[3,"RevparseMode","","Flags for the return value of `Repository::revparse`",null,null],[3,"MergeAnalysis","","The results of `merge_analysis` indicating the merge…",null,null],[3,"MergePreference","","The user's stated preference for merges.",null,null],[3,"Status","","Status flags for a single file",null,null],[3,"RepositoryInitMode","","Mode options for RepositoryInitOptions",null,null],[3,"SubmoduleStatus","","Return codes for submodule status.",null,null],[3,"PathspecFlags","","...",null,null],[3,"CheckoutNotificationType","","Types of notifications emitted from checkouts.",null,null],[3,"DiffStatsFormat","","Formatting options for diff stats",null,null],[3,"StashApplyFlags","","",null,null],[3,"StashFlags","","",null,null],[3,"AttrCheckFlags","","",null,null],[3,"DiffFlags","","",null,null],[4,"ApplyLocation","","Possible application locations for git_apply see…",null,null],[13,"WorkDir","","Apply the patch to the workdir",3,null],[13,"Index","","Apply the patch to the index",3,null],[13,"Both","","Apply the patch to both the working directory and the index",3,null],[4,"DiffBinaryKind","","When producing a binary diff, the binary data returned…",null,null],[13,"None","","There is no binary delta",4,null],[13,"Literal","","The binary data is the literal contents of the file",4,null],[13,"Delta","","The binary data is the delta from one side to the other",4,null],[4,"PackBuilderStage","","Stages that are reported by the `PackBuilder` progress…",null,null],[13,"AddingObjects","","Adding objects to the pack",5,null],[13,"Deltafication","","Deltafication of the pack",5,null],[4,"RebaseOperationType","","A rebase operation",null,null],[13,"Pick","","The given commit is to be cherry-picked. The client should…",6,null],[13,"Reword","","The given commit is to be cherry-picked, but the client…",6,null],[13,"Edit","","The given commit is to be cherry-picked, but the client…",6,null],[13,"Squash","","The given commit is to be squashed into the previous…",6,null],[13,"Fixup","","The given commit is to be squashed into the previous…",6,null],[13,"Exec","","No commit will be cherry-picked. The client should run the…",6,null],[4,"StatusShow","","Enumeration of possible methods of what can be shown…",null,null],[13,"Index","","Only gives status based on HEAD to index comparison, not…",7,null],[13,"Workdir","","Only gives status based on index to working directory…",7,null],[13,"IndexAndWorkdir","","The default, this roughly matches `git status --porcelain`…",7,null],[4,"TreeWalkMode","","A binary indicator of whether a tree walk should be…",null,null],[13,"PreOrder","","Runs the traversal in pre order.",8,null],[13,"PostOrder","","Runs the traversal in post order.",8,null],[4,"TreeWalkResult","","Possible return codes for tree walking callback functions.",null,null],[13,"Ok","","Continue with the traversal as normal.",9,null],[13,"Skip","","Skip the current node (in pre-order mode).",9,null],[13,"Abort","","Completely stop the traversal.",9,null],[4,"ErrorCode","","An enumeration of possible errors that can happen when…",null,null],[13,"GenericError","","Generic error",10,null],[13,"NotFound","","Requested object could not be found",10,null],[13,"Exists","","Object exists preventing operation",10,null],[13,"Ambiguous","","More than one object matches",10,null],[13,"BufSize","","Output buffer too short to hold data",10,null],[13,"User","","User-generated error",10,null],[13,"BareRepo","","Operation not allowed on bare repository",10,null],[13,"UnbornBranch","","HEAD refers to branch with no commits",10,null],[13,"Unmerged","","Merge in progress prevented operation",10,null],[13,"NotFastForward","","Reference was not fast-forwardable",10,null],[13,"InvalidSpec","","Name/ref spec was not in a valid format",10,null],[13,"Conflict","","Checkout conflicts prevented operation",10,null],[13,"Locked","","Lock file prevented operation",10,null],[13,"Modified","","Reference value does not match expected",10,null],[13,"Auth","","Authentication error",10,null],[13,"Certificate","","Server certificate is invalid",10,null],[13,"Applied","","Patch/merge has already been applied",10,null],[13,"Peel","","The requested peel operation is not possible",10,null],[13,"Eof","","Unexpected EOF",10,null],[13,"Invalid","","Invalid operation or input",10,null],[13,"Uncommitted","","Uncommitted changes in index prevented operation",10,null],[13,"Directory","","Operation was not valid for a directory,",10,null],[4,"ErrorClass","","An enumeration of possible categories of things that can…",null,null],[13,"None","","Uncategorized",11,null],[13,"NoMemory","","Out of memory or insufficient allocated space",11,null],[13,"Os","","Syscall or standard system library error",11,null],[13,"Invalid","","Invalid input",11,null],[13,"Reference","","Error resolving or manipulating a reference",11,null],[13,"Zlib","","ZLib failure",11,null],[13,"Repository","","Bad repository state",11,null],[13,"Config","","Bad configuration",11,null],[13,"Regex","","Regex failure",11,null],[13,"Odb","","Bad object",11,null],[13,"Index","","Invalid index data",11,null],[13,"Object","","Error creating or obtaining an object",11,null],[13,"Net","","Network error",11,null],[13,"Tag","","Error manpulating a tag",11,null],[13,"Tree","","Invalid value in tree",11,null],[13,"Indexer","","Hashing or packing error",11,null],[13,"Ssl","","Error from SSL",11,null],[13,"Submodule","","Error involing submodules",11,null],[13,"Thread","","Threading error",11,null],[13,"Stash","","Error manipulating a stash",11,null],[13,"Checkout","","Checkout failure",11,null],[13,"FetchHead","","Invalid FETCH_HEAD",11,null],[13,"Merge","","Merge failure",11,null],[13,"Ssh","","SSH failure",11,null],[13,"Filter","","Error manipulating filters",11,null],[13,"Revert","","Error reverting commit",11,null],[13,"Callback","","Error from a user callback",11,null],[13,"CherryPick","","Error cherry-picking commit",11,null],[13,"Describe","","Can't describe object",11,null],[13,"Rebase","","Error during rebase",11,null],[13,"Filesystem","","Filesystem-related error",11,null],[13,"Patch","","Invalid patch data",11,null],[13,"Worktree","","Error involving worktrees",11,null],[13,"Sha1","","Hash library error or SHA-1 collision",11,null],[13,"Http","","HTTP error",11,null],[4,"RepositoryState","","A listing of the possible states that a repository can be…",null,null],[13,"Clean","","",12,null],[13,"Merge","","",12,null],[13,"Revert","","",12,null],[13,"RevertSequence","","",12,null],[13,"CherryPick","","",12,null],[13,"CherryPickSequence","","",12,null],[13,"Bisect","","",12,null],[13,"Rebase","","",12,null],[13,"RebaseInteractive","","",12,null],[13,"RebaseMerge","","",12,null],[13,"ApplyMailbox","","",12,null],[13,"ApplyMailboxOrRebase","","",12,null],[4,"Direction","","An enumeration of the possible directions for a remote.",null,null],[13,"Fetch","","Data will be fetched (read) from this remote.",13,null],[13,"Push","","Data will be pushed (written) to this remote.",13,null],[4,"ResetType","","An enumeration of the operations that can be performed for…",null,null],[13,"Soft","","Move the head to the given commit.",14,null],[13,"Mixed","","Soft plus reset the index to the commit.",14,null],[13,"Hard","","Mixed plus changes in the working tree are discarded.",14,null],[4,"ObjectType","","An enumeration all possible kinds objects may have.",null,null],[13,"Any","","Any kind of git object",15,null],[13,"Commit","","An object which corresponds to a git commit",15,null],[13,"Tree","","An object which corresponds to a git tree",15,null],[13,"Blob","","An object which corresponds to a git blob",15,null],[13,"Tag","","An object which corresponds to a git tag",15,null],[4,"ReferenceType","","An enumeration of all possile kinds of references.",null,null],[13,"Direct","","A reference which points at an object id.",16,null],[13,"Symbolic","","A reference which points at another reference.",16,null],[4,"BranchType","","An enumeration for the possible types of branches",null,null],[13,"Local","","A local branch not on a remote.",17,null],[13,"Remote","","A branch for a remote.",17,null],[4,"ConfigLevel","","An enumeration of the possible priority levels of a config…",null,null],[13,"ProgramData","","System-wide on Windows, for compatibility with portable git",18,null],[13,"System","","System-wide configuration file, e.g. /etc/gitconfig",18,null],[13,"XDG","","XDG-compatible configuration file, e.g. ~/.config/git/config",18,null],[13,"Global","","User-specific configuration, e.g. ~/.gitconfig",18,null],[13,"Local","","Repository specific config, e.g. $PWD/.git/config",18,null],[13,"App","","Application specific configuration file",18,null],[13,"Highest","","Highest level available",18,null],[4,"FileFavor","","Merge file favor options for `MergeOptions` instruct the…",null,null],[13,"Normal","","When a region of a file is changed in both branches, a…",19,null],[13,"Ours","","When a region of a file is changed in both branches, the…",19,null],[13,"Theirs","","When a region of a file is changed in both branches, the…",19,null],[13,"Union","","When a region of a file is changed in both branches, the…",19,null],[4,"Delta","","What type of change is described by a `DiffDelta`?",null,null],[13,"Unmodified","","No changes",20,null],[13,"Added","","Entry does not exist in old version",20,null],[13,"Deleted","","Entry does not exist in new version",20,null],[13,"Modified","","Entry content changed between old and new",20,null],[13,"Renamed","","Entry was renamed between old and new",20,null],[13,"Copied","","Entry was copied from another old entry",20,null],[13,"Ignored","","Entry is ignored item in workdir",20,null],[13,"Untracked","","Entry is untracked item in workdir",20,null],[13,"Typechange","","Type of entry changed between old and new",20,null],[13,"Unreadable","","Entry is unreadable",20,null],[13,"Conflicted","","Entry in the index is conflicted",20,null],[4,"FileMode","","Valid modes for index and tree entries.",null,null],[13,"Unreadable","","Unreadable",21,null],[13,"Tree","","Tree",21,null],[13,"Blob","","Blob",21,null],[13,"BlobExecutable","","Blob executable",21,null],[13,"Link","","Link",21,null],[13,"Commit","","Commit",21,null],[4,"SubmoduleIgnore","","Submodule ignore values",null,null],[13,"Unspecified","","Use the submodule's configuration",22,null],[13,"None","","Any change or untracked file is considered dirty",22,null],[13,"Untracked","","Only dirty if tracked files have changed",22,null],[13,"Dirty","","Only dirty if HEAD has moved",22,null],[13,"All","","Never dirty",22,null],[4,"DiffFormat","","Possible output formats for diff data",null,null],[13,"Patch","","full git diff",23,null],[13,"PatchHeader","","just the headers of the patch",23,null],[13,"Raw","","like git diff --raw",23,null],[13,"NameOnly","","like git diff --name-only",23,null],[13,"NameStatus","","like git diff --name-status",23,null],[13,"PatchId","","git diff as used by git patch-id",23,null],[4,"AutotagOption","","Automatic tag following options.",null,null],[13,"Unspecified","","Use the setting from the remote's configuration",24,null],[13,"Auto","","Ask the server for tags pointing to objects we're already…",24,null],[13,"None","","Don't ask for any tags beyond the refspecs",24,null],[13,"All","","Ask for all the tags",24,null],[4,"FetchPrune","","Configuration for how pruning is done on a fetch",null,null],[13,"Unspecified","","Use the setting from the configuration",25,null],[13,"On","","Force pruning on",25,null],[13,"Off","","Force pruning off",25,null],[4,"StashApplyProgress","","",null,null],[13,"None","","None",26,null],[13,"LoadingStash","","Loading the stashed data from the object database",26,null],[13,"AnalyzeIndex","","The stored index is being analyzed",26,null],[13,"AnalyzeModified","","The modified files are being analyzed",26,null],[13,"AnalyzeUntracked","","The untracked and ignored files are being analyzed",26,null],[13,"CheckoutUntracked","","The untracked files are being written to disk",26,null],[13,"CheckoutModified","","The modified files are being written to disk",26,null],[13,"Done","","The stash was applied successfully",26,null],[5,"message_prettify","","Clean up a message, removing extraneous whitespace, and…",null,[[["u8"],["option",["u8"]],["intocstring"]],[["error"],["result",["string","error"]],["string"]]]],[0,"build","","Builder-pattern objects for configuration various git…",null,null],[3,"RepoBuilder","git2::build","A builder struct which is used to build configuration for…",null,null],[3,"CheckoutBuilder","","A builder struct for configuring checkouts of a repository.",null,null],[4,"CloneLocal","","Options that can be passed to `RepoBuilder::clone_local`.",null,null],[13,"Auto","","Auto-detect (default)",27,null],[13,"Local","","Bypass the git-aware transport even for `file://` urls.",27,null],[13,"None","","Never bypass the git-aware transport",27,null],[13,"NoLinks","","Bypass the git-aware transport, but don't try to use…",27,null],[6,"RemoteCreate","","Type of callback passed to `RepoBuilder::remote_create`.",null,null],[6,"Progress","","Checkout progress notification callback.",null,null],[6,"Notify","","Checkout notifications callback.",null,null],[11,"new","","Creates a new repository builder with all of the default…",28,[[],["repobuilder"]]],[11,"bare","","Indicate whether the repository will be cloned as a bare…",28,[[["self"],["bool"]],["repobuilder"]]],[11,"branch","","Specify the name of the branch to check out after the clone.",28,[[["str"],["self"]],["repobuilder"]]],[11,"clone_local","","Configures options for bypassing the git-aware transport…",28,[[["self"],["clonelocal"]],["repobuilder"]]],[11,"with_checkout","","Configure the checkout which will be performed by…",28,[[["checkoutbuilder"],["self"]],["repobuilder"]]],[11,"fetch_options","","Options which control the fetch, including callbacks.",28,[[["fetchoptions"],["self"]],["repobuilder"]]],[11,"remote_create","","Configures a callback used to create the git remote, prior…",28,[[["self"],["f"]],["repobuilder"]]],[11,"clone","","Clone a remote repository.",28,[[["str"],["self"],["path"]],[["error"],["result",["repository","error"]],["repository"]]]],[11,"new","","Creates a new builder for checkouts with all of its…",29,[[],["checkoutbuilder"]]],[11,"dry_run","","Indicate that this checkout should perform a dry run by…",29,[[["self"]],["checkoutbuilder"]]],[11,"force","","Take any action necessary to get the working directory to…",29,[[["self"]],["checkoutbuilder"]]],[11,"safe","","Indicate that the checkout should be performed safely,…",29,[[["self"]],["checkoutbuilder"]]],[11,"recreate_missing","","In safe mode, create files that don't exist.",29,[[["self"],["bool"]],["checkoutbuilder"]]],[11,"allow_conflicts","","In safe mode, apply safe file updates even when there are…",29,[[["self"],["bool"]],["checkoutbuilder"]]],[11,"remove_untracked","","Remove untracked files from the working dir.",29,[[["self"],["bool"]],["checkoutbuilder"]]],[11,"remove_ignored","","Remove ignored files from the working dir.",29,[[["self"],["bool"]],["checkoutbuilder"]]],[11,"update_only","","Only update the contents of files that already exist.",29,[[["self"],["bool"]],["checkoutbuilder"]]],[11,"update_index","","Prevents checkout from writing the updated files'…",29,[[["self"],["bool"]],["checkoutbuilder"]]],[11,"refresh","","Indicate whether the index and git attributes should be…",29,[[["self"],["bool"]],["checkoutbuilder"]]],[11,"skip_unmerged","","Skip files with unmerged index entries.",29,[[["self"],["bool"]],["checkoutbuilder"]]],[11,"use_ours","","Indicate whether the checkout should proceed on conflicts…",29,[[["self"],["bool"]],["checkoutbuilder"]]],[11,"use_theirs","","Indicate whether the checkout should proceed on conflicts…",29,[[["self"],["bool"]],["checkoutbuilder"]]],[11,"overwrite_ignored","","Indicate whether ignored files should be overwritten…",29,[[["self"],["bool"]],["checkoutbuilder"]]],[11,"conflict_style_merge","","Indicate whether a normal merge file should be written for…",29,[[["self"],["bool"]],["checkoutbuilder"]]],[11,"notify_on","","Specify for which notification types to invoke the…",29,[[["checkoutnotificationtype"],["self"]],["checkoutbuilder"]]],[11,"conflict_style_diff3","","Indicates whether to include common ancestor data in diff3…",29,[[["self"],["bool"]],["checkoutbuilder"]]],[11,"disable_filters","","Indicate whether to apply filters like CRLF conversion.",29,[[["self"],["bool"]],["checkoutbuilder"]]],[11,"dir_perm","","Set the mode with which new directories are created.",29,[[["self"],["i32"]],["checkoutbuilder"]]],[11,"file_perm","","Set the mode with which new files are created.",29,[[["self"],["i32"]],["checkoutbuilder"]]],[11,"path","","Add a path to be checked out.",29,[[["self"],["intocstring"]],["checkoutbuilder"]]],[11,"target_dir","","Set the directory to check out to",29,[[["self"],["path"]],["checkoutbuilder"]]],[11,"ancestor_label","","The name of the common ancestor side of conflicts",29,[[["str"],["self"]],["checkoutbuilder"]]],[11,"our_label","","The name of the common our side of conflicts",29,[[["str"],["self"]],["checkoutbuilder"]]],[11,"their_label","","The name of the common their side of conflicts",29,[[["str"],["self"]],["checkoutbuilder"]]],[11,"progress","","Set a callback to receive notifications of checkout…",29,[[["self"],["f"]],["checkoutbuilder"]]],[11,"notify","","Set a callback to receive checkout notifications.",29,[[["self"],["f"]],["checkoutbuilder"]]],[11,"configure","","Configure a raw checkout options based on this…",29,[[["self"],["git_checkout_options"]]]],[0,"cert","git2","Certificate types which are passed to `CertificateCheck`…",null,null],[3,"Cert","git2::cert","A certificate for a remote connection, viewable as one of…",null,null],[3,"CertHostkey","","Hostkey information taken from libssh2",null,null],[3,"CertX509","","X.509 certificate information",null,null],[11,"as_hostkey","","Attempt to view this certificate as an SSH hostkey.",30,[[["self"]],[["certhostkey"],["option",["certhostkey"]]]]],[11,"as_x509","","Attempt to view this certificate as an X.509 certificate.",30,[[["self"]],[["certx509"],["option",["certx509"]]]]],[11,"hash_md5","","Returns the md5 hash of the hostkey, if available.",31,[[["self"]],["option"]]],[11,"hash_sha1","","Returns the SHA-1 hash of the hostkey, if available.",31,[[["self"]],["option"]]],[11,"hash_sha256","","Returns the SHA-256 hash of the hostkey, if available.",31,[[["self"]],["option"]]],[11,"data","","Return the X.509 certificate data as a byte slice",32,[[["self"]]]],[0,"oid_array","git2","Bindings to libgit2's raw `git_oidarray` type",null,null],[3,"OidArray","git2::oid_array","An oid array structure used by libgit2",null,null],[0,"string_array","git2","Bindings to libgit2's raw `git_strarray` type",null,null],[3,"StringArray","git2::string_array","A string array structure used by libgit2",null,null],[3,"Iter","","A forward iterator over the strings of an array, casted to…",null,null],[3,"IterBytes","","A forward iterator over the strings of an array, casted to…",null,null],[11,"get","","Returns None if the i'th string is not utf8 or if i is out…",33,[[["self"],["usize"]],[["str"],["option",["str"]]]]],[11,"get_bytes","","Returns None if `i` is out of bounds.",33,[[["self"],["usize"]],["option"]]],[11,"iter","","Returns an iterator over the strings contained within this…",33,[[["self"]],["iter"]]],[11,"iter_bytes","","Returns an iterator over the strings contained within this…",33,[[["self"]],["iterbytes"]]],[11,"len","","Returns the number of strings in this array.",33,[[["self"]],["usize"]]],[11,"is_empty","","Return `true` if this array is empty.",33,[[["self"]],["bool"]]],[0,"transport","git2","Interfaces for adding custom transports to libgit2",null,null],[3,"Transport","git2::transport","A transport is a structure which knows how to transfer…",null,null],[4,"Service","","Actions that a smart transport can ask a subtransport to…",null,null],[13,"UploadPackLs","","",34,null],[13,"UploadPack","","",34,null],[13,"ReceivePackLs","","",34,null],[13,"ReceivePack","","",34,null],[5,"register","","Add a custom transport definition, to be used in addition…",null,[[["str"],["f"]],[["result",["error"]],["error"]]]],[8,"SmartSubtransport","","Interface used by smart transports.",null,null],[10,"action","","Indicates that this subtransport will be performing the…",35,[[["str"],["service"],["self"]],[["box",["smartsubtransportstream"]],["result",["box","error"]],["error"]]]],[10,"close","","Terminates a connection with the remote.",35,[[["self"]],[["result",["error"]],["error"]]]],[8,"SmartSubtransportStream","","An instance of a stream over which a smart transport will…",null,null],[11,"smart","","Creates a new transport which will use the \"smart\"…",36,[[["bool"],["s"],["remote"]],[["result",["transport","error"]],["transport"],["error"]]]],[11,"new","git2","Creates a new set of empty options (zeroed).",37,[[],["self"]]],[11,"check","","Don't actually make changes, just test that the patch…",37,[[["self"],["bool"]],["self"]]],[11,"hunk_callback","","When applying a patch, callback that will be made per hunk.",37,[[["self"],["f"]],["self"]]],[11,"delta_callback","","When applying a patch, callback that will be made per…",37,[[["self"],["f"]],["self"]]],[11,"raw","","Pointer to a raw git_stash_apply_options",37,[[["self"]]]],[11,"len","","Gets the number of hunks that exist in the blame structure.",38,[[["self"]],["usize"]]],[11,"is_empty","","Return `true` is there is no hunk in the blame structure.",38,[[["self"]],["bool"]]],[11,"get_index","","Gets the blame hunk at the given index.",38,[[["self"],["usize"]],[["blamehunk"],["option",["blamehunk"]]]]],[11,"get_line","","Gets the hunk that relates to the given line number in the…",38,[[["self"],["usize"]],[["blamehunk"],["option",["blamehunk"]]]]],[11,"iter","","Returns an iterator over the hunks in this blame.",38,[[["self"]],["blameiter"]]],[11,"final_commit_id","","Returns OID of the commit where this line was last changed",39,[[["self"]],["oid"]]],[11,"final_signature","","Returns signature of the commit.",39,[[["self"]],["signature"]]],[11,"final_start_line","","Returns line number where this hunk begins.",39,[[["self"]],["usize"]]],[11,"orig_commit_id","","Returns the OID of the commit where this hunk was found.",39,[[["self"]],["oid"]]],[11,"orig_signature","","Returns signature of the commit.",39,[[["self"]],["signature"]]],[11,"orig_start_line","","Returns line number where this hunk begins.",39,[[["self"]],["usize"]]],[11,"path","","Returns path to the file where this hunk originated.",39,[[["self"]],[["option",["path"]],["path"]]]],[11,"is_boundary","","Tests whether this hunk has been tracked to a boundary…",39,[[["self"]],["bool"]]],[11,"lines_in_hunk","","Returns number of lines in this hunk.",39,[[["self"]],["usize"]]],[11,"new","","Initialize options",40,[[],["blameoptions"]]],[11,"track_copies_same_file","","Track lines that have moved within a file.",40,[[["self"],["bool"]],["blameoptions"]]],[11,"track_copies_same_commit_moves","","Track lines that have moved across files in the same commit.",40,[[["self"],["bool"]],["blameoptions"]]],[11,"track_copies_same_commit_copies","","Track lines that have been copied from another file that…",40,[[["self"],["bool"]],["blameoptions"]]],[11,"track_copies_any_commit_copies","","Track lines that have been copied from another file that…",40,[[["self"],["bool"]],["blameoptions"]]],[11,"first_parent","","Restrict the search of commits to those reachable…",40,[[["self"],["bool"]],["blameoptions"]]],[11,"newest_commit","","Setter for the id of the newest commit to consider.",40,[[["self"],["oid"]],["blameoptions"]]],[11,"oldest_commit","","Setter for the id of the oldest commit to consider.",40,[[["self"],["oid"]],["blameoptions"]]],[11,"id","","Get the id (SHA1) of a repository blob",41,[[["self"]],["oid"]]],[11,"is_binary","","Determine if the blob content is most certainly binary or…",41,[[["self"]],["bool"]]],[11,"content","","Get the content of this blob.",41,[[["self"]]]],[11,"size","","Get the size in bytes of the contents of this blob.",41,[[["self"]],["usize"]]],[11,"as_object","","Casts this Blob to be usable as an `Object`",41,[[["self"]],["object"]]],[11,"into_object","","Consumes Blob to be returned as an `Object`",41,[[],["object"]]],[11,"commit","","Finalize blob writing stream and write the blob to the…",42,[[],[["result",["oid","error"]],["oid"],["error"]]]],[11,"wrap","","Creates Branch type from a Reference",43,[[["reference"]],["branch"]]],[11,"get","","Gain access to the reference that is this branch",43,[[["self"]],["reference"]]],[11,"get_mut","","Gain mutable access to the reference that is this branch",43,[[["self"]],["reference"]]],[11,"into_reference","","Take ownership of the underlying reference.",43,[[],["reference"]]],[11,"delete","","Delete an existing branch reference.",43,[[["self"]],[["result",["error"]],["error"]]]],[11,"is_head","","Determine if the current local branch is pointed at by HEAD.",43,[[["self"]],["bool"]]],[11,"rename","","Move/rename an existing local branch reference.",43,[[["str"],["self"],["bool"]],[["result",["branch","error"]],["branch"],["error"]]]],[11,"name","","Return the name of the given local or remote branch.",43,[[["self"]],[["error"],["result",["option","error"]],["option",["str"]]]]],[11,"name_bytes","","Return the name of the given local or remote branch.",43,[[["self"]],[["result",["error"]],["error"]]]],[11,"upstream","","Return the reference supporting the remote tracking…",43,[[["self"]],[["result",["branch","error"]],["branch"],["error"]]]],[11,"set_upstream","","Set the upstream configuration for a given local branch.",43,[[["str"],["self"],["option",["str"]]],[["result",["error"]],["error"]]]],[11,"from_raw","","Creates a new iterator from the raw pointer given.",44,[[],["branches"]]],[11,"new","","Creates a new empty buffer.",45,[[],["buf"]]],[11,"as_str","","Attempt to view this buffer as a string slice.",45,[[["self"]],[["str"],["option",["str"]]]]],[11,"new","","Creates a default set of cherrypick options",46,[[],["cherrypickoptions"]]],[11,"mainline","","Set the mainline value",46,[[["self"],["u32"]],["self"]]],[11,"checkout_builder","","Set the checkout builder",46,[[["checkoutbuilder"],["self"]],["self"]]],[11,"merge_opts","","Set the merge options",46,[[["self"],["mergeoptions"]],["self"]]],[11,"raw","","Obtain the raw struct",46,[[["self"]],["git_cherrypick_options"]]],[11,"id","","Get the id (SHA1) of a repository commit",47,[[["self"]],["oid"]]],[11,"tree_id","","Get the id of the tree pointed to by this commit.",47,[[["self"]],["oid"]]],[11,"tree","","Get the tree pointed to by a commit.",47,[[["self"]],[["tree"],["result",["tree","error"]],["error"]]]],[11,"raw","","Get access to the underlying raw pointer.",47,[[["self"]]]],[11,"message","","Get the full message of a commit.",47,[[["self"]],[["str"],["option",["str"]]]]],[11,"message_bytes","","Get the full message of a commit as a byte slice.",47,[[["self"]]]],[11,"message_encoding","","Get the encoding for the message of a commit, as a string…",47,[[["self"]],[["str"],["option",["str"]]]]],[11,"message_raw","","Get the full raw message of a commit.",47,[[["self"]],[["str"],["option",["str"]]]]],[11,"message_raw_bytes","","Get the full raw message of a commit.",47,[[["self"]]]],[11,"raw_header","","Get the full raw text of the commit header.",47,[[["self"]],[["str"],["option",["str"]]]]],[11,"raw_header_bytes","","Get the full raw text of the commit header.",47,[[["self"]]]],[11,"summary","","Get the short \"summary\" of the git commit message.",47,[[["self"]],[["str"],["option",["str"]]]]],[11,"summary_bytes","","Get the short \"summary\" of the git commit message.",47,[[["self"]],["option"]]],[11,"time","","Get the commit time (i.e. committer time) of a commit.",47,[[["self"]],["time"]]],[11,"parents","","Creates a new iterator over the parents of this commit.",47,[[["self"]],["parents"]]],[11,"parent_ids","","Creates a new iterator over the parents of this commit.",47,[[["self"]],["parentids"]]],[11,"author","","Get the author of this commit.",47,[[["self"]],["signature"]]],[11,"committer","","Get the committer of this commit.",47,[[["self"]],["signature"]]],[11,"amend","","Amend this existing commit with all non-`None` values",47,[[["str"],["signature"],["tree"],["option",["str"]],["option",["tree"]],["self"],["option",["signature"]]],[["result",["oid","error"]],["oid"],["error"]]]],[11,"parent_count","","Get the number of parents of this commit.",47,[[["self"]],["usize"]]],[11,"parent","","Get the specified parent of the commit.",47,[[["self"],["usize"]],[["result",["commit","error"]],["commit"],["error"]]]],[11,"parent_id","","Get the specified parent id of the commit.",47,[[["self"],["usize"]],[["result",["oid","error"]],["oid"],["error"]]]],[11,"as_object","","Casts this Commit to be usable as an `Object`",47,[[["self"]],["object"]]],[11,"into_object","","Consumes Commit to be returned as an `Object`",47,[[],["object"]]],[11,"new","","Allocate a new configuration object",48,[[],[["error"],["config"],["result",["config","error"]]]]],[11,"open","","Create a new config instance containing a single on-disk…",48,[[["path"]],[["error"],["config"],["result",["config","error"]]]]],[11,"open_default","","Open the global, XDG and system configuration files",48,[[],[["error"],["config"],["result",["config","error"]]]]],[11,"find_global","","Locate the path to the global configuration file",48,[[],[["result",["pathbuf","error"]],["pathbuf"],["error"]]]],[11,"find_system","","Locate the path to the system configuration file",48,[[],[["result",["pathbuf","error"]],["pathbuf"],["error"]]]],[11,"find_xdg","","Locate the path to the global xdg compatible configuration…",48,[[],[["result",["pathbuf","error"]],["pathbuf"],["error"]]]],[11,"add_file","","Add an on-disk config file instance to an existing config",48,[[["path"],["configlevel"],["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"remove","","Delete a config variable from the config file with the…",48,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"remove_multivar","","Remove multivar config variables in the config file with…",48,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"get_bool","","Get the value of a boolean config variable.",48,[[["str"],["self"]],[["error"],["result",["bool","error"]],["bool"]]]],[11,"get_i32","","Get the value of an integer config variable.",48,[[["str"],["self"]],[["error"],["result",["i32","error"]],["i32"]]]],[11,"get_i64","","Get the value of an integer config variable.",48,[[["str"],["self"]],[["i64"],["error"],["result",["i64","error"]]]]],[11,"get_str","","Get the value of a string config variable.",48,[[["str"],["self"]],[["str"],["error"],["result",["str","error"]]]]],[11,"get_bytes","","Get the value of a string config variable as a byte slice.",48,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"get_string","","Get the value of a string config variable as an owned…",48,[[["str"],["self"]],[["error"],["result",["string","error"]],["string"]]]],[11,"get_path","","Get the value of a path config variable as an owned .",48,[[["str"],["self"]],[["result",["pathbuf","error"]],["pathbuf"],["error"]]]],[11,"get_entry","","Get the ConfigEntry for a config variable.",48,[[["str"],["self"]],[["configentry"],["result",["configentry","error"]],["error"]]]],[11,"entries","","Iterate over all the config variables",48,[[["str"],["self"],["option",["str"]]],[["result",["configentries","error"]],["configentries"],["error"]]]],[11,"open_global","","Open the global/XDG configuration file according to git's…",48,[[["self"]],[["error"],["config"],["result",["config","error"]]]]],[11,"open_level","","Build a single-level focused config object from a…",48,[[["self"],["configlevel"]],[["error"],["config"],["result",["config","error"]]]]],[11,"set_bool","","Set the value of a boolean config variable in the config…",48,[[["str"],["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"set_i32","","Set the value of an integer config variable in the config…",48,[[["str"],["self"],["i32"]],[["result",["error"]],["error"]]]],[11,"set_i64","","Set the value of an integer config variable in the config…",48,[[["str"],["self"],["i64"]],[["result",["error"]],["error"]]]],[11,"set_multivar","","Set the value of an multivar config variable in the config…",48,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"set_str","","Set the value of a string config variable in the config…",48,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"snapshot","","Create a snapshot of the configuration",48,[[["self"]],[["error"],["config"],["result",["config","error"]]]]],[11,"parse_bool","","Parse a string as a bool. Interprets \"true\", \"yes\", \"on\",…",48,[[["intocstring"]],[["error"],["result",["bool","error"]],["bool"]]]],[11,"parse_i32","","Parse a string as an i32; handles suffixes like k, M, or…",48,[[["intocstring"]],[["error"],["result",["i32","error"]],["i32"]]]],[11,"parse_i64","","Parse a string as an i64; handles suffixes like k, M, or…",48,[[["intocstring"]],[["i64"],["error"],["result",["i64","error"]]]]],[11,"name","","Gets the name of this entry.",49,[[["self"]],[["str"],["option",["str"]]]]],[11,"name_bytes","","Gets the name of this entry as a byte slice.",49,[[["self"]]]],[11,"value","","Gets the value of this entry.",49,[[["self"]],[["str"],["option",["str"]]]]],[11,"value_bytes","","Gets the value of this entry as a byte slice.",49,[[["self"]]]],[11,"has_value","","Returns `true` when a value is defined otherwise `false`.",49,[[["self"]],["bool"]]],[11,"level","","Gets the configuration level of this entry.",49,[[["self"]],["configlevel"]]],[11,"include_depth","","Depth of includes where this variable was found",49,[[["self"]],["u32"]]],[11,"default","","Create a \"default\" credential usable for Negotiate…",50,[[],[["result",["cred","error"]],["cred"],["error"]]]],[11,"ssh_key_from_agent","","Create a new ssh key credential object used for querying…",50,[[["str"]],[["result",["cred","error"]],["cred"],["error"]]]],[11,"ssh_key","","Create a new passphrase-protected ssh key credential object.",50,[[["str"],["option",["path"]],["path"],["option",["str"]]],[["result",["cred","error"]],["cred"],["error"]]]],[11,"ssh_key_from_memory","","Create a new ssh key credential object reading the keys…",50,[[["str"],["option",["str"]]],[["result",["cred","error"]],["cred"],["error"]]]],[11,"userpass_plaintext","","Create a new plain-text username and password credential…",50,[[["str"]],[["result",["cred","error"]],["cred"],["error"]]]],[11,"credential_helper","","Attempt to read `credential.helper` according to…",50,[[["str"],["config"],["option",["str"]]],[["result",["cred","error"]],["cred"],["error"]]]],[11,"username","","Create a credential to specify a username.",50,[[["str"]],[["result",["cred","error"]],["cred"],["error"]]]],[11,"has_username","","Check whether a credential object contains username…",50,[[["self"]],["bool"]]],[11,"credtype","","Return the type of credentials that this object represents.",50,[[["self"]],["git_credtype_t"]]],[11,"unwrap","","Unwrap access to the underlying raw pointer, canceling the…",50,[[]]],[11,"new","","Create a new credential helper object which will be used…",0,[[["str"]],["credentialhelper"]]],[11,"username","","Set the username that this credential helper will query…",0,[[["str"],["self"],["option",["str"]]],["credentialhelper"]]],[11,"config","","Query the specified configuration object to discover…",0,[[["self"],["config"]],["credentialhelper"]]],[11,"execute","","Execute this helper, attempting to discover a…",0,[[["self"]],["option"]]],[11,"format","","Prints this describe result, returning the result as a…",51,[[["option",["describeformatoptions"]],["self"],["describeformatoptions"]],[["error"],["result",["string","error"]],["string"]]]],[11,"new","","Creates a new blank set of formatting options for a…",52,[[],["describeformatoptions"]]],[11,"abbreviated_size","","Sets the size of the abbreviated commit id to use.",52,[[["self"],["u32"]],["self"]]],[11,"always_use_long_format","","Sets whether or not the long format is used even when a…",52,[[["self"],["bool"]],["self"]]],[11,"dirty_suffix","","If the workdir is dirty and this is set, this string will…",52,[[["str"],["self"]],["self"]]],[11,"new","","Creates a new blank set of formatting options for a…",53,[[],["describeoptions"]]],[11,"max_candidates_tags","","",53,[[["self"],["u32"]],["self"]]],[11,"describe_tags","","Sets the reference lookup strategy",53,[[["self"]],["self"]]],[11,"describe_all","","Sets the reference lookup strategy",53,[[["self"]],["self"]]],[11,"only_follow_first_parent","","Indicates when calculating the distance from the matching…",53,[[["self"],["bool"]],["self"]]],[11,"show_commit_oid_as_fallback","","If no matching tag or reference is found whether a…",53,[[["self"],["bool"]],["self"]]],[11,"pattern","","",53,[[["str"],["self"]],["self"]]],[11,"merge","","Merge one diff into another.",54,[[["self"],["diff"]],[["result",["error"]],["error"]]]],[11,"deltas","","Returns an iterator over the deltas in this diff.",54,[[["self"]],["deltas"]]],[11,"get_delta","","Return the diff delta for an entry in the diff list.",54,[[["self"],["usize"]],[["diffdelta"],["option",["diffdelta"]]]]],[11,"is_sorted_icase","","Check if deltas are sorted case sensitively or…",54,[[["self"]],["bool"]]],[11,"print","","Iterate over a diff generating formatted text output.",54,[[["diffformat"],["self"],["f"]],[["result",["error"]],["error"]]]],[11,"foreach","","Loop over all deltas in a diff issuing callbacks.",54,[[["option",["fnmut"]],["fnmut"],["fnmut"],["fnmut"],["option",["fnmut"]],["fnmut"],["self"],["option",["fnmut"]]],[["result",["error"]],["error"]]]],[11,"stats","","Accumulate diff statistics for all patches.",54,[[["self"]],[["result",["diffstats","error"]],["error"],["diffstats"]]]],[11,"find_similar","","Transform a diff marking file renames, copies, etc.",54,[[["option",["difffindoptions"]],["self"],["difffindoptions"]],[["result",["error"]],["error"]]]],[11,"format_email","","Create an e-mail ready patch from a diff.",54,[[["commit"],["option",["diffformatemailoptions"]],["usize"],["self"],["diffformatemailoptions"]],[["buf"],["result",["buf","error"]],["error"]]]],[11,"from_buffer","","Read the contents of a git patch file into a `git_diff`…",54,[[],[["error"],["diff"],["result",["diff","error"]]]]],[11,"flags","","Returns the flags on the delta.",55,[[["self"]],["diffflags"]]],[11,"nfiles","","Returns the number of files in this delta.",55,[[["self"]],["u16"]]],[11,"status","","Returns the status of this entry",55,[[["self"]],["delta"]]],[11,"old_file","","Return the file which represents the \"from\" side of the…",55,[[["self"]],["difffile"]]],[11,"new_file","","Return the file which represents the \"to\" side of the diff.",55,[[["self"]],["difffile"]]],[11,"id","","Returns the Oid of this item.",56,[[["self"]],["oid"]]],[11,"path_bytes","","Returns the path, in bytes, of the entry relative to the…",56,[[["self"]],["option"]]],[11,"path","","Returns the path of the entry relative to the working…",56,[[["self"]],[["option",["path"]],["path"]]]],[11,"size","","Returns the size of this entry, in bytes",56,[[["self"]],["u64"]]],[11,"is_binary","","Returns `true` if file(s) are treated as binary data.",56,[[["self"]],["bool"]]],[11,"is_not_binary","","Returns `true` if file(s) are treated as text data.",56,[[["self"]],["bool"]]],[11,"is_valid_id","","Returns `true` if `id` value is known correct.",56,[[["self"]],["bool"]]],[11,"exists","","Returns `true` if file exists at this side of the delta.",56,[[["self"]],["bool"]]],[11,"mode","","Returns file mode.",56,[[["self"]],["filemode"]]],[11,"new","","Creates a new set of empty diff options.",57,[[],["diffoptions"]]],[11,"reverse","","Flag indicating whether the sides of the diff will be…",57,[[["self"],["bool"]],["diffoptions"]]],[11,"include_ignored","","Flag indicating whether ignored files are included.",57,[[["self"],["bool"]],["diffoptions"]]],[11,"recurse_ignored_dirs","","Flag indicating whether ignored directories are traversed…",57,[[["self"],["bool"]],["diffoptions"]]],[11,"include_untracked","","Flag indicating whether untracked files are in the diff",57,[[["self"],["bool"]],["diffoptions"]]],[11,"recurse_untracked_dirs","","Flag indicating whether untracked directories are deeply…",57,[[["self"],["bool"]],["diffoptions"]]],[11,"include_unmodified","","Flag indicating whether unmodified files are in the diff.",57,[[["self"],["bool"]],["diffoptions"]]],[11,"include_typechange","","If entrabled, then Typechange delta records are generated.",57,[[["self"],["bool"]],["diffoptions"]]],[11,"include_typechange_trees","","Event with `include_typechange`, the tree treturned…",57,[[["self"],["bool"]],["diffoptions"]]],[11,"ignore_filemode","","Flag indicating whether file mode changes are ignored.",57,[[["self"],["bool"]],["diffoptions"]]],[11,"ignore_submodules","","Flag indicating whether all submodules should be treated…",57,[[["self"],["bool"]],["diffoptions"]]],[11,"ignore_case","","Flag indicating whether case insensitive filenames should…",57,[[["self"],["bool"]],["diffoptions"]]],[11,"disable_pathspec_match","","If pathspecs are specified, this flag means that they…",57,[[["self"],["bool"]],["diffoptions"]]],[11,"skip_binary_check","","Disable updating the `binary` flag in delta records. This…",57,[[["self"],["bool"]],["diffoptions"]]],[11,"enable_fast_untracked_dirs","","When diff finds an untracked directory, to match the…",57,[[["self"],["bool"]],["diffoptions"]]],[11,"update_index","","When diff finds a file in the working directory with stat…",57,[[["self"],["bool"]],["diffoptions"]]],[11,"include_unreadable","","Include unreadable files in the diff",57,[[["self"],["bool"]],["diffoptions"]]],[11,"include_unreadable_as_untracked","","Include unreadable files in the diff",57,[[["self"],["bool"]],["diffoptions"]]],[11,"force_text","","Treat all files as text, disabling binary attributes and…",57,[[["self"],["bool"]],["diffoptions"]]],[11,"force_binary","","Treat all files as binary, disabling text diffs",57,[[["self"],["bool"]],["diffoptions"]]],[11,"ignore_whitespace","","Ignore all whitespace",57,[[["self"],["bool"]],["diffoptions"]]],[11,"ignore_whitespace_change","","Ignore changes in the amount of whitespace",57,[[["self"],["bool"]],["diffoptions"]]],[11,"ignore_whitespace_eol","","Ignore whitespace at the end of line",57,[[["self"],["bool"]],["diffoptions"]]],[11,"show_untracked_content","","When generating patch text, include the content of…",57,[[["self"],["bool"]],["diffoptions"]]],[11,"show_unmodified","","When generating output, include the names of unmodified…",57,[[["self"],["bool"]],["diffoptions"]]],[11,"patience","","Use the \"patience diff\" algorithm",57,[[["self"],["bool"]],["diffoptions"]]],[11,"minimal","","Take extra time to find the minimal diff",57,[[["self"],["bool"]],["diffoptions"]]],[11,"show_binary","","Include the necessary deflate/delta information so that…",57,[[["self"],["bool"]],["diffoptions"]]],[11,"indent_heuristic","","Use a heuristic that takes indentation and whitespace into…",57,[[["self"],["bool"]],["diffoptions"]]],[11,"context_lines","","Set the number of unchanged lines that define the boundary…",57,[[["self"],["u32"]],["diffoptions"]]],[11,"interhunk_lines","","Set the maximum number of unchanged lines between hunk…",57,[[["self"],["u32"]],["diffoptions"]]],[11,"id_abbrev","","The default value for this is `core.abbrev` or 7 if unset.",57,[[["u16"],["self"]],["diffoptions"]]],[11,"max_size","","Maximum size (in bytes) above which a blob will be marked…",57,[[["i64"],["self"]],["diffoptions"]]],[11,"old_prefix","","The virtual \"directory\" to prefix old file names with in…",57,[[["self"],["intocstring"]],["diffoptions"]]],[11,"new_prefix","","The virtual \"directory\" to prefix new file names with in…",57,[[["self"],["intocstring"]],["diffoptions"]]],[11,"pathspec","","Add to the array of paths/fnmatch patterns to constrain…",57,[[["self"],["intocstring"]],["diffoptions"]]],[11,"raw","","Acquire a pointer to the underlying raw options.",57,[[["self"]]]],[11,"old_lineno","","Line number in old file or `None` for added line",58,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"new_lineno","","Line number in new file or `None` for deleted line",58,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"num_lines","","Number of newline characters in content",58,[[["self"]],["u32"]]],[11,"content_offset","","Offset in the original file to the content",58,[[["self"]],["i64"]]],[11,"content","","Content of this line as bytes.",58,[[["self"]]]],[11,"origin","","Sigil showing the origin of this `DiffLine`.",58,[[["self"]],["char"]]],[11,"old_start","","Starting line number in old_file",59,[[["self"]],["u32"]]],[11,"old_lines","","Number of lines in old_file",59,[[["self"]],["u32"]]],[11,"new_start","","Starting line number in new_file",59,[[["self"]],["u32"]]],[11,"new_lines","","Number of lines in new_file",59,[[["self"]],["u32"]]],[11,"header","","Header text",59,[[["self"]]]],[11,"files_changed","","Get the total number of files chaned in a diff.",60,[[["self"]],["usize"]]],[11,"insertions","","Get the total number of insertions in a diff",60,[[["self"]],["usize"]]],[11,"deletions","","Get the total number of deletions in a diff",60,[[["self"]],["usize"]]],[11,"to_buf","","Print diff statistics to a Buf",60,[[["diffstatsformat"],["self"],["usize"]],[["buf"],["result",["buf","error"]],["error"]]]],[11,"contains_data","","Returns whether there is data in this binary structure or…",61,[[["self"]],["bool"]]],[11,"old_file","","The contents of the old file.",61,[[["self"]],["diffbinaryfile"]]],[11,"new_file","","The contents of the new file.",61,[[["self"]],["diffbinaryfile"]]],[11,"kind","","The type of binary data for this file",62,[[["self"]],["diffbinarykind"]]],[11,"data","","The binary data, deflated",62,[[["self"]]]],[11,"inflated_len","","The length of the binary data after inflation",62,[[["self"]],["usize"]]],[11,"new","","Creates a new set of empty diff find options.",63,[[],["difffindoptions"]]],[11,"by_config","","Reset all flags back to their unset state, indicating that…",63,[[["self"]],["difffindoptions"]]],[11,"renames","","Look for renames?",63,[[["self"],["bool"]],["difffindoptions"]]],[11,"renames_from_rewrites","","Consider old side of modified for renames?",63,[[["self"],["bool"]],["difffindoptions"]]],[11,"copies","","Look for copies?",63,[[["self"],["bool"]],["difffindoptions"]]],[11,"copies_from_unmodified","","Consider unmodified as copy sources?",63,[[["self"],["bool"]],["difffindoptions"]]],[11,"rewrites","","Mark significant rewrites for split.",63,[[["self"],["bool"]],["difffindoptions"]]],[11,"break_rewrites","","Actually split large rewrites into delete/add pairs",63,[[["self"],["bool"]],["difffindoptions"]]],[11,"for_untracked","","Find renames/copies for untracked items in working…",63,[[["self"],["bool"]],["difffindoptions"]]],[11,"all","","Turn on all finding features.",63,[[["self"],["bool"]],["difffindoptions"]]],[11,"ignore_leading_whitespace","","Measure similarity ignoring leading whitespace (default)",63,[[["self"],["bool"]],["difffindoptions"]]],[11,"ignore_whitespace","","Measure similarity ignoring all whitespace",63,[[["self"],["bool"]],["difffindoptions"]]],[11,"dont_ignore_whitespace","","Measure similarity including all data",63,[[["self"],["bool"]],["difffindoptions"]]],[11,"exact_match_only","","Measure similarity only by comparing SHAs (fast and cheap)",63,[[["self"],["bool"]],["difffindoptions"]]],[11,"break_rewrites_for_renames_only","","Do not break rewrites unless they contribute to a rename.",63,[[["self"],["bool"]],["difffindoptions"]]],[11,"remove_unmodified","","Remove any unmodified deltas after find_similar is done.",63,[[["self"],["bool"]],["difffindoptions"]]],[11,"rename_threshold","","Similarity to consider a file renamed (default 50)",63,[[["u16"],["self"]],["difffindoptions"]]],[11,"rename_from_rewrite_threshold","","Similarity of modified to be glegible rename source…",63,[[["u16"],["self"]],["difffindoptions"]]],[11,"copy_threshold","","Similarity to consider a file copy (default 50)",63,[[["u16"],["self"]],["difffindoptions"]]],[11,"break_rewrite_threshold","","Similarity to split modify into delete/add pair (default 60)",63,[[["u16"],["self"]],["difffindoptions"]]],[11,"rename_limit","","Maximum similarity sources to examine for a file (somewhat…",63,[[["self"],["usize"]],["difffindoptions"]]],[11,"last_error","","Returns the last error that happened with the code…",64,[[["c_int"]],[["option",["error"]],["error"]]]],[11,"from_str","","Creates a new error from the given string as the error.",64,[[["str"]],["error"]]],[11,"code","","Return the error code associated with this error.",64,[[["self"]],["errorcode"]]],[11,"class","","Return the error class associated with this error.",64,[[["self"]],["errorclass"]]],[11,"raw_code","","Return the raw error code associated with this error.",64,[[["self"]],["git_error_code"]]],[11,"raw_class","","Return the raw error class associated with this error.",64,[[["self"]],["git_error_t"]]],[11,"message","","Return the message associated with this error",64,[[["self"]],["str"]]],[11,"new","","Creates a new in-memory index.",65,[[],[["error"],["result",["index","error"]],["index"]]]],[11,"open","","Create a new bare Git index object as a memory…",65,[[["path"]],[["error"],["result",["index","error"]],["index"]]]],[11,"add","","Add or update an index entry from an in-memory struct",65,[[["indexentry"],["self"]],[["result",["error"]],["error"]]]],[11,"add_frombuffer","","Add or update an index entry from a buffer in memory",65,[[["indexentry"],["self"]],[["result",["error"]],["error"]]]],[11,"add_path","","Add or update an index entry from a file on disk",65,[[["self"],["path"]],[["result",["error"]],["error"]]]],[11,"add_all","","Add or update index entries matching files in the working…",65,[[["indexmatchedpath"],["indexaddoption"],["self"],["i"],["option",["indexmatchedpath"]]],[["result",["error"]],["error"]]]],[11,"clear","","Clear the contents (all the entries) of an index object.",65,[[["self"]],[["result",["error"]],["error"]]]],[11,"len","","Get the count of entries currently in the index",65,[[["self"]],["usize"]]],[11,"is_empty","","Return `true` is there is no entry in the index",65,[[["self"]],["bool"]]],[11,"get","","Get one of the entries in the index by its position.",65,[[["self"],["usize"]],[["indexentry"],["option",["indexentry"]]]]],[11,"iter","","Get an iterator over the entries in this index.",65,[[["self"]],["indexentries"]]],[11,"conflicts","","Get an iterator over the index entries that have conflicts",65,[[["self"]],[["result",["indexconflicts","error"]],["indexconflicts"],["error"]]]],[11,"get_path","","Get one of the entries in the index by its path.",65,[[["path"],["self"],["i32"]],[["indexentry"],["option",["indexentry"]]]]],[11,"has_conflicts","","Does this index have conflicts?",65,[[["self"]],["bool"]]],[11,"path","","Get the full path to the index file on disk.",65,[[["self"]],[["option",["path"]],["path"]]]],[11,"read","","Update the contents of an existing index object in memory…",65,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"read_tree","","Read a tree into the index file with stats",65,[[["self"],["tree"]],[["result",["error"]],["error"]]]],[11,"remove","","Remove an entry from the index",65,[[["self"],["path"],["i32"]],[["result",["error"]],["error"]]]],[11,"remove_path","","Remove an index entry corresponding to a file on disk.",65,[[["self"],["path"]],[["result",["error"]],["error"]]]],[11,"remove_dir","","Remove all entries from the index under a given directory.",65,[[["self"],["path"],["i32"]],[["result",["error"]],["error"]]]],[11,"remove_all","","Remove all matching index entries.",65,[[["indexmatchedpath"],["self"],["i"],["option",["indexmatchedpath"]]],[["result",["error"]],["error"]]]],[11,"update_all","","Update all index entries to match the working directory",65,[[["indexmatchedpath"],["self"],["i"],["option",["indexmatchedpath"]]],[["result",["error"]],["error"]]]],[11,"write","","Write an existing index object from memory back to disk…",65,[[["self"]],[["result",["error"]],["error"]]]],[11,"write_tree","","Write the index as a tree.",65,[[["self"]],[["result",["oid","error"]],["oid"],["error"]]]],[11,"write_tree_to","","Write the index as a tree to the given repository",65,[[["self"],["repository"]],[["result",["oid","error"]],["oid"],["error"]]]],[11,"total_objects","","Number of objects in the packfile being downloaded",66,[[["self"]],["usize"]]],[11,"indexed_objects","","Received objects that have been hashed",66,[[["self"]],["usize"]]],[11,"received_objects","","Objects which have been downloaded",66,[[["self"]],["usize"]]],[11,"local_objects","","Locally-available objects that have been injected in order…",66,[[["self"]],["usize"]]],[11,"total_deltas","","Number of deltas in the packfile being downloaded",66,[[["self"]],["usize"]]],[11,"indexed_deltas","","Received deltas that have been hashed.",66,[[["self"]],["usize"]]],[11,"received_bytes","","Size of the packfile received up to now",66,[[["self"]],["usize"]]],[11,"to_owned","","Convert this to an owned version of `Progress`.",66,[[["self"]],["progress"]]],[11,"id","","Gets the commit ID that the given git_annotated_commit…",67,[[["self"]],["oid"]]],[11,"refname","","Get the refname that the given git_annotated_commit refers…",67,[[["self"]],[["str"],["option",["str"]]]]],[11,"refname_bytes","","Get the refname that the given git_annotated_commit refers…",67,[[["self"]]]],[11,"new","","Creates a default set of merge options.",68,[[],["mergeoptions"]]],[11,"find_renames","","Detect file renames",68,[[["self"],["bool"]],["mergeoptions"]]],[11,"fail_on_conflict","","If a conflict occurs, exit immediately instead of…",68,[[["self"],["bool"]],["mergeoptions"]]],[11,"skip_reuc","","Do not write the REUC extension on the generated index",68,[[["self"],["bool"]],["mergeoptions"]]],[11,"no_recursive","","If the commits being merged have multiple merge bases, do…",68,[[["self"],["bool"]],["mergeoptions"]]],[11,"rename_threshold","","Similarity to consider a file renamed (default 50)",68,[[["self"],["u32"]],["mergeoptions"]]],[11,"target_limit","","Maximum similarity sources to examine for renames (default…",68,[[["self"],["u32"]],["mergeoptions"]]],[11,"recursion_limit","","Maximum number of times to merge common ancestors to build…",68,[[["self"],["u32"]],["mergeoptions"]]],[11,"file_favor","","Specify a side to favor for resolving conflicts",68,[[["self"],["filefavor"]],["mergeoptions"]]],[11,"standard_style","","Create standard conflicted merge files",68,[[["self"],["bool"]],["mergeoptions"]]],[11,"diff3_style","","Create diff3-style file",68,[[["self"],["bool"]],["mergeoptions"]]],[11,"simplify_alnum","","Condense non-alphanumeric regions for simplified diff file",68,[[["self"],["bool"]],["mergeoptions"]]],[11,"ignore_whitespace","","Ignore all whitespace",68,[[["self"],["bool"]],["mergeoptions"]]],[11,"ignore_whitespace_change","","Ignore changes in amount of whitespace",68,[[["self"],["bool"]],["mergeoptions"]]],[11,"ignore_whitespace_eol","","Ignore whitespace at end of line",68,[[["self"],["bool"]],["mergeoptions"]]],[11,"patience","","Use the \"patience diff\" algorithm",68,[[["self"],["bool"]],["mergeoptions"]]],[11,"minimal","","Take extra time to find minimal diff",68,[[["self"],["bool"]],["mergeoptions"]]],[11,"raw","","Acquire a pointer to the underlying raw options.",68,[[["self"]]]],[11,"author","","Get the note author",69,[[["self"]],["signature"]]],[11,"committer","","Get the note committer",69,[[["self"]],["signature"]]],[11,"message_bytes","","Get the note message, in bytes.",69,[[["self"]]]],[11,"message","","Get the note message as a string, returning `None` if it…",69,[[["self"]],[["str"],["option",["str"]]]]],[11,"id","","Get the note object's id",69,[[["self"]],["oid"]]],[11,"id","","Get the id (SHA1) of a repository object",70,[[["self"]],["oid"]]],[11,"kind","","Get the object type of an object.",70,[[["self"]],[["option",["objecttype"]],["objecttype"]]]],[11,"peel","","Recursively peel an object until an object of the…",70,[[["self"],["objecttype"]],[["result",["object","error"]],["object"],["error"]]]],[11,"peel_to_blob","","Recursively peel an object until a blob is found",70,[[["self"]],[["result",["blob","error"]],["blob"],["error"]]]],[11,"peel_to_commit","","Recursively peel an object until a commit is found",70,[[["self"]],[["result",["commit","error"]],["commit"],["error"]]]],[11,"peel_to_tag","","Recursively peel an object until a tag is found",70,[[["self"]],[["tag"],["result",["tag","error"]],["error"]]]],[11,"peel_to_tree","","Recursively peel an object until a tree is found",70,[[["self"]],[["tree"],["result",["tree","error"]],["error"]]]],[11,"short_id","","Get a short abbreviated OID string for the object",70,[[["self"]],[["buf"],["result",["buf","error"]],["error"]]]],[11,"as_commit","","Attempt to view this object as a commit.",70,[[["self"]],[["option",["commit"]],["commit"]]]],[11,"into_commit","","Attempt to consume this object and return a commit.",70,[[],[["object"],["commit"],["result",["commit","object"]]]]],[11,"as_tag","","Attempt to view this object as a tag.",70,[[["self"]],[["option",["tag"]],["tag"]]]],[11,"into_tag","","Attempt to consume this object and return a tag.",70,[[],[["tag"],["object"],["result",["tag","object"]]]]],[11,"as_tree","","Attempt to view this object as a tree.",70,[[["self"]],[["option",["tree"]],["tree"]]]],[11,"into_tree","","Attempt to consume this object and return a tree.",70,[[],[["tree"],["result",["tree","object"]],["object"]]]],[11,"as_blob","","Attempt to view this object as a blob.",70,[[["self"]],[["blob"],["option",["blob"]]]]],[11,"into_blob","","Attempt to consume this object and return a blob.",70,[[],[["object"],["result",["blob","object"]],["blob"]]]],[11,"describe","","Describes a commit",70,[[["describeoptions"],["self"]],[["result",["describe","error"]],["describe"],["error"]]]],[11,"new","","Creates an object database without any backends.",71,[[],[["odb"],["error"],["result",["odb","error"]]]]],[11,"reader","","Create object database reading stream.",71,[[["self"],["oid"]],[["result",["error"]],["error"]]]],[11,"writer","","Create object database writing stream.",71,[[["objecttype"],["self"],["usize"]],[["error"],["odbwriter"],["result",["odbwriter","error"]]]]],[11,"foreach","","Iterate over all objects in the object database.s",71,[[["c"],["self"]],[["result",["error"]],["error"]]]],[11,"read","","Read an object from the database.",71,[[["self"],["oid"]],[["odbobject"],["result",["odbobject","error"]],["error"]]]],[11,"read_header","","Reads the header of an object from the database without…",71,[[["self"],["oid"]],[["result",["error"]],["error"]]]],[11,"write","","Write an object to the database.",71,[[["self"],["objecttype"]],[["result",["oid","error"]],["oid"],["error"]]]],[11,"packwriter","","Create stream for writing a pack file to the ODB",71,[[["self"]],[["error"],["result",["odbpackwriter","error"]],["odbpackwriter"]]]],[11,"exists","","Checks if the object database has an object.",71,[[["self"],["oid"]],["bool"]]],[11,"exists_prefix","","Potentially finds an object that starts with the given…",71,[[["usize"],["self"],["oid"]],[["result",["oid","error"]],["oid"],["error"]]]],[11,"refresh","","Refresh the object database. This should never be needed,…",71,[[["self"]],[["result",["error"]],["error"]]]],[11,"add_disk_alternate","","Adds an alternate disk backend to the object database.",71,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"kind","","Get the object type.",72,[[["self"]],["objecttype"]]],[11,"len","","Get the object size.",72,[[["self"]],["usize"]]],[11,"data","","Get the object data.",72,[[["self"]]]],[11,"id","","Get the object id.",72,[[["self"]],["oid"]]],[11,"finalize","","Finish writing to an ODB stream",73,[[["self"]],[["result",["oid","error"]],["oid"],["error"]]]],[11,"commit","","Finish writing the packfile",74,[[["self"]],[["error"],["result",["i32","error"]],["i32"]]]],[11,"progress","","The callback through which progress is monitored. Be aware…",74,[[["self"],["f"]],["odbpackwriter"]]],[11,"from_str","","Parse a hex-formatted object id into an Oid structure.",75,[[["str"]],[["result",["oid","error"]],["oid"],["error"]]]],[11,"from_bytes","","Parse a raw object id into an Oid structure.",75,[[],[["result",["oid","error"]],["oid"],["error"]]]],[11,"zero","","Creates an all zero Oid structure.",75,[[],["oid"]]],[11,"hash_object","","Hashes the provided data as an object of the provided…",75,[[["objecttype"]],[["result",["oid","error"]],["oid"],["error"]]]],[11,"hash_file","","Hashes the content of the provided file as an object of…",75,[[["asref",["path"]],["path"],["objecttype"]],[["result",["oid","error"]],["oid"],["error"]]]],[11,"as_bytes","","View this OID as a byte-slice 20 bytes in length.",75,[[["self"]]]],[11,"is_zero","","Test if this OID is all zeros.",75,[[["self"]],["bool"]]],[11,"insert_object","","Insert a single object. For an optimal pack it's mandatory…",76,[[["str"],["option",["str"]],["self"],["oid"]],[["result",["error"]],["error"]]]],[11,"insert_tree","","Insert a root tree object. This will add the tree as well…",76,[[["self"],["oid"]],[["result",["error"]],["error"]]]],[11,"insert_commit","","Insert a commit object. This will add a commit as well as…",76,[[["self"],["oid"]],[["result",["error"]],["error"]]]],[11,"insert_walk","","Insert objects as given by the walk. Those commits and all…",76,[[["self"],["revwalk"]],[["result",["error"]],["error"]]]],[11,"insert_recursive","","Recursively insert an object and its referenced objects.…",76,[[["str"],["option",["str"]],["self"],["oid"]],[["result",["error"]],["error"]]]],[11,"write_buf","","Write the contents of the packfile to an in-memory buffer.…",76,[[["buf"],["self"]],[["result",["error"]],["error"]]]],[11,"foreach","","Create the new pack and pass each object to the callback.",76,[[["self"],["f"]],[["result",["error"]],["error"]]]],[11,"set_progress_callback","","`progress` will be called with progress information during…",76,[[["self"],["f"]],[["result",["error"]],["error"]]]],[11,"unset_progress_callback","","Remove the current progress callback. See…",76,[[["self"]],[["result",["error"]],["error"]]]],[11,"set_threads","","Set the number of threads to be used.",76,[[["self"],["u32"]],["u32"]]],[11,"object_count","","Get the total number of objects the packbuilder will write…",76,[[["self"]],["usize"]]],[11,"written","","Get the number of objects the packbuilder has already…",76,[[["self"]],["usize"]]],[11,"hash","","Get the packfile's hash. A packfile's name is derived from…",76,[[["self"]],[["option",["oid"]],["oid"]]]],[11,"from_diff","","Return a Patch for one file in a Diff.",77,[[["diff"],["usize"]],[["error"],["option"],["result",["option","error"]]]]],[11,"from_blobs","","Generate a Patch by diffing two blobs.",77,[[["diffoptions"],["option",["path"]],["path"],["blob"],["option",["diffoptions"]]],[["result",["error"]],["error"]]]],[11,"from_blob_and_buffer","","Generate a Patch by diffing a blob and a buffer.",77,[[["diffoptions"],["option",["path"]],["path"],["blob"],["option",["diffoptions"]]],[["result",["error"]],["error"]]]],[11,"from_buffers","","Generate a Patch by diffing two buffers.",77,[[["diffoptions"],["option",["path"]],["path"],["option",["diffoptions"]]],[["result",["error"]],["error"]]]],[11,"delta","","Get the DiffDelta associated with the Patch.",77,[[["self"]],["diffdelta"]]],[11,"num_hunks","","Get the number of hunks in the Patch.",77,[[["self"]],["usize"]]],[11,"line_stats","","Get the number of lines of context, additions, and…",77,[[["self"]],[["error"],["result",["error"]]]]],[11,"hunk","","Get a DiffHunk and its total line count from the Patch.",77,[[["self"],["usize"]],[["error"],["result",["error"]]]]],[11,"num_lines_in_hunk","","Get the number of lines in a hunk.",77,[[["self"],["usize"]],[["result",["usize","error"]],["usize"],["error"]]]],[11,"line_in_hunk","","Get a DiffLine from a hunk of the Patch.",77,[[["self"],["usize"]],[["error"],["diffline"],["result",["diffline","error"]]]]],[11,"size","","Get the size of a Patch's diff data in bytes.",77,[[["self"],["bool"]],["usize"]]],[11,"print","","Print the Patch to text via a callback.",77,[[["self"],["fnmut"]],[["result",["error"]],["error"]]]],[11,"to_buf","","Get the Patch text as a Buf.",77,[[["self"]],[["buf"],["result",["buf","error"]],["error"]]]],[11,"new","","Creates a new pathspec from a list of specs to match…",78,[[["i"]],[["pathspec"],["result",["pathspec","error"]],["error"]]]],[11,"match_diff","","Match a pathspec against files in a diff.",78,[[["diff"],["self"],["pathspecflags"]],[["result",["pathspecmatchlist","error"]],["pathspecmatchlist"],["error"]]]],[11,"match_tree","","Match a pathspec against files in a tree.",78,[[["pathspecflags"],["self"],["tree"]],[["result",["pathspecmatchlist","error"]],["pathspecmatchlist"],["error"]]]],[11,"match_index","","This matches the pathspec against the files in the…",78,[[["pathspecflags"],["self"],["index"]],[["result",["pathspecmatchlist","error"]],["pathspecmatchlist"],["error"]]]],[11,"match_workdir","","Match a pathspec against the working directory of a…",78,[[["repository"],["self"],["pathspecflags"]],[["result",["pathspecmatchlist","error"]],["pathspecmatchlist"],["error"]]]],[11,"matches_path","","Try to match a path against a pathspec",78,[[["path"],["self"],["pathspecflags"]],["bool"]]],[11,"entries","","Returns an iterator over the matching filenames in this…",79,[[["self"]],["pathspecentries"]]],[11,"entry","","Get a matching filename by position.",79,[[["self"],["usize"]],["option"]]],[11,"diff_entries","","Returns an iterator over the matching diff entries in this…",79,[[["self"]],["pathspecdiffentries"]]],[11,"diff_entry","","Get a matching diff delta by position.",79,[[["self"],["usize"]],[["diffdelta"],["option",["diffdelta"]]]]],[11,"failed_entries","","Returns an iterator over the non-matching entries in this…",79,[[["self"]],["pathspecfailedentries"]]],[11,"failed_entry","","Get an original pathspec string that had no matches.",79,[[["self"],["usize"]],["option"]]],[11,"new","","Creates a new set of proxy options ready to be configured.",80,[[],["proxyoptions"]]],[11,"auto","","Try to auto-detect the proxy from the git configuration.",80,[[["self"]],["self"]]],[11,"url","","Specify the exact URL of the proxy to use.",80,[[["str"],["self"]],["self"]]],[11,"new","","Creates a new default set of rebase options.",81,[[],["rebaseoptions"]]],[11,"quiet","","Used by `Repository::rebase`, this will instruct other…",81,[[["self"],["bool"]],["rebaseoptions"]]],[11,"inmemory","","Used by `Repository::rebase`, this will begin an in-memory…",81,[[["self"],["bool"]],["rebaseoptions"]]],[11,"rewrite_notes_ref","","Used by `finish()`, this is the name of the notes…",81,[[["str"],["self"]],["rebaseoptions"]]],[11,"merge_options","","Options to control how trees are merged during `next()`.",81,[[["self"],["mergeoptions"]],["rebaseoptions"]]],[11,"checkout_options","","Options to control how files are written during…",81,[[["checkoutbuilder"],["self"]],["rebaseoptions"]]],[11,"raw","","Acquire a pointer to the underlying raw options.",81,[[["self"]]]],[11,"len","","Gets the count of rebase operations that are to be applied.",82,[[["self"]],["usize"]]],[11,"orig_head_name","","Gets the original `HEAD` ref name for merge rebases.",82,[[["self"]],[["str"],["option",["str"]]]]],[11,"orig_head_id","","Gets the original HEAD id for merge rebases.",82,[[["self"]],[["option",["oid"]],["oid"]]]],[11,"nth","","Gets the rebase operation specified by the given index.",82,[[["self"],["usize"]],[["rebaseoperation"],["option",["rebaseoperation"]]]]],[11,"operation_current","","Gets the index of the rebase operation that is currently…",82,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"inmemory_index","","Gets the index produced by the last operation, which is…",82,[[["self"]],[["error"],["result",["index","error"]],["index"]]]],[11,"commit","","Commits the current patch. You must have resolved any…",82,[[["signature"],["str"],["option",["str"]],["self"],["option",["signature"]]],[["result",["oid","error"]],["oid"],["error"]]]],[11,"abort","","Aborts a rebase that is currently in progress, resetting…",82,[[["self"]],[["result",["error"]],["error"]]]],[11,"finish","","Finishes a rebase that is currently in progress once all…",82,[[["signature"],["self"],["option",["signature"]]],[["result",["error"]],["error"]]]],[11,"from_raw","","Convert from the int into an enum. Returns None if invalid.",6,[[["git_rebase_operation_t"]],[["option",["rebaseoperationtype"]],["rebaseoperationtype"]]]],[11,"kind","","The type of rebase operation",83,[[["self"]],[["option",["rebaseoperationtype"]],["rebaseoperationtype"]]]],[11,"id","","The commit ID being cherry-picked. This will be populated…",83,[[["self"]],["oid"]]],[11,"exec","","The executable the user has requested be run. This will…",83,[[["self"]],[["str"],["option",["str"]]]]],[11,"is_valid_name","","Ensure the reference name is well-formed.",84,[[["str"]],["bool"]]],[11,"raw","","Get access to the underlying raw pointer.",84,[[["self"]]]],[11,"delete","","Delete an existing reference.",84,[[["self"]],[["result",["error"]],["error"]]]],[11,"is_branch","","Check if a reference is a local branch.",84,[[["self"]],["bool"]]],[11,"is_note","","Check if a reference is a note.",84,[[["self"]],["bool"]]],[11,"is_remote","","Check if a reference is a remote tracking branch",84,[[["self"]],["bool"]]],[11,"is_tag","","Check if a reference is a tag",84,[[["self"]],["bool"]]],[11,"kind","","Get the reference type of a reference.",84,[[["self"]],[["option",["referencetype"]],["referencetype"]]]],[11,"name","","Get the full name of a reference.",84,[[["self"]],[["str"],["option",["str"]]]]],[11,"name_bytes","","Get the full name of a reference.",84,[[["self"]]]],[11,"shorthand","","Get the full shorthand of a reference.",84,[[["self"]],[["str"],["option",["str"]]]]],[11,"shorthand_bytes","","Get the full shorthand of a reference.",84,[[["self"]]]],[11,"target","","Get the OID pointed to by a direct reference.",84,[[["self"]],[["option",["oid"]],["oid"]]]],[11,"target_peel","","Return the peeled OID target of this reference.",84,[[["self"]],[["option",["oid"]],["oid"]]]],[11,"symbolic_target","","Get full name to the reference pointed to by a symbolic…",84,[[["self"]],[["str"],["option",["str"]]]]],[11,"symbolic_target_bytes","","Get full name to the reference pointed to by a symbolic…",84,[[["self"]],["option"]]],[11,"resolve","","Resolve a symbolic reference to a direct reference.",84,[[["self"]],[["reference"],["result",["reference","error"]],["error"]]]],[11,"peel","","Peel a reference to an object",84,[[["self"],["objecttype"]],[["result",["object","error"]],["object"],["error"]]]],[11,"peel_to_blob","","Peel a reference to a blob",84,[[["self"]],[["result",["blob","error"]],["blob"],["error"]]]],[11,"peel_to_commit","","Peel a reference to a commit",84,[[["self"]],[["result",["commit","error"]],["commit"],["error"]]]],[11,"peel_to_tree","","Peel a reference to a tree",84,[[["self"]],[["tree"],["result",["tree","error"]],["error"]]]],[11,"peel_to_tag","","Peel a reference to a tag",84,[[["self"]],[["tag"],["result",["tag","error"]],["error"]]]],[11,"rename","","Rename an existing reference.",84,[[["str"],["self"],["bool"]],[["reference"],["result",["reference","error"]],["error"]]]],[11,"set_target","","Conditionally create a new reference with the same name as…",84,[[["str"],["self"],["oid"]],[["reference"],["result",["reference","error"]],["error"]]]],[11,"names","","Consumes a `References` iterator to create an iterator…",85,[[["self"]],["referencenames"]]],[11,"append","","Add a new entry to the in-memory reflog.",86,[[["signature"],["str"],["option",["str"]],["self"],["oid"]],[["result",["error"]],["error"]]]],[11,"remove","","Remove an entry from the reflog by its index",86,[[["self"],["usize"],["bool"]],[["result",["error"]],["error"]]]],[11,"get","","Lookup an entry by its index",86,[[["self"],["usize"]],[["reflogentry"],["option",["reflogentry"]]]]],[11,"len","","Get the number of log entries in a reflog",86,[[["self"]],["usize"]]],[11,"is_empty","","Return `true ` is there is no log entry in a reflog",86,[[["self"]],["bool"]]],[11,"iter","","Get an iterator to all entries inside of this reflog",86,[[["self"]],["reflogiter"]]],[11,"write","","Write an existing in-memory reflog object back to disk…",86,[[["self"]],[["result",["error"]],["error"]]]],[11,"committer","","Get the committer of this entry",87,[[["self"]],["signature"]]],[11,"id_new","","Get the new oid",87,[[["self"]],["oid"]]],[11,"id_old","","Get the old oid",87,[[["self"]],["oid"]]],[11,"message","","Get the log message, returning `None` on invalid UTF-8.",87,[[["self"]],[["str"],["option",["str"]]]]],[11,"message_bytes","","Get the log message as a byte array.",87,[[["self"]],["option"]]],[11,"direction","","Get the refspec's direction.",88,[[["self"]],["direction"]]],[11,"dst","","Get the destination specifier.",88,[[["self"]],[["str"],["option",["str"]]]]],[11,"dst_bytes","","Get the destination specifier, in bytes.",88,[[["self"]]]],[11,"dst_matches","","Check if a refspec's destination descriptor matches a…",88,[[["str"],["self"]],["bool"]]],[11,"src","","Get the source specifier.",88,[[["self"]],[["str"],["option",["str"]]]]],[11,"src_bytes","","Get the source specifier, in bytes.",88,[[["self"]]]],[11,"src_matches","","Check if a refspec's source descriptor matches a reference",88,[[["str"],["self"]],["bool"]]],[11,"is_force","","Get the force update setting.",88,[[["self"]],["bool"]]],[11,"str","","Get the refspec's string.",88,[[["self"]],[["str"],["option",["str"]]]]],[11,"bytes","","Get the refspec's string as a byte array",88,[[["self"]]]],[11,"is_valid_name","","Ensure the remote name is well-formed.",89,[[["str"]],["bool"]]],[11,"name","","Get the remote's name.",89,[[["self"]],[["str"],["option",["str"]]]]],[11,"name_bytes","","Get the remote's name, in bytes.",89,[[["self"]],["option"]]],[11,"url","","Get the remote's url.",89,[[["self"]],[["str"],["option",["str"]]]]],[11,"url_bytes","","Get the remote's url as a byte array.",89,[[["self"]]]],[11,"pushurl","","Get the remote's pushurl.",89,[[["self"]],[["str"],["option",["str"]]]]],[11,"pushurl_bytes","","Get the remote's pushurl as a byte array.",89,[[["self"]],["option"]]],[11,"connect","","Open a connection to a remote.",89,[[["self"],["direction"]],[["result",["error"]],["error"]]]],[11,"connect_auth","","Open a connection to a remote with callbacks and proxy…",89,[[["self"],["remotecallbacks"],["option",["proxyoptions"]],["proxyoptions"],["option",["remotecallbacks"]],["direction"]],[["remoteconnection"],["error"],["result",["remoteconnection","error"]]]]],[11,"connected","","Check whether the remote is connected",89,[[["self"]],["bool"]]],[11,"disconnect","","Disconnect from the remote",89,[[["self"]],[["result",["error"]],["error"]]]],[11,"download","","Download and index the packfile",89,[[["option",["fetchoptions"]],["self"],["fetchoptions"]],[["result",["error"]],["error"]]]],[11,"refspecs","","Get the number of refspecs for a remote",89,[[["self"]],["refspecs"]]],[11,"get_refspec","","Get the `nth` refspec from this remote.",89,[[["self"],["usize"]],[["refspec"],["option",["refspec"]]]]],[11,"fetch","","Download new data and update tips",89,[[["str"],["option",["fetchoptions"]],["self"],["fetchoptions"],["option",["str"]]],[["result",["error"]],["error"]]]],[11,"update_tips","","Update the tips to the new state",89,[[["str"],["autotagoption"],["option",["remotecallbacks"]],["option",["str"]],["self"],["remotecallbacks"],["bool"]],[["result",["error"]],["error"]]]],[11,"push","","Perform a push",89,[[["pushoptions"],["option",["pushoptions"]],["self"]],[["result",["error"]],["error"]]]],[11,"stats","","Get the statistics structure that is filled in by the…",89,[[["self"]],["progress"]]],[11,"list","","Get the remote repository's reference advertisement list.",89,[[["self"]],[["result",["error"]],["error"]]]],[11,"fetch_refspecs","","Get the remote's list of fetch refspecs",89,[[["self"]],[["stringarray"],["result",["stringarray","error"]],["error"]]]],[11,"push_refspecs","","Get the remote's list of push refspecs",89,[[["self"]],[["stringarray"],["result",["stringarray","error"]],["error"]]]],[11,"is_local","","Flag if this is available locally.",90,[[["self"]],["bool"]]],[11,"oid","","",90,[[["self"]],["oid"]]],[11,"loid","","",90,[[["self"]],["oid"]]],[11,"name","","",90,[[["self"]],["str"]]],[11,"symref_target","","",90,[[["self"]],[["str"],["option",["str"]]]]],[11,"new","","Creates a new blank set of fetch options",91,[[],["fetchoptions"]]],[11,"remote_callbacks","","Set the callbacks to use for the fetch operation.",91,[[["self"],["remotecallbacks"]],["self"]]],[11,"proxy_options","","Set the proxy options to use for the fetch operation.",91,[[["self"],["proxyoptions"]],["self"]]],[11,"prune","","Set whether to perform a prune after the fetch.",91,[[["self"],["fetchprune"]],["self"]]],[11,"update_fetchhead","","Set whether to write the results to FETCH_HEAD.",91,[[["self"],["bool"]],["self"]]],[11,"download_tags","","Set how to behave regarding tags on the remote, such as…",91,[[["self"],["autotagoption"]],["self"]]],[11,"new","","Creates a new blank set of push options",92,[[],["pushoptions"]]],[11,"remote_callbacks","","Set the callbacks to use for the fetch operation.",92,[[["self"],["remotecallbacks"]],["self"]]],[11,"proxy_options","","Set the proxy options to use for the fetch operation.",92,[[["self"],["proxyoptions"]],["self"]]],[11,"packbuilder_parallelism","","If the transport being used to push to the remote requires…",92,[[["self"],["u32"]],["self"]]],[11,"connected","","Check whether the remote is (still) connected",93,[[["self"]],["bool"]]],[11,"list","","Get the remote repository's reference advertisement list.",93,[[["self"]],[["result",["error"]],["error"]]]],[11,"new","","Creates a new set of empty callbacks",94,[[],["remotecallbacks"]]],[11,"credentials","","The callback through which to fetch credentials if required.",94,[[["self"],["f"]],["remotecallbacks"]]],[11,"transfer_progress","","The callback through which progress is monitored.",94,[[["self"],["f"]],["remotecallbacks"]]],[11,"sideband_progress","","Textual progress from the remote.",94,[[["self"],["f"]],["remotecallbacks"]]],[11,"update_tips","","Each time a reference is updated locally, the callback…",94,[[["self"],["f"]],["remotecallbacks"]]],[11,"certificate_check","","If certificate verification fails, then this callback will…",94,[[["self"],["f"]],["remotecallbacks"]]],[11,"push_update_reference","","Set a callback to get invoked for each updated reference…",94,[[["self"],["f"]],["remotecallbacks"]]],[11,"open","","Attempt to open an already-existing repository at `path`.",95,[[["path"],["asref",["path"]]],[["error"],["result",["repository","error"]],["repository"]]]],[11,"open_bare","","Attempt to open an already-existing bare repository at…",95,[[["path"],["asref",["path"]]],[["error"],["result",["repository","error"]],["repository"]]]],[11,"open_from_env","","Find and open an existing repository, respecting git…",95,[[],[["error"],["result",["repository","error"]],["repository"]]]],[11,"open_ext","","Find and open an existing repository, with additional…",95,[[["repositoryopenflags"],["i"],["p"]],[["error"],["result",["repository","error"]],["repository"]]]],[11,"discover","","Attempt to open an already-existing repository at or above…",95,[[["path"],["asref",["path"]]],[["error"],["result",["repository","error"]],["repository"]]]],[11,"init","","Creates a new repository in the specified folder.",95,[[["path"],["asref",["path"]]],[["error"],["result",["repository","error"]],["repository"]]]],[11,"init_bare","","Creates a new `--bare` repository in the specified folder.",95,[[["path"],["asref",["path"]]],[["error"],["result",["repository","error"]],["repository"]]]],[11,"init_opts","","Creates a new repository in the specified folder with the…",95,[[["path"],["repositoryinitoptions"],["asref",["path"]]],[["error"],["result",["repository","error"]],["repository"]]]],[11,"clone","","Clone a remote repository.",95,[[["str"],["path"],["asref",["path"]]],[["error"],["result",["repository","error"]],["repository"]]]],[11,"clone_recurse","","Clone a remote repository, initialize and update its…",95,[[["str"],["path"],["asref",["path"]]],[["error"],["result",["repository","error"]],["repository"]]]],[11,"from_odb","","Attempt to wrap an object database as a repository.",95,[[["odb"]],[["error"],["result",["repository","error"]],["repository"]]]],[11,"revparse","","Execute a rev-parse operation against the `spec` listed.",95,[[["str"],["self"]],[["error"],["revspec"],["result",["revspec","error"]]]]],[11,"revparse_single","","Find a single object, as specified by a revision string.",95,[[["str"],["self"]],[["error"],["result",["object","error"]],["object"]]]],[11,"revparse_ext","","Find a single object and intermediate reference by a…",95,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"is_bare","","Tests whether this repository is a bare repository or not.",95,[[["self"]],["bool"]]],[11,"is_shallow","","Tests whether this repository is a shallow clone.",95,[[["self"]],["bool"]]],[11,"is_worktree","","Tests whether this repository is a worktree.",95,[[["self"]],["bool"]]],[11,"is_empty","","Tests whether this repository is empty.",95,[[["self"]],[["error"],["result",["bool","error"]],["bool"]]]],[11,"path","","Returns the path to the `.git` folder for normal…",95,[[["self"]],["path"]]],[11,"state","","Returns the current state of this repository",95,[[["self"]],["repositorystate"]]],[11,"workdir","","Get the path of the working directory for this repository.",95,[[["self"]],[["option",["path"]],["path"]]]],[11,"set_workdir","","Set the path to the working directory for this repository.",95,[[["path"],["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"namespace","","Get the currently active namespace for this repository.",95,[[["self"]],[["str"],["option",["str"]]]]],[11,"namespace_bytes","","Get the currently active namespace for this repository as…",95,[[["self"]],["option"]]],[11,"set_namespace","","Set the active namespace for this repository.",95,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"set_namespace_bytes","","Set the active namespace for this repository as a byte…",95,[[["self"]],[["result",["error"]],["error"]]]],[11,"remove_namespace","","Remove the active namespace for this repository.",95,[[["self"]],[["result",["error"]],["error"]]]],[11,"message","","Retrieves the Git merge message. Remember to remove the…",95,[[["self"]],[["error"],["result",["string","error"]],["string"]]]],[11,"remove_message","","Remove the Git merge message.",95,[[["self"]],[["result",["error"]],["error"]]]],[11,"remotes","","List all remotes for a given repository",95,[[["self"]],[["stringarray"],["result",["stringarray","error"]],["error"]]]],[11,"find_remote","","Get the information for a particular remote",95,[[["str"],["self"]],[["remote"],["result",["remote","error"]],["error"]]]],[11,"remote","","Add a remote with the default fetch refspec to the…",95,[[["str"],["self"]],[["remote"],["result",["remote","error"]],["error"]]]],[11,"remote_with_fetch","","Add a remote with the provided fetch refspec to the…",95,[[["str"],["self"]],[["remote"],["result",["remote","error"]],["error"]]]],[11,"remote_anonymous","","Create an anonymous remote",95,[[["str"],["self"]],[["remote"],["result",["remote","error"]],["error"]]]],[11,"remote_rename","","Give a remote a new name",95,[[["str"],["self"]],[["stringarray"],["result",["stringarray","error"]],["error"]]]],[11,"remote_delete","","Delete an existing persisted remote.",95,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"remote_add_fetch","","Add a fetch refspec to the remote's configuration",95,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"remote_add_push","","Add a push refspec to the remote's configuration.",95,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"remote_set_url","","Set the remote's url in the configuration",95,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"remote_set_pushurl","","Set the remote's url for pushing in the configuration.",95,[[["str"],["self"],["option",["str"]]],[["result",["error"]],["error"]]]],[11,"reset","","Sets the current head to the specified object and…",95,[[["object"],["resettype"],["option",["checkoutbuilder"]],["self"],["checkoutbuilder"]],[["result",["error"]],["error"]]]],[11,"reset_default","","Updates some entries in the index from the target commit…",95,[[["object"],["option",["object"]],["i"],["self"]],[["result",["error"]],["error"]]]],[11,"head","","Retrieve and resolve the reference pointed at by HEAD.",95,[[["self"]],[["result",["reference","error"]],["error"],["reference"]]]],[11,"set_head","","Make the repository HEAD point to the specified reference.",95,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"head_detached","","Determines whether the repository HEAD is detached.",95,[[["self"]],[["error"],["result",["bool","error"]],["bool"]]]],[11,"set_head_detached","","Make the repository HEAD directly point to the commit.",95,[[["self"],["oid"]],[["result",["error"]],["error"]]]],[11,"set_head_detached_from_annotated","","Make the repository HEAD directly point to the commit.",95,[[["annotatedcommit"],["self"]],[["result",["error"]],["error"]]]],[11,"references","","Create an iterator for the repo's references",95,[[["self"]],[["error"],["result",["references","error"]],["references"]]]],[11,"references_glob","","Create an iterator for the repo's references that match…",95,[[["str"],["self"]],[["error"],["result",["references","error"]],["references"]]]],[11,"submodules","","Load all submodules for this repository and return them.",95,[[["self"]],[["error"],["result",["vec","error"]],["vec",["submodule"]]]]],[11,"statuses","","Gather file status information and populate the returned…",95,[[["statusoptions"],["option",["statusoptions"]],["self"]],[["result",["statuses","error"]],["statuses"],["error"]]]],[11,"status_should_ignore","","Test if the ignore rules apply to a given file.",95,[[["path"],["self"]],[["error"],["result",["bool","error"]],["bool"]]]],[11,"status_file","","Get file status for a single file.",95,[[["path"],["self"]],[["error"],["status"],["result",["status","error"]]]]],[11,"branches","","Create an iterator which loops over the requested branches.",95,[[["branchtype"],["option",["branchtype"]],["self"]],[["branches"],["error"],["result",["branches","error"]]]]],[11,"index","","Get the Index file for this repository.",95,[[["self"]],[["error"],["result",["index","error"]],["index"]]]],[11,"set_index","","Set the Index file for this repository.",95,[[["self"],["index"]],[["result",["error"]],["error"]]]],[11,"config","","Get the configuration file for this repository.",95,[[["self"]],[["error"],["config"],["result",["config","error"]]]]],[11,"get_attr","","Get the value of a git attribute for a path as a string.",95,[[["str"],["path"],["attrcheckflags"],["self"]],[["error"],["result",["option","error"]],["option",["str"]]]]],[11,"get_attr_bytes","","Get the value of a git attribute for a path as a byte slice.",95,[[["str"],["path"],["attrcheckflags"],["self"]],[["result",["option","error"]],["error"],["option"]]]],[11,"blob","","Write an in-memory buffer to the ODB as a blob.",95,[[["self"]],[["result",["oid","error"]],["oid"],["error"]]]],[11,"blob_path","","Read a file from the filesystem and write its content to…",95,[[["path"],["self"]],[["result",["oid","error"]],["oid"],["error"]]]],[11,"blob_writer","","Create a stream to write blob",95,[[["option",["path"]],["self"],["path"]],[["blobwriter"],["result",["blobwriter","error"]],["error"]]]],[11,"find_blob","","Lookup a reference to one of the objects in a repository.",95,[[["self"],["oid"]],[["result",["blob","error"]],["blob"],["error"]]]],[11,"odb","","Get the object database for this repository",95,[[["self"]],[["error"],["result",["odb","error"]],["odb"]]]],[11,"branch","","Create a new branch pointing at a target commit",95,[[["str"],["commit"],["self"],["bool"]],[["result",["branch","error"]],["branch"],["error"]]]],[11,"branch_from_annotated_commit","","Create a new branch pointing at a target commit",95,[[["str"],["annotatedcommit"],["self"],["bool"]],[["result",["branch","error"]],["branch"],["error"]]]],[11,"find_branch","","Lookup a branch by its name in a repository.",95,[[["str"],["branchtype"],["self"]],[["result",["branch","error"]],["branch"],["error"]]]],[11,"commit","","Create new commit in the repository",95,[[["str"],["signature"],["option",["str"]],["self"],["tree"]],[["result",["oid","error"]],["oid"],["error"]]]],[11,"commit_create_buffer","","Create a commit object and return that as a Buf.",95,[[["signature"],["str"],["self"],["tree"]],[["buf"],["result",["buf","error"]],["error"]]]],[11,"commit_signed","","Create a commit object from the given buffer and signature",95,[[["str"],["self"],["option",["str"]]],[["result",["oid","error"]],["oid"],["error"]]]],[11,"extract_signature","","Extract the signature from a commit",95,[[["str"],["oid"],["option",["str"]],["self"]],[["result",["error"]],["error"]]]],[11,"find_commit","","Lookup a reference to one of the commits in a repository.",95,[[["self"],["oid"]],[["commit"],["error"],["result",["commit","error"]]]]],[11,"find_annotated_commit","","Creates an `AnnotatedCommit` from the given commit id.",95,[[["self"],["oid"]],[["result",["annotatedcommit","error"]],["annotatedcommit"],["error"]]]],[11,"find_object","","Lookup a reference to one of the objects in a repository.",95,[[["option",["objecttype"]],["objecttype"],["self"],["oid"]],[["error"],["result",["object","error"]],["object"]]]],[11,"reference","","Create a new direct reference.",95,[[["str"],["bool"],["self"],["oid"]],[["result",["reference","error"]],["error"],["reference"]]]],[11,"reference_matching","","Conditionally create new direct reference.",95,[[["str"],["bool"],["self"],["oid"]],[["result",["reference","error"]],["error"],["reference"]]]],[11,"reference_symbolic","","Create a new symbolic reference.",95,[[["str"],["self"],["bool"]],[["result",["reference","error"]],["error"],["reference"]]]],[11,"reference_symbolic_matching","","Create a new symbolic reference.",95,[[["str"],["self"],["bool"]],[["result",["reference","error"]],["error"],["reference"]]]],[11,"find_reference","","Lookup a reference to one of the objects in a repository.",95,[[["str"],["self"]],[["result",["reference","error"]],["error"],["reference"]]]],[11,"resolve_reference_from_short_name","","Lookup a reference to one of the objects in a repository.…",95,[[["str"],["self"]],[["result",["reference","error"]],["error"],["reference"]]]],[11,"refname_to_id","","Lookup a reference by name and resolve immediately to OID.",95,[[["str"],["self"]],[["result",["oid","error"]],["oid"],["error"]]]],[11,"reference_to_annotated_commit","","Creates a git_annotated_commit from the given reference.",95,[[["reference"],["self"]],[["result",["annotatedcommit","error"]],["annotatedcommit"],["error"]]]],[11,"annotated_commit_from_fetchhead","","Creates a git_annotated_commit from FETCH_HEAD.",95,[[["str"],["oid"],["self"]],[["result",["annotatedcommit","error"]],["annotatedcommit"],["error"]]]],[11,"signature","","Create a new action signature with default user and now…",95,[[["self"]],[["error"],["result",["signature","error"]],["signature"]]]],[11,"submodule","","Set up a new git submodule for checkout.",95,[[["str"],["path"],["self"],["bool"]],[["submodule"],["result",["submodule","error"]],["error"]]]],[11,"find_submodule","","Lookup submodule information by name or path.",95,[[["str"],["self"]],[["submodule"],["result",["submodule","error"]],["error"]]]],[11,"submodule_status","","Get the status for a submodule.",95,[[["str"],["self"],["submoduleignore"]],[["error"],["result",["submodulestatus","error"]],["submodulestatus"]]]],[11,"find_tree","","Lookup a reference to one of the objects in a repository.",95,[[["self"],["oid"]],[["tree"],["result",["tree","error"]],["error"]]]],[11,"treebuilder","","Create a new TreeBuilder, optionally initialized with the…",95,[[["option",["tree"]],["self"],["tree"]],[["treebuilder"],["result",["treebuilder","error"]],["error"]]]],[11,"tag","","Create a new tag in the repository from an object",95,[[["str"],["object"],["signature"],["self"],["bool"]],[["result",["oid","error"]],["oid"],["error"]]]],[11,"tag_lightweight","","Create a new lightweight tag pointing at a target object",95,[[["str"],["object"],["self"],["bool"]],[["result",["oid","error"]],["oid"],["error"]]]],[11,"find_tag","","Lookup a tag object from the repository.",95,[[["self"],["oid"]],[["tag"],["error"],["result",["tag","error"]]]]],[11,"tag_delete","","Delete an existing tag reference.",95,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"tag_names","","Get a list with all the tags in the repository.",95,[[["str"],["self"],["option",["str"]]],[["stringarray"],["result",["stringarray","error"]],["error"]]]],[11,"checkout_head","","Updates files in the index and the working tree to match…",95,[[["option",["checkoutbuilder"]],["self"],["checkoutbuilder"]],[["result",["error"]],["error"]]]],[11,"checkout_index","","Updates files in the working tree to match the content of…",95,[[["checkoutbuilder"],["option",["index"]],["option",["checkoutbuilder"]],["self"],["index"]],[["result",["error"]],["error"]]]],[11,"checkout_tree","","Updates files in the index and working tree to match the…",95,[[["object"],["option",["checkoutbuilder"]],["self"],["checkoutbuilder"]],[["result",["error"]],["error"]]]],[11,"merge","","Merges the given commit(s) into HEAD, writing the results…",95,[[["checkoutbuilder"],["option",["mergeoptions"]],["option",["checkoutbuilder"]],["self"],["mergeoptions"]],[["result",["error"]],["error"]]]],[11,"merge_commits","","Merge two commits, producing an index that reflects the…",95,[[["commit"],["mergeoptions"],["option",["mergeoptions"]],["self"]],[["error"],["result",["index","error"]],["index"]]]],[11,"merge_trees","","Merge two trees, producing an index that reflects the…",95,[[["mergeoptions"],["option",["mergeoptions"]],["self"],["tree"]],[["error"],["result",["index","error"]],["index"]]]],[11,"cleanup_state","","Remove all the metadata associated with an ongoing command…",95,[[["self"]],[["result",["error"]],["error"]]]],[11,"merge_analysis","","Analyzes the given branch(es) and determines the…",95,[[["self"]],[["result",["error"]],["error"]]]],[11,"rebase","","Initializes a rebase operation to rebase the changes in…",95,[[["annotatedcommit"],["option",["annotatedcommit"]],["rebaseoptions"],["self"],["option",["rebaseoptions"]]],[["error"],["rebase"],["result",["rebase","error"]]]]],[11,"open_rebase","","Opens an existing rebase that was previously started by…",95,[[["rebaseoptions"],["self"],["option",["rebaseoptions"]]],[["error"],["rebase"],["result",["rebase","error"]]]]],[11,"note","","Add a note for an object",95,[[["signature"],["str"],["bool"],["option",["str"]],["self"],["oid"]],[["result",["oid","error"]],["oid"],["error"]]]],[11,"note_default_ref","","Get the default notes reference for this repository",95,[[["self"]],[["error"],["result",["string","error"]],["string"]]]],[11,"notes","","Creates a new iterator for notes in this repository.",95,[[["str"],["self"],["option",["str"]]],[["result",["notes","error"]],["error"],["notes"]]]],[11,"find_note","","Read the note for an object.",95,[[["str"],["option",["str"]],["self"],["oid"]],[["note"],["result",["note","error"]],["error"]]]],[11,"note_delete","","Remove the note for an object.",95,[[["str"],["signature"],["option",["str"]],["self"],["oid"]],[["result",["error"]],["error"]]]],[11,"revwalk","","Create a revwalk that can be used to traverse the commit…",95,[[["self"]],[["revwalk"],["result",["revwalk","error"]],["error"]]]],[11,"blame_file","","Get the blame for a single file.",95,[[["path"],["option",["blameoptions"]],["self"],["blameoptions"]],[["blame"],["error"],["result",["blame","error"]]]]],[11,"merge_base","","Find a merge base between two commits",95,[[["self"],["oid"]],[["result",["oid","error"]],["oid"],["error"]]]],[11,"merge_base_many","","Find a merge base given a list of commits",95,[[["self"]],[["result",["oid","error"]],["oid"],["error"]]]],[11,"merge_bases","","Find all merge bases between two commits",95,[[["self"],["oid"]],[["oidarray"],["result",["oidarray","error"]],["error"]]]],[11,"merge_bases_many","","Find all merge bases given a list of commits",95,[[["self"]],[["oidarray"],["result",["oidarray","error"]],["error"]]]],[11,"graph_ahead_behind","","Count the number of unique commits between two commit…",95,[[["self"],["oid"]],[["result",["error"]],["error"]]]],[11,"graph_descendant_of","","Determine if a commit is the descendant of another commit",95,[[["self"],["oid"]],[["error"],["result",["bool","error"]],["bool"]]]],[11,"reflog","","Read the reflog for the given reference",95,[[["str"],["self"]],[["reflog"],["error"],["result",["reflog","error"]]]]],[11,"reflog_delete","","Delete the reflog for the given reference",95,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"reflog_rename","","Rename a reflog",95,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"reference_has_log","","Check if the given reference has a reflog.",95,[[["str"],["self"]],[["error"],["result",["bool","error"]],["bool"]]]],[11,"reference_ensure_log","","Ensure that the given reference has a reflog.",95,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"describe","","Describes a commit",95,[[["describeoptions"],["self"]],[["result",["describe","error"]],["describe"],["error"]]]],[11,"diff_blobs","","Directly run a diff on two blobs.",95,[[["fnmut"],["fnmut"],["self"],["option",["diffoptions"]],["diffoptions"],["option",["fnmut"]],["fnmut"],["option",["str"]],["option",["fnmut"]],["option",["blob"]],["str"],["fnmut"],["option",["fnmut"]],["blob"],["option",["fnmut"]]],[["result",["error"]],["error"]]]],[11,"diff_tree_to_tree","","Create a diff with the difference between two tree objects.",95,[[["diffoptions"],["option",["diffoptions"]],["option",["tree"]],["self"],["tree"]],[["diff"],["result",["diff","error"]],["error"]]]],[11,"diff_tree_to_index","","Create a diff between a tree and repository index.",95,[[["diffoptions"],["option",["diffoptions"]],["index"],["option",["index"]],["option",["tree"]],["self"],["tree"]],[["diff"],["result",["diff","error"]],["error"]]]],[11,"diff_index_to_index","","Create a diff between two index objects.",95,[[["diffoptions"],["index"],["self"],["option",["diffoptions"]]],[["diff"],["result",["diff","error"]],["error"]]]],[11,"diff_index_to_workdir","","Create a diff between the repository index and the workdir…",95,[[["diffoptions"],["option",["index"]],["index"],["self"],["option",["diffoptions"]]],[["diff"],["result",["diff","error"]],["error"]]]],[11,"diff_tree_to_workdir","","Create a diff between a tree and the working directory.",95,[[["diffoptions"],["option",["diffoptions"]],["option",["tree"]],["self"],["tree"]],[["diff"],["result",["diff","error"]],["error"]]]],[11,"diff_tree_to_workdir_with_index","","Create a diff between a tree and the working directory…",95,[[["diffoptions"],["option",["diffoptions"]],["option",["tree"]],["self"],["tree"]],[["diff"],["result",["diff","error"]],["error"]]]],[11,"packbuilder","","Create a PackBuilder",95,[[["self"]],[["packbuilder"],["result",["packbuilder","error"]],["error"]]]],[11,"stash_save","","Save the local modifications to a new stash.",95,[[["signature"],["str"],["self"],["option",["stashflags"]],["stashflags"]],[["result",["oid","error"]],["oid"],["error"]]]],[11,"stash_save2","","Save the local modifications to a new stash. unlike…",95,[[["signature"],["str"],["option",["str"]],["self"],["option",["stashflags"]],["stashflags"]],[["result",["oid","error"]],["oid"],["error"]]]],[11,"stash_apply","","Apply a single stashed state from the stash list.",95,[[["usize"],["stashapplyoptions"],["option",["stashapplyoptions"]],["self"]],[["result",["error"]],["error"]]]],[11,"stash_foreach","","Loop over all the stashed states and issue a callback for…",95,[[["c"],["self"]],[["result",["error"]],["error"]]]],[11,"stash_drop","","Remove a single stashed state from the stash list.",95,[[["self"],["usize"]],[["result",["error"]],["error"]]]],[11,"stash_pop","","Apply a single stashed state from the stash list and…",95,[[["usize"],["stashapplyoptions"],["option",["stashapplyoptions"]],["self"]],[["result",["error"]],["error"]]]],[11,"add_ignore_rule","","Add ignore rules for a repository.",95,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"clear_ignore_rules","","Clear ignore rules that were explicitly added.",95,[[["self"]],[["result",["error"]],["error"]]]],[11,"is_path_ignored","","Test if the ignore rules apply to a given path.",95,[[["path"],["self"],["asref",["path"]]],[["error"],["result",["bool","error"]],["bool"]]]],[11,"cherrypick","","Perform a cherrypick",95,[[["commit"],["option",["cherrypickoptions"]],["cherrypickoptions"],["self"]],[["result",["error"]],["error"]]]],[11,"cherrypick_commit","","Create an index of uncommitted changes, representing the…",95,[[["u32"],["commit"],["mergeoptions"],["option",["mergeoptions"]],["self"]],[["error"],["result",["index","error"]],["index"]]]],[11,"branch_upstream_name","","Retrieves the name of the reference supporting the remote…",95,[[["str"],["self"]],[["buf"],["result",["buf","error"]],["error"]]]],[11,"branch_upstream_remote","","Retrieve the name of the upstream remote of a local branch.",95,[[["str"],["self"]],[["buf"],["result",["buf","error"]],["error"]]]],[11,"apply","","Apply a Diff to the given repo, making changes directly in…",95,[[["applylocation"],["option",["applyoptions"]],["applyoptions"],["diff"],["self"]],[["result",["error"]],["error"]]]],[11,"new","","Creates a default set of initialization options.",96,[[],["repositoryinitoptions"]]],[11,"bare","","Create a bare repository with no working directory.",96,[[["self"],["bool"]],["repositoryinitoptions"]]],[11,"no_reinit","","Return an error if the repository path appears to already…",96,[[["self"],["bool"]],["repositoryinitoptions"]]],[11,"no_dotgit_dir","","Normally a '/.git/' will be appended to the repo path for…",96,[[["self"],["bool"]],["repositoryinitoptions"]]],[11,"mkdir","","Make the repo path (and workdir path) as needed. The…",96,[[["self"],["bool"]],["repositoryinitoptions"]]],[11,"mkpath","","Recursively make all components of the repo and workdir…",96,[[["self"],["bool"]],["repositoryinitoptions"]]],[11,"mode","","Set to one of the `RepositoryInit` constants, or a custom…",96,[[["self"],["repositoryinitmode"]],["repositoryinitoptions"]]],[11,"external_template","","Enable or disable using external templates.",96,[[["self"],["bool"]],["repositoryinitoptions"]]],[11,"workdir_path","","The path to the working directory.",96,[[["self"],["path"]],["repositoryinitoptions"]]],[11,"description","","If set, this will be used to initialize the \"description\"…",96,[[["str"],["self"]],["repositoryinitoptions"]]],[11,"template_path","","When the `external_template` option is set, this is the…",96,[[["self"],["path"]],["repositoryinitoptions"]]],[11,"initial_head","","The name of the head to point HEAD at.",96,[[["str"],["self"]],["repositoryinitoptions"]]],[11,"origin_url","","If set, then after the rest of the repository…",96,[[["str"],["self"]],["repositoryinitoptions"]]],[11,"raw","","Creates a set of raw init options to be used with…",96,[[["self"]],["git_repository_init_options"]]],[11,"from_objects","","Assembles a new revspec from the from/to components.",97,[[["option",["object"]],["object"],["revparsemode"]],["revspec"]]],[11,"from","","Access the `from` range of this revspec.",97,[[["self"]],[["object"],["option",["object"]]]]],[11,"to","","Access the `to` range of this revspec.",97,[[["self"]],[["object"],["option",["object"]]]]],[11,"mode","","Returns the intent of the revspec.",97,[[["self"]],["revparsemode"]]],[11,"reset","","Reset a revwalk to allow re-configuring it.",98,[[["self"]],[["result",["error"]],["error"]]]],[11,"set_sorting","","Set the order in which commits are visited.",98,[[["self"],["sort"]],[["result",["error"]],["error"]]]],[11,"simplify_first_parent","","Simplify the history by first-parent",98,[[["self"]],[["result",["error"]],["error"]]]],[11,"push","","Mark a commit to start traversal from.",98,[[["self"],["oid"]],[["result",["error"]],["error"]]]],[11,"push_head","","Push the repository's HEAD",98,[[["self"]],[["result",["error"]],["error"]]]],[11,"push_glob","","Push matching references",98,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"push_range","","Push and hide the respective endpoints of the given range.",98,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"push_ref","","Push the OID pointed to by a reference",98,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"hide","","Mark a commit as not of interest to this revwalk.",98,[[["self"],["oid"]],[["result",["error"]],["error"]]]],[11,"hide_head","","Hide the repository's HEAD",98,[[["self"]],[["result",["error"]],["error"]]]],[11,"hide_glob","","Hide matching references.",98,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"hide_ref","","Hide the OID pointed to by a reference.",98,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"now","","Create a new action signature with a timestamp of 'now'.",99,[[["str"]],[["error"],["result",["signature","error"]],["signature"]]]],[11,"new","","Create a new action signature.",99,[[["str"],["time"]],[["error"],["result",["signature","error"]],["signature"]]]],[11,"name","","Gets the name on the signature.",99,[[["self"]],[["str"],["option",["str"]]]]],[11,"name_bytes","","Gets the name on the signature as a byte slice.",99,[[["self"]]]],[11,"email","","Gets the email on the signature.",99,[[["self"]],[["str"],["option",["str"]]]]],[11,"email_bytes","","Gets the email on the signature as a byte slice.",99,[[["self"]]]],[11,"when","","Get the `when` of this signature.",99,[[["self"]],["time"]]],[11,"to_owned","","Convert a signature of any lifetime into an owned…",99,[[["self"]],["signature"]]],[11,"new","","Creates a default set of merge options.",100,[[],["stashapplyoptions"]]],[11,"reinstantiate_index","","Set stash application flag to…",100,[[["self"]],["stashapplyoptions"]]],[11,"checkout_options","","Options to use when writing files to the working directory",100,[[["checkoutbuilder"],["self"]],["stashapplyoptions"]]],[11,"progress_cb","","Optional callback to notify the consumer of application…",100,[[["c"],["self"]],["stashapplyoptions"]]],[11,"raw","","Pointer to a raw git_stash_apply_options",100,[[["self"]],["git_stash_apply_options"]]],[11,"new","","Creates a new blank set of status options.",101,[[],["statusoptions"]]],[11,"show","","Select the files on which to report status.",101,[[["statusshow"],["self"]],["statusoptions"]]],[11,"pathspec","","Add a path pattern to match (using fnmatch-style matching).",101,[[["self"],["intocstring"]],["statusoptions"]]],[11,"include_untracked","","Flag whether untracked files will be included.",101,[[["self"],["bool"]],["statusoptions"]]],[11,"include_ignored","","Flag whether ignored files will be included.",101,[[["self"],["bool"]],["statusoptions"]]],[11,"include_unmodified","","Flag to include unmodified files.",101,[[["self"],["bool"]],["statusoptions"]]],[11,"exclude_submodules","","Flag that submodules should be skipped.",101,[[["self"],["bool"]],["statusoptions"]]],[11,"recurse_untracked_dirs","","Flag that all files in untracked directories should be…",101,[[["self"],["bool"]],["statusoptions"]]],[11,"disable_pathspec_match","","Indicates that the given paths should be treated as…",101,[[["self"],["bool"]],["statusoptions"]]],[11,"recurse_ignored_dirs","","Indicates that the contents of ignored directories should…",101,[[["self"],["bool"]],["statusoptions"]]],[11,"renames_head_to_index","","Indicates that rename detection should be processed…",101,[[["self"],["bool"]],["statusoptions"]]],[11,"renames_index_to_workdir","","Indicates that rename detection should be run between the…",101,[[["self"],["bool"]],["statusoptions"]]],[11,"sort_case_sensitively","","Override the native case sensitivity for the file system…",101,[[["self"],["bool"]],["statusoptions"]]],[11,"sort_case_insensitively","","Override the native case sensitivity for the file system…",101,[[["self"],["bool"]],["statusoptions"]]],[11,"renames_from_rewrites","","Indicates that rename detection should include rewritten…",101,[[["self"],["bool"]],["statusoptions"]]],[11,"no_refresh","","Bypasses the default status behavior of doing a \"soft\"…",101,[[["self"],["bool"]],["statusoptions"]]],[11,"update_index","","Refresh the stat cache in the index for files are…",101,[[["self"],["bool"]],["statusoptions"]]],[11,"include_unreadable","","",101,[[["self"],["bool"]],["statusoptions"]]],[11,"include_unreadable_as_untracked","","",101,[[["self"],["bool"]],["statusoptions"]]],[11,"raw","","Get a pointer to the inner list of status options.",101,[[["self"]]]],[11,"get","","Gets a status entry from this list at the specified index.",102,[[["self"],["usize"]],[["option",["statusentry"]],["statusentry"]]]],[11,"len","","Gets the count of status entries in this list.",102,[[["self"]],["usize"]]],[11,"is_empty","","Return `true` if there is no status entry in this list.",102,[[["self"]],["bool"]]],[11,"iter","","Returns an iterator over the statuses in this list.",102,[[["self"]],["statusiter"]]],[11,"path_bytes","","Access the bytes for this entry's corresponding pathname",103,[[["self"]]]],[11,"path","","Access this entry's path name as a string.",103,[[["self"]],[["str"],["option",["str"]]]]],[11,"status","","Access the status flags for this file",103,[[["self"]],["status"]]],[11,"head_to_index","","Access detailed information about the differences between…",103,[[["self"]],[["option",["diffdelta"]],["diffdelta"]]]],[11,"index_to_workdir","","Access detailed information about the differences between…",103,[[["self"]],[["option",["diffdelta"]],["diffdelta"]]]],[11,"branch","","Get the submodule's branch.",104,[[["self"]],[["str"],["option",["str"]]]]],[11,"branch_bytes","","Get the branch for the submodule.",104,[[["self"]],["option"]]],[11,"url","","Get the submodule's url.",104,[[["self"]],[["str"],["option",["str"]]]]],[11,"opt_url_bytes","","Get the url for the submodule.",104,[[["self"]],["option"]]],[11,"name","","Get the submodule's name.",104,[[["self"]],[["str"],["option",["str"]]]]],[11,"name_bytes","","Get the name for the submodule.",104,[[["self"]]]],[11,"path","","Get the path for the submodule.",104,[[["self"]],["path"]]],[11,"head_id","","Get the OID for the submodule in the current HEAD tree.",104,[[["self"]],[["option",["oid"]],["oid"]]]],[11,"index_id","","Get the OID for the submodule in the index.",104,[[["self"]],[["option",["oid"]],["oid"]]]],[11,"workdir_id","","Get the OID for the submodule in the current working…",104,[[["self"]],[["option",["oid"]],["oid"]]]],[11,"init","","Copy submodule info into \".git/config\" file.",104,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"open","","Open the repository for a submodule.",104,[[["self"]],[["error"],["result",["repository","error"]],["repository"]]]],[11,"reload","","Reread submodule info from config, index, and HEAD.",104,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"sync","","Copy submodule remote info into submodule repo.",104,[[["self"]],[["result",["error"]],["error"]]]],[11,"add_to_index","","Add current submodule HEAD commit to index of superproject.",104,[[["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"add_finalize","","Resolve the setup of a new git submodule.",104,[[["self"]],[["result",["error"]],["error"]]]],[11,"update","","Update submodule.",104,[[["submoduleupdateoptions"],["option",["submoduleupdateoptions"]],["self"],["bool"]],[["result",["error"]],["error"]]]],[11,"new","","Return default options.",105,[[],["self"]]],[11,"checkout","","Set checkout options.",105,[[["checkoutbuilder"],["self"]],["self"]]],[11,"fetch","","Set fetch options and allow fetching.",105,[[["fetchoptions"],["self"]],["self"]]],[11,"allow_fetch","","Allow or disallow fetching.",105,[[["self"],["bool"]],["self"]]],[11,"id","","Get the id (SHA1) of a repository tag",106,[[["self"]],["oid"]]],[11,"message","","Get the message of a tag",106,[[["self"]],[["str"],["option",["str"]]]]],[11,"message_bytes","","Get the message of a tag",106,[[["self"]],["option"]]],[11,"name","","Get the name of a tag",106,[[["self"]],[["str"],["option",["str"]]]]],[11,"name_bytes","","Get the name of a tag",106,[[["self"]]]],[11,"peel","","Recursively peel a tag until a non tag git_object is found",106,[[["self"]],[["result",["object","error"]],["object"],["error"]]]],[11,"tagger","","Get the tagger (author) of a tag",106,[[["self"]],[["option",["signature"]],["signature"]]]],[11,"target","","Get the tagged object of a tag",106,[[["self"]],[["result",["object","error"]],["object"],["error"]]]],[11,"target_id","","Get the OID of the tagged object of a tag",106,[[["self"]],["oid"]]],[11,"target_type","","Get the OID of the tagged object of a tag",106,[[["self"]],[["option",["objecttype"]],["objecttype"]]]],[11,"as_object","","Casts this Tag to be usable as an `Object`",106,[[["self"]],["object"]]],[11,"into_object","","Consumes Tag to be returned as an `Object`",106,[[],["object"]]],[11,"new","","Creates a new time structure from its components.",107,[[["i64"],["i32"]],["time"]]],[11,"seconds","","Return the time, in seconds, from epoch",107,[[["self"]],["i64"]]],[11,"offset_minutes","","Return the timezone offset, in minutes",107,[[["self"]],["i32"]]],[11,"sign","","Return whether the offset was positive or negative.…",107,[[["self"]],["char"]]],[11,"new","","Creates a new time structure from its components.",108,[[["u32"],["i32"]],["indextime"]]],[11,"seconds","","Returns the number of seconds in the second component of…",108,[[["self"]],["i32"]]],[11,"nanoseconds","","Returns the nanosecond component of this time.",108,[[["self"]],["u32"]]],[11,"id","","Get the id (SHA1) of a repository object",109,[[["self"]],["oid"]]],[11,"len","","Get the number of entries listed in this tree.",109,[[["self"]],["usize"]]],[11,"is_empty","","Return `true` if there is not entry",109,[[["self"]],["bool"]]],[11,"iter","","Returns an iterator over the entries in this tree.",109,[[["self"]],["treeiter"]]],[11,"walk","","Traverse the entries in a tree and its subtrees in post or…",109,[[["c"],["treewalkmode"],["self"]],[["result",["error"]],["error"]]]],[11,"get_id","","Lookup a tree entry by SHA value.",109,[[["self"],["oid"]],[["treeentry"],["option",["treeentry"]]]]],[11,"get","","Lookup a tree entry by its position in the tree",109,[[["self"],["usize"]],[["treeentry"],["option",["treeentry"]]]]],[11,"get_name","","Lookup a tree entry by its filename",109,[[["str"],["self"]],[["treeentry"],["option",["treeentry"]]]]],[11,"get_path","","Retrieve a tree entry contained in a tree or in any of its…",109,[[["path"],["self"]],[["treeentry"],["result",["treeentry","error"]],["error"]]]],[11,"as_object","","Casts this Tree to be usable as an `Object`",109,[[["self"]],["object"]]],[11,"into_object","","Consumes Commit to be returned as an `Object`",109,[[],["object"]]],[11,"id","","Get the id of the object pointed by the entry",110,[[["self"]],["oid"]]],[11,"name","","Get the filename of a tree entry",110,[[["self"]],[["str"],["option",["str"]]]]],[11,"name_bytes","","Get the filename of a tree entry",110,[[["self"]]]],[11,"to_object","","Convert a tree entry to the object it points to.",110,[[["repository"],["self"]],[["error"],["object"],["result",["object","error"]]]]],[11,"kind","","Get the type of the object pointed by the entry",110,[[["self"]],[["option",["objecttype"]],["objecttype"]]]],[11,"filemode","","Get the UNIX file attributes of a tree entry",110,[[["self"]],["i32"]]],[11,"filemode_raw","","Get the raw UNIX file attributes of a tree entry",110,[[["self"]],["i32"]]],[11,"to_owned","","Convert this entry of any lifetime into an owned signature…",110,[[["self"]],["treeentry"]]],[11,"clear","","Clear all the entries in the builder",111,[[["self"]],[["result",["error"]],["error"]]]],[11,"len","","Get the number of entries",111,[[["self"]],["usize"]]],[11,"is_empty","","Return `true` if there is no entry",111,[[["self"]],["bool"]]],[11,"get","","Get en entry from the builder from its filename",111,[[["self"],["p"]],[["result",["option","error"]],["option",["treeentry"]],["error"]]]],[11,"insert","","Add or update an entry in the builder",111,[[["i32"],["self"],["oid"],["intocstring"]],[["result",["treeentry","error"]],["treeentry"],["error"]]]],[11,"remove","","Remove an entry from the builder by its filename",111,[[["self"],["intocstring"]],[["result",["error"]],["error"]]]],[11,"filter","","Selectively remove entries from the tree",111,[[["self"],["f"]],[["result",["error"]],["error"]]]],[11,"write","","Write the contents of the TreeBuilder as a Tree object and…",111,[[["self"]],[["result",["oid","error"]],["oid"],["error"]]]],[6,"IndexMatchedPath","","A callback function to filter index matches.",null,null],[6,"IndexerProgress","","Callback to be invoked while indexing is in progress.",null,null],[6,"Credentials","","Callback used to acquire credentials for when a remote is…",null,null],[6,"TransportMessage","","Callback for receiving messages delivered by the transport.",null,null],[6,"UpdateTips","","Callback for whenever a reference is updated locally.",null,null],[6,"StashApplyProgressCb","","Stash application progress notification function.",null,null],[6,"StashCb","","This is a callback function you can provide to iterate…",null,null],[17,"DEFAULT_COMMENT_CHAR","","The default comment character for `message_prettify` ('#')",null,null],[8,"IntoCString","","A class of types that can be converted to C strings.",null,null],[10,"into_c_string","","Consume this container, converting it into a CString",112,[[],[["result",["cstring","error"]],["error"],["cstring"]]]],[18,"NONE","","Sort the repository contents in no particular ordering.",113,null],[18,"TOPOLOGICAL","","Sort the repository contents in topological order…",113,null],[18,"TIME","","Sort the repository contents by commit time.",113,null],[18,"REVERSE","","Iterate through the repository contents in reverse order.",113,null],[11,"empty","","Returns an empty set of flags",113,[[],["sort"]]],[11,"all","","Returns the set containing all flags.",113,[[],["sort"]]],[11,"bits","","Returns the raw value of the flags currently stored.",113,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",113,[[["u32"]],[["option",["sort"]],["sort"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",113,[[["u32"]],["sort"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",113,[[["u32"]],["sort"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",113,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",113,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",113,[[["self"],["sort"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",113,[[["self"],["sort"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",113,[[["self"],["sort"]]]],[11,"remove","","Removes the specified flags in-place.",113,[[["self"],["sort"]]]],[11,"toggle","","Toggles the specified flags in-place.",113,[[["self"],["sort"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",113,[[["self"],["sort"],["bool"]]]],[11,"is_none","","",113,[[["self"]],["bool"]]],[11,"is_topological","","",113,[[["self"]],["bool"]]],[11,"is_time","","",113,[[["self"]],["bool"]]],[11,"is_reverse","","",113,[[["self"]],["bool"]]],[18,"USER_PASS_PLAINTEXT","","",114,null],[18,"SSH_KEY","","",114,null],[18,"SSH_MEMORY","","",114,null],[18,"SSH_CUSTOM","","",114,null],[18,"DEFAULT","","",114,null],[18,"SSH_INTERACTIVE","","",114,null],[18,"USERNAME","","",114,null],[11,"empty","","Returns an empty set of flags",114,[[],["credentialtype"]]],[11,"all","","Returns the set containing all flags.",114,[[],["credentialtype"]]],[11,"bits","","Returns the raw value of the flags currently stored.",114,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",114,[[["u32"]],[["option",["credentialtype"]],["credentialtype"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",114,[[["u32"]],["credentialtype"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",114,[[["u32"]],["credentialtype"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",114,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",114,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",114,[[["credentialtype"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",114,[[["credentialtype"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",114,[[["self"],["credentialtype"]]]],[11,"remove","","Removes the specified flags in-place.",114,[[["self"],["credentialtype"]]]],[11,"toggle","","Toggles the specified flags in-place.",114,[[["self"],["credentialtype"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",114,[[["self"],["credentialtype"],["bool"]]]],[11,"is_user_pass_plaintext","","",114,[[["self"]],["bool"]]],[11,"is_ssh_key","","",114,[[["self"]],["bool"]]],[11,"is_ssh_memory","","",114,[[["self"]],["bool"]]],[11,"is_ssh_custom","","",114,[[["self"]],["bool"]]],[11,"is_default","","",114,[[["self"]],["bool"]]],[11,"is_ssh_interactive","","",114,[[["self"]],["bool"]]],[11,"is_username","","",114,[[["self"]],["bool"]]],[18,"EXTENDED","","Set when the `extended_flags` field is valid.",115,null],[18,"VALID","","\"Assume valid\" flag",115,null],[11,"empty","","Returns an empty set of flags",115,[[],["indexentryflag"]]],[11,"all","","Returns the set containing all flags.",115,[[],["indexentryflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",115,[[["self"]],["u16"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",115,[[["u16"]],[["option",["indexentryflag"]],["indexentryflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",115,[[["u16"]],["indexentryflag"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",115,[[["u16"]],["indexentryflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",115,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",115,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",115,[[["indexentryflag"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",115,[[["indexentryflag"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",115,[[["indexentryflag"],["self"]]]],[11,"remove","","Removes the specified flags in-place.",115,[[["indexentryflag"],["self"]]]],[11,"toggle","","Toggles the specified flags in-place.",115,[[["indexentryflag"],["self"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",115,[[["indexentryflag"],["self"],["bool"]]]],[11,"is_extended","","",115,[[["self"]],["bool"]]],[11,"is_valid","","",115,[[["self"]],["bool"]]],[18,"INTENT_TO_ADD","","An \"intent to add\" entry from \"git add -N\"",116,null],[18,"SKIP_WORKTREE","","Skip the associated worktree file, for sparse checkouts",116,null],[18,"UPTODATE","","",116,null],[11,"empty","","Returns an empty set of flags",116,[[],["indexentryextendedflag"]]],[11,"all","","Returns the set containing all flags.",116,[[],["indexentryextendedflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",116,[[["self"]],["u16"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",116,[[["u16"]],[["option",["indexentryextendedflag"]],["indexentryextendedflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",116,[[["u16"]],["indexentryextendedflag"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",116,[[["u16"]],["indexentryextendedflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",116,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",116,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",116,[[["self"],["indexentryextendedflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",116,[[["self"],["indexentryextendedflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",116,[[["self"],["indexentryextendedflag"]]]],[11,"remove","","Removes the specified flags in-place.",116,[[["self"],["indexentryextendedflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",116,[[["self"],["indexentryextendedflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",116,[[["self"],["indexentryextendedflag"],["bool"]]]],[11,"is_intent_to_add","","",116,[[["self"]],["bool"]]],[11,"is_skip_worktree","","",116,[[["self"]],["bool"]]],[11,"is_up_to_date","","",116,[[["self"]],["bool"]]],[18,"DEFAULT","","",117,null],[18,"FORCE","","",117,null],[18,"DISABLE_PATHSPEC_MATCH","","",117,null],[18,"CHECK_PATHSPEC","","",117,null],[11,"empty","","Returns an empty set of flags",117,[[],["indexaddoption"]]],[11,"all","","Returns the set containing all flags.",117,[[],["indexaddoption"]]],[11,"bits","","Returns the raw value of the flags currently stored.",117,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",117,[[["u32"]],[["indexaddoption"],["option",["indexaddoption"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",117,[[["u32"]],["indexaddoption"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",117,[[["u32"]],["indexaddoption"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",117,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",117,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",117,[[["indexaddoption"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",117,[[["indexaddoption"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",117,[[["indexaddoption"],["self"]]]],[11,"remove","","Removes the specified flags in-place.",117,[[["indexaddoption"],["self"]]]],[11,"toggle","","Toggles the specified flags in-place.",117,[[["indexaddoption"],["self"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",117,[[["indexaddoption"],["self"],["bool"]]]],[11,"is_default","","",117,[[["self"]],["bool"]]],[11,"is_force","","",117,[[["self"]],["bool"]]],[11,"is_disable_pathspec_match","","",117,[[["self"]],["bool"]]],[11,"is_check_pathspec","","",117,[[["self"]],["bool"]]],[18,"NO_SEARCH","","Only open the specified path; don't walk upward searching.",118,null],[18,"CROSS_FS","","Search across filesystem boundaries.",118,null],[18,"BARE","","Force opening as bare repository, and defer loading its…",118,null],[18,"NO_DOTGIT","","Don't try appending `/.git` to the specified repository…",118,null],[18,"FROM_ENV","","Respect environment variables like `$GIT_DIR`.",118,null],[11,"empty","","Returns an empty set of flags",118,[[],["repositoryopenflags"]]],[11,"all","","Returns the set containing all flags.",118,[[],["repositoryopenflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",118,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",118,[[["u32"]],[["option",["repositoryopenflags"]],["repositoryopenflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",118,[[["u32"]],["repositoryopenflags"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",118,[[["u32"]],["repositoryopenflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",118,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",118,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",118,[[["self"],["repositoryopenflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",118,[[["self"],["repositoryopenflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",118,[[["self"],["repositoryopenflags"]]]],[11,"remove","","Removes the specified flags in-place.",118,[[["self"],["repositoryopenflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",118,[[["self"],["repositoryopenflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",118,[[["bool"],["self"],["repositoryopenflags"]]]],[11,"is_no_search","","",118,[[["self"]],["bool"]]],[11,"is_cross_fs","","",118,[[["self"]],["bool"]]],[11,"is_bare","","",118,[[["self"]],["bool"]]],[11,"is_no_dotgit","","",118,[[["self"]],["bool"]]],[11,"is_from_env","","",118,[[["self"]],["bool"]]],[18,"SINGLE","","The spec targeted a single object",119,null],[18,"RANGE","","The spec targeted a range of commits",119,null],[18,"MERGE_BASE","","The spec used the `...` operator, which invokes special…",119,null],[11,"empty","","Returns an empty set of flags",119,[[],["revparsemode"]]],[11,"all","","Returns the set containing all flags.",119,[[],["revparsemode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",119,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",119,[[["u32"]],[["revparsemode"],["option",["revparsemode"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",119,[[["u32"]],["revparsemode"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",119,[[["u32"]],["revparsemode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",119,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",119,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",119,[[["self"],["revparsemode"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",119,[[["self"],["revparsemode"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",119,[[["self"],["revparsemode"]]]],[11,"remove","","Removes the specified flags in-place.",119,[[["self"],["revparsemode"]]]],[11,"toggle","","Toggles the specified flags in-place.",119,[[["self"],["revparsemode"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",119,[[["self"],["revparsemode"],["bool"]]]],[11,"is_no_single","","",119,[[["self"]],["bool"]]],[11,"is_range","","",119,[[["self"]],["bool"]]],[11,"is_merge_base","","",119,[[["self"]],["bool"]]],[18,"ANALYSIS_NONE","","No merge is possible.",120,null],[18,"ANALYSIS_NORMAL","","A \"normal\" merge; both HEAD and the given merge input have…",120,null],[18,"ANALYSIS_UP_TO_DATE","","All given merge inputs are reachable from HEAD, meaning…",120,null],[18,"ANALYSIS_FASTFORWARD","","The given merge input is a fast-forward from HEAD and no…",120,null],[18,"ANALYSIS_UNBORN","","The HEAD of the current repository is \"unborn\" and does…",120,null],[11,"empty","","Returns an empty set of flags",120,[[],["mergeanalysis"]]],[11,"all","","Returns the set containing all flags.",120,[[],["mergeanalysis"]]],[11,"bits","","Returns the raw value of the flags currently stored.",120,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",120,[[["u32"]],[["mergeanalysis"],["option",["mergeanalysis"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",120,[[["u32"]],["mergeanalysis"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",120,[[["u32"]],["mergeanalysis"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",120,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",120,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",120,[[["mergeanalysis"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",120,[[["mergeanalysis"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",120,[[["mergeanalysis"],["self"]]]],[11,"remove","","Removes the specified flags in-place.",120,[[["mergeanalysis"],["self"]]]],[11,"toggle","","Toggles the specified flags in-place.",120,[[["mergeanalysis"],["self"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",120,[[["mergeanalysis"],["self"],["bool"]]]],[11,"is_none","","",120,[[["self"]],["bool"]]],[11,"is_normal","","",120,[[["self"]],["bool"]]],[11,"is_up_to_date","","",120,[[["self"]],["bool"]]],[11,"is_fast_forward","","",120,[[["self"]],["bool"]]],[11,"is_unborn","","",120,[[["self"]],["bool"]]],[18,"NONE","","No configuration was found that suggests a preferred…",121,null],[18,"NO_FAST_FORWARD","","There is a `merge.ff=false` configuration setting,…",121,null],[18,"FASTFORWARD_ONLY","","There is a `merge.ff=only` configuration setting,…",121,null],[11,"empty","","Returns an empty set of flags",121,[[],["mergepreference"]]],[11,"all","","Returns the set containing all flags.",121,[[],["mergepreference"]]],[11,"bits","","Returns the raw value of the flags currently stored.",121,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",121,[[["u32"]],[["option",["mergepreference"]],["mergepreference"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",121,[[["u32"]],["mergepreference"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",121,[[["u32"]],["mergepreference"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",121,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",121,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",121,[[["mergepreference"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",121,[[["mergepreference"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",121,[[["self"],["mergepreference"]]]],[11,"remove","","Removes the specified flags in-place.",121,[[["self"],["mergepreference"]]]],[11,"toggle","","Toggles the specified flags in-place.",121,[[["self"],["mergepreference"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",121,[[["self"],["mergepreference"],["bool"]]]],[11,"is_none","","",121,[[["self"]],["bool"]]],[11,"is_no_fast_forward","","",121,[[["self"]],["bool"]]],[11,"is_fastforward_only","","",121,[[["self"]],["bool"]]],[11,"str","","Convert an object type to its string representation.",15,[[["self"]],["str"]]],[11,"is_loose","","Determine if the given git_object_t is a valid loose…",15,[[["self"]],["bool"]]],[11,"from_raw","","Convert a raw git_object_t to an ObjectType",15,[[["git_object_t"]],[["option",["objecttype"]],["objecttype"]]]],[11,"raw","","Convert this kind into its raw representation",15,[[["self"]],["git_object_t"]]],[11,"from_str","","Convert a string object type representation to its object…",15,[[["str"]],[["option",["objecttype"]],["objecttype"]]]],[11,"str","","Convert an object type to its string representation.",16,[[["self"]],["str"]]],[11,"from_raw","","Convert a raw git_reference_t to a ReferenceType.",16,[[["git_reference_t"]],[["option",["referencetype"]],["referencetype"]]]],[11,"from_raw","","Converts a raw configuration level to a ConfigLevel",18,[[["git_config_level_t"]],["configlevel"]]],[18,"CURRENT","","",122,null],[18,"INDEX_NEW","","",122,null],[18,"INDEX_MODIFIED","","",122,null],[18,"INDEX_DELETED","","",122,null],[18,"INDEX_RENAMED","","",122,null],[18,"INDEX_TYPECHANGE","","",122,null],[18,"WT_NEW","","",122,null],[18,"WT_MODIFIED","","",122,null],[18,"WT_DELETED","","",122,null],[18,"WT_TYPECHANGE","","",122,null],[18,"WT_RENAMED","","",122,null],[18,"IGNORED","","",122,null],[18,"CONFLICTED","","",122,null],[11,"empty","","Returns an empty set of flags",122,[[],["status"]]],[11,"all","","Returns the set containing all flags.",122,[[],["status"]]],[11,"bits","","Returns the raw value of the flags currently stored.",122,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",122,[[["u32"]],[["option",["status"]],["status"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",122,[[["u32"]],["status"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",122,[[["u32"]],["status"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",122,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",122,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",122,[[["self"],["status"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",122,[[["self"],["status"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",122,[[["self"],["status"]]]],[11,"remove","","Removes the specified flags in-place.",122,[[["self"],["status"]]]],[11,"toggle","","Toggles the specified flags in-place.",122,[[["self"],["status"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",122,[[["self"],["status"],["bool"]]]],[11,"is_index_new","","",122,[[["self"]],["bool"]]],[11,"is_index_modified","","",122,[[["self"]],["bool"]]],[11,"is_index_deleted","","",122,[[["self"]],["bool"]]],[11,"is_index_renamed","","",122,[[["self"]],["bool"]]],[11,"is_index_typechange","","",122,[[["self"]],["bool"]]],[11,"is_wt_new","","",122,[[["self"]],["bool"]]],[11,"is_wt_modified","","",122,[[["self"]],["bool"]]],[11,"is_wt_deleted","","",122,[[["self"]],["bool"]]],[11,"is_wt_typechange","","",122,[[["self"]],["bool"]]],[11,"is_wt_renamed","","",122,[[["self"]],["bool"]]],[11,"is_ignored","","",122,[[["self"]],["bool"]]],[11,"is_conflicted","","",122,[[["self"]],["bool"]]],[18,"SHARED_UMASK","","Use permissions configured by umask - the default",123,null],[18,"SHARED_GROUP","","Use `--shared=group` behavior, chmod'ing the new repo to…",123,null],[18,"SHARED_ALL","","Use `--shared=all` behavior, adding world readability.",123,null],[11,"empty","","Returns an empty set of flags",123,[[],["repositoryinitmode"]]],[11,"all","","Returns the set containing all flags.",123,[[],["repositoryinitmode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",123,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",123,[[["u32"]],[["repositoryinitmode"],["option",["repositoryinitmode"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",123,[[["u32"]],["repositoryinitmode"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",123,[[["u32"]],["repositoryinitmode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",123,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",123,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",123,[[["repositoryinitmode"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",123,[[["repositoryinitmode"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",123,[[["self"],["repositoryinitmode"]]]],[11,"remove","","Removes the specified flags in-place.",123,[[["self"],["repositoryinitmode"]]]],[11,"toggle","","Toggles the specified flags in-place.",123,[[["self"],["repositoryinitmode"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",123,[[["self"],["repositoryinitmode"],["bool"]]]],[11,"is_shared_umask","","",123,[[["self"]],["bool"]]],[11,"is_shared_group","","",123,[[["self"]],["bool"]]],[11,"is_shared_all","","",123,[[["self"]],["bool"]]],[18,"IN_HEAD","","",124,null],[18,"IN_INDEX","","",124,null],[18,"IN_CONFIG","","",124,null],[18,"IN_WD","","",124,null],[18,"INDEX_ADDED","","",124,null],[18,"INDEX_DELETED","","",124,null],[18,"INDEX_MODIFIED","","",124,null],[18,"WD_UNINITIALIZED","","",124,null],[18,"WD_ADDED","","",124,null],[18,"WD_DELETED","","",124,null],[18,"WD_MODIFIED","","",124,null],[18,"WD_INDEX_MODIFIED","","",124,null],[18,"WD_WD_MODIFIED","","",124,null],[18,"WD_UNTRACKED","","",124,null],[11,"empty","","Returns an empty set of flags",124,[[],["submodulestatus"]]],[11,"all","","Returns the set containing all flags.",124,[[],["submodulestatus"]]],[11,"bits","","Returns the raw value of the flags currently stored.",124,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",124,[[["u32"]],[["submodulestatus"],["option",["submodulestatus"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",124,[[["u32"]],["submodulestatus"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",124,[[["u32"]],["submodulestatus"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",124,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",124,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",124,[[["self"],["submodulestatus"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",124,[[["self"],["submodulestatus"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",124,[[["self"],["submodulestatus"]]]],[11,"remove","","Removes the specified flags in-place.",124,[[["self"],["submodulestatus"]]]],[11,"toggle","","Toggles the specified flags in-place.",124,[[["self"],["submodulestatus"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",124,[[["bool"],["self"],["submodulestatus"]]]],[11,"is_in_head","","",124,[[["self"]],["bool"]]],[11,"is_in_index","","",124,[[["self"]],["bool"]]],[11,"is_in_config","","",124,[[["self"]],["bool"]]],[11,"is_in_wd","","",124,[[["self"]],["bool"]]],[11,"is_index_added","","",124,[[["self"]],["bool"]]],[11,"is_index_deleted","","",124,[[["self"]],["bool"]]],[11,"is_index_modified","","",124,[[["self"]],["bool"]]],[11,"is_wd_uninitialized","","",124,[[["self"]],["bool"]]],[11,"is_wd_added","","",124,[[["self"]],["bool"]]],[11,"is_wd_deleted","","",124,[[["self"]],["bool"]]],[11,"is_wd_modified","","",124,[[["self"]],["bool"]]],[11,"is_wd_wd_modified","","",124,[[["self"]],["bool"]]],[11,"is_wd_untracked","","",124,[[["self"]],["bool"]]],[18,"DEFAULT","","Use the default pathspec matching configuration.",125,null],[18,"IGNORE_CASE","","Force matching to ignore case, otherwise matching will use…",125,null],[18,"USE_CASE","","Force case sensitive matches, otherwise match will use the…",125,null],[18,"NO_GLOB","","Disable glob patterns and just use simple string…",125,null],[18,"NO_MATCH_ERROR","","Means that match functions return the error code…",125,null],[18,"FIND_FAILURES","","Means that the list returned should track which patterns…",125,null],[18,"FAILURES_ONLY","","Means that the list returned does not need to keep the…",125,null],[11,"empty","","Returns an empty set of flags",125,[[],["pathspecflags"]]],[11,"all","","Returns the set containing all flags.",125,[[],["pathspecflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",125,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",125,[[["u32"]],[["pathspecflags"],["option",["pathspecflags"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",125,[[["u32"]],["pathspecflags"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",125,[[["u32"]],["pathspecflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",125,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",125,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",125,[[["self"],["pathspecflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",125,[[["self"],["pathspecflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",125,[[["self"],["pathspecflags"]]]],[11,"remove","","Removes the specified flags in-place.",125,[[["self"],["pathspecflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",125,[[["self"],["pathspecflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",125,[[["bool"],["self"],["pathspecflags"]]]],[11,"is_default","","",125,[[["self"]],["bool"]]],[11,"is_ignore_case","","",125,[[["self"]],["bool"]]],[11,"is_use_case","","",125,[[["self"]],["bool"]]],[11,"is_no_glob","","",125,[[["self"]],["bool"]]],[11,"is_no_match_error","","",125,[[["self"]],["bool"]]],[11,"is_find_failures","","",125,[[["self"]],["bool"]]],[11,"is_failures_only","","",125,[[["self"]],["bool"]]],[18,"CONFLICT","","Notification about a conflict.",126,null],[18,"DIRTY","","Notification about a dirty file.",126,null],[18,"UPDATED","","Notification about an updated file.",126,null],[18,"UNTRACKED","","Notification about an untracked file.",126,null],[18,"IGNORED","","Notification about an ignored file.",126,null],[11,"empty","","Returns an empty set of flags",126,[[],["checkoutnotificationtype"]]],[11,"all","","Returns the set containing all flags.",126,[[],["checkoutnotificationtype"]]],[11,"bits","","Returns the raw value of the flags currently stored.",126,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",126,[[["u32"]],[["option",["checkoutnotificationtype"]],["checkoutnotificationtype"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",126,[[["u32"]],["checkoutnotificationtype"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",126,[[["u32"]],["checkoutnotificationtype"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",126,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",126,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",126,[[["checkoutnotificationtype"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",126,[[["checkoutnotificationtype"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",126,[[["checkoutnotificationtype"],["self"]]]],[11,"remove","","Removes the specified flags in-place.",126,[[["checkoutnotificationtype"],["self"]]]],[11,"toggle","","Toggles the specified flags in-place.",126,[[["checkoutnotificationtype"],["self"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",126,[[["checkoutnotificationtype"],["self"],["bool"]]]],[11,"is_conflict","","",126,[[["self"]],["bool"]]],[11,"is_dirty","","",126,[[["self"]],["bool"]]],[11,"is_updated","","",126,[[["self"]],["bool"]]],[11,"is_untracked","","",126,[[["self"]],["bool"]]],[11,"is_ignored","","",126,[[["self"]],["bool"]]],[18,"NONE","","Don't generate any stats",127,null],[18,"FULL","","Equivalent of `--stat` in git",127,null],[18,"SHORT","","Equivalent of `--shortstat` in git",127,null],[18,"NUMBER","","Equivalent of `--numstat` in git",127,null],[18,"INCLUDE_SUMMARY","","Extended header information such as creations, renames and…",127,null],[11,"empty","","Returns an empty set of flags",127,[[],["diffstatsformat"]]],[11,"all","","Returns the set containing all flags.",127,[[],["diffstatsformat"]]],[11,"bits","","Returns the raw value of the flags currently stored.",127,[[["self"]],["git_diff_stats_format_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",127,[[["git_diff_stats_format_t"]],[["diffstatsformat"],["option",["diffstatsformat"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",127,[[["git_diff_stats_format_t"]],["diffstatsformat"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",127,[[["git_diff_stats_format_t"]],["diffstatsformat"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",127,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",127,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",127,[[["diffstatsformat"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",127,[[["diffstatsformat"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",127,[[["self"],["diffstatsformat"]]]],[11,"remove","","Removes the specified flags in-place.",127,[[["self"],["diffstatsformat"]]]],[11,"toggle","","Toggles the specified flags in-place.",127,[[["self"],["diffstatsformat"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",127,[[["self"],["diffstatsformat"],["bool"]]]],[11,"is_none","","",127,[[["self"]],["bool"]]],[11,"is_full","","",127,[[["self"]],["bool"]]],[11,"is_short","","",127,[[["self"]],["bool"]]],[11,"is_number","","",127,[[["self"]],["bool"]]],[11,"is_include_summary","","",127,[[["self"]],["bool"]]],[18,"DEFAULT","","",128,null],[18,"REINSTATE_INDEX","","Try to reinstate not only the working tree's changes, but…",128,null],[11,"empty","","Returns an empty set of flags",128,[[],["stashapplyflags"]]],[11,"all","","Returns the set containing all flags.",128,[[],["stashapplyflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",128,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",128,[[["u32"]],[["option",["stashapplyflags"]],["stashapplyflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",128,[[["u32"]],["stashapplyflags"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",128,[[["u32"]],["stashapplyflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",128,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",128,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",128,[[["self"],["stashapplyflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",128,[[["self"],["stashapplyflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",128,[[["self"],["stashapplyflags"]]]],[11,"remove","","Removes the specified flags in-place.",128,[[["self"],["stashapplyflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",128,[[["self"],["stashapplyflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",128,[[["self"],["stashapplyflags"],["bool"]]]],[11,"is_default","","",128,[[["self"]],["bool"]]],[11,"is_reinstate_index","","",128,[[["self"]],["bool"]]],[18,"DEFAULT","","",129,null],[18,"KEEP_INDEX","","All changes already added to the index are left intact in…",129,null],[18,"INCLUDE_UNTRACKED","","All untracked files are also stashed and then cleaned up…",129,null],[18,"INCLUDE_IGNORED","","All ignored files are also stashed and then cleaned up…",129,null],[11,"empty","","Returns an empty set of flags",129,[[],["stashflags"]]],[11,"all","","Returns the set containing all flags.",129,[[],["stashflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",129,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",129,[[["u32"]],[["option",["stashflags"]],["stashflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",129,[[["u32"]],["stashflags"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",129,[[["u32"]],["stashflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",129,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",129,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",129,[[["self"],["stashflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",129,[[["self"],["stashflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",129,[[["self"],["stashflags"]]]],[11,"remove","","Removes the specified flags in-place.",129,[[["self"],["stashflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",129,[[["self"],["stashflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",129,[[["bool"],["self"],["stashflags"]]]],[11,"is_default","","",129,[[["self"]],["bool"]]],[11,"is_keep_index","","",129,[[["self"]],["bool"]]],[11,"is_include_untracked","","",129,[[["self"]],["bool"]]],[11,"is_include_ignored","","",129,[[["self"]],["bool"]]],[18,"FILE_THEN_INDEX","","Check the working directory, then the index.",130,null],[18,"INDEX_THEN_FILE","","Check the index, then the working directory.",130,null],[18,"INDEX_ONLY","","Check the index only.",130,null],[18,"NO_SYSTEM","","Do not use the system gitattributes file.",130,null],[11,"empty","","Returns an empty set of flags",130,[[],["attrcheckflags"]]],[11,"all","","Returns the set containing all flags.",130,[[],["attrcheckflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",130,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",130,[[["u32"]],[["attrcheckflags"],["option",["attrcheckflags"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",130,[[["u32"]],["attrcheckflags"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",130,[[["u32"]],["attrcheckflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",130,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",130,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",130,[[["self"],["attrcheckflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",130,[[["self"],["attrcheckflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",130,[[["self"],["attrcheckflags"]]]],[11,"remove","","Removes the specified flags in-place.",130,[[["self"],["attrcheckflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",130,[[["self"],["attrcheckflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",130,[[["self"],["attrcheckflags"],["bool"]]]],[18,"BINARY","","File(s) treated as binary data.",131,null],[18,"NOT_BINARY","","File(s) treated as text data.",131,null],[18,"VALID_ID","","`id` value is known correct.",131,null],[18,"EXISTS","","File exists at this side of the delta.",131,null],[11,"empty","","Returns an empty set of flags",131,[[],["diffflags"]]],[11,"all","","Returns the set containing all flags.",131,[[],["diffflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",131,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",131,[[["u32"]],[["option",["diffflags"]],["diffflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",131,[[["u32"]],["diffflags"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",131,[[["u32"]],["diffflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",131,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",131,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",131,[[["diffflags"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",131,[[["diffflags"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",131,[[["diffflags"],["self"]]]],[11,"remove","","Removes the specified flags in-place.",131,[[["diffflags"],["self"]]]],[11,"toggle","","Toggles the specified flags in-place.",131,[[["diffflags"],["self"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",131,[[["diffflags"],["self"],["bool"]]]],[11,"is_binary","","",131,[[["self"]],["bool"]]],[11,"is_not_binary","","",131,[[["self"]],["bool"]]],[11,"has_valid_id","","",131,[[["self"]],["bool"]]],[11,"exists","","",131,[[["self"]],["bool"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[],["u"]]],[11,"into_iter","","",132,[[],["i"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"into_iter","","",44,[[],["i"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[],["u"]]],[11,"into_iter","","",133,[[],["i"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[],["u"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[],["u"]]],[11,"into_iter","","",135,[[],["i"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_string","","",64,[[["self"]],["string"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[],["u"]]],[11,"into_iter","","",136,[[],["i"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[],["u"]]],[11,"into_iter","","",137,[[],["i"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[],["u"]]],[11,"into_iter","","",138,[[],["i"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[],["u"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"to_string","","",75,[[["self"]],["string"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[],["u"]]],[11,"into_iter","","",140,[[],["i"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[],["u"]]],[11,"into_iter","","",141,[[],["i"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[],["u"]]],[11,"into_iter","","",142,[[],["i"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"into_iter","","",82,[[],["i"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[],["u"]]],[11,"into_iter","","",143,[[],["i"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"into_iter","","",85,[[],["i"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[],["u"]]],[11,"into_iter","","",144,[[],["i"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[],["u"]]],[11,"into_iter","","",145,[[],["i"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"into_iter","","",98,[[],["i"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"to_string","","",99,[[["self"]],["string"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[],["u"]]],[11,"into_iter","","",146,[[],["i"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,[[["self"],["t"]]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,[[["self"],["t"]]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,[[["self"],["t"]]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,[[["self"],["t"]]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,[[["self"],["t"]]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[],["u"]]],[11,"into_iter","","",147,[[],["i"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,[[["self"],["t"]]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,[[["self"],["t"]]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,[[["self"],["t"]]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,[[["self"],["t"]]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,[[["self"],["t"]]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,[[["self"],["t"]]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,[[["self"],["t"]]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,[[["self"],["t"]]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,[[["self"],["t"]]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,[[["self"],["t"]]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,[[["self"],["t"]]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,[[["self"],["t"]]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,[[["self"],["t"]]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,[[["self"],["t"]]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,[[["self"],["t"]]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,[[["self"],["t"]]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,[[["self"],["t"]]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,[[["self"],["t"]]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,[[["self"],["t"]]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"to_string","","",16,[[["self"]],["string"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","git2::build","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","git2::cert","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","git2::oid_array","",148,[[["t"]],["t"]]],[11,"into","","",148,[[],["u"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"from","git2::string_array","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[],["u"]]],[11,"into_iter","","",149,[[],["i"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[],["u"]]],[11,"into_iter","","",150,[[],["i"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"from","git2::transport","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"drop","git2::oid_array","",148,[[["self"]]]],[11,"drop","git2::string_array","",33,[[["self"]]]],[11,"drop","git2::transport","",36,[[["self"]]]],[11,"drop","git2","",38,[[["self"]]]],[11,"drop","","",41,[[["self"]]]],[11,"drop","","",42,[[["self"]]]],[11,"drop","","",44,[[["self"]]]],[11,"drop","","",45,[[["self"]]]],[11,"drop","","",47,[[["self"]]]],[11,"drop","","",48,[[["self"]]]],[11,"drop","","",134,[[["self"]]]],[11,"drop","","",49,[[["self"]]]],[11,"drop","","",50,[[["self"]]]],[11,"drop","","",51,[[["self"]]]],[11,"drop","","",54,[[["self"]]]],[11,"drop","","",60,[[["self"]]]],[11,"drop","","",65,[[["self"]]]],[11,"drop","","",136,[[["self"]]]],[11,"drop","","",67,[[["self"]]]],[11,"drop","","",69,[[["self"]]]],[11,"drop","","",138,[[["self"]]]],[11,"drop","","",70,[[["self"]]]],[11,"drop","","",71,[[["self"]]]],[11,"drop","","",72,[[["self"]]]],[11,"drop","","",139,[[["self"]]]],[11,"drop","","",73,[[["self"]]]],[11,"drop","","",74,[[["self"]]]],[11,"drop","","",76,[[["self"]]]],[11,"drop","","",77,[[["self"]]]],[11,"drop","","",78,[[["self"]]]],[11,"drop","","",79,[[["self"]]]],[11,"drop","","",82,[[["self"]]]],[11,"drop","","",84,[[["self"]]]],[11,"drop","","",85,[[["self"]]]],[11,"drop","","",86,[[["self"]]]],[11,"drop","","",89,[[["self"]]]],[11,"drop","","",93,[[["self"]]]],[11,"drop","","",95,[[["self"]]]],[11,"drop","","",98,[[["self"]]]],[11,"drop","","",99,[[["self"]]]],[11,"drop","","",102,[[["self"]]]],[11,"drop","","",104,[[["self"]]]],[11,"drop","","",106,[[["self"]]]],[11,"drop","","",109,[[["self"]]]],[11,"drop","","",110,[[["self"]]]],[11,"drop","","",111,[[["self"]]]],[11,"as_ref","","",75,[[["self"]]]],[11,"from","","",64,[[["nulerror"]],["error"]]],[11,"from","","",64,[[["joinpathserror"]],["error"]]],[11,"into","","",9,[[],["i32"]]],[11,"into","","",8,[[],["git_treewalk_mode"]]],[11,"next_back","git2::string_array","",149,[[["self"]],[["option",["option"]],["option",["str"]]]]],[11,"next_back","","",150,[[["self"]],["option"]]],[11,"next_back","git2","",132,[[["self"]],[["option",["blamehunk"]],["blamehunk"]]]],[11,"next_back","","",133,[[["self"]],[["commit"],["option",["commit"]]]]],[11,"next_back","","",135,[[["self"]],[["option",["diffdelta"]],["diffdelta"]]]],[11,"next_back","","",142,[[["self"]],["option"]]],[11,"next_back","","",141,[[["self"]],[["option",["diffdelta"]],["diffdelta"]]]],[11,"next_back","","",140,[[["self"]],["option"]]],[11,"next_back","","",144,[[["self"]],[["reflogentry"],["option",["reflogentry"]]]]],[11,"next_back","","",145,[[["self"]],[["refspec"],["option",["refspec"]]]]],[11,"next_back","","",146,[[["self"]],[["option",["statusentry"]],["statusentry"]]]],[11,"next_back","","",147,[[["self"]],[["treeentry"],["option",["treeentry"]]]]],[11,"extend","","",113,[[["self"],["intoiterator"]]]],[11,"extend","","",114,[[["self"],["intoiterator"]]]],[11,"extend","","",115,[[["self"],["intoiterator"]]]],[11,"extend","","",116,[[["intoiterator"],["self"]]]],[11,"extend","","",117,[[["self"],["intoiterator"]]]],[11,"extend","","",118,[[["intoiterator"],["self"]]]],[11,"extend","","",119,[[["self"],["intoiterator"]]]],[11,"extend","","",120,[[["intoiterator"],["self"]]]],[11,"extend","","",121,[[["self"],["intoiterator"]]]],[11,"extend","","",122,[[["self"],["intoiterator"]]]],[11,"extend","","",123,[[["self"],["intoiterator"]]]],[11,"extend","","",124,[[["self"],["intoiterator"]]]],[11,"extend","","",125,[[["self"],["intoiterator"]]]],[11,"extend","","",126,[[["self"],["intoiterator"]]]],[11,"extend","","",127,[[["self"],["intoiterator"]]]],[11,"extend","","",128,[[["intoiterator"],["self"]]]],[11,"extend","","",129,[[["self"],["intoiterator"]]]],[11,"extend","","",130,[[["intoiterator"],["self"]]]],[11,"extend","","",131,[[["self"],["intoiterator"]]]],[11,"next","git2::string_array","",149,[[["self"]],[["option",["option"]],["option",["str"]]]]],[11,"size_hint","","",149,[[["self"]]]],[11,"next","","",150,[[["self"]],["option"]]],[11,"size_hint","","",150,[[["self"]]]],[11,"next","git2","",132,[[["self"]],[["option",["blamehunk"]],["blamehunk"]]]],[11,"size_hint","","",132,[[["self"]]]],[11,"next","","",44,[[["self"]],[["result",["error"]],["option",["result"]]]]],[11,"next","","",133,[[["self"]],[["commit"],["option",["commit"]]]]],[11,"size_hint","","",133,[[["self"]]]],[11,"next","","",135,[[["self"]],[["option",["diffdelta"]],["diffdelta"]]]],[11,"size_hint","","",135,[[["self"]]]],[11,"next","","",137,[[["self"]],[["indexentry"],["option",["indexentry"]]]]],[11,"next","","",136,[[["self"]],[["option",["result"]],["result",["indexconflict","error"]]]]],[11,"next","","",138,[[["self"]],[["option",["result"]],["result",["error"]]]]],[11,"next","","",142,[[["self"]],["option"]]],[11,"size_hint","","",142,[[["self"]]]],[11,"next","","",141,[[["self"]],[["option",["diffdelta"]],["diffdelta"]]]],[11,"size_hint","","",141,[[["self"]]]],[11,"next","","",140,[[["self"]],["option"]]],[11,"size_hint","","",140,[[["self"]]]],[11,"next","","Performs the next rebase operation and returns the…",82,[[["self"]],[["result",["rebaseoperation","error"]],["option",["result"]]]]],[11,"next","","",85,[[["self"]],[["option",["result"]],["result",["reference","error"]]]]],[11,"next","","",143,[[["self"]],[["option",["result"]],["result",["str","error"]]]]],[11,"next","","",144,[[["self"]],[["reflogentry"],["option",["reflogentry"]]]]],[11,"size_hint","","",144,[[["self"]]]],[11,"next","","",145,[[["self"]],[["refspec"],["option",["refspec"]]]]],[11,"size_hint","","",145,[[["self"]]]],[11,"next","","",98,[[["self"]],[["result",["oid","error"]],["option",["result"]]]]],[11,"next","","",146,[[["self"]],[["option",["statusentry"]],["statusentry"]]]],[11,"size_hint","","",146,[[["self"]]]],[11,"next","","",147,[[["self"]],[["treeentry"],["option",["treeentry"]]]]],[11,"size_hint","","",147,[[["self"]]]],[11,"clone","","",10,[[["self"]],["errorcode"]]],[11,"clone","","",11,[[["self"]],["errorclass"]]],[11,"clone","","",12,[[["self"]],["repositorystate"]]],[11,"clone","","",13,[[["self"]],["direction"]]],[11,"clone","","",14,[[["self"]],["resettype"]]],[11,"clone","","",15,[[["self"]],["objecttype"]]],[11,"clone","","",16,[[["self"]],["referencetype"]]],[11,"clone","","",17,[[["self"]],["branchtype"]]],[11,"clone","","",18,[[["self"]],["configlevel"]]],[11,"clone","","",19,[[["self"]],["filefavor"]]],[11,"clone","","",113,[[["self"]],["sort"]]],[11,"clone","","",114,[[["self"]],["credentialtype"]]],[11,"clone","","",115,[[["self"]],["indexentryflag"]]],[11,"clone","","",116,[[["self"]],["indexentryextendedflag"]]],[11,"clone","","",117,[[["self"]],["indexaddoption"]]],[11,"clone","","",118,[[["self"]],["repositoryopenflags"]]],[11,"clone","","",119,[[["self"]],["revparsemode"]]],[11,"clone","","",120,[[["self"]],["mergeanalysis"]]],[11,"clone","","",121,[[["self"]],["mergepreference"]]],[11,"clone","git2::build","",27,[[["self"]],["clonelocal"]]],[11,"clone","git2::transport","",34,[[["self"]],["service"]]],[11,"clone","git2","",3,[[["self"]],["applylocation"]]],[11,"clone","","",41,[[["self"]],["self"]]],[11,"clone","","",47,[[["self"]],["self"]]],[11,"clone","","",4,[[["self"]],["diffbinarykind"]]],[11,"clone","","",70,[[["self"]],["object"]]],[11,"clone","","",75,[[["self"]],["oid"]]],[11,"clone","","",89,[[["self"]],["remote"]]],[11,"clone","","",99,[[["self"]],["signature"]]],[11,"clone","","",7,[[["self"]],["statusshow"]]],[11,"clone","","",106,[[["self"]],["self"]]],[11,"clone","","",107,[[["self"]],["time"]]],[11,"clone","","",108,[[["self"]],["indextime"]]],[11,"clone","","",109,[[["self"]],["self"]]],[11,"clone","","",110,[[["self"]],["treeentry"]]],[11,"clone","","",122,[[["self"]],["status"]]],[11,"clone","","",123,[[["self"]],["repositoryinitmode"]]],[11,"clone","","",20,[[["self"]],["delta"]]],[11,"clone","","",21,[[["self"]],["filemode"]]],[11,"clone","","",124,[[["self"]],["submodulestatus"]]],[11,"clone","","",125,[[["self"]],["pathspecflags"]]],[11,"clone","","",126,[[["self"]],["checkoutnotificationtype"]]],[11,"clone","","",23,[[["self"]],["diffformat"]]],[11,"clone","","",127,[[["self"]],["diffstatsformat"]]],[11,"clone","","",128,[[["self"]],["stashapplyflags"]]],[11,"clone","","",129,[[["self"]],["stashflags"]]],[11,"clone","","",130,[[["self"]],["attrcheckflags"]]],[11,"clone","","",131,[[["self"]],["diffflags"]]],[11,"default","","",114,[[],["self"]]],[11,"default","","",117,[[],["self"]]],[11,"default","git2::build","",28,[[],["self"]]],[11,"default","","",29,[[],["self"]]],[11,"default","git2","",40,[[],["self"]]],[11,"default","","",45,[[],["self"]]],[11,"default","","",52,[[],["self"]]],[11,"default","","",53,[[],["self"]]],[11,"default","","",57,[[],["self"]]],[11,"default","","",63,[[],["self"]]],[11,"default","","",68,[[],["self"]]],[11,"default","","",80,[[],["proxyoptions"]]],[11,"default","","",81,[[],["self"]]],[11,"default","","",91,[[],["self"]]],[11,"default","","",92,[[],["self"]]],[11,"default","","",94,[[],["self"]]],[11,"default","","",100,[[],["self"]]],[11,"default","","",101,[[],["self"]]],[11,"default","","",105,[[],["self"]]],[11,"default","","",125,[[],["self"]]],[11,"default","","",128,[[],["self"]]],[11,"default","","",129,[[],["self"]]],[11,"default","","",130,[[],["self"]]],[11,"cmp","","",113,[[["self"],["sort"]],["ordering"]]],[11,"cmp","","",114,[[["self"],["credentialtype"]],["ordering"]]],[11,"cmp","","",115,[[["self"],["indexentryflag"]],["ordering"]]],[11,"cmp","","",116,[[["self"],["indexentryextendedflag"]],["ordering"]]],[11,"cmp","","",117,[[["indexaddoption"],["self"]],["ordering"]]],[11,"cmp","","",118,[[["self"],["repositoryopenflags"]],["ordering"]]],[11,"cmp","","",119,[[["self"],["revparsemode"]],["ordering"]]],[11,"cmp","","",120,[[["mergeanalysis"],["self"]],["ordering"]]],[11,"cmp","","",121,[[["self"],["mergepreference"]],["ordering"]]],[11,"cmp","","",75,[[["oid"],["self"]],["ordering"]]],[11,"cmp","","",84,[[["self"],["reference"]],["ordering"]]],[11,"cmp","","",107,[[["time"],["self"]],["ordering"]]],[11,"cmp","","",108,[[["indextime"],["self"]],["ordering"]]],[11,"cmp","","",110,[[["self"],["treeentry"]],["ordering"]]],[11,"cmp","","",122,[[["self"],["status"]],["ordering"]]],[11,"cmp","","",123,[[["repositoryinitmode"],["self"]],["ordering"]]],[11,"cmp","","",124,[[["self"],["submodulestatus"]],["ordering"]]],[11,"cmp","","",125,[[["self"],["pathspecflags"]],["ordering"]]],[11,"cmp","","",126,[[["checkoutnotificationtype"],["self"]],["ordering"]]],[11,"cmp","","",127,[[["diffstatsformat"],["self"]],["ordering"]]],[11,"cmp","","",128,[[["stashapplyflags"],["self"]],["ordering"]]],[11,"cmp","","",129,[[["self"],["stashflags"]],["ordering"]]],[11,"cmp","","",130,[[["self"],["attrcheckflags"]],["ordering"]]],[11,"cmp","","",131,[[["self"],["diffflags"]],["ordering"]]],[11,"eq","","",10,[[["self"],["errorcode"]],["bool"]]],[11,"eq","","",11,[[["self"],["errorclass"]],["bool"]]],[11,"eq","","",12,[[["self"],["repositorystate"]],["bool"]]],[11,"eq","","",15,[[["self"],["objecttype"]],["bool"]]],[11,"eq","","",16,[[["referencetype"],["self"]],["bool"]]],[11,"eq","","",17,[[["branchtype"],["self"]],["bool"]]],[11,"eq","","",18,[[["configlevel"],["self"]],["bool"]]],[11,"eq","","",19,[[["self"],["filefavor"]],["bool"]]],[11,"eq","","",113,[[["self"],["sort"]],["bool"]]],[11,"ne","","",113,[[["self"],["sort"]],["bool"]]],[11,"eq","","",114,[[["self"],["credentialtype"]],["bool"]]],[11,"ne","","",114,[[["self"],["credentialtype"]],["bool"]]],[11,"eq","","",115,[[["self"],["indexentryflag"]],["bool"]]],[11,"ne","","",115,[[["self"],["indexentryflag"]],["bool"]]],[11,"eq","","",116,[[["self"],["indexentryextendedflag"]],["bool"]]],[11,"ne","","",116,[[["self"],["indexentryextendedflag"]],["bool"]]],[11,"eq","","",117,[[["indexaddoption"],["self"]],["bool"]]],[11,"ne","","",117,[[["indexaddoption"],["self"]],["bool"]]],[11,"eq","","",118,[[["self"],["repositoryopenflags"]],["bool"]]],[11,"ne","","",118,[[["self"],["repositoryopenflags"]],["bool"]]],[11,"eq","","",119,[[["self"],["revparsemode"]],["bool"]]],[11,"ne","","",119,[[["self"],["revparsemode"]],["bool"]]],[11,"eq","","",120,[[["mergeanalysis"],["self"]],["bool"]]],[11,"ne","","",120,[[["mergeanalysis"],["self"]],["bool"]]],[11,"eq","","",121,[[["self"],["mergepreference"]],["bool"]]],[11,"ne","","",121,[[["self"],["mergepreference"]],["bool"]]],[11,"eq","","",64,[[["self"],["error"]],["bool"]]],[11,"ne","","",64,[[["self"],["error"]],["bool"]]],[11,"eq","","",75,[[["oid"],["self"]],["bool"]]],[11,"eq","","",6,[[["self"],["rebaseoperationtype"]],["bool"]]],[11,"eq","","",84,[[["self"],["reference"]],["bool"]]],[11,"eq","","",107,[[["time"],["self"]],["bool"]]],[11,"ne","","",107,[[["time"],["self"]],["bool"]]],[11,"eq","","",108,[[["indextime"],["self"]],["bool"]]],[11,"ne","","",108,[[["indextime"],["self"]],["bool"]]],[11,"eq","","",110,[[["self"],["treeentry"]],["bool"]]],[11,"eq","","",122,[[["self"],["status"]],["bool"]]],[11,"ne","","",122,[[["self"],["status"]],["bool"]]],[11,"eq","","",123,[[["repositoryinitmode"],["self"]],["bool"]]],[11,"ne","","",123,[[["repositoryinitmode"],["self"]],["bool"]]],[11,"eq","","",20,[[["delta"],["self"]],["bool"]]],[11,"eq","","",21,[[["self"],["filemode"]],["bool"]]],[11,"eq","","",124,[[["self"],["submodulestatus"]],["bool"]]],[11,"ne","","",124,[[["self"],["submodulestatus"]],["bool"]]],[11,"eq","","",125,[[["self"],["pathspecflags"]],["bool"]]],[11,"ne","","",125,[[["self"],["pathspecflags"]],["bool"]]],[11,"eq","","",126,[[["checkoutnotificationtype"],["self"]],["bool"]]],[11,"ne","","",126,[[["checkoutnotificationtype"],["self"]],["bool"]]],[11,"eq","","",127,[[["diffstatsformat"],["self"]],["bool"]]],[11,"ne","","",127,[[["diffstatsformat"],["self"]],["bool"]]],[11,"eq","","",128,[[["stashapplyflags"],["self"]],["bool"]]],[11,"ne","","",128,[[["stashapplyflags"],["self"]],["bool"]]],[11,"eq","","",129,[[["self"],["stashflags"]],["bool"]]],[11,"ne","","",129,[[["self"],["stashflags"]],["bool"]]],[11,"eq","","",130,[[["self"],["attrcheckflags"]],["bool"]]],[11,"ne","","",130,[[["self"],["attrcheckflags"]],["bool"]]],[11,"eq","","",131,[[["self"],["diffflags"]],["bool"]]],[11,"ne","","",131,[[["self"],["diffflags"]],["bool"]]],[11,"partial_cmp","","",113,[[["self"],["sort"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",113,[[["self"],["sort"]],["bool"]]],[11,"le","","",113,[[["self"],["sort"]],["bool"]]],[11,"gt","","",113,[[["self"],["sort"]],["bool"]]],[11,"ge","","",113,[[["self"],["sort"]],["bool"]]],[11,"partial_cmp","","",114,[[["self"],["credentialtype"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",114,[[["self"],["credentialtype"]],["bool"]]],[11,"le","","",114,[[["self"],["credentialtype"]],["bool"]]],[11,"gt","","",114,[[["self"],["credentialtype"]],["bool"]]],[11,"ge","","",114,[[["self"],["credentialtype"]],["bool"]]],[11,"partial_cmp","","",115,[[["self"],["indexentryflag"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",115,[[["self"],["indexentryflag"]],["bool"]]],[11,"le","","",115,[[["self"],["indexentryflag"]],["bool"]]],[11,"gt","","",115,[[["self"],["indexentryflag"]],["bool"]]],[11,"ge","","",115,[[["self"],["indexentryflag"]],["bool"]]],[11,"partial_cmp","","",116,[[["self"],["indexentryextendedflag"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",116,[[["self"],["indexentryextendedflag"]],["bool"]]],[11,"le","","",116,[[["self"],["indexentryextendedflag"]],["bool"]]],[11,"gt","","",116,[[["self"],["indexentryextendedflag"]],["bool"]]],[11,"ge","","",116,[[["self"],["indexentryextendedflag"]],["bool"]]],[11,"partial_cmp","","",117,[[["indexaddoption"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",117,[[["indexaddoption"],["self"]],["bool"]]],[11,"le","","",117,[[["indexaddoption"],["self"]],["bool"]]],[11,"gt","","",117,[[["indexaddoption"],["self"]],["bool"]]],[11,"ge","","",117,[[["indexaddoption"],["self"]],["bool"]]],[11,"partial_cmp","","",118,[[["self"],["repositoryopenflags"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",118,[[["self"],["repositoryopenflags"]],["bool"]]],[11,"le","","",118,[[["self"],["repositoryopenflags"]],["bool"]]],[11,"gt","","",118,[[["self"],["repositoryopenflags"]],["bool"]]],[11,"ge","","",118,[[["self"],["repositoryopenflags"]],["bool"]]],[11,"partial_cmp","","",119,[[["self"],["revparsemode"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",119,[[["self"],["revparsemode"]],["bool"]]],[11,"le","","",119,[[["self"],["revparsemode"]],["bool"]]],[11,"gt","","",119,[[["self"],["revparsemode"]],["bool"]]],[11,"ge","","",119,[[["self"],["revparsemode"]],["bool"]]],[11,"partial_cmp","","",120,[[["mergeanalysis"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",120,[[["mergeanalysis"],["self"]],["bool"]]],[11,"le","","",120,[[["mergeanalysis"],["self"]],["bool"]]],[11,"gt","","",120,[[["mergeanalysis"],["self"]],["bool"]]],[11,"ge","","",120,[[["mergeanalysis"],["self"]],["bool"]]],[11,"partial_cmp","","",121,[[["self"],["mergepreference"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",121,[[["self"],["mergepreference"]],["bool"]]],[11,"le","","",121,[[["self"],["mergepreference"]],["bool"]]],[11,"gt","","",121,[[["self"],["mergepreference"]],["bool"]]],[11,"ge","","",121,[[["self"],["mergepreference"]],["bool"]]],[11,"partial_cmp","","",75,[[["oid"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",84,[[["self"],["reference"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",107,[[["time"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",108,[[["indextime"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",110,[[["self"],["treeentry"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",122,[[["self"],["status"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",122,[[["self"],["status"]],["bool"]]],[11,"le","","",122,[[["self"],["status"]],["bool"]]],[11,"gt","","",122,[[["self"],["status"]],["bool"]]],[11,"ge","","",122,[[["self"],["status"]],["bool"]]],[11,"partial_cmp","","",123,[[["repositoryinitmode"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",123,[[["repositoryinitmode"],["self"]],["bool"]]],[11,"le","","",123,[[["repositoryinitmode"],["self"]],["bool"]]],[11,"gt","","",123,[[["repositoryinitmode"],["self"]],["bool"]]],[11,"ge","","",123,[[["repositoryinitmode"],["self"]],["bool"]]],[11,"partial_cmp","","",124,[[["self"],["submodulestatus"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",124,[[["self"],["submodulestatus"]],["bool"]]],[11,"le","","",124,[[["self"],["submodulestatus"]],["bool"]]],[11,"gt","","",124,[[["self"],["submodulestatus"]],["bool"]]],[11,"ge","","",124,[[["self"],["submodulestatus"]],["bool"]]],[11,"partial_cmp","","",125,[[["self"],["pathspecflags"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",125,[[["self"],["pathspecflags"]],["bool"]]],[11,"le","","",125,[[["self"],["pathspecflags"]],["bool"]]],[11,"gt","","",125,[[["self"],["pathspecflags"]],["bool"]]],[11,"ge","","",125,[[["self"],["pathspecflags"]],["bool"]]],[11,"partial_cmp","","",126,[[["checkoutnotificationtype"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",126,[[["checkoutnotificationtype"],["self"]],["bool"]]],[11,"le","","",126,[[["checkoutnotificationtype"],["self"]],["bool"]]],[11,"gt","","",126,[[["checkoutnotificationtype"],["self"]],["bool"]]],[11,"ge","","",126,[[["checkoutnotificationtype"],["self"]],["bool"]]],[11,"partial_cmp","","",127,[[["diffstatsformat"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",127,[[["diffstatsformat"],["self"]],["bool"]]],[11,"le","","",127,[[["diffstatsformat"],["self"]],["bool"]]],[11,"gt","","",127,[[["diffstatsformat"],["self"]],["bool"]]],[11,"ge","","",127,[[["diffstatsformat"],["self"]],["bool"]]],[11,"partial_cmp","","",128,[[["stashapplyflags"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",128,[[["stashapplyflags"],["self"]],["bool"]]],[11,"le","","",128,[[["stashapplyflags"],["self"]],["bool"]]],[11,"gt","","",128,[[["stashapplyflags"],["self"]],["bool"]]],[11,"ge","","",128,[[["stashapplyflags"],["self"]],["bool"]]],[11,"partial_cmp","","",129,[[["self"],["stashflags"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",129,[[["self"],["stashflags"]],["bool"]]],[11,"le","","",129,[[["self"],["stashflags"]],["bool"]]],[11,"gt","","",129,[[["self"],["stashflags"]],["bool"]]],[11,"ge","","",129,[[["self"],["stashflags"]],["bool"]]],[11,"partial_cmp","","",130,[[["self"],["attrcheckflags"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",130,[[["self"],["attrcheckflags"]],["bool"]]],[11,"le","","",130,[[["self"],["attrcheckflags"]],["bool"]]],[11,"gt","","",130,[[["self"],["attrcheckflags"]],["bool"]]],[11,"ge","","",130,[[["self"],["attrcheckflags"]],["bool"]]],[11,"partial_cmp","","",131,[[["self"],["diffflags"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",131,[[["self"],["diffflags"]],["bool"]]],[11,"le","","",131,[[["self"],["diffflags"]],["bool"]]],[11,"gt","","",131,[[["self"],["diffflags"]],["bool"]]],[11,"ge","","",131,[[["self"],["diffflags"]],["bool"]]],[11,"deref","git2::oid_array","",148,[[["self"]]]],[11,"deref","git2","",45,[[["self"]]]],[11,"deref_mut","","",45,[[["self"]]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","git2::oid_array","",148,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","git2","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",47,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",56,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",58,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",59,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",60,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",70,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",83,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",106,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",109,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","","Hex-encode this Oid into a formatter.",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",99,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"sub","","Returns the set difference of the two sets of flags.",113,[[["sort"]],["sort"]]],[11,"sub","","Returns the set difference of the two sets of flags.",114,[[["credentialtype"]],["credentialtype"]]],[11,"sub","","Returns the set difference of the two sets of flags.",115,[[["indexentryflag"]],["indexentryflag"]]],[11,"sub","","Returns the set difference of the two sets of flags.",116,[[["indexentryextendedflag"]],["indexentryextendedflag"]]],[11,"sub","","Returns the set difference of the two sets of flags.",117,[[["indexaddoption"]],["indexaddoption"]]],[11,"sub","","Returns the set difference of the two sets of flags.",118,[[["repositoryopenflags"]],["repositoryopenflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",119,[[["revparsemode"]],["revparsemode"]]],[11,"sub","","Returns the set difference of the two sets of flags.",120,[[["mergeanalysis"]],["mergeanalysis"]]],[11,"sub","","Returns the set difference of the two sets of flags.",121,[[["mergepreference"]],["mergepreference"]]],[11,"sub","","Returns the set difference of the two sets of flags.",122,[[["status"]],["status"]]],[11,"sub","","Returns the set difference of the two sets of flags.",123,[[["repositoryinitmode"]],["repositoryinitmode"]]],[11,"sub","","Returns the set difference of the two sets of flags.",124,[[["submodulestatus"]],["submodulestatus"]]],[11,"sub","","Returns the set difference of the two sets of flags.",125,[[["pathspecflags"]],["pathspecflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",126,[[["checkoutnotificationtype"]],["checkoutnotificationtype"]]],[11,"sub","","Returns the set difference of the two sets of flags.",127,[[["diffstatsformat"]],["diffstatsformat"]]],[11,"sub","","Returns the set difference of the two sets of flags.",128,[[["stashapplyflags"]],["stashapplyflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",129,[[["stashflags"]],["stashflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",130,[[["attrcheckflags"]],["attrcheckflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",131,[[["diffflags"]],["diffflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",113,[[["self"],["sort"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",114,[[["self"],["credentialtype"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",115,[[["indexentryflag"],["self"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",116,[[["self"],["indexentryextendedflag"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",117,[[["indexaddoption"],["self"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",118,[[["self"],["repositoryopenflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",119,[[["self"],["revparsemode"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",120,[[["mergeanalysis"],["self"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",121,[[["self"],["mergepreference"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",122,[[["self"],["status"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",123,[[["self"],["repositoryinitmode"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",124,[[["self"],["submodulestatus"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",125,[[["self"],["pathspecflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",126,[[["checkoutnotificationtype"],["self"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",127,[[["self"],["diffstatsformat"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",128,[[["self"],["stashapplyflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",129,[[["self"],["stashflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",130,[[["self"],["attrcheckflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",131,[[["diffflags"],["self"]]]],[11,"not","","Returns the complement of this set of flags.",113,[[],["sort"]]],[11,"not","","Returns the complement of this set of flags.",114,[[],["credentialtype"]]],[11,"not","","Returns the complement of this set of flags.",115,[[],["indexentryflag"]]],[11,"not","","Returns the complement of this set of flags.",116,[[],["indexentryextendedflag"]]],[11,"not","","Returns the complement of this set of flags.",117,[[],["indexaddoption"]]],[11,"not","","Returns the complement of this set of flags.",118,[[],["repositoryopenflags"]]],[11,"not","","Returns the complement of this set of flags.",119,[[],["revparsemode"]]],[11,"not","","Returns the complement of this set of flags.",120,[[],["mergeanalysis"]]],[11,"not","","Returns the complement of this set of flags.",121,[[],["mergepreference"]]],[11,"not","","Returns the complement of this set of flags.",122,[[],["status"]]],[11,"not","","Returns the complement of this set of flags.",123,[[],["repositoryinitmode"]]],[11,"not","","Returns the complement of this set of flags.",124,[[],["submodulestatus"]]],[11,"not","","Returns the complement of this set of flags.",125,[[],["pathspecflags"]]],[11,"not","","Returns the complement of this set of flags.",126,[[],["checkoutnotificationtype"]]],[11,"not","","Returns the complement of this set of flags.",127,[[],["diffstatsformat"]]],[11,"not","","Returns the complement of this set of flags.",128,[[],["stashapplyflags"]]],[11,"not","","Returns the complement of this set of flags.",129,[[],["stashflags"]]],[11,"not","","Returns the complement of this set of flags.",130,[[],["attrcheckflags"]]],[11,"not","","Returns the complement of this set of flags.",131,[[],["diffflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",113,[[["sort"]],["sort"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",114,[[["credentialtype"]],["credentialtype"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",115,[[["indexentryflag"]],["indexentryflag"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",116,[[["indexentryextendedflag"]],["indexentryextendedflag"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",117,[[["indexaddoption"]],["indexaddoption"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",118,[[["repositoryopenflags"]],["repositoryopenflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",119,[[["revparsemode"]],["revparsemode"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",120,[[["mergeanalysis"]],["mergeanalysis"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",121,[[["mergepreference"]],["mergepreference"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",122,[[["status"]],["status"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",123,[[["repositoryinitmode"]],["repositoryinitmode"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",124,[[["submodulestatus"]],["submodulestatus"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",125,[[["pathspecflags"]],["pathspecflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",126,[[["checkoutnotificationtype"]],["checkoutnotificationtype"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",127,[[["diffstatsformat"]],["diffstatsformat"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",128,[[["stashapplyflags"]],["stashapplyflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",129,[[["stashflags"]],["stashflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",130,[[["attrcheckflags"]],["attrcheckflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",131,[[["diffflags"]],["diffflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",113,[[["sort"]],["sort"]]],[11,"bitor","","Returns the union of the two sets of flags.",114,[[["credentialtype"]],["credentialtype"]]],[11,"bitor","","Returns the union of the two sets of flags.",115,[[["indexentryflag"]],["indexentryflag"]]],[11,"bitor","","Returns the union of the two sets of flags.",116,[[["indexentryextendedflag"]],["indexentryextendedflag"]]],[11,"bitor","","Returns the union of the two sets of flags.",117,[[["indexaddoption"]],["indexaddoption"]]],[11,"bitor","","Returns the union of the two sets of flags.",118,[[["repositoryopenflags"]],["repositoryopenflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",119,[[["revparsemode"]],["revparsemode"]]],[11,"bitor","","Returns the union of the two sets of flags.",120,[[["mergeanalysis"]],["mergeanalysis"]]],[11,"bitor","","Returns the union of the two sets of flags.",121,[[["mergepreference"]],["mergepreference"]]],[11,"bitor","","Returns the union of the two sets of flags.",122,[[["status"]],["status"]]],[11,"bitor","","Returns the union of the two sets of flags.",123,[[["repositoryinitmode"]],["repositoryinitmode"]]],[11,"bitor","","Returns the union of the two sets of flags.",124,[[["submodulestatus"]],["submodulestatus"]]],[11,"bitor","","Returns the union of the two sets of flags.",125,[[["pathspecflags"]],["pathspecflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",126,[[["checkoutnotificationtype"]],["checkoutnotificationtype"]]],[11,"bitor","","Returns the union of the two sets of flags.",127,[[["diffstatsformat"]],["diffstatsformat"]]],[11,"bitor","","Returns the union of the two sets of flags.",128,[[["stashapplyflags"]],["stashapplyflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",129,[[["stashflags"]],["stashflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",130,[[["attrcheckflags"]],["attrcheckflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",131,[[["diffflags"]],["diffflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",113,[[["sort"]],["sort"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",114,[[["credentialtype"]],["credentialtype"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",115,[[["indexentryflag"]],["indexentryflag"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",116,[[["indexentryextendedflag"]],["indexentryextendedflag"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",117,[[["indexaddoption"]],["indexaddoption"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",118,[[["repositoryopenflags"]],["repositoryopenflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",119,[[["revparsemode"]],["revparsemode"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",120,[[["mergeanalysis"]],["mergeanalysis"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",121,[[["mergepreference"]],["mergepreference"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",122,[[["status"]],["status"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",123,[[["repositoryinitmode"]],["repositoryinitmode"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",124,[[["submodulestatus"]],["submodulestatus"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",125,[[["pathspecflags"]],["pathspecflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",126,[[["checkoutnotificationtype"]],["checkoutnotificationtype"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",127,[[["diffstatsformat"]],["diffstatsformat"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",128,[[["stashapplyflags"]],["stashapplyflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",129,[[["stashflags"]],["stashflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",130,[[["attrcheckflags"]],["attrcheckflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",131,[[["diffflags"]],["diffflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",113,[[["self"],["sort"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",114,[[["self"],["credentialtype"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",115,[[["indexentryflag"],["self"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",116,[[["self"],["indexentryextendedflag"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",117,[[["indexaddoption"],["self"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",118,[[["self"],["repositoryopenflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",119,[[["self"],["revparsemode"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",120,[[["mergeanalysis"],["self"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",121,[[["self"],["mergepreference"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",122,[[["self"],["status"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",123,[[["self"],["repositoryinitmode"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",124,[[["self"],["submodulestatus"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",125,[[["self"],["pathspecflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",126,[[["checkoutnotificationtype"],["self"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",127,[[["self"],["diffstatsformat"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",128,[[["self"],["stashapplyflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",129,[[["self"],["stashflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",130,[[["self"],["attrcheckflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",131,[[["diffflags"],["self"]]]],[11,"bitor_assign","","Adds the set of flags.",113,[[["self"],["sort"]]]],[11,"bitor_assign","","Adds the set of flags.",114,[[["self"],["credentialtype"]]]],[11,"bitor_assign","","Adds the set of flags.",115,[[["indexentryflag"],["self"]]]],[11,"bitor_assign","","Adds the set of flags.",116,[[["self"],["indexentryextendedflag"]]]],[11,"bitor_assign","","Adds the set of flags.",117,[[["indexaddoption"],["self"]]]],[11,"bitor_assign","","Adds the set of flags.",118,[[["self"],["repositoryopenflags"]]]],[11,"bitor_assign","","Adds the set of flags.",119,[[["self"],["revparsemode"]]]],[11,"bitor_assign","","Adds the set of flags.",120,[[["mergeanalysis"],["self"]]]],[11,"bitor_assign","","Adds the set of flags.",121,[[["self"],["mergepreference"]]]],[11,"bitor_assign","","Adds the set of flags.",122,[[["self"],["status"]]]],[11,"bitor_assign","","Adds the set of flags.",123,[[["self"],["repositoryinitmode"]]]],[11,"bitor_assign","","Adds the set of flags.",124,[[["self"],["submodulestatus"]]]],[11,"bitor_assign","","Adds the set of flags.",125,[[["self"],["pathspecflags"]]]],[11,"bitor_assign","","Adds the set of flags.",126,[[["checkoutnotificationtype"],["self"]]]],[11,"bitor_assign","","Adds the set of flags.",127,[[["self"],["diffstatsformat"]]]],[11,"bitor_assign","","Adds the set of flags.",128,[[["self"],["stashapplyflags"]]]],[11,"bitor_assign","","Adds the set of flags.",129,[[["self"],["stashflags"]]]],[11,"bitor_assign","","Adds the set of flags.",130,[[["self"],["attrcheckflags"]]]],[11,"bitor_assign","","Adds the set of flags.",131,[[["diffflags"],["self"]]]],[11,"bitxor_assign","","Toggles the set of flags.",113,[[["self"],["sort"]]]],[11,"bitxor_assign","","Toggles the set of flags.",114,[[["self"],["credentialtype"]]]],[11,"bitxor_assign","","Toggles the set of flags.",115,[[["indexentryflag"],["self"]]]],[11,"bitxor_assign","","Toggles the set of flags.",116,[[["self"],["indexentryextendedflag"]]]],[11,"bitxor_assign","","Toggles the set of flags.",117,[[["indexaddoption"],["self"]]]],[11,"bitxor_assign","","Toggles the set of flags.",118,[[["self"],["repositoryopenflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",119,[[["self"],["revparsemode"]]]],[11,"bitxor_assign","","Toggles the set of flags.",120,[[["mergeanalysis"],["self"]]]],[11,"bitxor_assign","","Toggles the set of flags.",121,[[["self"],["mergepreference"]]]],[11,"bitxor_assign","","Toggles the set of flags.",122,[[["self"],["status"]]]],[11,"bitxor_assign","","Toggles the set of flags.",123,[[["self"],["repositoryinitmode"]]]],[11,"bitxor_assign","","Toggles the set of flags.",124,[[["self"],["submodulestatus"]]]],[11,"bitxor_assign","","Toggles the set of flags.",125,[[["self"],["pathspecflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",126,[[["checkoutnotificationtype"],["self"]]]],[11,"bitxor_assign","","Toggles the set of flags.",127,[[["self"],["diffstatsformat"]]]],[11,"bitxor_assign","","Toggles the set of flags.",128,[[["self"],["stashapplyflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",129,[[["self"],["stashflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",130,[[["self"],["attrcheckflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",131,[[["diffflags"],["self"]]]],[11,"hash","","",113,[[["self"],["__h"]]]],[11,"hash","","",114,[[["self"],["__h"]]]],[11,"hash","","",115,[[["self"],["__h"]]]],[11,"hash","","",116,[[["self"],["__h"]]]],[11,"hash","","",117,[[["self"],["__h"]]]],[11,"hash","","",118,[[["self"],["__h"]]]],[11,"hash","","",119,[[["self"],["__h"]]]],[11,"hash","","",120,[[["self"],["__h"]]]],[11,"hash","","",121,[[["self"],["__h"]]]],[11,"hash","","",75,[[["self"],["h"]]]],[11,"hash","","",122,[[["self"],["__h"]]]],[11,"hash","","",123,[[["self"],["__h"]]]],[11,"hash","","",124,[[["self"],["__h"]]]],[11,"hash","","",125,[[["self"],["__h"]]]],[11,"hash","","",126,[[["self"],["__h"]]]],[11,"hash","","",127,[[["self"],["__h"]]]],[11,"hash","","",128,[[["self"],["__h"]]]],[11,"hash","","",129,[[["self"],["__h"]]]],[11,"hash","","",130,[[["self"],["__h"]]]],[11,"hash","","",131,[[["self"],["__h"]]]],[11,"from_iter","","",113,[[["intoiterator"]],["sort"]]],[11,"from_iter","","",114,[[["intoiterator"]],["credentialtype"]]],[11,"from_iter","","",115,[[["intoiterator"]],["indexentryflag"]]],[11,"from_iter","","",116,[[["intoiterator"]],["indexentryextendedflag"]]],[11,"from_iter","","",117,[[["intoiterator"]],["indexaddoption"]]],[11,"from_iter","","",118,[[["intoiterator"]],["repositoryopenflags"]]],[11,"from_iter","","",119,[[["intoiterator"]],["revparsemode"]]],[11,"from_iter","","",120,[[["intoiterator"]],["mergeanalysis"]]],[11,"from_iter","","",121,[[["intoiterator"]],["mergepreference"]]],[11,"from_iter","","",122,[[["intoiterator"]],["status"]]],[11,"from_iter","","",123,[[["intoiterator"]],["repositoryinitmode"]]],[11,"from_iter","","",124,[[["intoiterator"]],["submodulestatus"]]],[11,"from_iter","","",125,[[["intoiterator"]],["pathspecflags"]]],[11,"from_iter","","",126,[[["intoiterator"]],["checkoutnotificationtype"]]],[11,"from_iter","","",127,[[["intoiterator"]],["diffstatsformat"]]],[11,"from_iter","","",128,[[["intoiterator"]],["stashapplyflags"]]],[11,"from_iter","","",129,[[["intoiterator"]],["stashflags"]]],[11,"from_iter","","",130,[[["intoiterator"]],["attrcheckflags"]]],[11,"from_iter","","",131,[[["intoiterator"]],["diffflags"]]],[11,"from_str","","Parse a hex-formatted object id into an Oid structure.",75,[[["str"]],[["result",["oid","error"]],["oid"],["error"]]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result"]]],[11,"read","","",139,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"write","","",42,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",42,[[["self"]],["result"]]],[11,"write","","",73,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",73,[[["self"]],["result"]]],[11,"write","","",74,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",74,[[["self"]],["result"]]]],"p":[[3,"CredentialHelper"],[3,"IndexConflict"],[3,"IndexEntry"],[4,"ApplyLocation"],[4,"DiffBinaryKind"],[4,"PackBuilderStage"],[4,"RebaseOperationType"],[4,"StatusShow"],[4,"TreeWalkMode"],[4,"TreeWalkResult"],[4,"ErrorCode"],[4,"ErrorClass"],[4,"RepositoryState"],[4,"Direction"],[4,"ResetType"],[4,"ObjectType"],[4,"ReferenceType"],[4,"BranchType"],[4,"ConfigLevel"],[4,"FileFavor"],[4,"Delta"],[4,"FileMode"],[4,"SubmoduleIgnore"],[4,"DiffFormat"],[4,"AutotagOption"],[4,"FetchPrune"],[4,"StashApplyProgress"],[4,"CloneLocal"],[3,"RepoBuilder"],[3,"CheckoutBuilder"],[3,"Cert"],[3,"CertHostkey"],[3,"CertX509"],[3,"StringArray"],[4,"Service"],[8,"SmartSubtransport"],[3,"Transport"],[3,"ApplyOptions"],[3,"Blame"],[3,"BlameHunk"],[3,"BlameOptions"],[3,"Blob"],[3,"BlobWriter"],[3,"Branch"],[3,"Branches"],[3,"Buf"],[3,"CherrypickOptions"],[3,"Commit"],[3,"Config"],[3,"ConfigEntry"],[3,"Cred"],[3,"Describe"],[3,"DescribeFormatOptions"],[3,"DescribeOptions"],[3,"Diff"],[3,"DiffDelta"],[3,"DiffFile"],[3,"DiffOptions"],[3,"DiffLine"],[3,"DiffHunk"],[3,"DiffStats"],[3,"DiffBinary"],[3,"DiffBinaryFile"],[3,"DiffFindOptions"],[3,"Error"],[3,"Index"],[3,"Progress"],[3,"AnnotatedCommit"],[3,"MergeOptions"],[3,"Note"],[3,"Object"],[3,"Odb"],[3,"OdbObject"],[3,"OdbWriter"],[3,"OdbPackwriter"],[3,"Oid"],[3,"PackBuilder"],[3,"Patch"],[3,"Pathspec"],[3,"PathspecMatchList"],[3,"ProxyOptions"],[3,"RebaseOptions"],[3,"Rebase"],[3,"RebaseOperation"],[3,"Reference"],[3,"References"],[3,"Reflog"],[3,"ReflogEntry"],[3,"Refspec"],[3,"Remote"],[3,"RemoteHead"],[3,"FetchOptions"],[3,"PushOptions"],[3,"RemoteConnection"],[3,"RemoteCallbacks"],[3,"Repository"],[3,"RepositoryInitOptions"],[3,"Revspec"],[3,"Revwalk"],[3,"Signature"],[3,"StashApplyOptions"],[3,"StatusOptions"],[3,"Statuses"],[3,"StatusEntry"],[3,"Submodule"],[3,"SubmoduleUpdateOptions"],[3,"Tag"],[3,"Time"],[3,"IndexTime"],[3,"Tree"],[3,"TreeEntry"],[3,"TreeBuilder"],[8,"IntoCString"],[3,"Sort"],[3,"CredentialType"],[3,"IndexEntryFlag"],[3,"IndexEntryExtendedFlag"],[3,"IndexAddOption"],[3,"RepositoryOpenFlags"],[3,"RevparseMode"],[3,"MergeAnalysis"],[3,"MergePreference"],[3,"Status"],[3,"RepositoryInitMode"],[3,"SubmoduleStatus"],[3,"PathspecFlags"],[3,"CheckoutNotificationType"],[3,"DiffStatsFormat"],[3,"StashApplyFlags"],[3,"StashFlags"],[3,"AttrCheckFlags"],[3,"DiffFlags"],[3,"BlameIter"],[3,"Parents"],[3,"ConfigEntries"],[3,"Deltas"],[3,"IndexConflicts"],[3,"IndexEntries"],[3,"Notes"],[3,"OdbReader"],[3,"PathspecFailedEntries"],[3,"PathspecDiffEntries"],[3,"PathspecEntries"],[3,"ReferenceNames"],[3,"ReflogIter"],[3,"Refspecs"],[3,"StatusIter"],[3,"TreeIter"],[3,"OidArray"],[3,"Iter"],[3,"IterBytes"]]};
searchIndex["git2_curl"] = {"doc":"A crate for using libcurl as a backend for HTTP git…","i":[[5,"register","git2_curl","Register the libcurl backend for HTTP requests made by…",null,[[["easy"]]]]],"p":[]};
searchIndex["glob"] = {"doc":"Support for matching file paths against Unix shell style…","i":[[3,"Paths","glob","An iterator that yields `Path`s from the filesystem that…",null,null],[3,"GlobError","","A glob iteration error.",null,null],[3,"PatternError","","A pattern parsing error.",null,null],[12,"pos","","The approximate character index of where the error occurred.",0,null],[12,"msg","","A message describing the error.",0,null],[3,"Pattern","","A compiled Unix shell style pattern.",null,null],[3,"MatchOptions","","Configuration options to modify the behaviour of…",null,null],[12,"case_sensitive","","Whether or not patterns should be matched in a…",1,null],[12,"require_literal_separator","","Whether or not path-component separator characters (e.g.…",1,null],[12,"require_literal_leading_dot","","Whether or not paths that contain components that start…",1,null],[5,"glob","","Return an iterator that produces all the `Path`s that…",null,[[["str"]],[["result",["paths","patternerror"]],["patternerror"],["paths"]]]],[5,"glob_with","","Return an iterator that produces all the `Path`s that…",null,[[["str"],["matchoptions"]],[["result",["paths","patternerror"]],["patternerror"],["paths"]]]],[6,"GlobResult","","An alias for a glob iteration result.",null,null],[11,"path","","The Path that the error corresponds to.",2,[[["self"]],["path"]]],[11,"error","","The error in question.",2,[[["self"]],["error"]]],[11,"into_error","","Consumes self, returning the raw underlying `io::Error`",2,[[],["error"]]],[11,"new","","This function compiles Unix shell style patterns.",3,[[["str"]],[["result",["patternerror"]],["patternerror"]]]],[11,"escape","","Escape metacharacters within the given string by…",3,[[["str"]],["string"]]],[11,"matches","","Return if the given `str` matches this `Pattern` using the…",3,[[["str"],["self"]],["bool"]]],[11,"matches_path","","Return if the given `Path`, when converted to a `str`,…",3,[[["path"],["self"]],["bool"]]],[11,"matches_with","","Return if the given `str` matches this `Pattern` using the…",3,[[["str"],["matchoptions"],["self"]],["bool"]]],[11,"matches_path_with","","Return if the given `Path`, when converted to a `str`,…",3,[[["matchoptions"],["path"],["self"]],["bool"]]],[11,"as_str","","Access the original glob pattern.",3,[[["self"]],["str"]]],[11,"new","","Constructs a new `MatchOptions` with default field values.…",1,[[],["self"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"next","","",4,[[["self"]],[["option",["globresult"]],["globresult"]]]],[11,"clone","","",3,[[["self"]],["pattern"]]],[11,"clone","","",1,[[["self"]],["matchoptions"]]],[11,"default","","",3,[[],["pattern"]]],[11,"default","","",1,[[],["matchoptions"]]],[11,"cmp","","",3,[[["pattern"],["self"]],["ordering"]]],[11,"cmp","","",1,[[["matchoptions"],["self"]],["ordering"]]],[11,"eq","","",3,[[["pattern"],["self"]],["bool"]]],[11,"ne","","",3,[[["pattern"],["self"]],["bool"]]],[11,"eq","","",1,[[["matchoptions"],["self"]],["bool"]]],[11,"ne","","",1,[[["matchoptions"],["self"]],["bool"]]],[11,"partial_cmp","","",3,[[["pattern"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",3,[[["pattern"],["self"]],["bool"]]],[11,"le","","",3,[[["pattern"],["self"]],["bool"]]],[11,"gt","","",3,[[["pattern"],["self"]],["bool"]]],[11,"ge","","",3,[[["pattern"],["self"]],["bool"]]],[11,"partial_cmp","","",1,[[["matchoptions"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",1,[[["matchoptions"],["self"]],["bool"]]],[11,"le","","",1,[[["matchoptions"],["self"]],["bool"]]],[11,"gt","","",1,[[["matchoptions"],["self"]],["bool"]]],[11,"ge","","",1,[[["matchoptions"],["self"]],["bool"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"from_str","","",3,[[["str"]],[["result",["patternerror"]],["patternerror"]]]],[11,"description","","",2,[[["self"]],["str"]]],[11,"cause","","",2,[[["self"]],[["option",["error"]],["error"]]]],[11,"description","","",0,[[["self"]],["str"]]]],"p":[[3,"PatternError"],[3,"MatchOptions"],[3,"GlobError"],[3,"Pattern"],[3,"Paths"]]};
searchIndex["globset"] = {"doc":"The globset crate provides cross platform single glob and…","i":[[3,"Glob","globset","Glob represents a successfully parsed shell glob pattern.",null,null],[3,"GlobBuilder","","A builder for a pattern.",null,null],[3,"GlobMatcher","","A matcher for a single pattern.",null,null],[3,"Error","","Represents an error that can occur when parsing a glob…",null,null],[3,"GlobSet","","GlobSet represents a group of globs that can be matched…",null,null],[3,"GlobSetBuilder","","GlobSetBuilder builds a group of patterns that can be used…",null,null],[3,"Candidate","","A candidate path for matching.",null,null],[4,"ErrorKind","","The kind of error that can occur when parsing a glob…",null,null],[13,"InvalidRecursive","","DEPRECATED.",0,null],[13,"UnclosedClass","","Occurs when a character class (e.g., `[abc]`) is not closed.",0,null],[13,"InvalidRange","","Occurs when a range in a character (e.g., `[a-z]`) is…",0,null],[13,"UnopenedAlternates","","Occurs when a `}` is found without a matching `{`.",0,null],[13,"UnclosedAlternates","","Occurs when a `{` is found without a matching `}`.",0,null],[13,"NestedAlternates","","Occurs when an alternating group is nested inside another…",0,null],[13,"DanglingEscape","","Occurs when an unescaped '' is found at the end of a glob.",0,null],[13,"Regex","","An error associated with parsing or compiling a regex.",0,null],[11,"is_match","","Tests whether the given path matches this pattern or not.",1,[[["path"],["self"],["asref",["path"]]],["bool"]]],[11,"is_match_candidate","","Tests whether the given path matches this pattern or not.",1,[[["self"],["candidate"]],["bool"]]],[11,"glob","","Returns the `Glob` used to compile this matcher.",1,[[["self"]],["glob"]]],[11,"new","","Builds a new pattern with default options.",2,[[["str"]],[["result",["glob","error"]],["glob"],["error"]]]],[11,"compile_matcher","","Returns a matcher for this pattern.",2,[[["self"]],["globmatcher"]]],[11,"glob","","Returns the original glob pattern used to build this…",2,[[["self"]],["str"]]],[11,"regex","","Returns the regular expression string for this glob.",2,[[["self"]],["str"]]],[11,"new","","Create a new builder for the pattern given.",3,[[["str"]],["globbuilder"]]],[11,"build","","Parses and builds the pattern.",3,[[["self"]],[["result",["glob","error"]],["glob"],["error"]]]],[11,"case_insensitive","","Toggle whether the pattern matches case insensitively or…",3,[[["self"],["bool"]],["globbuilder"]]],[11,"literal_separator","","Toggle whether a literal `/` is required to match a path…",3,[[["self"],["bool"]],["globbuilder"]]],[11,"backslash_escape","","When enabled, a back slash (`\\`) may be used to escape…",3,[[["self"],["bool"]],["globbuilder"]]],[11,"glob","","Return the glob that caused this error, if one exists.",4,[[["self"]],[["str"],["option",["str"]]]]],[11,"kind","","Return the kind of this error.",4,[[["self"]],["errorkind"]]],[11,"empty","","Create an empty `GlobSet`. An empty set matches nothing.",5,[[],["globset"]]],[11,"is_empty","","Returns true if this set is empty, and therefore matches…",5,[[["self"]],["bool"]]],[11,"len","","Returns the number of globs in this set.",5,[[["self"]],["usize"]]],[11,"is_match","","Returns true if any glob in this set matches the path given.",5,[[["path"],["self"],["asref",["path"]]],["bool"]]],[11,"is_match_candidate","","Returns true if any glob in this set matches the path given.",5,[[["self"],["candidate"]],["bool"]]],[11,"matches","","Returns the sequence number of every glob pattern that…",5,[[["path"],["self"],["asref",["path"]]],[["vec",["usize"]],["usize"]]]],[11,"matches_candidate","","Returns the sequence number of every glob pattern that…",5,[[["self"],["candidate"]],[["vec",["usize"]],["usize"]]]],[11,"matches_into","","Adds the sequence number of every glob pattern that…",5,[[["path"],["asref",["path"]],["self"],["vec"]]]],[11,"matches_candidate_into","","Adds the sequence number of every glob pattern that…",5,[[["vec"],["self"],["candidate"]]]],[11,"new","","Create a new GlobSetBuilder. A GlobSetBuilder can be used…",6,[[],["globsetbuilder"]]],[11,"build","","Builds a new matcher from all of the glob patterns added…",6,[[["self"]],[["error"],["globset"],["result",["globset","error"]]]]],[11,"add","","Add a new pattern to this set.",6,[[["glob"],["self"]],["globsetbuilder"]]],[11,"new","","Create a new candidate for matching from the given path.",7,[[["p"]],["candidate"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",2,[[["self"]],["glob"]]],[11,"clone","","",1,[[["self"]],["globmatcher"]]],[11,"clone","","",3,[[["self"]],["globbuilder"]]],[11,"clone","","",4,[[["self"]],["error"]]],[11,"clone","","",0,[[["self"]],["errorkind"]]],[11,"clone","","",5,[[["self"]],["globset"]]],[11,"clone","","",6,[[["self"]],["globsetbuilder"]]],[11,"clone","","",7,[[["self"]],["candidate"]]],[11,"eq","","",2,[[["self"],["glob"]],["bool"]]],[11,"eq","","",4,[[["self"],["error"]],["bool"]]],[11,"ne","","",4,[[["self"],["error"]],["bool"]]],[11,"eq","","",0,[[["errorkind"],["self"]],["bool"]]],[11,"ne","","",0,[[["errorkind"],["self"]],["bool"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"hash","","",2,[[["self"],["h"]]]],[11,"from_str","","",2,[[["str"]],["result"]]],[11,"description","","",4,[[["self"]],["str"]]]],"p":[[4,"ErrorKind"],[3,"GlobMatcher"],[3,"Glob"],[3,"GlobBuilder"],[3,"Error"],[3,"GlobSet"],[3,"GlobSetBuilder"],[3,"Candidate"]]};
searchIndex["guppy"] = {"doc":"Track and query Cargo dependency graphs.","i":[[3,"Platform","guppy","A platform to evaluate target specs against.",null,null],[4,"TargetFeatures","","A set of target features to match.",null,null],[13,"Unknown","","The target features are unknown.",0,null],[13,"Features","","Only match the specified features.",0,null],[13,"All","","Match all features.",0,null],[3,"MetadataCommand","","A builder for configuring `cargo metadata` invocations.",null,null],[3,"CargoMetadata","","A deserialized Cargo metadata returned by a…",null,null],[3,"PackageId","","An \"opaque\" identifier for a package.",null,null],[4,"DependencyKind","","A descriptor for the kind of dependency.",null,null],[13,"Normal","","Normal dependencies.",1,null],[13,"Development","","Dependencies used for development only.",1,null],[13,"Build","","Dependencies used for build scripts.",1,null],[11,"to_str","","Returns a string representing the kind of dependency this…",1,[[],["str"]]],[0,"errors","","Contains types that describe errors and warnings that…",null,null],[4,"Error","guppy::errors","Error type describing the sorts of errors `guppy` can…",null,null],[13,"CommandError","","An error occurred while executing `cargo metadata`.",2,null],[13,"MetadataParseError","","An error occurred while parsing `cargo metadata` JSON.",2,null],[13,"MetadataSerializeError","","An error occurred while serializing `cargo metadata` JSON.",2,null],[13,"PackageGraphConstructError","","An error occurred while constructing a `PackageGraph` from…",2,null],[13,"UnknownPackageId","","A package ID was unknown to this `PackageGraph`.",2,null],[13,"UnknownFeatureId","","A feature ID was unknown to this `FeatureGraph`.",2,null],[13,"UnknownWorkspaceName","","A package specified by name was unknown to this workspace.",2,null],[13,"CargoSetError","","An error occured while computing a `CargoSet`.",2,null],[13,"PackageGraphInternalError","","An internal error occurred within this `PackageGraph`.",2,null],[13,"FeatureGraphInternalError","","An internal error occurred within this `FeatureGraph`.",2,null],[4,"FeatureGraphWarning","","Describes warnings emitted during feature graph…",null,null],[13,"MissingFeature","","A feature that was requested is missing from a package.",3,null],[12,"stage","guppy::errors::FeatureGraphWarning","The stage of building the feature graph where the warning…",4,null],[12,"package_id","","The package ID for which the feature was requested.",4,null],[12,"feature_name","","The name of the feature.",4,null],[4,"FeatureBuildStage","guppy::errors","Describes the stage of construction at which a feature…",null,null],[13,"AddNamedFeatureEdges","","The warning occurred while adding edges for the…",5,null],[12,"package_id","guppy::errors::FeatureBuildStage","The package ID for which edges were being added.",6,null],[12,"from_feature","","The feature name from which edges were being added.",6,null],[13,"AddDependencyEdges","guppy::errors","The warning occurred while adding dependency edges.",5,null],[12,"package_id","guppy::errors::FeatureBuildStage","The package ID for which edges were being added.",7,null],[12,"dep_name","","The name of the dependency.",7,null],[0,"graph","guppy","Entry point for analyzing Cargo dependency graphs.",null,null],[3,"DotWrite","guppy::graph","A write target for `Dot` graphs. Use with the `write!`…",null,null],[3,"BuildTarget","","A build target in a package.",null,null],[3,"Cycles","","Contains information about dependency cycles.",null,null],[3,"PackageGraph","","A graph of packages and dependencies between them, parsed…",null,null],[3,"DependsCache","","An optional cache used to speed up `depends_on` queries.",null,null],[3,"Workspace","","Information about a workspace, parsed from metadata…",null,null],[3,"PackageMetadata","","Information about a specific package in a `PackageGraph`.",null,null],[3,"PackageLink","","Represents a dependency from one package to another.",null,null],[3,"DependencyReq","","Information about a specific kind of dependency (normal,…",null,null],[3,"EnabledStatus","","Whether a dependency or feature is required, optional, or…",null,null],[3,"PlatformEval","","An evaluator for platform-specific dependencies.",null,null],[3,"Prop09Resolver","","A randomly generated package resolver.",null,null],[3,"PackageQuery","","A query over a package graph.",null,null],[3,"PackageSet","","A set of resolved packages in a package graph.",null,null],[4,"BuildTargetId","","An identifier for a build target within a package.",null,null],[13,"Library","","A library target.",8,null],[13,"BuildScript","","A build script.",8,null],[13,"Binary","","A binary target with its name.",8,null],[13,"Example","","An example target with its name.",8,null],[13,"Test","","A test target with its name.",8,null],[13,"Benchmark","","A benchmark target with its name.",8,null],[4,"BuildTargetKind","","The type of build target (library or binary).",null,null],[13,"LibraryOrExample","","This build target is a library or example, with the…",9,null],[13,"ProcMacro","","This build target is a procedural macro.",9,null],[13,"Binary","","This build target is a binary target.",9,null],[4,"PlatformStatus","","The status of a dependency or feature, which is possibly…",null,null],[13,"Never","","This dependency or feature is never enabled on any…",10,null],[13,"Always","","This dependency or feature is always enabled on all…",10,null],[13,"PlatformDependent","","The status is platform-dependent.",10,null],[12,"eval","guppy::graph::PlatformStatus","An evaluator to run queries against.",11,null],[4,"EnabledTernary","guppy::graph","Whether a dependency or feature is enabled on a specific…",null,null],[13,"Disabled","","The dependency is disabled on this platform.",12,null],[13,"Unknown","","The status of this dependency is unknown on this platform.",12,null],[13,"Enabled","","The dependency is enabled on this platform.",12,null],[4,"DependencyDirection","","The direction in which to follow dependencies.",null,null],[13,"Forward","","Dependencies from this package to other packages.",13,null],[13,"Reverse","","Reverse dependencies from other packages to this one.",13,null],[11,"id","","Returns the unique identifier for this build target.",14,[[["self"]],["buildtargetid"]]],[11,"name","","Returns the name of this build target.",14,[[["self"]],["str"]]],[11,"kind","","Returns the kind of this build target.",14,[[["self"]],["buildtargetkind"]]],[11,"required_features","","Returns the features required for this build target.",14,[[["self"]]]],[11,"path","","Returns the absolute path of the location where the source…",14,[[["self"]],["path"]]],[11,"edition","","Returns the Rust edition for this build target.",14,[[["self"]],["str"]]],[11,"doc_tests","","Returns true if documentation tests are enabled for this…",14,[[["self"]],["bool"]]],[11,"name","","Returns the name embedded in this identifier, or `None` if…",8,[[["self"]],[["str"],["option",["str"]]]]],[0,"cargo","","Simulations of Cargo behavior.",null,null],[3,"CargoOptions","guppy::graph::cargo","Options for queries which simulate what Cargo does.",null,null],[3,"PostfilterFn","","A wrapper that converts a function to a `CargoPostfilter`.",null,null],[3,"CargoSet","","A set of packages and features, as would be built by Cargo.",null,null],[4,"CargoResolvePhase","","The phase of Cargo resolution currently being computed.",null,null],[13,"V1Unified","","A resolution phase that doesn't distinguish between host…",15,null],[13,"TargetPackage","","A resolution phase for packages on the target platform.",15,null],[13,"TargetFeature","","A resolution phase for features on the target platform.",15,null],[13,"HostPackage","","A resolution phase for packages on the host platform.",15,null],[13,"HostFeature","","A resolution phase for features on the host platform.",15,null],[4,"CargoResolverVersion","","The version of Cargo's feature resolver to use.",null,null],[13,"V1","","The default \"classic\" feature resolver in Rust.",16,null],[13,"V1Install","","The \"classic\" feature resolver in Rust, as used by…",16,null],[13,"V2","","The new feature resolver.",16,null],[8,"CargoPostfilter","","A final filter for if a package or feature link should be…",null,null],[10,"accept_package","","Returns true if this package link should be considered…",17,[[["self"],["cargoresolvephase"],["packagelink"]],["bool"]]],[11,"accept_feature","","Returns true if this feature link should be considered…",17,[[["crosslink"],["self"],["cargoresolvephase"]],["bool"]]],[11,"new","","Creates a new `CargoOptions` with this resolver version…",18,[[],["self"]]],[11,"new_postfilter_fn","","Creates a new `CargoOptions` with the specified postfilter…",18,[[["f"]],["self"]]],[11,"new_postfilter","","Creates a new `CargoOptions` with a specified postfilter.",18,[[["pf"]],["self"]]],[11,"with_version","","Sets the Cargo feature resolver version.",18,[[["cargoresolverversion"]],["self"]]],[11,"with_dev_deps","","If set to true, causes dev-dependencies of the initial set…",18,[[["bool"]],["self"]]],[11,"with_platform","","Sets both the target and host platforms to the provided…",18,[[["option",["platform"]],["platform"]],["self"]]],[11,"with_target_platform","","Sets the target platform to the provided one, or to…",18,[[["option",["platform"]],["platform"]],["self"]]],[11,"with_host_platform","","Sets the host platform to the provided one, or to evaluate…",18,[[["option",["platform"]],["platform"]],["self"]]],[11,"with_omitted_packages","","Omits edges into the given packages.",18,[[],["self"]]],[11,"new","","Creates a new `PostfilterFn` by wrapping the provided…",19,[[["f"]],["self"]]],[11,"new","","Creates a new `CargoSet` based on the given query and…",20,[[["featurequery"],["cargooptions"]],[["result",["error"]],["error"]]]],[11,"target_features","","Returns the feature set enabled on the target platform.",20,[[["self"]],["featureset"]]],[11,"host_features","","Returns the feature set enabled on the host platform.",20,[[["self"]],["featureset"]]],[11,"proc_macro_links","","Returns `PackageLink` instances for procedural macro…",20,[[["self"]]]],[11,"build_dep_links","","Returns `PackageLink` instances for build dependencies…",20,[[["self"]]]],[11,"is_cyclic","guppy::graph","Returns true if these two IDs are in the same cycle.",21,[[["packageid"],["self"]],[["bool"],["error"],["result",["bool","error"]]]]],[11,"all_cycles","","Returns all the cycles of 2 or more elements in this graph.",21,[[["self"]]]],[0,"feature","","Graph analysis for individual features within a package.",null,null],[3,"Cycles","guppy::graph::feature","Contains information about dependency cycles in feature…",null,null],[3,"FeatureGraph","","A derived graph representing every feature of every package.",null,null],[3,"FeatureId","","An identifier for a (package, feature) pair in a feature…",null,null],[3,"FeatureMetadata","","Metadata for a feature within a package.",null,null],[3,"CrossLink","","A feature dependency across packages.",null,null],[3,"FeatureFilterFn","","A `FeatureFilter` which calls the function that's passed in.",null,null],[3,"FeatureQuery","","A query over a feature graph.",null,null],[3,"FeatureSet","","A set of resolved feature IDs in a feature graph.",null,null],[4,"FeatureType","","The type of a particular feature within a package.",null,null],[13,"NamedFeature","","This is a named feature in the `[features]` section.",22,null],[13,"OptionalDep","","This is an optional dependency.",22,null],[13,"BasePackage","","This is the \"base\" package with no features enabled.",22,null],[5,"all_filter","","Returns a `FeatureFilter` that selects all features from…",null,[[]]],[5,"none_filter","","Returns a `FeatureFilter` that selects no features from…",null,[[]]],[5,"default_filter","","Returns a `FeatureFilter` that selects default features…",null,[[]]],[5,"feature_filter","","Returns a `FeatureFilter` that selects everything from the…",null,[[]]],[5,"feature_id_filter","","Returns a `FeatureFilter` that selects everything from the…",null,[[]]],[11,"is_cyclic","","Returns true if these two IDs are in the same cycle.",23,[[["self"]],[["bool"],["error"],["result",["bool","error"]]]]],[11,"all_cycles","","Returns all the cycles of 2 or more elements in this graph.",23,[[["self"]]]],[0,"feature_list","","A sorted, deduplicated list of features from a single…",null,null],[3,"FeatureList","guppy::graph::feature::feature_list","A sorted, deduplicated list of features from a single…",null,null],[3,"IntoIter","","An owned iterator over a `FeatureList`.",null,null],[3,"Iter","","A borrowed iterator over a `FeatureList`.",null,null],[3,"DisplayFeatures","","A pretty-printer for a list of features.",null,null],[11,"new","","Creates a new `FeatureList` from a package and an iterator…",24,[[["packagemetadata"]],["self"]]],[11,"package","","Returns the package corresponding to this feature list.",24,[[["self"]],["packagemetadata"]]],[11,"contains","","Returns true if this feature list contains this feature.",24,[[["self"]],["bool"]]],[11,"has_base","","Returns true if this feature list contains the \"base\"…",24,[[["self"]],["bool"]]],[11,"features","","Returns the list of features as a slice.",24,[[["self"]]]],[11,"iter","","Returns a borrowed iterator over feature IDs.",24,[[["self"]],["iter"]]],[11,"display_features","","Returns a pretty-printer over the list of features.",24,[[["self"]],["displayfeatures"]]],[11,"into_features","","Returns a vector of feature names.",24,[[],[["str"],["vec",["str"]]]]],[11,"new","","Creates a new iterator.",25,[[["featurelist"]],["self"]]],[11,"new","","Creates a new iterator.",26,[[["featurelist"]],["self"]]],[11,"feature_graph","guppy::graph","Returns a derived graph representing every feature of…",27,[[["self"]],["featuregraph"]]],[11,"build_warnings","guppy::graph::feature","Returns any non-fatal warnings encountered while…",28,[[["self"]]]],[11,"package_graph","","Returns the `PackageGraph` from which this feature graph…",28,[[["self"]],["packagegraph"]]],[11,"feature_count","","Returns the total number of (package ID, feature)…",28,[[["self"]],["usize"]]],[11,"link_count","","Returns the number of links in this graph.",28,[[["self"]],["usize"]]],[11,"metadata","","Returns metadata for the given feature ID, or `None` if…",28,[[["self"]],[["option",["featuremetadata"]],["featuremetadata"]]]],[11,"is_default_feature","","Returns true if this feature is included in a package's…",28,[[["self"]],[["bool"],["option",["bool"]]]]],[11,"depends_on","","Returns true if `feature_a` depends (directly or…",28,[[["self"]],[["bool"],["error"],["result",["bool","error"]]]]],[11,"directly_depends_on","","Returns true if `feature_a` directly depends on `feature_b`.",28,[[["self"]],[["bool"],["error"],["result",["bool","error"]]]]],[11,"cycles","","Returns information about dependency cycles.",28,[[["self"]],["cycles"]]],[11,"new","","Creates a new `FeatureId`.",29,[[["str"],["packageid"]],["self"]]],[11,"base","","Creates a new `FeatureId` representing the \"base\" feature…",29,[[["packageid"]],["self"]]],[11,"package_id","","Returns the package ID.",29,[[["self"]],["packageid"]]],[11,"feature","","Returns the name of the feature, or `None` if this is the…",29,[[["self"]],[["str"],["option",["str"]]]]],[11,"is_base","","Returns true if this is the \"base\" feature for the package.",29,[[["self"]],["bool"]]],[11,"feature_id","","Returns the feature ID corresponding to this metadata.",30,[[["self"]],["featureid"]]],[11,"package_id","","Returns the package ID corresponding to this metadata.",30,[[["self"]],["packageid"]]],[11,"package","","Returns the package metadata corresponding to this feature…",30,[[["self"]],["packagemetadata"]]],[11,"feature_type","","Returns the type of this feature.",30,[[["self"]],["featuretype"]]],[11,"from","","Returns the feature which depends on the `to` feature.",31,[[["self"]],["featuremetadata"]]],[11,"to","","Returns the feature which is depended on by the `from`…",31,[[["self"]],["featuremetadata"]]],[11,"endpoints","","Returns the endpoints as a pair of features `(from, to)`.",31,[[["self"]]]],[11,"normal","","Returns details about this feature dependency from the…",31,[[["self"]],["platformstatus"]]],[11,"build","","Returns details about this feature dependency from the…",31,[[["self"]],["platformstatus"]]],[11,"dev","","Returns details about this feature dependency from the…",31,[[["self"]],["platformstatus"]]],[11,"status_for_kind","","Returns details about this feature dependency from the…",31,[[["dependencykind"],["self"]],["platformstatus"]]],[11,"dev_only","","Returns true if this edge is dev-only, i.e. code from this…",31,[[["self"]],["bool"]]],[11,"package_link","","Returns the `PackageLink` from which this `CrossLink` was…",31,[[["self"]],["packagelink"]]],[11,"prop09_id_strategy","","Returns a `Strategy` that generates random feature IDs…",28,[[["self"]]]],[11,"prop09_set_strategy","","Returns a `Strategy` that generates random feature sets…",28,[[["self"]]]],[11,"new","","Returns a new instance of this wrapper.",32,[[["f"]],["self"]]],[11,"query_workspace","","Creates a new query over the entire workspace.",28,[[["self"]],["featurequery"]]],[11,"query_packages","","Creates a new query for all packages selected through this…",28,[[["packagequery"],["self"]],["featurequery"]]],[11,"query_directed","","Creates a new query that returns transitive dependencies…",28,[[["self"],["dependencydirection"]],[["featurequery"],["result",["featurequery","error"]],["error"]]]],[11,"query_forward","","Creates a new query that returns transitive dependencies…",28,[[["self"]],[["featurequery"],["result",["featurequery","error"]],["error"]]]],[11,"query_reverse","","Creates a new query that returns transitive reverse…",28,[[["self"]],[["featurequery"],["result",["featurequery","error"]],["error"]]]],[11,"graph","","Returns the feature graph the query is going to be…",33,[[["self"]],["featuregraph"]]],[11,"direction","","Returns the direction the query is happening in.",33,[[["self"]],["dependencydirection"]]],[11,"starts_from","","Returns true if the query starts from the given feature ID.",33,[[["self"]],[["bool"],["option",["bool"]]]]],[11,"resolve","","Resolves this query into a set of known feature IDs.",33,[[],["featureset"]]],[11,"resolve_with","","Resolves this query into a set of known feature IDs, using…",33,[[],["featureset"]]],[11,"resolve_with_fn","","Resolves this query into a set of known feature IDs, using…",33,[[],["featureset"]]],[11,"resolve_cargo","","Resolves this query, simulating what Cargo would do if…",33,[[["cargooptions"]],[["error"],["result",["cargoset","error"]],["cargoset"]]]],[11,"resolve_all","","Creates a new `FeatureSet` consisting of all members of…",28,[[["self"]],["featureset"]]],[11,"resolve_packages","","Creates a new `FeatureSet` consisting of all packages in…",28,[[["self"],["packageset"]],["featureset"]]],[11,"graph","","Returns the `FeatureGraph` that this feature set was…",34,[[["self"]],["featuregraph"]]],[11,"len","","Returns the number of feature IDs in this set.",34,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if no feature IDs were resolved in this set.",34,[[["self"]],["bool"]]],[11,"contains","","Returns true if this set contains the given feature ID,…",34,[[["self"]],[["bool"],["option",["bool"]]]]],[11,"union","","Returns a `FeatureSet` that contains all packages present…",34,[[["self"]],["self"]]],[11,"intersection","","Returns a `FeatureSet` that contains all packages present…",34,[[["self"]],["self"]]],[11,"difference","","Returns a `FeatureSet` that contains all packages present…",34,[[["self"]],["self"]]],[11,"symmetric_difference","","Returns a `FeatureSet` that contains all packages present…",34,[[["self"]],["self"]]],[11,"features_for","","Returns a list of features present for this package.",34,[[["packageid"],["self"]],[["option",["featurelist"]],["featurelist"]]]],[11,"to_package_set","","Converts this `FeatureSet` into a `PackageSet` containing…",34,[[["self"]],["packageset"]]],[11,"feature_ids","","Iterates over feature IDs, in topological order in the…",34,[[["self"],["dependencydirection"]]]],[11,"features","","Iterates over feature metadatas, in topological order in…",34,[[["self"],["dependencydirection"]]]],[11,"packages_with_features","","Iterates over package metadatas and their corresponding…",34,[[["self"],["dependencydirection"]]]],[11,"root_ids","","Returns the set of \"root feature\" IDs in the specified…",34,[[["self"],["dependencydirection"]]]],[11,"root_features","","Returns the set of \"root feature\" metadatas in the…",34,[[["self"],["dependencydirection"]]]],[11,"cross_links","","Creates an iterator over `CrossLink` instances in the…",34,[[["self"],["dependencydirection"]]]],[8,"FeatureFilter","","Trait representing whether a feature within a package…",null,null],[10,"accept","","Returns true if this feature ID should be selected in the…",35,[[["self"],["featuregraph"],["featureid"]],["bool"]]],[8,"FeatureResolver","","Represents whether a particular link within a feature…",null,null],[10,"accept","","Returns true if this cross-package link should be followed…",36,[[["crosslink"],["self"],["featurequery"]],["bool"]]],[11,"from_command","guppy::graph","Executes the given `MetadataCommand` and constructs a…",27,[[["metadatacommand"]],[["result",["error"]],["error"]]]],[11,"from_metadata","","Parses the given `Metadata` and constructs a…",27,[[["cargometadata"]],[["result",["error"]],["error"]]]],[11,"from_json","","Constructs a package graph from the given JSON output of…",27,[[],[["result",["error"]],["error"]]]],[11,"workspace","","Returns information about the workspace.",27,[[["self"]],["workspace"]]],[11,"package_ids","","Returns an iterator over all the package IDs in this graph.",27,[[["self"]]]],[11,"packages","","Returns an iterator over all the packages in this graph.",27,[[["self"]]]],[11,"metadata","","Returns the metadata for the given package ID.",27,[[["packageid"],["self"]],[["packagemetadata"],["option",["packagemetadata"]]]]],[11,"package_count","","Returns the number of packages in this graph.",27,[[["self"]],["usize"]]],[11,"link_count","","Returns the number of links in this graph.",27,[[["self"]],["usize"]]],[11,"new_depends_cache","","Creates a new cache for `depends_on` queries.",27,[[["self"]],["dependscache"]]],[11,"depends_on","","Returns true if `package_a` depends (directly or…",27,[[["packageid"],["self"]],[["bool"],["error"],["result",["bool","error"]]]]],[11,"directly_depends_on","","Returns true if `package_a` directly depends on `package_b`.",27,[[["packageid"],["self"]],[["bool"],["error"],["result",["bool","error"]]]]],[11,"cycles","","Returns information about dependency cycles in this graph.",27,[[["self"]],["cycles"]]],[11,"new","","Creates a new cache for `depends_on` queries for this…",37,[[["packagegraph"]],["self"]]],[11,"depends_on","","Returns true if `package_a` depends (directly or…",37,[[["packageid"],["self"]],[["bool"],["error"],["result",["bool","error"]]]]],[11,"root","","Returns the workspace root.",38,[[["self"]],["path"]]],[11,"member_count","","Returns the number of packages in this workspace.",38,[[["self"]],["usize"]]],[11,"members","","Returns an iterator over workspace paths and package…",38,[[["self"]]]],[11,"members_by_name","","Returns an iterator over workspace names and package…",38,[[["self"]]]],[11,"member_ids","","Returns an iterator over package IDs for workspace…",38,[[["self"]]]],[11,"member_by_path","","Maps the given path to the corresponding workspace member.",38,[[["self"]],[["packagemetadata"],["option",["packagemetadata"]]]]],[11,"member_by_name","","Maps the given name to the corresponding workspace member.",38,[[["self"]],[["packagemetadata"],["option",["packagemetadata"]]]]],[11,"id","","Returns the unique identifier for this package.",39,[[["self"]],["packageid"]]],[11,"direct_links_directed","","Returns `PackageLink` instances corresponding to the…",39,[[["self"],["dependencydirection"]]]],[11,"direct_links","","Returns `PackageLink` instances corresponding to the…",39,[[["self"]]]],[11,"reverse_direct_links","","Returns `PackageLink` instances corresponding to the…",39,[[["self"]]]],[11,"name","","Returns the name of this package.",39,[[["self"]],["str"]]],[11,"version","","Returns the version of this package as resolved by Cargo.",39,[[["self"]],["version"]]],[11,"authors","","Returns the authors of this package.",39,[[["self"]]]],[11,"description","","Returns a short description for this package.",39,[[["self"]],[["str"],["option",["str"]]]]],[11,"license","","Returns an SPDX 2.1 license expression for this package,…",39,[[["self"]],[["str"],["option",["str"]]]]],[11,"license_file","","Returns the path to a license file for this package, if…",39,[[["self"]],[["option",["path"]],["path"]]]],[11,"manifest_path","","Returns the full path to the `Cargo.toml` for this package.",39,[[["self"]],["path"]]],[11,"categories","","Returns categories for this package.",39,[[["self"]]]],[11,"keywords","","Returns keywords for this package.",39,[[["self"]]]],[11,"readme","","Returns a path to the README for this package, if specified.",39,[[["self"]],[["option",["path"]],["path"]]]],[11,"repository","","Returns the source code repository for this package, if…",39,[[["self"]],[["str"],["option",["str"]]]]],[11,"edition","","Returns the Rust edition this package is written against.",39,[[["self"]],["str"]]],[11,"metadata_table","","Returns the freeform metadata table for this package.",39,[[["self"]],["jsonvalue"]]],[11,"links","","Returns the name of a native library this package links…",39,[[["self"]],[["str"],["option",["str"]]]]],[11,"publish","","Returns the list of registries to which this package may…",39,[[["self"]],["option"]]],[11,"in_workspace","","Returns true if this package is in the workspace.",39,[[["self"]],["bool"]]],[11,"workspace_path","","Returns the relative path to this package in the…",39,[[["self"]],[["option",["path"]],["path"]]]],[11,"build_targets","","Returns all the build targets for this package.",39,[[["self"]]]],[11,"build_target","","Looks up a build target by identifier.",39,[[["self"],["buildtargetid"]],[["buildtarget"],["option",["buildtarget"]]]]],[11,"is_proc_macro","","Returns true if this package is a procedural macro.",39,[[["self"]],["bool"]]],[11,"has_build_script","","Returns true if this package has a build script.",39,[[["self"]],["bool"]]],[11,"has_default_feature","","Returns true if this package has a named feature named…",39,[[["self"]],["bool"]]],[11,"default_feature_id","","Returns the `FeatureId` corresponding to the default…",39,[[["self"]],["featureid"]]],[11,"named_features","","Returns the list of named features available for this…",39,[[["self"]]]],[11,"from","","Returns the package which depends on the `to` package.",40,[[["self"]],["packagemetadata"]]],[11,"to","","Returns the package which is depended on by the `from`…",40,[[["self"]],["packagemetadata"]]],[11,"endpoints","","Returns the endpoints as a pair of packages `(from, to)`.",40,[[["self"]]]],[11,"dep_name","","Returns the name for this dependency edge. This can be…",40,[[["self"]],["str"]]],[11,"resolved_name","","Returns the resolved name for this dependency edge. This…",40,[[["self"]],["str"]]],[11,"version_req","","Returns the semver requirements specified for this…",40,[[["self"]],["versionreq"]]],[11,"normal","","Returns details about this dependency from the…",40,[[["self"]],["dependencyreq"]]],[11,"build","","Returns details about this dependency from the…",40,[[["self"]],["dependencyreq"]]],[11,"dev","","Returns details about this dependency from the…",40,[[["self"]],["dependencyreq"]]],[11,"req_for_kind","","Returns details about this dependency from the section…",40,[[["dependencykind"],["self"]],["dependencyreq"]]],[11,"dev_only","","Return true if this edge is dev-only, i.e. code from this…",40,[[["self"]],["bool"]]],[11,"is_present","","Returns true if there is at least one `Cargo.toml` entry…",41,[[["self"]],["bool"]]],[11,"status","","Returns the enabled status of this dependency.",41,[[["self"]],["enabledstatus"]]],[11,"default_features","","Returns the status of default features on the platform…",41,[[["self"]],["enabledstatus"]]],[11,"features","","Returns a list of all features possibly enabled by this…",41,[[["self"]]]],[11,"feature_status","","Returns the enabled status of this feature.",41,[[["str"],["self"]],["enabledstatus"]]],[11,"is_always_required","","Returns true if this dependency is required on all…",42,[[["self"]],["bool"]]],[11,"is_never","","Returns true if this dependency is never enabled on any…",42,[[["self"]],["bool"]]],[11,"required_on","","Evaluates whether this dependency is required on the given…",42,[[["platform"],["self"]],["enabledternary"]]],[11,"required_on_any","","Returns true if there are any platforms on which this…",42,[[["self"]],["bool"]]],[11,"enabled_on","","Evaluates whether this dependency is enabled (required or…",42,[[["platform"],["self"]],["enabledternary"]]],[11,"enabled_on_any","","Returns true if there are any platforms on which this…",42,[[["self"]],["bool"]]],[11,"required_status","","Returns the `PlatformStatus` corresponding to whether this…",42,[[["self"]],["platformstatus"]]],[11,"optional_status","","Returns the `PlatformStatus` corresponding to whether this…",42,[[["self"]],["platformstatus"]]],[11,"is_always","","Returns true if this dependency is always enabled on all…",10,[[["self"]],["bool"]]],[11,"is_never","","Returns true if this dependency is never enabled on any…",10,[[["self"]],["bool"]]],[11,"is_present","","Returns true if this dependency is possibly enabled on any…",10,[[["self"]],["bool"]]],[11,"enabled_on","","Evaluates whether this dependency is enabled on the given…",10,[[["platform"],["self"]],["enabledternary"]]],[11,"is_known","","Returns true if the status is known (either enabled or…",12,[[],["bool"]]],[11,"eval","","Runs this evaluator against the given platform.",43,[[["platform"],["self"]],["enabledternary"]]],[11,"prop09_id_strategy","","Returns a `Strategy` that generates random package IDs…",27,[[["self"]]]],[11,"prop09_link_strategy","","Returns a `Strategy` that generates random dependency…",27,[[["self"]]]],[11,"prop09_resolver_strategy","","Returns a `Strategy` that generates a random…",27,[[["self"]]]],[11,"prop09_name_strategy","","Returns a `Strategy` that generates random package names…",38,[[["self"]]]],[11,"prop09_id_strategy","","Returns a `Strategy` that generates random package IDs…",38,[[["self"]]]],[11,"accept_link","","Returns true if the given link is accepted by this resolver.",44,[[["self"],["packagelink"]],["bool"]]],[11,"query_workspace","","Creates a new forward query over the entire workspace.",27,[[["self"]],["packagequery"]]],[11,"query_workspace_names","","Creates a new forward query over the specified workspace…",27,[[["self"]],[["result",["packagequery","error"]],["error"],["packagequery"]]]],[11,"query_directed","","Creates a new query that returns transitive dependencies…",27,[[["dependencydirection"],["self"]],[["result",["packagequery","error"]],["error"],["packagequery"]]]],[11,"query_forward","","Creates a new query that returns transitive dependencies…",27,[[["self"]],[["result",["packagequery","error"]],["error"],["packagequery"]]]],[11,"query_reverse","","Creates a new query that returns transitive reverse…",27,[[["self"]],[["result",["packagequery","error"]],["error"],["packagequery"]]]],[11,"graph","","Returns the package graph on which the query is going to…",45,[[["self"]],["packagegraph"]]],[11,"direction","","Returns the direction the query is happening in.",45,[[["self"]],["dependencydirection"]]],[11,"starts_from","","Returns true if the query starts from the given package ID.",45,[[["packageid"],["self"]],[["bool"],["option",["bool"]]]]],[11,"resolve","","Resolves this query into a set of known packages,…",45,[[],["packageset"]]],[11,"resolve_with","","Resolves this query into a set of known packages, using…",45,[[],["packageset"]]],[11,"resolve_with_fn","","Resolves this query into a set of known packages, using…",45,[[],["packageset"]]],[11,"resolve_all","","Creates a new `PackageSet` consisting of all members of…",27,[[["self"]],["packageset"]]],[11,"resolve_ids","","Creates a new `PackageSet` consisting of the specified…",27,[[["self"]],[["packageset"],["result",["packageset","error"]],["error"]]]],[11,"resolve_workspace","","Creates a new `PackageSet` consisting of all packages in…",27,[[["self"]],["packageset"]]],[11,"resolve_workspace_names","","Creates a new `PackageSet` consisting of the specified…",27,[[["self"]],[["packageset"],["result",["packageset","error"]],["error"]]]],[11,"len","","Returns the number of packages in this set.",46,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if no packages were resolved in this set.",46,[[["self"]],["bool"]]],[11,"contains","","Returns true if this package ID is contained in this…",46,[[["packageid"],["self"]],[["bool"],["option",["bool"]]]]],[11,"union","","Returns a `PackageSet` that contains all packages present…",46,[[["self"]],["self"]]],[11,"intersection","","Returns a `PackageSet` that contains all packages present…",46,[[["self"]],["self"]]],[11,"difference","","Returns a `PackageSet` that contains all packages present…",46,[[["self"]],["self"]]],[11,"symmetric_difference","","Returns a `PackageSet` that contains all packages present…",46,[[["self"]],["self"]]],[11,"package_ids","","Iterates over package IDs, in topological order in the…",46,[[["self"],["dependencydirection"]]]],[11,"packages","","Iterates over package metadatas, in topological order in…",46,[[["self"],["dependencydirection"]]]],[11,"root_ids","","Returns the set of \"root package\" IDs in the specified…",46,[[["self"],["dependencydirection"]]]],[11,"root_packages","","Returns the set of \"root package\" metadatas in the…",46,[[["self"],["dependencydirection"]]]],[11,"links","","Creates an iterator over `PackageLink` instances.",46,[[["self"],["dependencydirection"]]]],[11,"display_dot","","Constructs a representation of the selected packages in…",46,[[["self"],["packagedotvisitor"]]]],[8,"PackageResolver","","Represents whether a particular link within a package…",null,null],[10,"accept","","Returns true if this link should be followed during a…",47,[[["packagequery"],["self"],["packagelink"]],["bool"]]],[8,"PackageDotVisitor","","A visitor used for formatting `dot` graphs.",null,null],[10,"visit_package","","Visits this package. The implementation may output a label…",48,[[["packagemetadata"],["dotwrite"],["self"]],["result"]]],[10,"visit_link","","Visits this dependency link. The implementation may output…",48,[[["dotwrite"],["self"],["packagelink"]],["result"]]],[11,"opposite","","Returns the opposite direction to this one.",13,[[],["self"]]],[11,"new","guppy","Creates a default `cargo metadata` command builder.",49,[[],["self"]]],[11,"cargo_path","","Sets the path to the `cargo` executable.",49,[[["self"]],["self"]]],[11,"manifest_path","","Sets the path to `Cargo.toml`.",49,[[["self"]],["self"]]],[11,"current_dir","","Sets the current directory of the `cargo metadata` process.",49,[[["self"]],["self"]]],[11,"other_options","","Arbitrary flags to pass to `cargo metadata`. These will be…",49,[[["self"]],["self"]]],[11,"exec","","Runs the configured `cargo metadata` and returns a…",49,[[["self"]],[["cargometadata"],["result",["cargometadata","error"]],["error"]]]],[11,"build_graph","","Runs the configured `cargo metadata` and returns a parsed…",49,[[["self"]],[["packagegraph"],["result",["packagegraph","error"]],["error"]]]],[11,"parse_json","","Deserializes this JSON blob into a `CargoMetadata`.",50,[[],[["result",["error"]],["error"]]]],[11,"serialize","","Serializes this metadata into the given writer.",50,[[["self"]],[["result",["error"]],["error"]]]],[11,"build_graph","","Parses this metadata and builds a `PackageGraph` from it.",50,[[],[["packagegraph"],["result",["packagegraph","error"]],["error"]]]],[11,"new","","Creates a new `PackageId`.",51,[[],["self"]]],[11,"repr","","Returns the inner representation of a package ID. This is…",51,[[["self"]],["str"]]],[11,"set_escape_backslashes","guppy::graph","Sets a config option for whether backslashes should be…",52,[[["self"],["bool"]]]],[11,"write_fmt","","Glue for usage of the `write!` macro.",52,[[["self"],["arguments"]],["result"]]],[11,"from","guppy","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"vzip","","",53,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"vzip","","",49,[[],["v"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"vzip","","",50,[[],["v"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"to_string","","",51,[[["self"]],["string"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"equivalent","","",51,[[["k"],["self"]],["bool"]]],[11,"vzip","","",51,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"equivalent","","",1,[[["k"],["self"]],["bool"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","guppy::errors","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"equivalent","","",3,[[["k"],["self"]],["bool"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"equivalent","","",5,[[["k"],["self"]],["bool"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","guppy::graph","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"vzip","","",52,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"vzip","","",27,[[],["v"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"vzip","","",37,[[],["v"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"vzip","","",38,[[],["v"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"equivalent","","",39,[[["k"],["self"]],["bool"]]],[11,"vzip","","",39,[[],["v"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"vzip","","",41,[[],["v"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"vzip","","",42,[[],["v"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"vzip","","",43,[[],["v"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"vzip","","",44,[[],["v"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"vzip","","",45,[[],["v"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"vzip","","",46,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"equivalent","","",8,[[["k"],["self"]],["bool"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"equivalent","","",9,[[["k"],["self"]],["bool"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"equivalent","","",12,[[["k"],["self"]],["bool"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"equivalent","","",13,[[["k"],["self"]],["bool"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","guppy::graph::cargo","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"equivalent","","",16,[[["k"],["self"]],["bool"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","guppy::graph::feature","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"equivalent","","",29,[[["k"],["self"]],["bool"]]],[11,"vzip","","",29,[[],["v"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"vzip","","",30,[[],["v"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"vzip","","",31,[[],["v"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"vzip","","",32,[[],["v"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"vzip","","",33,[[],["v"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"vzip","","",34,[[],["v"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"equivalent","","",22,[[["k"],["self"]],["bool"]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","guppy::graph::feature::feature_list","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"into_iter","","",24,[[],["i"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"equivalent","","",24,[[["k"],["self"]],["bool"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"into_iter","","",25,[[],["i"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"vzip","","",25,[[],["v"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"into_iter","","",26,[[],["i"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"vzip","","",26,[[],["v"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"to_string","","",54,[[["self"]],["string"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"vzip","","",54,[[],["v"]]],[11,"clone","guppy","",0,[[["self"]],["targetfeatures"]]],[11,"clone","","",53,[[["self"]],["platform"]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",53,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"accept_package","guppy::graph::cargo","",19,[[["self"],["cargoresolvephase"],["packagelink"]],["bool"]]],[11,"accept","guppy::graph::feature","",32,[[["self"],["featuregraph"],["featureid"]],["bool"]]],[11,"accept","guppy::graph","",44,[[["packagequery"],["self"],["packagelink"]],["bool"]]],[11,"from","guppy::graph::feature","",29,[[],["self"]]],[11,"from","","",29,[[],["self"]]],[11,"from","guppy::graph","",13,[[["direction"]],["self"]]],[11,"into_iter","guppy::graph::feature::feature_list","",24,[[]]],[11,"next","","",25,[[["self"]],["option"]]],[11,"next","","",26,[[["self"]],["option"]]],[11,"clone","guppy","",1,[[["self"]],["dependencykind"]]],[11,"clone","guppy::errors","",3,[[["self"]],["featuregraphwarning"]]],[11,"clone","","",5,[[["self"]],["featurebuildstage"]]],[11,"clone","guppy::graph","",8,[[["self"]],["buildtargetid"]]],[11,"clone","","",9,[[["self"]],["buildtargetkind"]]],[11,"clone","guppy::graph::cargo","",18,[[["self"]],["cargooptions"]]],[11,"clone","","",15,[[["self"]],["cargoresolvephase"]]],[11,"clone","","",19,[[["self"]],["postfilterfn"]]],[11,"clone","","",16,[[["self"]],["cargoresolverversion"]]],[11,"clone","guppy::graph::feature::feature_list","",24,[[["self"]],["featurelist"]]],[11,"clone","","",54,[[["self"]],["displayfeatures"]]],[11,"clone","guppy::graph::feature","",28,[[["self"]],["featuregraph"]]],[11,"clone","","",29,[[["self"]],["featureid"]]],[11,"clone","","",30,[[["self"]],["featuremetadata"]]],[11,"clone","","",31,[[["self"]],["crosslink"]]],[11,"clone","","",22,[[["self"]],["featuretype"]]],[11,"clone","","",32,[[["self"]],["featurefilterfn"]]],[11,"clone","","",33,[[["self"]],["featurequery"]]],[11,"clone","","",34,[[["self"]],["featureset"]]],[11,"clone","guppy::graph","",27,[[["self"]],["packagegraph"]]],[11,"clone","","",37,[[["self"]],["dependscache"]]],[11,"clone","","",38,[[["self"]],["workspace"]]],[11,"clone","","",39,[[["self"]],["packagemetadata"]]],[11,"clone","","",40,[[["self"]],["packagelink"]]],[11,"clone","","",41,[[["self"]],["dependencyreq"]]],[11,"clone","","",42,[[["self"]],["enabledstatus"]]],[11,"clone","","",10,[[["self"]],["platformstatus"]]],[11,"clone","","",12,[[["self"]],["enabledternary"]]],[11,"clone","","",43,[[["self"]],["platformeval"]]],[11,"clone","","",44,[[["self"]],["prop09resolver"]]],[11,"clone","","",45,[[["self"]],["packagequery"]]],[11,"clone","","",46,[[["self"]],["packageset"]]],[11,"clone","","",13,[[["self"]],["dependencydirection"]]],[11,"clone","guppy","",49,[[["self"]],["metadatacommand"]]],[11,"clone","","",50,[[["self"]],["cargometadata"]]],[11,"clone","","",51,[[["self"]],["packageid"]]],[11,"default","guppy::graph::cargo","",18,[[],["self"]]],[11,"default","guppy","",49,[[],["metadatacommand"]]],[11,"cmp","guppy::errors","",3,[[["self"],["featuregraphwarning"]],["ordering"]]],[11,"cmp","","",5,[[["self"],["featurebuildstage"]],["ordering"]]],[11,"cmp","guppy::graph","",8,[[["self"],["buildtargetid"]],["ordering"]]],[11,"cmp","","",9,[[["buildtargetkind"],["self"]],["ordering"]]],[11,"cmp","guppy::graph::feature","",29,[[["featureid"],["self"]],["ordering"]]],[11,"cmp","","",22,[[["self"],["featuretype"]],["ordering"]]],[11,"cmp","guppy::graph","",12,[[["enabledternary"],["self"]],["ordering"]]],[11,"cmp","guppy","",51,[[["packageid"],["self"]],["ordering"]]],[11,"eq","","",1,[[["self"],["dependencykind"]],["bool"]]],[11,"eq","guppy::errors","",3,[[["self"],["featuregraphwarning"]],["bool"]]],[11,"ne","","",3,[[["self"],["featuregraphwarning"]],["bool"]]],[11,"eq","","",5,[[["self"],["featurebuildstage"]],["bool"]]],[11,"ne","","",5,[[["self"],["featurebuildstage"]],["bool"]]],[11,"eq","guppy::graph","",8,[[["self"],["buildtargetid"]],["bool"]]],[11,"ne","","",8,[[["self"],["buildtargetid"]],["bool"]]],[11,"eq","","",9,[[["buildtargetkind"],["self"]],["bool"]]],[11,"ne","","",9,[[["buildtargetkind"],["self"]],["bool"]]],[11,"eq","guppy::graph::cargo","",16,[[["cargoresolverversion"],["self"]],["bool"]]],[11,"eq","guppy::graph::feature::feature_list","",24,[[["self"],["featurelist"]],["bool"]]],[11,"ne","","",24,[[["self"],["featurelist"]],["bool"]]],[11,"eq","guppy::graph::feature","",29,[[["featureid"],["self"]],["bool"]]],[11,"ne","","",29,[[["featureid"],["self"]],["bool"]]],[11,"eq","","",22,[[["self"],["featuretype"]],["bool"]]],[11,"eq","guppy::graph","",39,[[["self"]],["bool"]]],[11,"eq","","",12,[[["enabledternary"],["self"]],["bool"]]],[11,"eq","","",13,[[["dependencydirection"],["self"]],["bool"]]],[11,"eq","guppy","",51,[[["packageid"],["self"]],["bool"]]],[11,"ne","","",51,[[["packageid"],["self"]],["bool"]]],[11,"eq","","",51,[[["packageid"],["self"]],["bool"]]],[11,"partial_cmp","guppy::errors","",3,[[["self"],["featuregraphwarning"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",3,[[["self"],["featuregraphwarning"]],["bool"]]],[11,"le","","",3,[[["self"],["featuregraphwarning"]],["bool"]]],[11,"gt","","",3,[[["self"],["featuregraphwarning"]],["bool"]]],[11,"ge","","",3,[[["self"],["featuregraphwarning"]],["bool"]]],[11,"partial_cmp","","",5,[[["self"],["featurebuildstage"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",5,[[["self"],["featurebuildstage"]],["bool"]]],[11,"le","","",5,[[["self"],["featurebuildstage"]],["bool"]]],[11,"gt","","",5,[[["self"],["featurebuildstage"]],["bool"]]],[11,"ge","","",5,[[["self"],["featurebuildstage"]],["bool"]]],[11,"partial_cmp","guppy::graph","",8,[[["self"],["buildtargetid"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",8,[[["self"],["buildtargetid"]],["bool"]]],[11,"le","","",8,[[["self"],["buildtargetid"]],["bool"]]],[11,"gt","","",8,[[["self"],["buildtargetid"]],["bool"]]],[11,"ge","","",8,[[["self"],["buildtargetid"]],["bool"]]],[11,"partial_cmp","","",9,[[["buildtargetkind"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",9,[[["buildtargetkind"],["self"]],["bool"]]],[11,"le","","",9,[[["buildtargetkind"],["self"]],["bool"]]],[11,"gt","","",9,[[["buildtargetkind"],["self"]],["bool"]]],[11,"ge","","",9,[[["buildtargetkind"],["self"]],["bool"]]],[11,"partial_cmp","guppy::graph::feature","",29,[[["featureid"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",29,[[["featureid"],["self"]],["bool"]]],[11,"le","","",29,[[["featureid"],["self"]],["bool"]]],[11,"gt","","",29,[[["featureid"],["self"]],["bool"]]],[11,"ge","","",29,[[["featureid"],["self"]],["bool"]]],[11,"partial_cmp","","",22,[[["self"],["featuretype"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","guppy::graph","",12,[[["enabledternary"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","guppy","",51,[[["packageid"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",51,[[["packageid"],["self"]],["bool"]]],[11,"le","","",51,[[["packageid"],["self"]],["bool"]]],[11,"gt","","",51,[[["packageid"],["self"]],["bool"]]],[11,"ge","","",51,[[["packageid"],["self"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","guppy::errors","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","guppy::graph","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","guppy::graph::cargo","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","guppy::graph::feature::feature_list","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","guppy::graph::feature","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","guppy::graph","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","guppy","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","guppy::errors","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","guppy::graph::feature::feature_list","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","guppy::graph::feature","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","guppy","",51,[[["formatter"],["self"]],["result"]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","guppy::graph","",8,[[["self"],["__h"]]]],[11,"hash","","",9,[[["self"],["__h"]]]],[11,"hash","guppy::graph::cargo","",16,[[["self"],["__h"]]]],[11,"hash","guppy::graph::feature","",29,[[["self"],["__h"]]]],[11,"hash","","",22,[[["self"],["__h"]]]],[11,"hash","guppy::graph","",12,[[["self"],["__h"]]]],[11,"hash","","",13,[[["self"],["__h"]]]],[11,"hash","guppy","",51,[[["self"],["__h"]]]],[11,"write_str","guppy::graph","",52,[[["str"],["self"]],["result"]]],[11,"write_char","","",52,[[["self"],["char"]],["result"]]],[11,"source","guppy::errors","",2,[[["self"]],[["error"],["option",["error"]]]]],[11,"deserialize","guppy","",50,[[["__d"]],["result"]]],[11,"serialize","","",50,[[["self"],["__s"]],["result"]]],[11,"arbitrary_with","guppy::graph","",13,[[]]],[11,"new","guppy","Creates a new `Platform` from the given triple and target…",53,[[["targetfeatures"]],[["option",["platform"]],["platform"]]]],[11,"add_flags","","Adds a set of flags to accept.",53,[[["self"]]]],[11,"triple","","Returns the target triple for this platform.",53,[[["self"]],["str"]]],[11,"has_flag","","Returns true if this flag was set with `add_flags`.",53,[[["self"]],["bool"]]],[11,"target_features","","Returns the set of target features for this platform.",53,[[["self"]],["targetfeatures"]]],[11,"current","","Returns the current platform, as detected at build time.",53,[[],[["platform"],["option",["platform"]]]]],[11,"strategy","","Given a way to generate `TargetFeatures` instances, this…",53,[[]]],[11,"filtered_strategy","","A version of `strategy` that allows target triples to be…",53,[[]]],[11,"features","","Creates a new `TargetFeatures` which matches some features.",0,[[],["targetfeatures"]]],[11,"none","","Creates a new `TargetFeatures` which doesn't match any…",0,[[],["targetfeatures"]]],[11,"matches","","Returns `Some(true)` if this feature is a match,…",0,[[["str"],["self"]],[["option",["bool"]],["bool"]]]]],"p":[[4,"TargetFeatures"],[4,"DependencyKind"],[4,"Error"],[4,"FeatureGraphWarning"],[13,"MissingFeature"],[4,"FeatureBuildStage"],[13,"AddNamedFeatureEdges"],[13,"AddDependencyEdges"],[4,"BuildTargetId"],[4,"BuildTargetKind"],[4,"PlatformStatus"],[13,"PlatformDependent"],[4,"EnabledTernary"],[4,"DependencyDirection"],[3,"BuildTarget"],[4,"CargoResolvePhase"],[4,"CargoResolverVersion"],[8,"CargoPostfilter"],[3,"CargoOptions"],[3,"PostfilterFn"],[3,"CargoSet"],[3,"Cycles"],[4,"FeatureType"],[3,"Cycles"],[3,"FeatureList"],[3,"IntoIter"],[3,"Iter"],[3,"PackageGraph"],[3,"FeatureGraph"],[3,"FeatureId"],[3,"FeatureMetadata"],[3,"CrossLink"],[3,"FeatureFilterFn"],[3,"FeatureQuery"],[3,"FeatureSet"],[8,"FeatureFilter"],[8,"FeatureResolver"],[3,"DependsCache"],[3,"Workspace"],[3,"PackageMetadata"],[3,"PackageLink"],[3,"DependencyReq"],[3,"EnabledStatus"],[3,"PlatformEval"],[3,"Prop09Resolver"],[3,"PackageQuery"],[3,"PackageSet"],[8,"PackageResolver"],[8,"PackageDotVisitor"],[3,"MetadataCommand"],[3,"CargoMetadata"],[3,"PackageId"],[3,"DotWrite"],[3,"Platform"],[3,"DisplayFeatures"]]};
searchIndex["guppy_benchmarks"] = {"doc":"","i":[[3,"ValueGenerator","guppy_benchmarks","Context for generating single values out of strategies.",null,null],[11,"new","","Creates a new value generator with the default RNG.",0,[[],["self"]]],[11,"deterministic","","Creates a new value generator with a deterministic RNG.",0,[[],["self"]]],[11,"generate","","Generates a single value for this strategy.",0,[[["strategy"],["self"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"default","","",0,[[],["valuegenerator"]]]],"p":[[3,"ValueGenerator"]]};
searchIndex["guppy_cmdlib"] = {"doc":"Support for CLI operations with guppy, with structopt…","i":[[3,"PackagesAndFeatures","guppy_cmdlib","Support for packages and features.",null,null],[12,"packages","","Packages to start the query from (default: entire workspace)",0,null],[12,"features","","List of features to activate across all packages",0,null],[12,"all_features","","Activate all available features",0,null],[12,"no_default_features","","Do not activate the `default` feature",0,null],[3,"CargoMetadataOptions","","Context for invoking the `cargo metadata` command.",null,null],[12,"manifest_path","","Path to Cargo.toml",1,null],[5,"triple_to_platform","","Parse a given triple, the string \"current\", or \"any\", into…",null,[[["str"],["option",["str"]]],[["result",["option"]],["option",["platform"]]]]],[0,"proptest","","Proptest support.",null,null],[5,"triple_strategy","guppy_cmdlib::proptest","Generates a random, known target triple that can be…",null,[[]]],[11,"strategy","guppy_cmdlib","",0,[[["packagegraph"]]]],[11,"make_feature_query","","Evaluates this struct against the given graph, and…",0,[[["packagegraph"],["self"]],[["result",["featurequery"]],["featurequery"]]]],[11,"current_dir","","Returns the current directory.",1,[[["self"]],[["result",["pathbuf"]],["pathbuf"]]]],[11,"abs_manifest_path","","Returns the absolute canonical manifest path.",1,[[["self"]],[["result",["pathbuf"]],["pathbuf"]]]],[11,"make_command","","Evaluates this struct and creates a `MetadataCommand`.",1,[[["self"]],["metadatacommand"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"clone","","",1,[[["self"]],["cargometadataoptions"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"clap","","",0,[[],["app"]]],[11,"from_clap","","",0,[[["argmatches"]],["self"]]],[11,"clap","","",1,[[],["app"]]],[11,"from_clap","","",1,[[["argmatches"]],["self"]]],[11,"augment_clap","","",0,[[["app"]],["app"]]],[11,"is_subcommand","","",0,[[],["bool"]]],[11,"augment_clap","","",1,[[["app"]],["app"]]],[11,"is_subcommand","","",1,[[],["bool"]]]],"p":[[3,"PackagesAndFeatures"],[3,"CargoMetadataOptions"]]};
searchIndex["heck"] = {"doc":"heck is a case conversion library.","i":[[8,"CamelCase","heck","This trait defines a camel case conversion.",null,null],[10,"to_camel_case","","Convert this type to camel case.",0,[[["self"]]]],[8,"KebabCase","","This trait defines a kebab case conversion.",null,null],[10,"to_kebab_case","","Convert this type to kebab case.",1,[[["self"]]]],[8,"MixedCase","","This trait defines a mixed case conversion.",null,null],[10,"to_mixed_case","","Convert this type to mixed case.",2,[[["self"]]]],[8,"ShoutySnakeCase","","This trait defines a shouty snake case conversion.",null,null],[10,"to_shouty_snake_case","","Convert this type to shouty snake case.",3,[[["self"]]]],[8,"ShoutySnekCase","","Oh heck, ShoutySnekCase is an alias for ShoutySnakeCase.…",null,null],[10,"TO_SHOUTY_SNEK_CASE","","CONVERT THIS TYPE TO SNEK CASE.",4,[[["self"]]]],[8,"SnakeCase","","This trait defines a camel case conversion.",null,null],[10,"to_snake_case","","Convert this type to snake case.",5,[[["self"]]]],[8,"SnekCase","","Oh heck, SnekCase is an alias for SnakeCase. See SnakeCase…",null,null],[10,"to_snek_case","","Convert this type to snek case.",6,[[["self"]]]],[8,"TitleCase","","This trait defines a title case conversion.",null,null],[10,"to_title_case","","Convert this type to title case.",7,[[["self"]]]]],"p":[[8,"CamelCase"],[8,"KebabCase"],[8,"MixedCase"],[8,"ShoutySnakeCase"],[8,"ShoutySnekCase"],[8,"SnakeCase"],[8,"SnekCase"],[8,"TitleCase"]]};
searchIndex["hex"] = {"doc":"Encoding and decoding hex strings.","i":[[4,"FromHexError","hex","The error type for decoding a hex string into `Vec<u8>` or…",null,null],[13,"InvalidHexCharacter","","An invalid character was found. Valid ones are: `0...9`,…",0,null],[12,"c","hex::FromHexError","",1,null],[12,"index","","",1,null],[13,"OddLength","hex","A hex string's length needs to be even, as two digits…",0,null],[13,"InvalidStringLength","","If the hex string is decoded into a fixed sized container,…",0,null],[5,"encode","","Encodes `data` as hex string using lowercase characters.",null,[[["asref"]],["string"]]],[5,"encode_upper","","Encodes `data` as hex string using uppercase characters.",null,[[["asref"]],["string"]]],[5,"decode","","Decodes a hex string into raw bytes.",null,[[["asref"]],[["result",["vec","fromhexerror"]],["fromhexerror"],["vec",["u8"]]]]],[5,"decode_to_slice","","Decode a hex string into a mutable bytes slice.",null,[[["asref"]],[["result",["fromhexerror"]],["fromhexerror"]]]],[5,"encode_to_slice","","Encodes some bytes into a mutable slice of bytes.",null,[[["asref"]],[["result",["fromhexerror"]],["fromhexerror"]]]],[8,"ToHex","","Encoding values as hex string.",null,null],[10,"encode_hex","","Encode the hex strict representing `self` into the…",2,[[["self"]],[["fromiterator",["char"]],["char"]]]],[10,"encode_hex_upper","","Encode the hex strict representing `self` into the…",2,[[["self"]],[["fromiterator",["char"]],["char"]]]],[8,"FromHex","","Types that can be decoded from a hex string.",null,null],[16,"Error","","",3,null],[10,"from_hex","","Creates an instance of type `Self` from the given hex…",3,[[["asref"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["fromhexerror"]]],[11,"eq","","",0,[[["self"],["fromhexerror"]],["bool"]]],[11,"ne","","",0,[[["self"],["fromhexerror"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[4,"FromHexError"],[13,"InvalidHexCharacter"],[8,"ToHex"],[8,"FromHex"]]};
searchIndex["home"] = {"doc":"Canonical definitions of `home_dir`, `cargo_home`, and…","i":[[5,"home_dir","home","Returns the path of the current user's home directory if…",null,[[],[["pathbuf"],["option",["pathbuf"]]]]],[5,"cargo_home","","Returns the storage directory used by Cargo, often knowns…",null,[[],[["pathbuf"],["result",["pathbuf"]]]]],[5,"cargo_home_with_cwd","","Returns the storage directory used by Cargo within `cwd`.…",null,[[["path"]],[["pathbuf"],["result",["pathbuf"]]]]],[5,"rustup_home","","Returns the storage directory used by rustup, often knowns…",null,[[],[["pathbuf"],["result",["pathbuf"]]]]],[5,"rustup_home_with_cwd","","Returns the storage directory used by rustup within `cwd`.…",null,[[["path"]],[["pathbuf"],["result",["pathbuf"]]]]]],"p":[]};
searchIndex["humantime"] = {"doc":"Human-friendly time parser and formatter","i":[[3,"FormattedDuration","humantime","A wrapper type that allows you to Display a Duration",null,null],[3,"Duration","","A wrapper for duration that has `FromStr` implementation",null,null],[3,"Timestamp","","A wrapper for SystemTime that has `FromStr` implementation",null,null],[3,"Rfc3339Timestamp","","A wrapper type that allows you to Display a SystemTime",null,null],[4,"DurationError","","Error parsing human-friendly duration",null,null],[13,"InvalidCharacter","","Invalid character during parsing",0,null],[13,"NumberExpected","","Non-numeric value where number is expected",0,null],[13,"UnknownUnit","","Unit in the number is not one of allowed units",0,null],[13,"NumberOverflow","","The numeric value is too large",0,null],[13,"Empty","","The value was an empty string (or consists only whitespace)",0,null],[4,"TimestampError","","Error parsing datetime (timestamp)",null,null],[13,"OutOfRange","","Numeric component is out of range",1,null],[13,"InvalidDigit","","Bad character where digit is expected",1,null],[13,"InvalidFormat","","Other formatting errors",1,null],[5,"parse_duration","","Parse duration object `1hour 12min 5s`",null,[[["str"]],[["error"],["result",["duration","error"]],["duration"]]]],[5,"format_duration","","Formats duration into a human-readable string",null,[[["duration"]],["formattedduration"]]],[5,"parse_rfc3339","","Parse RFC3339 timestamp `2018-02-14T00:28:07Z`",null,[[["str"]],[["result",["systemtime","error"]],["error"],["systemtime"]]]],[5,"parse_rfc3339_weak","","Parse RFC3339-like timestamp `2018-02-14 00:28:07`",null,[[["str"]],[["result",["systemtime","error"]],["error"],["systemtime"]]]],[5,"format_rfc3339","","Format an RFC3339 timestamp `2018-02-14T00:28:07Z`",null,[[["systemtime"]],["rfc3339timestamp"]]],[5,"format_rfc3339_micros","","Format an RFC3339 timestamp `2018-02-14T00:28:07.000000Z`",null,[[["systemtime"]],["rfc3339timestamp"]]],[5,"format_rfc3339_millis","","Format an RFC3339 timestamp `2018-02-14T00:28:07.000Z`",null,[[["systemtime"]],["rfc3339timestamp"]]],[5,"format_rfc3339_nanos","","Format an RFC3339 timestamp `2018-02-14T00:28:07.000000000Z`",null,[[["systemtime"]],["rfc3339timestamp"]]],[5,"format_rfc3339_seconds","","Format an RFC3339 timestamp `2018-02-14T00:28:07Z`",null,[[["systemtime"]],["rfc3339timestamp"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"as_ref","","",3,[[["self"]],["stdduration"]]],[11,"as_ref","","",4,[[["self"]],["systemtime"]]],[11,"from","","",3,[[["stdduration"]],["duration"]]],[11,"from","","",4,[[["systemtime"]],["timestamp"]]],[11,"into","","",3,[[],["stdduration"]]],[11,"into","","",4,[[],["systemtime"]]],[11,"clone","","",0,[[["self"]],["error"]]],[11,"clone","","",2,[[["self"]],["formattedduration"]]],[11,"clone","","",3,[[["self"]],["duration"]]],[11,"clone","","",4,[[["self"]],["timestamp"]]],[11,"clone","","",1,[[["self"]],["error"]]],[11,"clone","","",5,[[["self"]],["rfc3339timestamp"]]],[11,"eq","","",0,[[["self"],["error"]],["bool"]]],[11,"ne","","",0,[[["self"],["error"]],["bool"]]],[11,"eq","","",3,[[["duration"],["self"]],["bool"]]],[11,"ne","","",3,[[["duration"],["self"]],["bool"]]],[11,"eq","","",4,[[["timestamp"],["self"]],["bool"]]],[11,"ne","","",4,[[["timestamp"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["error"]],["bool"]]],[11,"deref","","",3,[[["self"]],["stdduration"]]],[11,"deref","","",4,[[["self"]],["systemtime"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"from_str","","",3,[[["str"]],[["duration"],["result",["duration"]]]]],[11,"from_str","","",4,[[["str"]],[["timestamp"],["result",["timestamp"]]]]],[11,"cause","","",0,[[["self"]],[["error"],["option",["error"]]]]],[11,"cause","","",1,[[["self"]],[["error"],["option",["error"]]]]]],"p":[[4,"DurationError"],[4,"TimestampError"],[3,"FormattedDuration"],[3,"Duration"],[3,"Timestamp"],[3,"Rfc3339Timestamp"]]};
searchIndex["idna"] = {"doc":"This Rust crate implements IDNA per the WHATWG URL Standard.","i":[[3,"Config","idna","",null,null],[3,"Errors","","Errors recorded during UTS #46 processing.",null,null],[5,"domain_to_ascii","","The domain to ASCII algorithm.",null,[[["str"]],[["errors"],["result",["string","errors"]],["string"]]]],[5,"domain_to_ascii_strict","","The domain to ASCII algorithm, with the `beStrict` flag set.",null,[[["str"]],[["errors"],["result",["string","errors"]],["string"]]]],[5,"domain_to_unicode","","The domain to Unicode algorithm.",null,[[["str"]]]],[0,"punycode","","Punycode (RFC 3492) implementation.",null,null],[5,"decode_to_string","idna::punycode","Convert Punycode to an Unicode `String`.",null,[[["str"]],[["option",["string"]],["string"]]]],[5,"decode","","Convert Punycode to Unicode.",null,[[["str"]],[["option",["vec"]],["vec",["char"]]]]],[5,"encode_str","","Convert an Unicode `str` to Punycode.",null,[[["str"]],[["option",["string"]],["string"]]]],[5,"encode","","Convert Unicode to Punycode.",null,[[],[["option",["string"]],["string"]]]],[11,"use_std3_ascii_rules","idna","",0,[[["bool"]],["self"]]],[11,"transitional_processing","","",0,[[["bool"]],["self"]]],[11,"verify_dns_length","","",0,[[["bool"]],["self"]]],[11,"check_hyphens","","",0,[[["bool"]],["self"]]],[11,"to_ascii","","http://www.unicode.org/reports/tr46/#ToASCII",0,[[["str"]],[["errors"],["result",["string","errors"]],["string"]]]],[11,"to_unicode","","http://www.unicode.org/reports/tr46/#ToUnicode",0,[[["str"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["config"]]],[11,"default","","",0,[[],["self"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Config"],[3,"Errors"]]};
searchIndex["ignore"] = {"doc":"The ignore crate provides a fast recursive directory…","i":[[3,"DirEntry","ignore","A directory entry with a possible error attached.",null,null],[3,"Walk","","Walk is a recursive directory iterator over file paths in…",null,null],[3,"WalkBuilder","","WalkBuilder builds a recursive directory iterator.",null,null],[3,"WalkParallel","","WalkParallel is a parallel recursive directory iterator…",null,null],[4,"WalkState","","WalkState is used in the parallel recursive directory…",null,null],[13,"Continue","","Continue walking as normal.",0,null],[13,"Skip","","If the directory entry given is a directory, don't descend…",0,null],[13,"Quit","","Quit the entire iterator as soon as possible.",0,null],[4,"Error","","Represents an error that can occur when parsing a…",null,null],[13,"Partial","","A collection of \"soft\" errors. These occur when adding an…",1,null],[13,"WithLineNumber","","An error associated with a specific line number.",1,null],[12,"line","ignore::Error","The line number.",2,null],[12,"err","","The underlying error.",2,null],[13,"WithPath","ignore","An error associated with a particular file path.",1,null],[12,"path","ignore::Error","The file path.",3,null],[12,"err","","The underlying error.",3,null],[13,"WithDepth","ignore","An error associated with a particular directory depth when…",1,null],[12,"depth","ignore::Error","The directory depth.",4,null],[12,"err","","The underlying error.",4,null],[13,"Loop","ignore","An error that occurs when a file loop is detected when…",1,null],[12,"ancestor","ignore::Error","The ancestor file path in the loop.",5,null],[12,"child","","The child file path in the loop.",5,null],[13,"Io","ignore","An error that occurs when doing I/O, such as reading an…",1,null],[13,"Glob","","An error that occurs when trying to parse a glob.",1,null],[12,"glob","ignore::Error","The original glob that caused this error. This glob, when…",6,null],[12,"err","","The underlying glob error as a string.",6,null],[13,"UnrecognizedFileType","ignore","A type selection for a file type that is not defined.",1,null],[13,"InvalidDefinition","","A user specified file type definition could not be parsed.",1,null],[4,"Match","","The result of a glob match.",null,null],[13,"None","","The path didn't match any glob.",7,null],[13,"Ignore","","The highest precedent glob matched indicates the path…",7,null],[13,"Whitelist","","The highest precedent glob matched indicates the path…",7,null],[0,"gitignore","","The gitignore module provides a way to match globs from a…",null,null],[3,"Glob","ignore::gitignore","Glob represents a single glob in a gitignore file.",null,null],[3,"Gitignore","","Gitignore is a matcher for the globs in one or more…",null,null],[3,"GitignoreBuilder","","Builds a matcher for a single set of globs from a…",null,null],[11,"from","","Returns the file path that defined this glob.",8,[[["self"]],[["option",["path"]],["path"]]]],[11,"original","","The original glob as it was defined in a gitignore file.",8,[[["self"]],["str"]]],[11,"actual","","The actual glob that was compiled to respect gitignore…",8,[[["self"]],["str"]]],[11,"is_whitelist","","Whether this was a whitelisted glob or not.",8,[[["self"]],["bool"]]],[11,"is_only_dir","","Whether this glob must match a directory or not.",8,[[["self"]],["bool"]]],[11,"new","","Creates a new gitignore matcher from the gitignore file…",9,[[["path"],["asref",["path"]]]]],[11,"global","","Creates a new gitignore matcher from the global ignore…",9,[[]]],[11,"empty","","Creates a new empty gitignore matcher that never matches…",9,[[],["gitignore"]]],[11,"path","","Returns the directory containing this gitignore matcher.",9,[[["self"]],["path"]]],[11,"is_empty","","Returns true if and only if this gitignore has zero globs,…",9,[[["self"]],["bool"]]],[11,"len","","Returns the total number of globs, which should be…",9,[[["self"]],["usize"]]],[11,"num_ignores","","Returns the total number of ignore globs.",9,[[["self"]],["u64"]]],[11,"num_whitelists","","Returns the total number of whitelisted globs.",9,[[["self"]],["u64"]]],[11,"matched","","Returns whether the given path (file or directory) matched…",9,[[["path"],["asref",["path"]],["self"],["bool"]],[["match",["glob"]],["glob"]]]],[11,"matched_path_or_any_parents","","Returns whether the given path (file or directory, and…",9,[[["path"],["asref",["path"]],["self"],["bool"]],[["match",["glob"]],["glob"]]]],[11,"new","","Create a new builder for a gitignore file.",10,[[["path"],["asref",["path"]]],["gitignorebuilder"]]],[11,"build","","Builds a new matcher from the globs added so far.",10,[[["self"]],[["gitignore"],["error"],["result",["gitignore","error"]]]]],[11,"build_global","","Build a global gitignore matcher using the configuration…",10,[[]]],[11,"add","","Add each glob from the file path given.",10,[[["path"],["self"],["asref",["path"]]],[["option",["error"]],["error"]]]],[11,"add_line","","Add a line from a gitignore file to this builder.",10,[[["str"],["pathbuf"],["self"],["option",["pathbuf"]]],[["result",["gitignorebuilder","error"]],["gitignorebuilder"],["error"]]]],[11,"case_insensitive","","Toggle whether the globs should be matched case…",10,[[["self"],["bool"]],[["result",["gitignorebuilder","error"]],["gitignorebuilder"],["error"]]]],[0,"overrides","ignore","The overrides module provides a way to specify a set of…",null,null],[3,"Glob","ignore::overrides","Glob represents a single glob in an override matcher.",null,null],[3,"Override","","Manages a set of overrides provided explicitly by the end…",null,null],[3,"OverrideBuilder","","Builds a matcher for a set of glob overrides.",null,null],[11,"empty","","Returns an empty matcher that never matches any file path.",11,[[],["override"]]],[11,"path","","Returns the directory of this override set.",11,[[["self"]],["path"]]],[11,"is_empty","","Returns true if and only if this matcher is empty.",11,[[["self"]],["bool"]]],[11,"num_ignores","","Returns the total number of ignore globs.",11,[[["self"]],["u64"]]],[11,"num_whitelists","","Returns the total number of whitelisted globs.",11,[[["self"]],["u64"]]],[11,"matched","","Returns whether the given file path matched a pattern in…",11,[[["path"],["asref",["path"]],["self"],["bool"]],[["match",["glob"]],["glob"]]]],[11,"new","","Create a new override builder.",12,[[["path"],["asref",["path"]]],["overridebuilder"]]],[11,"build","","Builds a new override matcher from the globs added so far.",12,[[["self"]],[["result",["override","error"]],["override"],["error"]]]],[11,"add","","Add a glob to the set of overrides.",12,[[["str"],["self"]],[["result",["overridebuilder","error"]],["overridebuilder"],["error"]]]],[11,"case_insensitive","","Toggle whether the globs should be matched case…",12,[[["self"],["bool"]],[["result",["overridebuilder","error"]],["overridebuilder"],["error"]]]],[0,"types","ignore","The types module provides a way of associating globs on…",null,null],[3,"Glob","ignore::types","Glob represents a single glob in a set of file type…",null,null],[3,"FileTypeDef","","A single file type definition.",null,null],[3,"Types","","Types is a file type matcher.",null,null],[3,"TypesBuilder","","TypesBuilder builds a type matcher from a set of file type…",null,null],[11,"file_type_def","","Return the file type defintion that matched, if one…",13,[[["self"]],[["option",["filetypedef"]],["filetypedef"]]]],[11,"name","","Return the name of this file type.",14,[[["self"]],["str"]]],[11,"globs","","Return the globs used to recognize this file type.",14,[[["self"]]]],[11,"empty","","Creates a new file type matcher that never matches any…",15,[[],["types"]]],[11,"is_empty","","Returns true if and only if this matcher has zero…",15,[[["self"]],["bool"]]],[11,"len","","Returns the number of selections used in this matcher.",15,[[["self"]],["usize"]]],[11,"definitions","","Return the set of current file type definitions.",15,[[["self"]]]],[11,"matched","","Returns a match for the given path against this file type…",15,[[["path"],["asref",["path"]],["self"],["bool"]],[["match",["glob"]],["glob"]]]],[11,"new","","Create a new builder for a file type matcher.",16,[[],["typesbuilder"]]],[11,"build","","Build the current set of file type definitions and…",16,[[["self"]],[["types"],["error"],["result",["types","error"]]]]],[11,"definitions","","Return the set of current file type definitions.",16,[[["self"]],[["vec",["filetypedef"]],["filetypedef"]]]],[11,"select","","Select the file type given by `name`.",16,[[["str"],["self"]],["typesbuilder"]]],[11,"negate","","Ignore the file type given by `name`.",16,[[["str"],["self"]],["typesbuilder"]]],[11,"clear","","Clear any file type definitions for the type name given.",16,[[["str"],["self"]],["typesbuilder"]]],[11,"add","","Add a new file type definition. `name` can be arbitrary…",16,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"add_def","","Add a new file type definition specified in string form.…",16,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"add_defaults","","Add a set of default file type definitions.",16,[[["self"]],["typesbuilder"]]],[11,"path","ignore","The full path that this entry represents.",17,[[["self"]],["path"]]],[11,"into_path","","The full path that this entry represents. Analogous to…",17,[[],["pathbuf"]]],[11,"path_is_symlink","","Whether this entry corresponds to a symbolic link or not.",17,[[["self"]],["bool"]]],[11,"is_stdin","","Returns true if and only if this entry corresponds to stdin.",17,[[["self"]],["bool"]]],[11,"metadata","","Return the metadata for the file that this entry points to.",17,[[["self"]],[["error"],["result",["metadata","error"]],["metadata"]]]],[11,"file_type","","Return the file type for the file that this entry points to.",17,[[["self"]],[["option",["filetype"]],["filetype"]]]],[11,"file_name","","Return the file name of this entry.",17,[[["self"]],["osstr"]]],[11,"depth","","Returns the depth at which this entry was created relative…",17,[[["self"]],["usize"]]],[11,"ino","","Returns the underlying inode number if one exists.",17,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"error","","Returns an error, if one exists, associated with…",17,[[["self"]],[["option",["error"]],["error"]]]],[11,"new","","Create a new builder for a recursive directory iterator…",18,[[["path"],["asref",["path"]]],["walkbuilder"]]],[11,"build","","Build a new `Walk` iterator.",18,[[["self"]],["walk"]]],[11,"build_parallel","","Build a new `WalkParallel` iterator.",18,[[["self"]],["walkparallel"]]],[11,"add","","Add a file path to the iterator.",18,[[["path"],["self"],["asref",["path"]]],["walkbuilder"]]],[11,"max_depth","","The maximum depth to recurse.",18,[[["self"],["usize"],["option",["usize"]]],["walkbuilder"]]],[11,"follow_links","","Whether to follow symbolic links or not.",18,[[["self"],["bool"]],["walkbuilder"]]],[11,"max_filesize","","Whether to ignore files above the specified limit.",18,[[["option",["u64"]],["self"],["u64"]],["walkbuilder"]]],[11,"threads","","The number of threads to use for traversal.",18,[[["self"],["usize"]],["walkbuilder"]]],[11,"add_ignore","","Add a global ignore file to the matcher.",18,[[["path"],["self"],["asref",["path"]]],[["option",["error"]],["error"]]]],[11,"add_custom_ignore_filename","","Add a custom ignore file name",18,[[["self"],["asref",["osstr"]],["osstr"]],["walkbuilder"]]],[11,"overrides","","Add an override matcher.",18,[[["self"],["override"]],["walkbuilder"]]],[11,"types","","Add a file type matcher.",18,[[["self"],["types"]],["walkbuilder"]]],[11,"standard_filters","","Enables all the standard ignore filters.",18,[[["self"],["bool"]],["walkbuilder"]]],[11,"hidden","","Enables ignoring hidden files.",18,[[["self"],["bool"]],["walkbuilder"]]],[11,"parents","","Enables reading ignore files from parent directories.",18,[[["self"],["bool"]],["walkbuilder"]]],[11,"ignore","","Enables reading `.ignore` files.",18,[[["self"],["bool"]],["walkbuilder"]]],[11,"git_global","","Enables reading a global gitignore file, whose path is…",18,[[["self"],["bool"]],["walkbuilder"]]],[11,"git_ignore","","Enables reading `.gitignore` files.",18,[[["self"],["bool"]],["walkbuilder"]]],[11,"git_exclude","","Enables reading `.git/info/exclude` files.",18,[[["self"],["bool"]],["walkbuilder"]]],[11,"require_git","","Whether a git repository is required to apply git-related…",18,[[["self"],["bool"]],["walkbuilder"]]],[11,"ignore_case_insensitive","","Process ignore files case insensitively",18,[[["self"],["bool"]],["walkbuilder"]]],[11,"sort_by_file_path","","Set a function for sorting directory entries by their path.",18,[[["self"],["f"]],["walkbuilder"]]],[11,"sort_by_file_name","","Set a function for sorting directory entries by file name.",18,[[["self"],["f"]],["walkbuilder"]]],[11,"same_file_system","","Do not cross file system boundaries.",18,[[["self"],["bool"]],["walkbuilder"]]],[11,"skip_stdout","","Do not yield directory entries that are believed to…",18,[[["self"],["bool"]],["walkbuilder"]]],[11,"filter_entry","","Yields only entries which satisfy the given predicate and…",18,[[["self"],["p"]],["walkbuilder"]]],[11,"new","","Creates a new recursive directory iterator for the file…",19,[[["path"],["asref",["path"]]],["walk"]]],[11,"run","","Execute the parallel recursive directory iterator. `mkf`…",20,[[["f"]]]],[11,"visit","","Execute the parallel recursive directory iterator using a…",20,[[["parallelvisitorbuilder"]]]],[8,"ParallelVisitor","","Receives files and directories for the current thread.",null,null],[10,"visit","","Receives files and directories for the current thread.…",21,[[["direntry"],["self"],["error"],["result",["direntry","error"]]],["walkstate"]]],[8,"ParallelVisitorBuilder","","A builder for constructing a visitor when using…",null,null],[10,"build","","Create per-thread `ParallelVisitor`s for `WalkParallel`.",22,[[["self"]],[["parallelvisitor"],["box",["parallelvisitor"]]]]],[11,"is_partial","","Returns true if this is a partial error.",1,[[["self"]],["bool"]]],[11,"is_io","","Returns true if this error is exclusively an I/O error.",1,[[["self"]],["bool"]]],[11,"depth","","Returns a depth associated with recursively walking a…",1,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"is_none","","Returns true if the match result didn't match any globs.",7,[[["self"]],["bool"]]],[11,"is_ignore","","Returns true if the match result implies the path should…",7,[[["self"]],["bool"]]],[11,"is_whitelist","","Returns true if the match result implies the path should…",7,[[["self"]],["bool"]]],[11,"invert","","Inverts the match so that `Ignore` becomes `Whitelist` and…",7,[[],["match"]]],[11,"inner","","Return the value inside this match if it exists.",7,[[["self"]],[["t"],["option"]]]],[11,"map","","Apply the given function to the value inside this match.",7,[[["fnonce"]],["match"]]],[11,"or","","Return the match if it is not none. Otherwise, return other.",7,[[],["self"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"into_iter","","",19,[[],["i"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","ignore::gitignore","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","ignore::overrides","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","ignore::types","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","ignore","",1,[[["error"]],["error"]]],[11,"next","","",19,[[["self"]],[["option",["result"]],["result",["direntry","error"]]]]],[11,"clone","ignore::gitignore","",8,[[["self"]],["glob"]]],[11,"clone","","",9,[[["self"]],["gitignore"]]],[11,"clone","","",10,[[["self"]],["gitignorebuilder"]]],[11,"clone","ignore::overrides","",23,[[["self"]],["glob"]]],[11,"clone","","",11,[[["self"]],["override"]]],[11,"clone","ignore::types","",13,[[["self"]],["glob"]]],[11,"clone","","",14,[[["self"]],["filetypedef"]]],[11,"clone","","",15,[[["self"]],["types"]]],[11,"clone","ignore","",17,[[["self"]],["direntry"]]],[11,"clone","","",18,[[["self"]],["walkbuilder"]]],[11,"clone","","",0,[[["self"]],["walkstate"]]],[11,"clone","","",1,[[["self"]],["error"]]],[11,"clone","","",7,[[["self"]],["match"]]],[11,"eq","ignore::types","",14,[[["self"],["filetypedef"]],["bool"]]],[11,"ne","","",14,[[["self"],["filetypedef"]],["bool"]]],[11,"eq","ignore","",0,[[["self"],["walkstate"]],["bool"]]],[11,"fmt","ignore::gitignore","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","ignore::overrides","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","ignore::types","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","ignore","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"description","","",1,[[["self"]],["str"]]]],"p":[[4,"WalkState"],[4,"Error"],[13,"WithLineNumber"],[13,"WithPath"],[13,"WithDepth"],[13,"Loop"],[13,"Glob"],[4,"Match"],[3,"Glob"],[3,"Gitignore"],[3,"GitignoreBuilder"],[3,"Override"],[3,"OverrideBuilder"],[3,"Glob"],[3,"FileTypeDef"],[3,"Types"],[3,"TypesBuilder"],[3,"DirEntry"],[3,"WalkBuilder"],[3,"Walk"],[3,"WalkParallel"],[8,"ParallelVisitor"],[8,"ParallelVisitorBuilder"],[3,"Glob"]]};
searchIndex["im_rc"] = {"doc":"Immutable Data Structures for Rust","i":[[3,"HashMap","im_rc","An unordered map.",null,null],[3,"HashSet","","An unordered set.",null,null],[3,"OrdMap","","An ordered map.",null,null],[3,"OrdSet","","An ordered set.",null,null],[3,"Vector","","A persistent vector.",null,null],[11,"new","","Construct an empty map.",0,[[],["self"]]],[11,"unit","","Construct a map with a single mapping.",0,[[["k"],["v"]],["self"]]],[11,"is_empty","","Test whether a map is empty.",0,[[["self"]],["bool"]]],[11,"ptr_eq","","Test whether two maps refer to the same content in memory.",0,[[["self"]],["bool"]]],[11,"len","","Get the size of a map.",0,[[["self"]],["usize"]]],[11,"clear","","Discard all elements from the map.",0,[[["self"]]]],[11,"get_max","","Get the largest key in a map, along with its value. If the…",0,[[["self"]],["option"]]],[11,"get_min","","Get the smallest key in a map, along with its value. If…",0,[[["self"]],["option"]]],[11,"iter","","Get an iterator over the key/value pairs of a map.",0,[[["self"]],["iter"]]],[11,"range","","Create an iterator over a range of key/value pairs.",0,[[["self"],["r"]],["rangediter"]]],[11,"keys","","Get an iterator over a map's keys.",0,[[["self"]],["keys"]]],[11,"values","","Get an iterator over a map's values.",0,[[["self"]],["values"]]],[11,"diff","","Get an iterator over the differences between this map and…",0,[[["self"]],["diffiter"]]],[11,"get","","Get the value for a key from a map.",0,[[["self"],["bk"]],[["option"],["v"]]]],[11,"get_key_value","","Get the key/value pair for a key from a map.",0,[[["self"],["bk"]],["option"]]],[11,"get_prev","","Get the closest smaller entry in a map to a given key as a…",0,[[["self"],["bk"]],["option"]]],[11,"get_next","","Get the closest larger entry in a map to a given key as a…",0,[[["self"],["bk"]],["option"]]],[11,"contains_key","","Test for the presence of a key in a map.",0,[[["self"],["bk"]],["bool"]]],[11,"is_submap_by","","Test whether a map is a submap of another map, meaning…",0,[[["f"],["self"],["rm"]],["bool"]]],[11,"is_proper_submap_by","","Test whether a map is a proper submap of another map,…",0,[[["f"],["self"],["rm"]],["bool"]]],[11,"is_submap","","Test whether a map is a submap of another map, meaning…",0,[[["self"],["rm"]],["bool"]]],[11,"is_proper_submap","","Test whether a map is a proper submap of another map,…",0,[[["self"],["rm"]],["bool"]]],[11,"get_mut","","Get a mutable reference to the value for a key from a map.",0,[[["self"],["bk"]],[["option"],["v"]]]],[11,"get_prev_mut","","Get the closest smaller entry in a map to a given key as a…",0,[[["self"],["bk"]],["option"]]],[11,"get_next_mut","","Get the closest larger entry in a map to a given key as a…",0,[[["self"],["bk"]],["option"]]],[11,"insert","","Insert a key/value mapping into a map.",0,[[["self"],["k"],["v"]],["option"]]],[11,"remove","","Remove a key/value mapping from a map if it exists.",0,[[["self"],["bk"]],["option"]]],[11,"remove_with_key","","Remove a key/value pair from a map, if it exists, and…",0,[[["self"],["bk"]],["option"]]],[11,"update","","Construct a new map by inserting a key/value mapping into…",0,[[["v"],["self"],["k"]],["self"]]],[11,"update_with","","Construct a new map by inserting a key/value mapping into…",0,[[["f"],["k"],["v"]],["self"]]],[11,"update_with_key","","Construct a new map by inserting a key/value mapping into…",0,[[["f"],["k"],["v"]],["self"]]],[11,"update_lookup_with_key","","Construct a new map by inserting a key/value mapping into…",0,[[["f"],["k"],["v"]]]],[11,"alter","","Update the value for a given key by calling a function…",0,[[["k"],["self"],["f"]],["self"]]],[11,"without","","Remove a key/value pair from a map, if it exists.",0,[[["self"],["bk"]],["self"]]],[11,"extract","","Remove a key/value pair from a map, if it exists, and…",0,[[["self"],["bk"]],["option"]]],[11,"extract_with_key","","Remove a key/value pair from a map, if it exists, and…",0,[[["self"],["bk"]],["option"]]],[11,"union","","Construct the union of two maps, keeping the values in the…",0,[[],["self"]]],[11,"union_with","","Construct the union of two maps, using a function to…",0,[[["f"]],["self"]]],[11,"union_with_key","","Construct the union of two maps, using a function to…",0,[[["f"]],["self"]]],[11,"unions","","Construct the union of a sequence of maps, selecting the…",0,[[["i"]],["self"]]],[11,"unions_with","","Construct the union of a sequence of maps, using a…",0,[[["i"],["f"]],["self"]]],[11,"unions_with_key","","Construct the union of a sequence of maps, using a…",0,[[["i"],["f"]],["self"]]],[11,"difference","","Construct the symmetric difference between two maps by…",0,[[],["self"]]],[11,"symmetric_difference","","Construct the symmetric difference between two maps by…",0,[[],["self"]]],[11,"difference_with","","Construct the symmetric difference between two maps by…",0,[[["f"]],["self"]]],[11,"symmetric_difference_with","","Construct the symmetric difference between two maps by…",0,[[["f"]],["self"]]],[11,"difference_with_key","","Construct the symmetric difference between two maps by…",0,[[["f"]],["self"]]],[11,"symmetric_difference_with_key","","Construct the symmetric difference between two maps by…",0,[[["f"]],["self"]]],[11,"relative_complement","","Construct the relative complement between two maps by…",0,[[],["self"]]],[11,"intersection","","Construct the intersection of two maps, keeping the values…",0,[[],["self"]]],[11,"intersection_with","","Construct the intersection of two maps, calling a function…",0,[[["ordmap"],["f"]],["ordmap"]]],[11,"intersection_with_key","","Construct the intersection of two maps, calling a function…",0,[[["ordmap"],["f"]],["ordmap"]]],[11,"split","","Split a map into two, with the left hand map containing…",0,[[["self"],["bk"]]]],[11,"split_lookup","","Split a map into two, with the left hand map containing…",0,[[["self"],["bk"]]]],[11,"take","","Construct a map with only the `n` smallest keys from a…",0,[[["self"],["usize"]],["self"]]],[11,"skip","","Construct a map with the `n` smallest keys removed from a…",0,[[["self"],["usize"]],["self"]]],[11,"without_min","","Remove the smallest key from a map, and return its value…",0,[[["self"]]]],[11,"without_min_with_key","","Remove the smallest key from a map, and return that key,…",0,[[["self"]]]],[11,"without_max","","Remove the largest key from a map, and return its value as…",0,[[["self"]]]],[11,"without_max_with_key","","Remove the largest key from a map, and return that key,…",0,[[["self"]]]],[11,"entry","","Get the [`Entry`][Entry] for a key in the map for in-place…",0,[[["self"],["k"]],["entry"]]],[11,"new","","Construct an empty set.",1,[[],["self"]]],[11,"unit","","Construct a set with a single value.",1,[[["a"]],["self"]]],[11,"is_empty","","Test whether a set is empty.",1,[[["self"]],["bool"]]],[11,"len","","Get the size of a set.",1,[[["self"]],["usize"]]],[11,"ptr_eq","","Test whether two sets refer to the same content in memory.",1,[[["self"]],["bool"]]],[11,"clear","","Discard all elements from the set.",1,[[["self"]]]],[11,"get_min","","Get the smallest value in a set.",1,[[["self"]],[["option"],["a"]]]],[11,"get_max","","Get the largest value in a set.",1,[[["self"]],[["option"],["a"]]]],[11,"iter","","Create an iterator over the contents of the set.",1,[[["self"]],["iter"]]],[11,"range","","Create an iterator over a range inside the set.",1,[[["self"],["r"]],["rangediter"]]],[11,"diff","","Get an iterator over the differences between this set and…",1,[[["self"]],["diffiter"]]],[11,"contains","","Test if a value is part of a set.",1,[[["self"],["ba"]],["bool"]]],[11,"get_prev","","Get the closest smaller value in a set to a given value.",1,[[["self"],["a"]],[["option"],["a"]]]],[11,"get_next","","Get the closest larger value in a set to a given value.",1,[[["self"],["a"]],[["option"],["a"]]]],[11,"is_subset","","Test whether a set is a subset of another set, meaning…",1,[[["self"],["rs"]],["bool"]]],[11,"is_proper_subset","","Test whether a set is a proper subset of another set,…",1,[[["self"],["rs"]],["bool"]]],[11,"insert","","Insert a value into a set.",1,[[["a"],["self"]],["option"]]],[11,"remove","","Remove a value from a set.",1,[[["self"],["ba"]],["option"]]],[11,"remove_min","","Remove the smallest value from a set.",1,[[["self"]],["option"]]],[11,"remove_max","","Remove the largest value from a set.",1,[[["self"]],["option"]]],[11,"update","","Construct a new set from the current set with the given…",1,[[["a"],["self"]],["self"]]],[11,"without","","Construct a new set with the given value removed if it's…",1,[[["self"],["ba"]],["self"]]],[11,"without_min","","Remove the smallest value from a set, and return that…",1,[[["self"]]]],[11,"without_max","","Remove the largest value from a set, and return that value…",1,[[["self"]]]],[11,"union","","Construct the union of two sets.",1,[[],["self"]]],[11,"unions","","Construct the union of multiple sets.",1,[[["i"]],["self"]]],[11,"difference","","Construct the symmetric difference between two sets.",1,[[],["self"]]],[11,"symmetric_difference","","Construct the symmetric difference between two sets.",1,[[],["self"]]],[11,"relative_complement","","Construct the relative complement between two sets, that…",1,[[],["self"]]],[11,"intersection","","Construct the intersection of two sets.",1,[[],["self"]]],[11,"split","","Split a set into two, with the left hand set containing…",1,[[["ba"]]]],[11,"split_member","","Split a set into two, with the left hand set containing…",1,[[["ba"]]]],[11,"take","","Construct a set with only the `n` smallest values from a…",1,[[["self"],["usize"]],["self"]]],[11,"skip","","Construct a set with the `n` smallest values removed from…",1,[[["self"],["usize"]],["self"]]],[0,"ordmap","","An ordered map.",null,null],[3,"ConsumingIter","im_rc::ordmap","A consuming iterator over an ordered set.",null,null],[3,"DiffIter","","An iterator over the differences between two ordered sets.",null,null],[3,"RangedIter","","An iterator over an ordered set.",null,null],[3,"OrdMapPool","","A memory pool for the appropriate node type.",null,null],[3,"OrdMap","","An ordered map.",null,null],[3,"OccupiedEntry","","An entry for a mapping that already exists in the map.",null,null],[3,"VacantEntry","","An entry for a mapping that does not already exist in the…",null,null],[3,"Iter","","An iterator over the key/value pairs of a map.",null,null],[3,"Keys","","An iterator ove the keys of a map.",null,null],[3,"Values","","An iterator over the values of a map.",null,null],[4,"DiffItem","","A description of a difference between two ordered sets.",null,null],[13,"Add","","This value has been added to the new set.",2,null],[13,"Update","","This value has been changed between the two sets.",2,null],[12,"old","im_rc::ordmap::DiffItem","The old value.",3,null],[12,"new","","The new value.",3,null],[13,"Remove","im_rc::ordmap","This value has been removed from the new set.",2,null],[4,"Entry","","A handle for a key and its associated value.",null,null],[13,"Occupied","","An entry which exists in the map.",4,null],[13,"Vacant","","An entry which doesn't exist in the map.",4,null],[0,"ordset","im_rc","An ordered set.",null,null],[3,"OrdSetPool","im_rc::ordset","A memory pool for the appropriate node type.",null,null],[3,"OrdSet","","An ordered set.",null,null],[3,"Iter","","An iterator over the elements of a set.",null,null],[3,"RangedIter","","A ranged iterator over the elements of a set.",null,null],[3,"ConsumingIter","","A consuming iterator over the elements of a set.",null,null],[3,"DiffIter","","An iterator over the difference between two sets.",null,null],[4,"DiffItem","","A description of a difference between two ordered sets.",null,null],[13,"Add","","This value has been added to the new set.",2,null],[13,"Update","","This value has been changed between the two sets.",2,null],[12,"old","im_rc::ordset::DiffItem","The old value.",3,null],[12,"new","","The new value.",3,null],[13,"Remove","im_rc::ordset","This value has been removed from the new set.",2,null],[11,"new","im_rc","Construct an empty hash map.",5,[[],["self"]]],[11,"unit","","Construct a hash map with a single mapping.",5,[[["k"],["v"]],["hashmap"]]],[11,"is_empty","","Test whether a hash map is empty.",5,[[["self"]],["bool"]]],[11,"len","","Get the size of a hash map.",5,[[["self"]],["usize"]]],[11,"ptr_eq","","Test whether two maps refer to the same content in memory.",5,[[["self"]],["bool"]]],[11,"with_hasher","","Construct an empty hash map using the provided hasher.",5,[[["rs"]],["self"]]],[11,"hasher","","Get a reference to the map's [`BuildHasher`][BuildHasher].",5,[[["self"]],["rc"]]],[11,"new_from","","Construct an empty hash map using the same hasher as the…",5,[[["self"]],["hashmap"]]],[11,"iter","","Get an iterator over the key/value pairs of a hash map.",5,[[["self"]],["iter"]]],[11,"keys","","Get an iterator over a hash map's keys.",5,[[["self"]],["keys"]]],[11,"values","","Get an iterator over a hash map's values.",5,[[["self"]],["values"]]],[11,"clear","","Discard all elements from the map.",5,[[["self"]]]],[11,"get","","Get the value for a key from a hash map.",5,[[["self"],["bk"]],[["option"],["v"]]]],[11,"get_key_value","","Get the key/value pair for a key from a hash map.",5,[[["self"],["bk"]],["option"]]],[11,"contains_key","","Test for the presence of a key in a hash map.",5,[[["self"],["bk"]],["bool"]]],[11,"is_submap_by","","Test whether a map is a submap of another map, meaning…",5,[[["f"],["self"],["rm"]],["bool"]]],[11,"is_proper_submap_by","","Test whether a map is a proper submap of another map,…",5,[[["f"],["self"],["rm"]],["bool"]]],[11,"is_submap","","Test whether a map is a submap of another map, meaning…",5,[[["self"],["rm"]],["bool"]]],[11,"is_proper_submap","","Test whether a map is a proper submap of another map,…",5,[[["self"],["rm"]],["bool"]]],[11,"iter_mut","","Get a mutable iterator over the values of a hash map.",5,[[["self"]],["itermut"]]],[11,"get_mut","","Get a mutable reference to the value for a key from a hash…",5,[[["self"],["bk"]],[["option"],["v"]]]],[11,"insert","","Insert a key/value mapping into a map.",5,[[["self"],["k"],["v"]],["option"]]],[11,"remove","","Remove a key/value pair from a map, if it exists, and…",5,[[["self"],["bk"]],["option"]]],[11,"remove_with_key","","Remove a key/value pair from a map, if it exists, and…",5,[[["self"],["bk"]],["option"]]],[11,"entry","","Get the [`Entry`][Entry] for a key in the map for in-place…",5,[[["self"],["k"]],["entry"]]],[11,"update","","Construct a new hash map by inserting a key/value mapping…",5,[[["v"],["self"],["k"]],["self"]]],[11,"update_with","","Construct a new hash map by inserting a key/value mapping…",5,[[["k"],["f"],["self"],["v"]],["self"]]],[11,"update_with_key","","Construct a new map by inserting a key/value mapping into…",5,[[["k"],["f"],["self"],["v"]],["self"]]],[11,"update_lookup_with_key","","Construct a new map by inserting a key/value mapping into…",5,[[["k"],["f"],["self"],["v"]]]],[11,"alter","","Update the value for a given key by calling a function…",5,[[["k"],["self"],["f"]],["self"]]],[11,"without","","Construct a new map without the given key.",5,[[["self"],["bk"]],["self"]]],[11,"retain","","Filter out values from a map which don't satisfy a…",5,[[["self"],["f"]]]],[11,"extract","","Remove a key/value pair from a map, if it exists, and…",5,[[["self"],["bk"]],["option"]]],[11,"extract_with_key","","Remove a key/value pair from a map, if it exists, and…",5,[[["self"],["bk"]],["option"]]],[11,"union","","Construct the union of two maps, keeping the values in the…",5,[[],["self"]]],[11,"union_with","","Construct the union of two maps, using a function to…",5,[[["f"]],["self"]]],[11,"union_with_key","","Construct the union of two maps, using a function to…",5,[[["f"]],["self"]]],[11,"unions","","Construct the union of a sequence of maps, selecting the…",5,[[["i"]],["self"]]],[11,"unions_with","","Construct the union of a sequence of maps, using a…",5,[[["i"],["f"]],["self"]]],[11,"unions_with_key","","Construct the union of a sequence of maps, using a…",5,[[["i"],["f"]],["self"]]],[11,"difference","","Construct the symmetric difference between two maps by…",5,[[],["self"]]],[11,"symmetric_difference","","Construct the symmetric difference between two maps by…",5,[[],["self"]]],[11,"difference_with","","Construct the symmetric difference between two maps by…",5,[[["f"]],["self"]]],[11,"symmetric_difference_with","","Construct the symmetric difference between two maps by…",5,[[["f"]],["self"]]],[11,"difference_with_key","","Construct the symmetric difference between two maps by…",5,[[["f"]],["self"]]],[11,"symmetric_difference_with_key","","Construct the symmetric difference between two maps by…",5,[[["f"]],["self"]]],[11,"relative_complement","","Construct the relative complement between two maps by…",5,[[],["self"]]],[11,"intersection","","Construct the intersection of two maps, keeping the values…",5,[[],["self"]]],[11,"intersection_with","","Construct the intersection of two maps, calling a function…",5,[[["hashmap"],["f"]],["hashmap"]]],[11,"intersection_with_key","","Construct the intersection of two maps, calling a function…",5,[[["hashmap"],["f"]],["hashmap"]]],[11,"new","","Construct an empty set.",6,[[],["self"]]],[11,"unit","","Construct a set with a single value.",6,[[["a"]],["self"]]],[11,"is_empty","","Test whether a set is empty.",6,[[["self"]],["bool"]]],[11,"len","","Get the size of a set.",6,[[["self"]],["usize"]]],[11,"ptr_eq","","Test whether two sets refer to the same content in memory.",6,[[["self"]],["bool"]]],[11,"with_hasher","","Construct an empty hash set using the provided hasher.",6,[[["rs"]],["self"]]],[11,"hasher","","Get a reference to the set's [`BuildHasher`][BuildHasher].",6,[[["self"]],["rc"]]],[11,"new_from","","Construct an empty hash set using the same hasher as the…",6,[[["self"]],["hashset"]]],[11,"clear","","Discard all elements from the set.",6,[[["self"]]]],[11,"iter","","Get an iterator over the values in a hash set.",6,[[["self"]],["iter"]]],[11,"contains","","Test if a value is part of a set.",6,[[["self"],["ba"]],["bool"]]],[11,"is_subset","","Test whether a set is a subset of another set, meaning…",6,[[["self"],["rs"]],["bool"]]],[11,"is_proper_subset","","Test whether a set is a proper subset of another set,…",6,[[["self"],["rs"]],["bool"]]],[11,"iter_mut","","Get a mutable iterator over the values in a hash set.",6,[[["self"]],["itermut"]]],[11,"insert","","Insert a value into a set.",6,[[["a"],["self"]],["option"]]],[11,"remove","","Remove a value from a set if it exists.",6,[[["self"],["ba"]],["option"]]],[11,"update","","Construct a new set from the current set with the given…",6,[[["a"],["self"]],["self"]]],[11,"without","","Construct a new set with the given value removed if it's…",6,[[["self"],["ba"]],["self"]]],[11,"retain","","Filter out values from a set which don't satisfy a…",6,[[["self"],["f"]]]],[11,"union","","Construct the union of two sets.",6,[[],["self"]]],[11,"unions","","Construct the union of multiple sets.",6,[[["i"]],["self"]]],[11,"difference","","Construct the symmetric difference between two sets.",6,[[],["self"]]],[11,"symmetric_difference","","Construct the symmetric difference between two sets.",6,[[],["self"]]],[11,"relative_complement","","Construct the relative complement between two sets, that…",6,[[],["self"]]],[11,"intersection","","Construct the intersection of two sets.",6,[[],["self"]]],[0,"hashmap","","An unordered map.",null,null],[3,"HashMapPool","im_rc::hashmap","A memory pool for the appropriate node type.",null,null],[3,"HashMap","","An unordered map.",null,null],[3,"OccupiedEntry","","An entry for a mapping that already exists in the map.",null,null],[3,"VacantEntry","","An entry for a mapping that does not already exist in the…",null,null],[3,"Iter","","An iterator over the elements of a map.",null,null],[3,"IterMut","","A mutable iterator over the elements of a map.",null,null],[3,"ConsumingIter","","A consuming iterator over the elements of a map.",null,null],[3,"Keys","","An iterator over the keys of a map.",null,null],[3,"Values","","An iterator over the values of a map.",null,null],[4,"Entry","","A handle for a key and its associated value.",null,null],[13,"Occupied","","An entry which exists in the map.",7,null],[13,"Vacant","","An entry which doesn't exist in the map.",7,null],[0,"hashset","im_rc","An unordered set.",null,null],[3,"HashSetPool","im_rc::hashset","A memory pool for the appropriate node type.",null,null],[3,"HashSet","","An unordered set.",null,null],[3,"Iter","","An iterator over the elements of a set.",null,null],[3,"IterMut","","A mutable iterator over the elements of a set.",null,null],[3,"ConsumingIter","","A consuming iterator over the elements of a set.",null,null],[0,"vector","im_rc","A persistent vector.",null,null],[3,"RRBPool","im_rc::vector","A memory pool for `Vector`.",null,null],[3,"Vector","","A persistent vector.",null,null],[3,"Iter","","An iterator over vectors with values of type `A`.",null,null],[3,"IterMut","","A mutable iterator over vectors with values of type `A`.",null,null],[3,"ConsumingIter","","A consuming iterator over vectors with values of type `A`.",null,null],[3,"Chunks","","An iterator over the leaf nodes of a vector.",null,null],[3,"ChunksMut","","A mutable iterator over the leaf nodes of a vector.",null,null],[4,"Focus","","Focused indexing over a [`Vector`][Vector].",null,null],[4,"FocusMut","","A mutable version of [`Focus`][Focus].",null,null],[11,"new","","Construct a `Focus` for a [`Vector`][Vector].",8,[[["vector"]],["self"]]],[11,"len","","Get the length of the focused [`Vector`][Vector].",8,[[["self"]],["usize"]]],[11,"is_empty","","Test if the focused [`Vector`][Vector] is empty.",8,[[["self"]],["bool"]]],[11,"get","","Get a reference to the value at a given index.",8,[[["self"],["usize"]],[["option"],["a"]]]],[11,"index","","Get a reference to the value at a given index.",8,[[["self"],["usize"]],["a"]]],[11,"chunk_at","","Get the chunk for the given index.",8,[[["self"],["usize"]]]],[11,"narrow","","Narrow the focus onto a subslice of the vector.",8,[[["r"]],["self"]]],[11,"split_at","","Split the focus into two.",8,[[["usize"]]]],[11,"new","","Construct a `FocusMut` for a `Vector`.",9,[[["vector"]],["self"]]],[11,"len","","Get the length of the focused `Vector`.",9,[[["self"]],["usize"]]],[11,"is_empty","","Test if the focused `Vector` is empty.",9,[[["self"]],["bool"]]],[11,"get","","Get a reference to the value at a given index.",9,[[["self"],["usize"]],[["option"],["a"]]]],[11,"get_mut","","Get a mutable reference to the value at a given index.",9,[[["self"],["usize"]],[["a"],["option"]]]],[11,"index","","Get a reference to the value at a given index.",9,[[["self"],["usize"]],["a"]]],[11,"index_mut","","Get a mutable reference to the value at a given index.",9,[[["self"],["usize"]],["a"]]],[11,"set","","Update the value at a given index.",9,[[["a"],["self"],["usize"]],["option"]]],[11,"swap","","Swap the values at two given indices.",9,[[["self"],["usize"]]]],[11,"pair","","Lookup two indices simultaneously and run a function over…",9,[[["self"],["usize"],["f"]],["b"]]],[11,"triplet","","Lookup three indices simultaneously and run a function…",9,[[["self"],["usize"],["f"]],["b"]]],[11,"chunk_at","","Get the chunk for the given index.",9,[[["self"],["usize"]]]],[11,"narrow","","Narrow the focus onto a subslice of the vector.",9,[[["r"]],["self"]]],[11,"split_at","","Split the focus into two.",9,[[["usize"]]]],[11,"unmut","","Convert a `FocusMut` into a `Focus`.",9,[[],["focus"]]],[11,"new","","Create a new memory pool with the given size.",10,[[["usize"]],["self"]]],[11,"with_sizes","","Create a new memory pool with the given sizes for each…",10,[[["usize"]],["self"]]],[11,"fill","","Fill the memory pool with preallocated chunks.",10,[[["self"]]]],[11,"node_pool_size","","Get the size of the node subpool.",10,[[["self"]],["usize"]]],[11,"leaf_pool_size","","Get the size of the leaf node subpool.",10,[[["self"]],["usize"]]],[11,"size_table_pool_size","","Get the size of the size table subpool.",10,[[["self"]],["usize"]]],[11,"pool","","Get a reference to the memory pool this `Vector` is using.",11,[[["self"]],["rrbpool"]]],[11,"new","","Construct an empty vector.",11,[[],["self"]]],[11,"len","","Get the length of a vector.",11,[[["self"]],["usize"]]],[11,"is_empty","","Test whether a vector is empty.",11,[[["self"]],["bool"]]],[11,"ptr_eq","","Test whether two vectors refer to the same content in…",11,[[["self"]],["bool"]]],[11,"iter","","Get an iterator over a vector.",11,[[["self"]],["iter"]]],[11,"iter_mut","","Get a mutable iterator over a vector.",11,[[["self"]],["itermut"]]],[11,"leaves","","Get an iterator over the leaf nodes of a vector.",11,[[["self"]],["chunks"]]],[11,"leaves_mut","","Get a mutable iterator over the leaf nodes of a vector.…",11,[[["self"]],["chunksmut"]]],[11,"focus","","Construct a [`Focus`][Focus] for a vector.",11,[[["self"]],["focus"]]],[11,"focus_mut","","Construct a [`FocusMut`][FocusMut] for a vector.",11,[[["self"]],["focusmut"]]],[11,"get","","Get a reference to the value at index `index` in a vector.",11,[[["self"],["usize"]],[["option"],["a"]]]],[11,"get_mut","","Get a mutable reference to the value at index `index` in a…",11,[[["self"],["usize"]],[["a"],["option"]]]],[11,"front","","Get the first element of a vector.",11,[[["self"]],[["option"],["a"]]]],[11,"front_mut","","Get a mutable reference to the first element of a vector.",11,[[["self"]],[["a"],["option"]]]],[11,"head","","Get the first element of a vector.",11,[[["self"]],[["option"],["a"]]]],[11,"back","","Get the last element of a vector.",11,[[["self"]],[["option"],["a"]]]],[11,"back_mut","","Get a mutable reference to the last element of a vector.",11,[[["self"]],[["a"],["option"]]]],[11,"last","","Get the last element of a vector.",11,[[["self"]],[["option"],["a"]]]],[11,"index_of","","Get the index of a given element in the vector.",11,[[["self"],["a"]],[["usize"],["option",["usize"]]]]],[11,"contains","","Test if a given element is in the vector.",11,[[["self"],["a"]],["bool"]]],[11,"clear","","Discard all elements from the vector.",11,[[["self"]]]],[11,"binary_search_by","","Binary search a sorted vector for a given element using a…",11,[[["self"],["f"]],[["result",["usize","usize"]],["usize"]]]],[11,"binary_search","","Binary search a sorted vector for a given element.",11,[[["self"],["a"]],[["result",["usize","usize"]],["usize"]]]],[11,"binary_search_by_key","","Binary search a sorted vector for a given element with a…",11,[[["b"],["self"],["f"]],[["result",["usize","usize"]],["usize"]]]],[11,"unit","","Construct a vector with a single value.",11,[[["a"]],["self"]]],[11,"update","","Create a new vector with the value at index `index` updated.",11,[[["a"],["self"],["usize"]],["self"]]],[11,"set","","Update the value at index `index` in a vector.",11,[[["a"],["self"],["usize"]],["a"]]],[11,"swap","","Swap the elements at indices `i` and `j`.",11,[[["self"],["usize"]]]],[11,"push_front","","Push a value to the front of a vector.",11,[[["a"],["self"]]]],[11,"push_back","","Push a value to the back of a vector.",11,[[["a"],["self"]]]],[11,"pop_front","","Remove the first element from a vector and return it.",11,[[["self"]],["option"]]],[11,"pop_back","","Remove the last element from a vector and return it.",11,[[["self"]],["option"]]],[11,"append","","Append the vector `other` to the end of the current vector.",11,[[["self"]]]],[11,"retain","","Retain only the elements specified by the predicate.",11,[[["self"],["f"]]]],[11,"split_at","","Split a vector at a given index.",11,[[["usize"]]]],[11,"split_off","","Split a vector at a given index.",11,[[["self"],["usize"]],["self"]]],[11,"skip","","Construct a vector with `count` elements removed from the…",11,[[["self"],["usize"]],["self"]]],[11,"take","","Construct a vector of the first `count` elements from the…",11,[[["self"],["usize"]],["self"]]],[11,"truncate","","Truncate a vector to the given size.",11,[[["self"],["usize"]]]],[11,"slice","","Extract a slice from a vector.",11,[[["self"],["r"]],["self"]]],[11,"insert","","Insert an element into a vector.",11,[[["a"],["self"],["usize"]]]],[11,"remove","","Remove an element from a vector.",11,[[["self"],["usize"]],["a"]]],[11,"insert_ord","","Insert an element into a sorted vector.",11,[[["a"],["self"]]]],[11,"sort","","Sort a vector.",11,[[["self"]]]],[11,"sort_by","","Sort a vector using a comparator function.",11,[[["self"],["f"]]]],[0,"iter","im_rc","Iterators over immutable data.",null,null],[5,"unfold","im_rc::iter","Create an iterator of values using a function to update an…",null,[[["s"],["f"]]]],[14,"ordmap","im_rc","Construct a map from a sequence of key/value pairs.",null,null],[14,"ordset","","Construct a set from a sequence of values.",null,null],[14,"hashmap","","Construct a hash map from a sequence of key/value pairs.",null,null],[14,"hashset","","Construct a set from a sequence of values.",null,null],[14,"vector","","Construct a vector from a sequence of elements.",null,null],[14,"update_in","","Update a value inside multiple levels of data structures.",null,null],[14,"get_in","","Get a value inside multiple levels of data structures.",null,null],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"into_iter","","",6,[[],["i"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","im_rc::vector","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"into_iter","","",11,[[],["i"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","im_rc::ordmap","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"into_iter","","",12,[[],["i"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"into_iter","","",13,[[],["i"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"into_iter","","",14,[[],["i"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"into_iter","","",18,[[],["i"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"into_iter","","",19,[[],["i"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"into_iter","","",20,[[],["i"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","im_rc::ordset","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"into_iter","","",22,[[],["i"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"into_iter","","",23,[[],["i"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"into_iter","","",24,[[],["i"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"into_iter","","",25,[[],["i"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","im_rc::hashmap","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"into_iter","","",29,[[],["i"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"into_iter","","",30,[[],["i"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"into_iter","","",31,[[],["i"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"into_iter","","",32,[[],["i"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"into_iter","","",33,[[],["i"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","im_rc::hashset","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"into_iter","","",35,[[],["i"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"into_iter","","",36,[[],["i"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"into_iter","","",37,[[],["i"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","im_rc::vector","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"into_iter","","",38,[[],["i"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"into_iter","","",39,[[],["i"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"into_iter","","",40,[[],["i"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"into_iter","","",41,[[],["i"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"into_iter","","",42,[[],["i"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"into_iter","","",8,[[],["i"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"into_iter","","",9,[[],["i"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"as_ref","im_rc","",0,[[["self"]],["self"]]],[11,"as_ref","","",5,[[["self"]],["self"]]],[11,"from","","",0,[[["ordmap"]],["self"]]],[11,"from","","",0,[[],["ordmap"]]],[11,"from","","",0,[[["vec"]],["ordmap"]]],[11,"from","","",0,[[["vec"]],["ordmap"]]],[11,"from","","",0,[[["hashmap"]],["ordmap"]]],[11,"from","","",0,[[["hashmap"]],["ordmap"]]],[11,"from","","",0,[[["btreemap"]],["ordmap"]]],[11,"from","","",0,[[["btreemap"]],["ordmap"]]],[11,"from","","",0,[[["hashmap"]],["self"]]],[11,"from","","",0,[[["hashmap"]],["self"]]],[11,"from","","",1,[[["ordset"]],["self"]]],[11,"from","","",1,[[],["self"]]],[11,"from","","",1,[[["vec"]],["self"]]],[11,"from","","",1,[[["vec"]],["self"]]],[11,"from","","",1,[[["hashset"]],["self"]]],[11,"from","","",1,[[["hashset"]],["self"]]],[11,"from","","",1,[[["btreeset"]],["self"]]],[11,"from","","",1,[[["btreeset"]],["self"]]],[11,"from","","",1,[[["hashset"]],["self"]]],[11,"from","","",1,[[["hashset"]],["self"]]],[11,"from","","",5,[[["hashmap"]],["self"]]],[11,"from","","",5,[[],["self"]]],[11,"from","","",5,[[["vec"]],["self"]]],[11,"from","","",5,[[["vec"]],["self"]]],[11,"from","","",5,[[["hashmap"]],["self"]]],[11,"from","","",5,[[["hashmap"]],["self"]]],[11,"from","","",5,[[["btreemap"]],["self"]]],[11,"from","","",5,[[["btreemap"]],["self"]]],[11,"from","","",6,[[["hashset"]],["self"]]],[11,"from","","",6,[[],["self"]]],[11,"from","","",6,[[["vec"]],["self"]]],[11,"from","","",6,[[["vec"]],["self"]]],[11,"from","","",6,[[["hashset"]],["self"]]],[11,"from","","",6,[[["hashset"]],["self"]]],[11,"from","","",6,[[["btreeset"]],["self"]]],[11,"from","","",6,[[["ordset"]],["self"]]],[11,"from","","",6,[[["ordset"]],["self"]]],[11,"from","im_rc::vector","",11,[[["vector"]],["self"]]],[11,"from","","",11,[[],["self"]]],[11,"from","","Create a vector from a [`std::vec::Vec`][vec].",11,[[["vec"]],["self"]]],[11,"from","","Create a vector from a [`std::vec::Vec`][vec].",11,[[["vec"]],["self"]]],[11,"into","","",9,[[],["focus"]]],[11,"next_back","im_rc::ordmap","",12,[[["self"]],["option"]]],[11,"next_back","","",13,[[["self"]],["option"]]],[11,"next_back","","",18,[[["self"]],["option"]]],[11,"next_back","","",19,[[["self"]],["option"]]],[11,"next_back","","",20,[[["self"]],["option"]]],[11,"next_back","im_rc::ordset","",22,[[["self"]],["option"]]],[11,"next_back","","",23,[[["self"]],["option"]]],[11,"next_back","im_rc::vector","Advance the iterator and return the next value.",38,[[["self"]],["option"]]],[11,"next_back","","Remove and return an element from the back of the iterator.",39,[[["self"]],["option"]]],[11,"next_back","","Remove and return an element from the back of the iterator.",40,[[["self"]],["option"]]],[11,"next_back","","Remove and return an element from the back of the iterator.",41,[[["self"]],["option"]]],[11,"next_back","","Remove and return an element from the back of the iterator.",42,[[["self"]],["option"]]],[11,"extend","im_rc","",0,[[["self"],["i"]]]],[11,"extend","","",1,[[["self"],["i"]]]],[11,"extend","","",5,[[["self"],["i"]]]],[11,"extend","","",6,[[["self"],["i"]]]],[11,"extend","im_rc::vector","Add values to the end of a vector by consuming an iterator.",11,[[["self"],["i"]]]],[11,"into_iter","im_rc","",0,[[]]],[11,"into_iter","","",1,[[]]],[11,"into_iter","","",5,[[]]],[11,"into_iter","","",6,[[]]],[11,"into_iter","im_rc::vector","",8,[[]]],[11,"into_iter","","",9,[[]]],[11,"into_iter","","",11,[[]]],[11,"next","im_rc::ordmap","",12,[[["self"]],["option"]]],[11,"size_hint","","",12,[[["self"]]]],[11,"next","","",13,[[["self"]],["option"]]],[11,"size_hint","","",13,[[["self"]]]],[11,"next","","",14,[[["self"]],["option"]]],[11,"next","","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,[[["self"]]]],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,[[["self"]]]],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,[[["self"]]]],[11,"next","im_rc::ordset","Advance the iterator and return the next value.",22,[[["self"]],["option"]]],[11,"size_hint","","",22,[[["self"]]]],[11,"next","","Advance the iterator and return the next value.",23,[[["self"]],["option"]]],[11,"size_hint","","",23,[[["self"]]]],[11,"next","","Advance the iterator and return the next value.",24,[[["self"]],["option"]]],[11,"next","","Advance the iterator and return the next value.",25,[[["self"]],["option"]]],[11,"next","im_rc::hashmap","",29,[[["self"]],["option"]]],[11,"size_hint","","",29,[[["self"]]]],[11,"next","","",30,[[["self"]],["option"]]],[11,"size_hint","","",30,[[["self"]]]],[11,"next","","",31,[[["self"]],["option"]]],[11,"size_hint","","",31,[[["self"]]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,[[["self"]]]],[11,"next","","",33,[[["self"]],["option"]]],[11,"size_hint","","",33,[[["self"]]]],[11,"next","im_rc::hashset","",35,[[["self"]],["option"]]],[11,"size_hint","","",35,[[["self"]]]],[11,"next","","",36,[[["self"]],["option"]]],[11,"size_hint","","",36,[[["self"]]]],[11,"next","","",37,[[["self"]],["option"]]],[11,"size_hint","","",37,[[["self"]]]],[11,"next","im_rc::vector","Advance the iterator and return the next value.",38,[[["self"]],["option"]]],[11,"size_hint","","",38,[[["self"]]]],[11,"next","","Advance the iterator and return the next value.",39,[[["self"]],["option"]]],[11,"size_hint","","",39,[[["self"]]]],[11,"next","","Advance the iterator and return the next value.",40,[[["self"]],["option"]]],[11,"size_hint","","",40,[[["self"]]]],[11,"next","","Advance the iterator and return the next value.",41,[[["self"]],["option"]]],[11,"next","","Advance the iterator and return the next value.",42,[[["self"]],["option"]]],[11,"clone","im_rc::ordmap","",15,[[["self"]],["self"]]],[11,"clone","im_rc","Clone a map.",0,[[["self"]],["self"]]],[11,"clone","im_rc::ordset","",21,[[["self"]],["self"]]],[11,"clone","im_rc","Clone a set.",1,[[["self"]],["self"]]],[11,"clone","im_rc::hashmap","",26,[[["self"]],["self"]]],[11,"clone","im_rc","Clone a map.",5,[[["self"]],["self"]]],[11,"clone","im_rc::hashset","",34,[[["self"]],["self"]]],[11,"clone","im_rc","Clone a set.",6,[[["self"]],["self"]]],[11,"clone","im_rc::vector","",8,[[["self"]],["self"]]],[11,"clone","","",10,[[["self"]],["self"]]],[11,"clone","","Clone a vector.",11,[[["self"]],["self"]]],[11,"default","im_rc::ordmap","",15,[[],["self"]]],[11,"default","im_rc","",0,[[],["self"]]],[11,"default","im_rc::ordset","",21,[[],["self"]]],[11,"default","im_rc","",1,[[],["self"]]],[11,"default","im_rc::hashmap","",26,[[],["self"]]],[11,"default","im_rc","",5,[[],["self"]]],[11,"default","im_rc::hashset","",34,[[],["self"]]],[11,"default","im_rc","",6,[[],["self"]]],[11,"default","im_rc::vector","Construct a pool with a reasonable default pool size.",10,[[],["self"]]],[11,"default","","",11,[[],["self"]]],[11,"cmp","im_rc","",0,[[["self"]],["ordering"]]],[11,"cmp","","",1,[[["self"]],["ordering"]]],[11,"cmp","","",5,[[["self"]],["ordering"]]],[11,"cmp","","",6,[[["self"]],["ordering"]]],[11,"cmp","im_rc::vector","",11,[[["self"]],["ordering"]]],[11,"eq","im_rc::ordmap","",2,[[["self"],["diffitem"]],["bool"]]],[11,"ne","","",2,[[["self"],["diffitem"]],["bool"]]],[11,"eq","im_rc","",0,[[["self"]],["bool"]]],[11,"eq","","",1,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",6,[[["self"]],["bool"]]],[11,"eq","im_rc::vector","",11,[[["self"]],["bool"]]],[11,"partial_cmp","im_rc","",0,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",1,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",5,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",6,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","im_rc::vector","",11,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","im_rc","",0,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",1,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",5,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",6,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","im_rc::vector","",11,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"add","im_rc","",0,[[]]],[11,"add","","",1,[[]]],[11,"add","","",5,[[]]],[11,"add","","",6,[[]]],[11,"add","im_rc::vector","Concatenate two vectors.",11,[[]]],[11,"mul","im_rc","",1,[[]]],[11,"mul","","",6,[[]]],[11,"index","","",0,[[["self"],["bk"]]]],[11,"index","","",5,[[["self"],["bk"]]]],[11,"index","im_rc::vector","Get a reference to the value at index `index` in the vector.",11,[[["self"],["usize"]]]],[11,"index_mut","im_rc","",0,[[["self"],["bk"]]]],[11,"index_mut","","",5,[[["self"],["bk"]]]],[11,"index_mut","im_rc::vector","Get a mutable reference to the value at index `index` in…",11,[[["self"],["usize"]]]],[11,"hash","im_rc","",0,[[["self"],["h"]]]],[11,"hash","","",1,[[["self"],["h"]]]],[11,"hash","","",5,[[["self"],["h"]]]],[11,"hash","","",6,[[["self"],["h"]]]],[11,"hash","im_rc::vector","",11,[[["self"],["h"]]]],[11,"from_iter","im_rc","",0,[[["t"]],["self"]]],[11,"from_iter","","",1,[[["t"]],["self"]]],[11,"from_iter","","",5,[[["t"]],["self"]]],[11,"from_iter","","",6,[[["t"]],["self"]]],[11,"from_iter","im_rc::vector","Create a vector from an iterator.",11,[[["i"]],["self"]]],[11,"sum","im_rc","",0,[[["i"]],["self"]]],[11,"sum","","",1,[[["i"]],["self"]]],[11,"sum","","",5,[[["i"]],["self"]]],[11,"sum","","",6,[[["i"]],["self"]]],[11,"sum","im_rc::vector","",11,[[["i"]],["self"]]],[11,"new","im_rc::ordmap","Create a new pool with the given size.",15,[[["usize"]],["self"]]],[11,"fill","","Fill the pool with preallocated chunks.",15,[[["self"]]]],[11,"pool_size","","Get the current size of the pool.",15,[[["self"]],["usize"]]],[11,"or_insert","","Insert the default value provided if there was no value…",4,[[["v"]],["v"]]],[11,"or_insert_with","","Insert the default value from the provided function if…",4,[[["f"]],["v"]]],[11,"or_default","","Insert a default value if there was no value already, and…",4,[[],["v"]]],[11,"key","","Get the key for this entry.",4,[[["self"]],["k"]]],[11,"and_modify","","Call the provided function to modify the value if the…",4,[[["f"]],["self"]]],[11,"key","","Get the key for this entry.",16,[[["self"]],["k"]]],[11,"remove_entry","","Remove this entry from the map and return the removed…",16,[[]]],[11,"get","","Get the current value.",16,[[["self"]],["v"]]],[11,"get_mut","","Get a mutable reference to the current value.",16,[[["self"]],["v"]]],[11,"into_mut","","Convert this entry into a mutable reference.",16,[[],["v"]]],[11,"insert","","Overwrite the current value.",16,[[["self"],["v"]],["v"]]],[11,"remove","","Remove this entry from the map and return the removed value.",16,[[],["v"]]],[11,"key","","Get the key for this entry.",17,[[["self"]],["k"]]],[11,"into_key","","Convert this entry into its key.",17,[[],["k"]]],[11,"insert","","Insert a value into this entry.",17,[[["v"]],["v"]]],[11,"new","im_rc::ordset","Create a new pool with the given size.",21,[[["usize"]],["self"]]],[11,"fill","","Fill the pool with preallocated chunks.",21,[[["self"]]]],[11,"pool_size","","Get the current size of the pool.",21,[[["self"]],["usize"]]],[11,"new","im_rc::hashmap","Create a new pool with the given size.",26,[[["usize"]],["self"]]],[11,"fill","","Fill the pool with preallocated chunks.",26,[[["self"]]]],[11,"pool_size","","Get the current size of the pool.",26,[[["self"]],["usize"]]],[11,"or_insert","","Insert the default value provided if there was no value…",7,[[["v"]],["v"]]],[11,"or_insert_with","","Insert the default value from the provided function if…",7,[[["f"]],["v"]]],[11,"or_default","","Insert a default value if there was no value already, and…",7,[[],["v"]]],[11,"key","","Get the key for this entry.",7,[[["self"]],["k"]]],[11,"and_modify","","Call the provided function to modify the value if the…",7,[[["f"]],["self"]]],[11,"key","","Get the key for this entry.",27,[[["self"]],["k"]]],[11,"remove_entry","","Remove this entry from the map and return the removed…",27,[[]]],[11,"get","","Get the current value.",27,[[["self"]],["v"]]],[11,"get_mut","","Get a mutable reference to the current value.",27,[[["self"]],["v"]]],[11,"into_mut","","Convert this entry into a mutable reference.",27,[[],["v"]]],[11,"insert","","Overwrite the current value.",27,[[["self"],["v"]],["v"]]],[11,"remove","","Remove this entry from the map and return the removed value.",27,[[],["v"]]],[11,"key","","Get the key for this entry.",28,[[["self"]],["k"]]],[11,"into_key","","Convert this entry into its key.",28,[[],["k"]]],[11,"insert","","Insert a value into this entry.",28,[[["v"]],["v"]]],[11,"new","im_rc::hashset","Create a new pool with the given size.",34,[[["usize"]],["self"]]],[11,"fill","","Fill the pool with preallocated chunks.",34,[[["self"]]]],[11,"pool_size","","Get the current size of the pool.",34,[[["self"]],["usize"]]]],"p":[[3,"OrdMap"],[3,"OrdSet"],[4,"DiffItem"],[13,"Update"],[4,"Entry"],[3,"HashMap"],[3,"HashSet"],[4,"Entry"],[4,"Focus"],[4,"FocusMut"],[3,"RRBPool"],[3,"Vector"],[3,"RangedIter"],[3,"ConsumingIter"],[3,"DiffIter"],[3,"OrdMapPool"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"OrdSetPool"],[3,"Iter"],[3,"RangedIter"],[3,"ConsumingIter"],[3,"DiffIter"],[3,"HashMapPool"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"Iter"],[3,"IterMut"],[3,"ConsumingIter"],[3,"Keys"],[3,"Values"],[3,"HashSetPool"],[3,"Iter"],[3,"IterMut"],[3,"ConsumingIter"],[3,"Iter"],[3,"IterMut"],[3,"ConsumingIter"],[3,"Chunks"],[3,"ChunksMut"]]};
searchIndex["indexmap"] = {"doc":"[`IndexMap`] is a hash table where the iteration order of…","i":[[0,"map","indexmap","`IndexMap` is a hash table where the iteration order of…",null,null],[3,"IndexMap","indexmap::map","A hash table where the iteration order of the key-value…",null,null],[3,"OccupiedEntry","","A view into an occupied entry in a `IndexMap`. It is part…",null,null],[3,"VacantEntry","","A view into a vacant entry in a `IndexMap`. It is part of…",null,null],[3,"Keys","","An iterator over the keys of a `IndexMap`.",null,null],[3,"Values","","An iterator over the values of a `IndexMap`.",null,null],[3,"ValuesMut","","A mutable iterator over the values of a `IndexMap`.",null,null],[3,"Iter","","An iterator over the entries of a `IndexMap`.",null,null],[3,"IterMut","","A mutable iterator over the entries of a `IndexMap`.",null,null],[3,"IntoIter","","An owning iterator over the entries of a `IndexMap`.",null,null],[3,"Drain","","A draining iterator over the entries of a `IndexMap`.",null,null],[4,"Entry","","Entry for an existing key-value pair or a vacant location…",null,null],[13,"Occupied","","Existing slot with equivalent key.",0,null],[13,"Vacant","","Vacant slot (no equivalent key in the map).",0,null],[8,"MutableKeys","","Opt-in mutable access to keys.",null,null],[16,"Key","","",1,null],[16,"Value","","",1,null],[10,"get_full_mut2","","Return item index, mutable reference to key and value",1,[[["self"],["q"]],["option"]]],[10,"retain2","","Scan through each key-value pair in the map and keep those…",1,[[["self"],["f"]]]],[10,"__private_marker","","This method is not useful in itself – it is there to…",1,[[["self"]],["privatemarker"]]],[11,"new","","Create a new map. (Does not allocate.)",2,[[],["self"]]],[11,"with_capacity","","Create a new map with capacity for `n` key-value pairs.…",2,[[["usize"]],["self"]]],[11,"with_capacity_and_hasher","","Create a new map with capacity for `n` key-value pairs.…",2,[[["s"],["usize"]],["self"]]],[11,"len","","Return the number of key-value pairs in the map.",2,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",2,[[["self"]],["bool"]]],[11,"with_hasher","","Create a new map with `hash_builder`",2,[[["s"]],["self"]]],[11,"hasher","","Return a reference to the map's `BuildHasher`.",2,[[["self"]],["s"]]],[11,"capacity","","Computes in O(1) time.",2,[[["self"]],["usize"]]],[11,"or_insert","","Computes in O(1) time (amortized average).",0,[[["v"]],["v"]]],[11,"or_insert_with","","Computes in O(1) time (amortized average).",0,[[["f"]],["v"]]],[11,"key","","",0,[[["self"]],["k"]]],[11,"index","","Return the index where the key-value pair exists or will…",0,[[["self"]],["usize"]]],[11,"and_modify","","Modifies the entry if it is occupied.",0,[[["f"]],["self"]]],[11,"or_default","","Inserts a default-constructed value in the entry if it is…",0,[[],["v"]]],[11,"key","","",3,[[["self"]],["k"]]],[11,"get","","",3,[[["self"]],["v"]]],[11,"get_mut","","",3,[[["self"]],["v"]]],[11,"index","","Return the index of the key-value pair",3,[[["self"]],["usize"]]],[11,"into_mut","","",3,[[],["v"]]],[11,"insert","","Sets the value of the entry to `value`, and returns the…",3,[[["self"],["v"]],["v"]]],[11,"remove","","Remove the key, value pair stored in the map for this…",3,[[],["v"]]],[11,"swap_remove","","Remove the key, value pair stored in the map for this…",3,[[],["v"]]],[11,"shift_remove","","Remove the key, value pair stored in the map for this…",3,[[],["v"]]],[11,"remove_entry","","Remove and return the key, value pair stored in the map…",3,[[]]],[11,"swap_remove_entry","","Remove and return the key, value pair stored in the map…",3,[[]]],[11,"shift_remove_entry","","Remove and return the key, value pair stored in the map…",3,[[]]],[11,"key","","",4,[[["self"]],["k"]]],[11,"into_key","","",4,[[],["k"]]],[11,"index","","Return the index where the key-value pair will be inserted.",4,[[["self"]],["usize"]]],[11,"insert","","",4,[[["v"]],["v"]]],[11,"clear","","Remove all key-value pairs in the map, while preserving…",2,[[["self"]]]],[11,"reserve","","Reserve capacity for `additional` more key-value pairs.",2,[[["self"],["usize"]]]],[11,"insert","","Insert a key-value pair in the map.",2,[[["self"],["k"],["v"]],["option"]]],[11,"insert_full","","Insert a key-value pair in the map, and get their index.",2,[[["self"],["k"],["v"]]]],[11,"entry","","Get the given key’s corresponding entry in the map for…",2,[[["self"],["k"]],["entry"]]],[11,"iter","","Return an iterator over the key-value pairs of the map, in…",2,[[["self"]],["iter"]]],[11,"iter_mut","","Return an iterator over the key-value pairs of the map, in…",2,[[["self"]],["itermut"]]],[11,"keys","","Return an iterator over the keys of the map, in their order",2,[[["self"]],["keys"]]],[11,"values","","Return an iterator over the values of the map, in their…",2,[[["self"]],["values"]]],[11,"values_mut","","Return an iterator over mutable references to the the…",2,[[["self"]],["valuesmut"]]],[11,"contains_key","","Return `true` if an equivalent to `key` exists in the map.",2,[[["self"],["q"]],["bool"]]],[11,"get","","Return a reference to the value stored for `key`, if it is…",2,[[["self"],["q"]],[["option"],["v"]]]],[11,"get_full","","Return item index, key and value",2,[[["self"],["q"]],["option"]]],[11,"get_mut","","",2,[[["self"],["q"]],[["option"],["v"]]]],[11,"get_full_mut","","",2,[[["self"],["q"]],["option"]]],[11,"remove","","Remove the key-value pair equivalent to `key` and return…",2,[[["self"],["q"]],["option"]]],[11,"swap_remove","","Remove the key-value pair equivalent to `key` and return…",2,[[["self"],["q"]],["option"]]],[11,"swap_remove_full","","Remove the key-value pair equivalent to `key` and return…",2,[[["self"],["q"]],["option"]]],[11,"shift_remove","","Remove the key-value pair equivalent to `key` and return…",2,[[["self"],["q"]],["option"]]],[11,"shift_remove_full","","Remove the key-value pair equivalent to `key` and return…",2,[[["self"],["q"]],["option"]]],[11,"pop","","Remove the last key-value pair",2,[[["self"]],["option"]]],[11,"retain","","Scan through each key-value pair in the map and keep those…",2,[[["self"],["f"]]]],[11,"sort_keys","","Sort the map’s key-value pairs by the default ordering of…",2,[[["self"]]]],[11,"sort_by","","Sort the map’s key-value pairs in place using the…",2,[[["self"],["f"]]]],[11,"sorted_by","","Sort the key-value pairs of the map and return a by value…",2,[[["f"]],["intoiter"]]],[11,"drain","","Clears the `IndexMap`, returning all key-value pairs as a…",2,[[["self"],["rangefull"]],["drain"]]],[11,"get_index","","Get a key-value pair by index",2,[[["self"],["usize"]],["option"]]],[11,"get_index_mut","","Get a key-value pair by index",2,[[["self"],["usize"]],["option"]]],[11,"swap_remove_index","","Remove the key-value pair by index",2,[[["self"],["usize"]],["option"]]],[11,"shift_remove_index","","Remove the key-value pair by index",2,[[["self"],["usize"]],["option"]]],[0,"set","indexmap","A hash set implemented using `IndexMap`",null,null],[3,"IndexSet","indexmap::set","A hash set where the iteration order of the values is…",null,null],[3,"IntoIter","","An owning iterator over the items of a `IndexSet`.",null,null],[3,"Iter","","An iterator over the items of a `IndexSet`.",null,null],[3,"Drain","","A draining iterator over the items of a `IndexSet`.",null,null],[3,"Difference","","A lazy iterator producing elements in the difference of…",null,null],[3,"Intersection","","A lazy iterator producing elements in the intersection of…",null,null],[3,"SymmetricDifference","","A lazy iterator producing elements in the symmetric…",null,null],[3,"Union","","A lazy iterator producing elements in the union of…",null,null],[11,"new","","Create a new set. (Does not allocate.)",5,[[],["self"]]],[11,"with_capacity","","Create a new set with capacity for `n` elements. (Does not…",5,[[["usize"]],["self"]]],[11,"with_capacity_and_hasher","","Create a new set with capacity for `n` elements. (Does not…",5,[[["s"],["usize"]],["self"]]],[11,"len","","Return the number of elements in the set.",5,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the set contains no elements.",5,[[["self"]],["bool"]]],[11,"with_hasher","","Create a new set with `hash_builder`",5,[[["s"]],["self"]]],[11,"hasher","","Return a reference to the set's `BuildHasher`.",5,[[["self"]],["s"]]],[11,"capacity","","Computes in O(1) time.",5,[[["self"]],["usize"]]],[11,"clear","","Remove all elements in the set, while preserving its…",5,[[["self"]]]],[11,"reserve","","FIXME Not implemented fully yet",5,[[["self"],["usize"]]]],[11,"insert","","Insert the value into the set.",5,[[["self"],["t"]],["bool"]]],[11,"insert_full","","Insert the value into the set, and get its index.",5,[[["self"],["t"]]]],[11,"iter","","Return an iterator over the values of the set, in their…",5,[[["self"]],["iter"]]],[11,"difference","","Return an iterator over the values that are in `self` but…",5,[[["self"],["indexset"]],["difference"]]],[11,"symmetric_difference","","Return an iterator over the values that are in `self` or…",5,[[["self"],["indexset"]],["symmetricdifference"]]],[11,"intersection","","Return an iterator over the values that are in both `self`…",5,[[["self"],["indexset"]],["intersection"]]],[11,"union","","Return an iterator over all values that are in `self` or…",5,[[["self"],["indexset"]],["union"]]],[11,"contains","","Return `true` if an equivalent to `value` exists in the set.",5,[[["self"],["q"]],["bool"]]],[11,"get","","Return a reference to the value stored in the set, if it…",5,[[["self"],["q"]],[["t"],["option"]]]],[11,"get_full","","Return item index and value",5,[[["self"],["q"]],["option"]]],[11,"replace","","Adds a value to the set, replacing the existing value, if…",5,[[["self"],["t"]],["option"]]],[11,"remove","","Remove the value from the set, and return `true` if it was…",5,[[["self"],["q"]],["bool"]]],[11,"swap_remove","","Remove the value from the set, and return `true` if it was…",5,[[["self"],["q"]],["bool"]]],[11,"shift_remove","","Remove the value from the set, and return `true` if it was…",5,[[["self"],["q"]],["bool"]]],[11,"take","","Removes and returns the value in the set, if any, that is…",5,[[["self"],["q"]],["option"]]],[11,"swap_take","","Removes and returns the value in the set, if any, that is…",5,[[["self"],["q"]],["option"]]],[11,"shift_take","","Removes and returns the value in the set, if any, that is…",5,[[["self"],["q"]],["option"]]],[11,"swap_remove_full","","Remove the value from the set return it and the index it…",5,[[["self"],["q"]],["option"]]],[11,"shift_remove_full","","Remove the value from the set return it and the index it…",5,[[["self"],["q"]],["option"]]],[11,"pop","","Remove the last value",5,[[["self"]],["option"]]],[11,"retain","","Scan through each value in the set and keep those where…",5,[[["self"],["f"]]]],[11,"sort","","Sort the set’s values by their default ordering.",5,[[["self"]]]],[11,"sort_by","","Sort the set’s values in place using the comparison…",5,[[["self"],["f"]]]],[11,"sorted_by","","Sort the values of the set and return a by value iterator…",5,[[["f"]],["intoiter"]]],[11,"drain","","Clears the `IndexSet`, returning all values as a drain…",5,[[["self"],["rangefull"]],["drain"]]],[11,"get_index","","Get a value by index",5,[[["self"],["usize"]],[["t"],["option"]]]],[11,"swap_remove_index","","Remove the key-value pair by index",5,[[["self"],["usize"]],["option"]]],[11,"shift_remove_index","","Remove the key-value pair by index",5,[[["self"],["usize"]],["option"]]],[11,"is_disjoint","","Returns `true` if `self` has no elements in common with…",5,[[["indexset"],["self"]],["bool"]]],[11,"is_subset","","Returns `true` if all elements of `self` are contained in…",5,[[["indexset"],["self"]],["bool"]]],[11,"is_superset","","Returns `true` if all elements of `other` are contained in…",5,[[["indexset"],["self"]],["bool"]]],[8,"Equivalent","indexmap","Key equivalence trait.",null,null],[10,"equivalent","","Compare self to `key` and return `true` if they are equal.",6,[[["k"],["self"]],["bool"]]],[14,"indexmap","","Create an `IndexMap` from a list of key-value pairs",null,null],[14,"indexset","","Create an `IndexSet` from a list of values",null,null],[11,"from","indexmap::map","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"into_iter","","",8,[[],["i"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"into_iter","","",9,[[],["i"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"into_iter","","",11,[[],["i"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"into_iter","","",12,[[],["i"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"into_iter","","",13,[[],["i"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","indexmap::set","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"into_iter","","",14,[[],["i"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"into_iter","","",15,[[],["i"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"into_iter","","",16,[[],["i"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"into_iter","","",17,[[],["i"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"into_iter","","",18,[[],["i"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"into_iter","","",19,[[],["i"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"into_iter","","",20,[[],["i"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"get_full_mut2","indexmap::map","",2,[[["self"],["q"]],["option"]]],[11,"retain2","","",2,[[["self"],["f"]]]],[11,"__private_marker","","",2,[[["self"]],["privatemarker"]]],[11,"next_back","","",7,[[["self"]],[["option"],["k"]]]],[11,"next_back","","",8,[[["self"]],["option"]]],[11,"next_back","","",9,[[["self"]],["option"]]],[11,"next_back","","",10,[[["self"]],["option"]]],[11,"next_back","","",11,[[["self"]],["option"]]],[11,"next_back","","",12,[[["self"]],["option"]]],[11,"next_back","","",13,[[["self"]],["option"]]],[11,"next_back","indexmap::set","",14,[[["self"]],["option"]]],[11,"next_back","","",15,[[["self"]],["option"]]],[11,"next_back","","",16,[[["self"]],["option"]]],[11,"next_back","","",17,[[["self"]],["option"]]],[11,"next_back","","",18,[[["self"]],["option"]]],[11,"next_back","","",19,[[["self"]],["option"]]],[11,"next_back","","",20,[[["self"]],["option"]]],[11,"len","indexmap::map","",7,[[["self"]],["usize"]]],[11,"len","","",8,[[["self"]],["usize"]]],[11,"len","","",9,[[["self"]],["usize"]]],[11,"len","","",10,[[["self"]],["usize"]]],[11,"len","","",11,[[["self"]],["usize"]]],[11,"len","","",12,[[["self"]],["usize"]]],[11,"len","indexmap::set","",14,[[["self"]],["usize"]]],[11,"len","","",15,[[["self"]],["usize"]]],[11,"extend","indexmap::map","Extend the map with all key-value pairs in the iterable.",2,[[["self"],["intoiterator"]]]],[11,"extend","","Extend the map with all key-value pairs in the iterable.",2,[[["self"],["intoiterator"]]]],[11,"extend","indexmap::set","",5,[[["self"],["intoiterator"]]]],[11,"extend","","",5,[[["intoiterator"],["self"]]]],[11,"into_iter","indexmap::map","",2,[[]]],[11,"into_iter","indexmap::set","",5,[[]]],[11,"next","indexmap::map","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,[[["self"]]]],[11,"count","","",7,[[],["usize"]]],[11,"nth","","",7,[[["self"],["usize"]],["option"]]],[11,"last","","",7,[[],["option"]]],[11,"collect","","",7,[[],["c"]]],[11,"next","","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,[[["self"]]]],[11,"count","","",8,[[],["usize"]]],[11,"nth","","",8,[[["self"],["usize"]],["option"]]],[11,"last","","",8,[[],["option"]]],[11,"collect","","",8,[[],["c"]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,[[["self"]]]],[11,"count","","",9,[[],["usize"]]],[11,"nth","","",9,[[["self"],["usize"]],["option"]]],[11,"last","","",9,[[],["option"]]],[11,"collect","","",9,[[],["c"]]],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,[[["self"]]]],[11,"count","","",10,[[],["usize"]]],[11,"nth","","",10,[[["self"],["usize"]],["option"]]],[11,"last","","",10,[[],["option"]]],[11,"collect","","",10,[[],["c"]]],[11,"next","","",11,[[["self"]],["option"]]],[11,"size_hint","","",11,[[["self"]]]],[11,"count","","",11,[[],["usize"]]],[11,"nth","","",11,[[["self"],["usize"]],["option"]]],[11,"last","","",11,[[],["option"]]],[11,"collect","","",11,[[],["c"]]],[11,"next","","",12,[[["self"]],["option"]]],[11,"size_hint","","",12,[[["self"]]]],[11,"count","","",12,[[],["usize"]]],[11,"nth","","",12,[[["self"],["usize"]],["option"]]],[11,"last","","",12,[[],["option"]]],[11,"collect","","",12,[[],["c"]]],[11,"next","","",13,[[["self"]],["option"]]],[11,"size_hint","","",13,[[["self"]]]],[11,"count","","",13,[[],["usize"]]],[11,"nth","","",13,[[["self"],["usize"]],["option"]]],[11,"last","","",13,[[],["option"]]],[11,"collect","","",13,[[],["c"]]],[11,"next","indexmap::set","",14,[[["self"]],["option"]]],[11,"size_hint","","",14,[[["self"]]]],[11,"count","","",14,[[],["usize"]]],[11,"nth","","",14,[[["self"],["usize"]],["option"]]],[11,"last","","",14,[[],["option"]]],[11,"collect","","",14,[[],["c"]]],[11,"next","","",15,[[["self"]],["option"]]],[11,"size_hint","","",15,[[["self"]]]],[11,"count","","",15,[[],["usize"]]],[11,"nth","","",15,[[["self"],["usize"]],["option"]]],[11,"last","","",15,[[],["option"]]],[11,"collect","","",15,[[],["c"]]],[11,"next","","",16,[[["self"]],["option"]]],[11,"size_hint","","",16,[[["self"]]]],[11,"count","","",16,[[],["usize"]]],[11,"nth","","",16,[[["self"],["usize"]],["option"]]],[11,"last","","",16,[[],["option"]]],[11,"collect","","",16,[[],["c"]]],[11,"next","","",17,[[["self"]],["option"]]],[11,"size_hint","","",17,[[["self"]]]],[11,"next","","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,[[["self"]]]],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,[[["self"]]]],[11,"fold","","",19,[[["b"],["f"]],["b"]]],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,[[["self"]]]],[11,"fold","","",20,[[["b"],["f"]],["b"]]],[11,"clone","indexmap::map","",2,[[["self"]],["indexmap"]]],[11,"clone","","",7,[[["self"]],["keys"]]],[11,"clone","","",8,[[["self"]],["values"]]],[11,"clone","","",10,[[["self"]],["iter"]]],[11,"clone","indexmap::set","",5,[[["self"]],["indexset"]]],[11,"clone","","",15,[[["self"]],["self"]]],[11,"clone","","",17,[[["self"]],["self"]]],[11,"clone","","",18,[[["self"]],["self"]]],[11,"clone","","",19,[[["self"]],["self"]]],[11,"clone","","",20,[[["self"]],["self"]]],[11,"default","indexmap::map","Return an empty `IndexMap`",2,[[],["self"]]],[11,"default","indexmap::set","Return an empty `IndexSet`",5,[[],["self"]]],[11,"eq","indexmap::map","",2,[[["self"],["indexmap"]],["bool"]]],[11,"eq","indexmap::set","",5,[[["indexset"],["self"]],["bool"]]],[11,"fmt","indexmap::map","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","indexmap::set","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"index","indexmap::map","Panics if `key` is not present in the map.",2,[[["self"],["q"]],["v"]]],[11,"index_mut","","Panics if `key` is not present in the map.",2,[[["self"],["q"]],["v"]]],[11,"from_iter","","Create an `IndexMap` from the sequence of key-value pairs…",2,[[["intoiterator"]],["self"]]],[11,"from_iter","indexmap::set","",5,[[["intoiterator"]],["self"]]]],"p":[[4,"Entry"],[8,"MutableKeys"],[3,"IndexMap"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"IndexSet"],[8,"Equivalent"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"Drain"],[3,"Difference"],[3,"Intersection"],[3,"SymmetricDifference"],[3,"Union"]]};
searchIndex["itertools"] = {"doc":"Extra iterator adaptors, functions and macros.","i":[[4,"Either","itertools","The enum `Either` with variants `Left` and `Right` is a…",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[4,"Diff","","A type returned by the `diff_with` function.",null,null],[13,"FirstMismatch","","The index of the first non-matching element along with…",1,null],[13,"Shorter","","The total number of elements that were in `J` along with…",1,null],[13,"Longer","","The total number of elements that were in `I` along with…",1,null],[4,"MinMaxResult","","`MinMaxResult` is an enum returned by `minmax`. See…",null,null],[13,"NoElements","","Empty iterator",2,null],[13,"OneElement","","Iterator with one element, so the minimum and maximum are…",2,null],[13,"MinMax","","More than one element in the iterator, the first element…",2,null],[4,"Position","","A value yielded by `WithPosition`. Indicates the position…",null,null],[13,"First","","This is the first element.",3,null],[13,"Middle","","This is neither the first nor the last element.",3,null],[13,"Last","","This is the last element.",3,null],[13,"Only","","This is the only element.",3,null],[4,"EitherOrBoth","","Value that either holds a single A or B, or both.",null,null],[13,"Both","","Both values are present.",4,null],[13,"Left","","Only the left value of type `A` is present.",4,null],[13,"Right","","Only the right value of type `B` is present.",4,null],[4,"FoldWhile","","An enum used for controlling the execution of…",null,null],[13,"Continue","","Continue folding with this value",5,null],[13,"Done","","Fold is complete and will return this value",5,null],[5,"concat","","Combine all an iterator's elements into one element by…",null,[[["i"]]]],[5,"cons_tuples","","Create an iterator that maps for example iterators of…",null,[[["i"]],["constuples"]]],[5,"diff_with","","Compares every element yielded by both `i` and `j` with…",null,[[["j"],["i"],["f"]],[["diff"],["option",["diff"]]]]],[5,"kmerge_by","","Create an iterator that merges elements of the contained…",null,[[["i"],["f"]],["kmergeby"]]],[5,"process_results","","“Lift” a function of the values of an iterator so that it…",null,[[["i"],["f"]],["result"]]],[5,"repeat_n","","Create an iterator that produces `n` repetitions of…",null,[[["a"],["usize"]],["repeatn"]]],[5,"repeat_call","","An iterator source that produces elements indefinitely by…",null,[[["f"]],["repeatcall"]]],[5,"unfold","","Creates a new unfold source with the specified closure as…",null,[[["f"],["st"]],["unfold"]]],[5,"iterate","","Creates a new iterator that infinitely applies function to…",null,[[["f"],["st"]],["iterate"]]],[5,"multizip","","An iterator that generalizes .zip() and allows running…",null,[[["u"]],["zip"]]],[5,"interleave","","Create an iterator that interleaves elements in `i` and `j`.",null,[[["j"],["i"]],["interleave"]]],[5,"merge","","Create an iterator that merges elements in `i` and `j`.",null,[[["j"],["i"]],["merge"]]],[5,"put_back","","Create an iterator where you can put back a single item",null,[[["i"]],["putback"]]],[5,"put_back_n","","Create an iterator where you can put back multiple values…",null,[[["i"]],["putbackn"]]],[5,"multipeek","","An iterator adaptor that allows the user to peek at…",null,[[["i"]],["multipeek"]]],[5,"kmerge","","Create an iterator that merges elements of the contained…",null,[[["i"]],["kmerge"]]],[5,"zip_eq","","Iterate `i` and `j` in lock step.",null,[[["j"],["i"]],["zipeq"]]],[5,"merge_join_by","","Return an iterator adaptor that merge-joins items from the…",null,[[["j"],["i"],["f"]],["mergejoinby"]]],[5,"rciter","","Return an iterator inside a `Rc<RefCell<_>>` wrapper.",null,[[["i"]],["rciter"]]],[5,"enumerate","","Iterate `iterable` with a running index.",null,[[["i"]],["enumerate"]]],[5,"rev","","Iterate `iterable` in reverse.",null,[[["i"]],["rev"]]],[5,"zip","","Iterate `i` and `j` in lock step.",null,[[["j"],["i"]],["zip"]]],[5,"chain","","Create an iterator that first iterates `i` and then `j`.",null,[[["j"],["i"]],["chain"]]],[5,"cloned","","Create an iterator that clones each element from &T to T",null,[[["i"]],["cloned"]]],[5,"fold","","Perform a fold operation over the iterable.",null,[[["i"],["b"],["f"]],["b"]]],[5,"all","","Test whether the predicate holds for all elements in the…",null,[[["i"],["f"]],["bool"]]],[5,"any","","Test whether the predicate holds for any elements in the…",null,[[["i"],["f"]],["bool"]]],[5,"max","","Return the maximum value of the iterable.",null,[[["i"]],["option"]]],[5,"min","","Return the minimum value of the iterable.",null,[[["i"]],["option"]]],[5,"join","","Combine all iterator elements into one String, seperated…",null,[[["str"],["i"]],["string"]]],[5,"sorted","","Sort all iterator elements into a new iterator in…",null,[[["i"]],["intoiter"]]],[5,"equal","","Return `true` if both iterables produce equal sequences…",null,[[["j"],["i"]],["bool"]]],[5,"assert_equal","","Assert that two iterables produce equal sequences, with…",null,[[["j"],["i"]]]],[5,"partition","","Partition a sequence using predicate `pred` so that…",null,[[["i"],["f"]],["usize"]]],[0,"structs","","The concrete iterator types.",null,null],[3,"DedupBy","itertools::structs","An iterator adaptor that removes repeated duplicates,…",null,null],[3,"Interleave","","An iterator adaptor that alternates elements from two…",null,null],[3,"InterleaveShortest","","An iterator adaptor that alternates elements from the two…",null,null],[3,"Product","","An iterator adaptor that iterates over the cartesian…",null,null],[3,"PutBack","","An iterator adaptor that allows putting back a single item…",null,null],[3,"Batching","","A “meta iterator adaptor”. Its closure receives a…",null,null],[3,"MapInto","","An iterator adapter to apply `Into` conversion to each…",null,null],[3,"MapResults","","An iterator adapter to apply a transformation within a…",null,null],[3,"MergeBy","","An iterator adaptor that merges the two base iterators in…",null,null],[3,"TakeWhileRef","","An iterator adaptor that borrows from a `Clone`-able…",null,null],[3,"WhileSome","","An iterator adaptor that filters `Option<A>` iterator…",null,null],[3,"Coalesce","","An iterator adaptor that may join together adjacent…",null,null],[3,"TupleCombinations","","An iterator to iterate through all combinations in a…",null,null],[3,"Positions","","An iterator adapter to get the positions of each element…",null,null],[3,"Update","","An iterator adapter to apply a mutating function to each…",null,null],[3,"Step","","An iterator adaptor that steps a number elements in the…",null,null],[3,"MultiProduct","","An iterator adaptor that iterates over the cartesian…",null,null],[3,"Combinations","","An iterator to iterate through all the `k`-length…",null,null],[3,"CombinationsWithReplacement","","An iterator to iterate through all the `n`-length…",null,null],[3,"ConsTuples","","An iterator that maps an iterator of tuples like `((A, B),…",null,null],[3,"ExactlyOneError","","Iterator returned for the error case of…",null,null],[3,"Format","","Format all iterator elements lazily, separated by `sep`.",null,null],[3,"FormatWith","","Format all iterator elements lazily, separated by `sep`.",null,null],[3,"IntoChunks","","`ChunkLazy` is the storage for a lazy chunking operation.",null,null],[3,"Chunk","","An iterator for the elements in a single chunk.",null,null],[3,"Chunks","","An iterator that yields the Chunk iterators.",null,null],[3,"GroupBy","","`GroupBy` is the storage for the lazy grouping operation.",null,null],[3,"Group","","An iterator for the elements in a single group.",null,null],[3,"Groups","","An iterator that yields the Group iterators.",null,null],[3,"Intersperse","","An iterator adaptor to insert a particular value between…",null,null],[3,"KMergeBy","","An iterator adaptor that merges an abitrary number of base…",null,null],[3,"MergeJoinBy","","An iterator adaptor that merge-joins items from the two…",null,null],[3,"MultiPeek","","See `multipeek()` for more information.",null,null],[3,"PadUsing","","An iterator adaptor that pads a sequence to a minimum…",null,null],[3,"PeekingTakeWhile","","An iterator adaptor that takes items while a closure…",null,null],[3,"Permutations","","An iterator adaptor that iterates through all the…",null,null],[3,"ProcessResults","","An iterator that produces only the `T` values as long as…",null,null],[3,"PutBackN","","An iterator adaptor that allows putting multiple items in…",null,null],[3,"RcIter","","A wrapper for `Rc<RefCell<I>>`, that implements the…",null,null],[12,"rciter","","The boxed iterator.",6,null],[3,"RepeatN","","An iterator that produces n repetitions of an element.",null,null],[3,"RepeatCall","","See `repeat_call` for more information.",null,null],[3,"Unfold","","See `unfold` for more information.",null,null],[12,"state","","Internal state that will be passed to the closure on the…",7,null],[3,"Iterate","","An iterator that infinitely applies function to value and…",null,null],[3,"Tee","","One half of an iterator pair where both return the same…",null,null],[3,"TupleBuffer","","An iterator over a incomplete tuple.",null,null],[3,"TupleWindows","","An iterator over all contiguous windows that produces…",null,null],[3,"Tuples","","An iterator that groups the items in tuples of a specific…",null,null],[3,"Unique","","An iterator adapter to filter out duplicate elements.",null,null],[3,"UniqueBy","","An iterator adapter to filter out duplicate elements.",null,null],[3,"WithPosition","","An iterator adaptor that wraps each element in an…",null,null],[3,"ZipEq","","An iterator which iterates two other iterators…",null,null],[3,"ZipLongest","","An iterator which iterates two other iterators…",null,null],[3,"Zip","","See `multizip` for more information.",null,null],[6,"Dedup","","An iterator adaptor that removes repeated duplicates.",null,null],[6,"Merge","","An iterator adaptor that merges the two base iterators in…",null,null],[6,"KMerge","","An iterator adaptor that merges an abitrary number of base…",null,null],[0,"traits","itertools","Traits helpful for using certain `Itertools` methods in…",null,null],[8,"HomogeneousTuple","itertools::traits","Implemented for homogeneous tuples of size up to 4.",null,null],[11,"with_value","itertools::structs","put back value `value` (builder method)",8,[[],["self"]]],[11,"into_parts","","Split the `PutBack` into its parts.",8,[[]]],[11,"put_back","","Put back a single value to the front of the iterator.",8,[[["self"]]]],[11,"has_left","itertools","If `Left`, or `Both`, return true, otherwise, return false.",4,[[["self"]],["bool"]]],[11,"has_right","","If `Right`, or `Both`, return true, otherwise, return false.",4,[[["self"]],["bool"]]],[11,"is_left","","If Left, return true otherwise, return false. Exclusive…",4,[[["self"]],["bool"]]],[11,"is_right","","If Right, return true otherwise, return false. Exclusive…",4,[[["self"]],["bool"]]],[11,"is_both","","If Right, return true otherwise, return false. Equivalent…",4,[[["self"]],["bool"]]],[11,"left","","If `Left`, or `Both`, return `Some` with the left value,…",4,[[],["option"]]],[11,"right","","If `Right`, or `Both`, return `Some` with the right value,…",4,[[],["option"]]],[11,"both","","If Both, return `Some` tuple containing left and right.",4,[[],["option"]]],[11,"as_ref","","Converts from `&EitherOrBoth<A, B>` to `EitherOrBoth<&A,…",4,[[["self"]],[["eitherorboth"],["a"],["b"]]]],[11,"as_mut","","Converts from `&mut EitherOrBoth<A, B>` to…",4,[[["self"]],[["eitherorboth"],["a"],["b"]]]],[11,"flip","","Convert `EitherOrBoth<A, B>` to `EitherOrBoth<B, A>`.",4,[[],["eitherorboth"]]],[11,"map_left","","Apply the function `f` on the value `a` in `Left(a)` or…",4,[[["f"]],["eitherorboth"]]],[11,"map_right","","Apply the function `f` on the value `b` in `Right(b)` or…",4,[[["f"]],["eitherorboth"]]],[11,"map_any","","Apply the functions `f` and `g` on the value `a` and `b`…",4,[[["f"],["g"]],["eitherorboth"]]],[11,"left_and_then","","Apply the function `f` on the value `b` in `Right(b)` or…",4,[[["f"]],["eitherorboth"]]],[11,"right_and_then","","Apply the function `f` on the value `a` in `Left(a)` or…",4,[[["f"]],["eitherorboth"]]],[11,"reduce","","Return either value of left, right, or the product of `f`…",4,[[["f"]],["t"]]],[11,"into_option","","`into_option` creates an `Option` of type `(T, T)`. The…",2,[[],["option"]]],[11,"reset_peek","itertools::structs","Reset the peeking “cursor”",9,[[["self"]]]],[11,"peek","","Works exactly like `.next()` with the only difference that…",9,[[["self"]],["option"]]],[11,"put_back","","Puts x in front of the iterator. The values are yielded in…",10,[[["self"]]]],[11,"into_buffer","","Return a buffer with the produced items that was not…",11,[[],["tuplebuffer"]]],[11,"into_inner","itertools","Return the inner value.",3,[[],["t"]]],[8,"PeekingNext","","An iterator that allows peeking at an element before…",null,null],[10,"peeking_next","","Pass a reference to the next iterator element to the…",12,[[["self"],["f"]],["option"]]],[8,"Itertools","","An [`Iterator`] blanket implementation that provides extra…",null,null],[11,"interleave","","Alternate elements from two iterators until both have run…",13,[[["j"]],["interleave"]]],[11,"interleave_shortest","","Alternate elements from two iterators until at least one…",13,[[["j"]],["interleaveshortest"]]],[11,"intersperse","","An iterator adaptor to insert a particular value between…",13,[[],["intersperse"]]],[11,"zip_longest","","Create an iterator which iterates over both this and the…",13,[[["j"]],["ziplongest"]]],[11,"zip_eq","","Create an iterator which iterates over both this and the…",13,[[["j"]],["zipeq"]]],[11,"batching","","A “meta iterator adaptor”. Its closure receives a…",13,[[["f"]],["batching"]]],[11,"group_by","","Return an iterable that can group iterator elements.…",13,[[["f"]],["groupby"]]],[11,"chunks","","Return an iterable that can chunk the iterator.",13,[[["usize"]],["intochunks"]]],[11,"tuple_windows","","Return an iterator over all contiguous windows producing…",13,[[],["tuplewindows"]]],[11,"tuples","","Return an iterator that groups the items in tuples of a…",13,[[],["tuples"]]],[11,"tee","","Split into an iterator pair that both yield all elements…",13,[[]]],[11,"step","","Return an iterator adaptor that steps `n` elements in the…",13,[[["usize"]],["step"]]],[11,"map_into","","Convert each item of the iterator using the `Into` trait.",13,[[],["mapinto"]]],[11,"map_results","","Return an iterator adaptor that applies the provided…",13,[[["f"]],["mapresults"]]],[11,"merge","","Return an iterator adaptor that merges the two base…",13,[[["j"]],["merge"]]],[11,"merge_by","","Return an iterator adaptor that merges the two base…",13,[[["j"],["f"]],["mergeby"]]],[11,"merge_join_by","","Create an iterator that merges items from both this and…",13,[[["j"],["f"]],["mergejoinby"]]],[11,"kmerge","","Return an iterator adaptor that flattens an iterator of…",13,[[],["kmerge"]]],[11,"kmerge_by","","Return an iterator adaptor that flattens an iterator of…",13,[[["f"]],["kmergeby"]]],[11,"cartesian_product","","Return an iterator adaptor that iterates over the…",13,[[["j"]],["product"]]],[11,"multi_cartesian_product","","Return an iterator adaptor that iterates over the…",13,[[],["multiproduct"]]],[11,"coalesce","","Return an iterator adaptor that uses the passed-in closure…",13,[[["f"]],["coalesce"]]],[11,"dedup","","Remove duplicates from sections of consecutive identical…",13,[[],["dedup"]]],[11,"dedup_by","","Remove duplicates from sections of consecutive identical…",13,[[["cmp"]],["dedupby"]]],[11,"unique","","Return an iterator adaptor that filters out elements that…",13,[[],["unique"]]],[11,"unique_by","","Return an iterator adaptor that filters out elements that…",13,[[["f"]],["uniqueby"]]],[11,"peeking_take_while","","Return an iterator adaptor that borrows from this iterator…",13,[[["self"],["f"]],["peekingtakewhile"]]],[11,"take_while_ref","","Return an iterator adaptor that borrows from a…",13,[[["self"],["f"]],["takewhileref"]]],[11,"while_some","","Return an iterator adaptor that filters `Option<A>`…",13,[[],["whilesome"]]],[11,"tuple_combinations","","Return an iterator adaptor that iterates over the…",13,[[],["tuplecombinations"]]],[11,"combinations","","Return an iterator adaptor that iterates over the…",13,[[["usize"]],["combinations"]]],[11,"combinations_with_replacement","","Return an iterator that iterates over the `k`-length…",13,[[["usize"]],["combinationswithreplacement"]]],[11,"permutations","","Return an iterator adaptor that iterates over all…",13,[[["usize"]],["permutations"]]],[11,"pad_using","","Return an iterator adaptor that pads the sequence to a…",13,[[["usize"],["f"]],["padusing"]]],[11,"with_position","","Return an iterator adaptor that wraps each element in a…",13,[[],["withposition"]]],[11,"positions","","Return an iterator adaptor that yields the indices of all…",13,[[["p"]],["positions"]]],[11,"update","","Return an iterator adaptor that applies a mutating…",13,[[["f"]],["update"]]],[11,"next_tuple","","Advances the iterator and returns the next items grouped…",13,[[["self"]],["option"]]],[11,"collect_tuple","","Collects all items from the iterator into a tuple of a…",13,[[],["option"]]],[11,"find_position","","Find the position and value of the first element…",13,[[["self"],["p"]],["option"]]],[11,"all_equal","","Check whether all elements compare equal.",13,[[["self"]],["bool"]]],[11,"dropping","","Consume the first `n` elements from the iterator eagerly,…",13,[[["usize"]],["self"]]],[11,"dropping_back","","Consume the last `n` elements from the iterator eagerly,…",13,[[["usize"]],["self"]]],[11,"foreach","","Run the closure `f` eagerly on each element of the iterator.",13,[[["f"]]]],[11,"concat","","Combine all an iterator's elements into one element by…",13,[[]]],[11,"collect_vec","","`.collect_vec()` is simply a type specialization of…",13,[[],["vec"]]],[11,"try_collect","","`.try_collect()` is more convenient way of writing…",13,[[],["result"]]],[11,"set_from","","Assign to each reference in `self` from the `from`…",13,[[["j"],["self"]],["usize"]]],[11,"join","","Combine all iterator elements into one String, separated…",13,[[["str"],["self"]],["string"]]],[11,"format","","Format all iterator elements, separated by `sep`.",13,[[["str"]],["format"]]],[11,"format_with","","Format all iterator elements, separated by `sep`.",13,[[["str"],["f"]],["formatwith"]]],[11,"fold_results","","Fold `Result` values from an iterator.",13,[[["self"],["b"],["f"]],["result"]]],[11,"fold_options","","Fold `Option` values from an iterator.",13,[[["self"],["b"],["f"]],["option"]]],[11,"fold1","","Accumulator of the elements in the iterator.",13,[[["f"]],["option"]]],[11,"tree_fold1","","Accumulate the elements in the iterator in a tree-like…",13,[[["f"]],["option"]]],[11,"fold_while","","An iterator method that applies a function, producing a…",13,[[["self"],["b"],["f"]],["foldwhile"]]],[11,"sum1","","Iterate over the entire iterator and add all the elements.",13,[[],["option"]]],[11,"product1","","Iterate over the entire iterator and multiply all the…",13,[[],["option"]]],[11,"sorted","","Sort all iterator elements into a new iterator in…",13,[[],["intoiter"]]],[11,"sorted_by","","Sort all iterator elements into a new iterator in…",13,[[["f"]],["intoiter"]]],[11,"sorted_by_key","","Sort all iterator elements into a new iterator in…",13,[[["f"]],["intoiter"]]],[11,"partition_map","","Collect all iterator elements into one of two partitions.…",13,[[["f"]]]],[11,"into_group_map","","Return a `HashMap` of keys mapped to `Vec`s of values.…",13,[[],[["hashmap",["vec"]],["vec"]]]],[11,"minmax","","Return the minimum and maximum elements in the iterator.",13,[[],["minmaxresult"]]],[11,"minmax_by_key","","Return the minimum and maximum element of an iterator, as…",13,[[["f"]],["minmaxresult"]]],[11,"minmax_by","","Return the minimum and maximum element of an iterator, as…",13,[[["f"]],["minmaxresult"]]],[11,"position_max","","Return the position of the maximum element in the iterator.",13,[[],[["usize"],["option",["usize"]]]]],[11,"position_max_by_key","","Return the position of the maximum element in the…",13,[[["f"]],[["usize"],["option",["usize"]]]]],[11,"position_max_by","","Return the position of the maximum element in the…",13,[[["f"]],[["usize"],["option",["usize"]]]]],[11,"position_min","","Return the position of the minimum element in the iterator.",13,[[],[["usize"],["option",["usize"]]]]],[11,"position_min_by_key","","Return the position of the minimum element in the…",13,[[["f"]],[["usize"],["option",["usize"]]]]],[11,"position_min_by","","Return the position of the minimum element in the…",13,[[["f"]],[["usize"],["option",["usize"]]]]],[11,"position_minmax","","Return the positions of the minimum and maximum elements…",13,[[],[["minmaxresult",["usize"]],["usize"]]]],[11,"position_minmax_by_key","","Return the postions of the minimum and maximum elements of…",13,[[["f"]],[["minmaxresult",["usize"]],["usize"]]]],[11,"position_minmax_by","","Return the postions of the minimum and maximum elements of…",13,[[["f"]],[["minmaxresult",["usize"]],["usize"]]]],[11,"exactly_one","","If the iterator yields exactly one element, that element…",13,[[],[["result",["exactlyoneerror"]],["exactlyoneerror"]]]],[11,"into_inner","","Return the value in the continue or done.",5,[[],["t"]]],[11,"is_done","","Return true if `self` is `Done`, false if it is `Continue`.",5,[[["self"]],["bool"]]],[14,"iproduct","","Create an iterator over the “cartesian product” of…",null,null],[14,"izip","","Create an iterator running multiple iterators in lockstep.",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","itertools::structs","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"into_iter","","",14,[[],["i"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"into_iter","","",15,[[],["i"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"into_iter","","",16,[[],["i"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"into_iter","","",17,[[],["i"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"into_iter","","",8,[[],["i"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"into_iter","","",18,[[],["i"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"into_iter","","",19,[[],["i"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"into_iter","","",20,[[],["i"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"into_iter","","",21,[[],["i"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"into_iter","","",22,[[],["i"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"into_iter","","",23,[[],["i"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"into_iter","","",24,[[],["i"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"into_iter","","",25,[[],["i"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"into_iter","","",26,[[],["i"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"into_iter","","",27,[[],["i"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"into_iter","","",28,[[],["i"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"into_iter","","",29,[[],["i"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"into_iter","","",30,[[],["i"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"into_iter","","",31,[[],["i"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"into_iter","","",32,[[],["i"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"into_iter","","",33,[[],["i"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"to_string","","",34,[[["self"]],["string"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"to_string","","",35,[[["self"]],["string"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"into_iter","","",37,[[],["i"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"into_iter","","",38,[[],["i"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"into_iter","","",40,[[],["i"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"into_iter","","",41,[[],["i"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"into_iter","","",42,[[],["i"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"into_iter","","",43,[[],["i"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"into_iter","","",44,[[],["i"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"into_iter","","",9,[[],["i"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"into_iter","","",45,[[],["i"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"into_iter","","",46,[[],["i"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"into_iter","","",47,[[],["i"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"into_iter","","",48,[[],["i"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"into_iter","","",6,[[],["i"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"into_iter","","",49,[[],["i"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"into_iter","","",50,[[],["i"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"into_iter","","",51,[[],["i"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"into_iter","","",52,[[],["i"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"into_iter","","",53,[[],["i"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"into_iter","","",54,[[],["i"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"into_iter","","",11,[[],["i"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"into_iter","","",55,[[],["i"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"into_iter","","",56,[[],["i"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"into_iter","","",57,[[],["i"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"into_iter","","",58,[[],["i"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"into_iter","","",59,[[],["i"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"into_iter","","",60,[[],["i"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"description","itertools","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],[["error"],["option",["error"]]]]],[11,"as_mut","","",0,[[["self"]],["osstr"]]],[11,"as_mut","","",0,[[["self"]],["target"]]],[11,"as_mut","","",0,[[["self"]],["path"]]],[11,"as_mut","","",0,[[["self"]],["cstr"]]],[11,"as_mut","","",0,[[["self"]],["str"]]],[11,"as_mut","","",0,[[["self"]]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,[[["self"]]]],[11,"fold","","",0,[[["acc"],["g"]],["acc"]]],[11,"count","","",0,[[],["usize"]]],[11,"last","","",0,[[],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"deref_mut","","",0,[[["self"]]]],[11,"extend","","",0,[[["self"],["t"]]]],[11,"cmp","","",0,[[["either"],["self"]],["ordering"]]],[11,"fill_buf","","",0,[[["self"]],[["error"],["result",["error"]]]]],[11,"consume","","",0,[[["self"],["usize"]]]],[11,"clone","","",0,[[["self"]],["either"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"read","","",0,[[["self"]],[["result",["usize","error"]],["error"],["usize"]]]],[11,"read_to_end","","",0,[[["self"],["vec"]],[["result",["usize","error"]],["error"],["usize"]]]],[11,"eq","","",0,[[["either"],["self"]],["bool"]]],[11,"ne","","",0,[[["either"],["self"]],["bool"]]],[11,"from","","",0,[[["result"]],["either"]]],[11,"into","","",0,[[],["result"]]],[11,"deref","","",0,[[["self"]]]],[11,"as_ref","","",0,[[["self"]],["osstr"]]],[11,"as_ref","","",0,[[["self"]]]],[11,"as_ref","","",0,[[["self"]],["cstr"]]],[11,"as_ref","","",0,[[["self"]],["target"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",0,[[["self"]],["path"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"write","","",0,[[["self"]],[["result",["usize","error"]],["error"],["usize"]]]],[11,"flush","","",0,[[["self"]],[["error"],["result",["error"]]]]],[11,"partial_cmp","","",0,[[["either"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["either"],["self"]],["bool"]]],[11,"le","","",0,[[["either"],["self"]],["bool"]]],[11,"gt","","",0,[[["either"],["self"]],["bool"]]],[11,"ge","","",0,[[["either"],["self"]],["bool"]]],[11,"peeking_next","itertools::structs","",9,[[["self"],["f"]],["option"]]],[11,"peeking_next","","",8,[[["self"],["f"]],["option"]]],[11,"peeking_next","","",10,[[["self"],["f"]],["option"]]],[11,"drop","","",40,[[["self"]]]],[11,"drop","","",37,[[["self"]]]],[11,"from","","",60,[[],["self"]]],[11,"from","","",60,[[],["self"]]],[11,"from","","",60,[[],["self"]]],[11,"from","","",60,[[],["self"]]],[11,"from","","",60,[[],["self"]]],[11,"from","","",60,[[],["self"]]],[11,"from","","",60,[[],["self"]]],[11,"from","","",60,[[],["self"]]],[11,"into","itertools","",4,[[],[["either"],["option",["either"]]]]],[11,"next_back","itertools::structs","",19,[[["self"]],["option"]]],[11,"next_back","","",26,[[["self"]],["option"]]],[11,"next_back","","",27,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",45,[[["self"]],["option"]]],[11,"next_back","","",6,[[["self"]],["option"]]],[11,"next_back","","",49,[[["self"]],["option"]]],[11,"next_back","","",59,[[["self"]],["option"]]],[11,"next","","",29,[[["self"]],["option"]]],[11,"count","","",29,[[],["usize"]]],[11,"size_hint","","",29,[[["self"]]]],[11,"last","","",29,[[],["option"]]],[11,"next","","",15,[[["self"]],["option"]]],[11,"size_hint","","",15,[[["self"]]]],[11,"next","","",16,[[["self"]],["option"]]],[11,"size_hint","","",16,[[["self"]]]],[11,"next","","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,[[["self"]]]],[11,"count","","",8,[[],["usize"]]],[11,"last","","",8,[[],["option"]]],[11,"nth","","",8,[[["self"],["usize"]],["option"]]],[11,"all","","",8,[[["self"],["g"]],["bool"]]],[11,"fold","","",8,[[["acc"],["g"]],["acc"]]],[11,"next","","",17,[[["self"]],["option"]]],[11,"size_hint","","",17,[[["self"]]]],[11,"fold","","",17,[[["acc"],["g"]],["acc"]]],[11,"next","","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,[[["self"]]]],[11,"next","","",28,[[["self"]],["option"]]],[11,"size_hint","","",28,[[["self"]]]],[11,"next","","",21,[[["self"]],["option"]]],[11,"size_hint","","",21,[[["self"]]]],[11,"next","","",24,[[["self"]],["option"]]],[11,"size_hint","","",24,[[["self"]]]],[11,"next","","",14,[[["self"]],["option"]]],[11,"size_hint","","",14,[[["self"]]]],[11,"fold","","",14,[[["acc"],["g"]],["acc"]]],[11,"next","","",22,[[["self"]],["option"]]],[11,"size_hint","","",22,[[["self"]]]],[11,"next","","",23,[[["self"]],["option"]]],[11,"size_hint","","",23,[[["self"]]]],[11,"next","","",25,[[["self"]],["option"]]],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,[[["self"]]]],[11,"fold","","",19,[[["acc"],["fold"]],["acc"]]],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,[[["self"]]]],[11,"fold","","",20,[[["acc"],["fold"]],["acc"]]],[11,"collect","","",20,[[],["c"]]],[11,"next","","",26,[[["self"]],["option"]]],[11,"size_hint","","",26,[[["self"]]]],[11,"next","","",27,[[["self"]],["option"]]],[11,"size_hint","","",27,[[["self"]]]],[11,"fold","","",27,[[["acc"],["g"]],["acc"]]],[11,"collect","","",27,[[],["c"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,[[["self"]]]],[11,"fold","","",32,[[["acc"],["fold"]],["acc"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,[[["self"]]]],[11,"fold","","",32,[[["acc"],["fold"]],["acc"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,[[["self"]]]],[11,"fold","","",32,[[["acc"],["fold"]],["acc"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,[[["self"]]]],[11,"fold","","",32,[[["acc"],["fold"]],["acc"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,[[["self"]]]],[11,"fold","","",32,[[["acc"],["fold"]],["acc"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,[[["self"]]]],[11,"fold","","",32,[[["acc"],["fold"]],["acc"]]],[11,"next","","",30,[[["self"]],["option"]]],[11,"next","","",31,[[["self"]],["option"]]],[11,"next","","",33,[[["self"]],["option"]]],[11,"size_hint","","",33,[[["self"]]]],[11,"next","","",41,[[["self"]],["option"]]],[11,"next","","",40,[[["self"]],["option"]]],[11,"next","","",38,[[["self"]],["option"]]],[11,"next","","",37,[[["self"]],["option"]]],[11,"next","","",42,[[["self"]],["option"]]],[11,"size_hint","","",42,[[["self"]]]],[11,"fold","","",42,[[["b"],["f"]],["b"]]],[11,"next","","",43,[[["self"]],["option"]]],[11,"size_hint","","",43,[[["self"]]]],[11,"next","","",44,[[["self"]],["option"]]],[11,"size_hint","","",44,[[["self"]]]],[11,"count","","",44,[[],["usize"]]],[11,"last","","",44,[[],["option"]]],[11,"nth","","",44,[[["self"],["usize"]],["option"]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,[[["self"]]]],[11,"next","","",45,[[["self"]],["option"]]],[11,"size_hint","","",45,[[["self"]]]],[11,"next","","",46,[[["self"]],["option"]]],[11,"size_hint","","",46,[[["self"]]]],[11,"next","","",47,[[["self"]],["option"]]],[11,"count","","",47,[[],["usize"]]],[11,"size_hint","","",47,[[["self"]]]],[11,"next","","",48,[[["self"]],["option"]]],[11,"size_hint","","",48,[[["self"]]]],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,[[["self"]]]],[11,"next","","",6,[[["self"]],["option"]]],[11,"size_hint","","",6,[[["self"]]]],[11,"next","","",49,[[["self"]],["option"]]],[11,"size_hint","","",49,[[["self"]]]],[11,"next","","",50,[[["self"]],["option"]]],[11,"size_hint","","",50,[[["self"]]]],[11,"next","","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,[[["self"]]]],[11,"next","","",51,[[["self"]],["option"]]],[11,"size_hint","","",51,[[["self"]]]],[11,"next","","",52,[[["self"]],["option"]]],[11,"size_hint","","",52,[[["self"]]]],[11,"next","","",53,[[["self"]],["option"]]],[11,"size_hint","","",53,[[["self"]]]],[11,"next","","",11,[[["self"]],["option"]]],[11,"next","","",54,[[["self"]],["option"]]],[11,"next","","",56,[[["self"]],["option"]]],[11,"size_hint","","",56,[[["self"]]]],[11,"count","","",56,[[],["usize"]]],[11,"next","","",55,[[["self"]],["option"]]],[11,"size_hint","","",55,[[["self"]]]],[11,"count","","",55,[[],["usize"]]],[11,"next","","",57,[[["self"]],["option"]]],[11,"size_hint","","",57,[[["self"]]]],[11,"next","","",58,[[["self"]],["option"]]],[11,"size_hint","","",58,[[["self"]]]],[11,"next","","",59,[[["self"]],["option"]]],[11,"size_hint","","",59,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"clone","","",29,[[["self"]],["multiproduct"]]],[11,"clone","","",15,[[["self"]],["interleave"]]],[11,"clone","","",16,[[["self"]],["interleaveshortest"]]],[11,"clone","","",8,[[["self"]],["putback"]]],[11,"clone","","",17,[[["self"]],["product"]]],[11,"clone","","",18,[[["self"]],["batching"]]],[11,"clone","","",28,[[["self"]],["step"]]],[11,"clone","","",21,[[["self"]],["self"]]],[11,"clone","","",24,[[["self"]],["self"]]],[11,"clone","","",14,[[["self"]],["self"]]],[11,"clone","","",23,[[["self"]],["whilesome"]]],[11,"clone","","",25,[[["self"]],["tuplecombinations"]]],[11,"clone","","",19,[[["self"]],["mapinto"]]],[11,"clone","","",20,[[["self"]],["mapresults"]]],[11,"clone","","",26,[[["self"]],["positions"]]],[11,"clone","","",27,[[["self"]],["update"]]],[11,"clone","itertools","",4,[[["self"]],["eitherorboth"]]],[11,"clone","itertools::structs","",32,[[["self"]],["self"]]],[11,"clone","","",30,[[["self"]],["self"]]],[11,"clone","","",31,[[["self"]],["combinationswithreplacement"]]],[11,"clone","","",33,[[["self"]],["exactlyoneerror"]]],[11,"clone","","",35,[[["self"]],["formatwith"]]],[11,"clone","","",34,[[["self"]],["format"]]],[11,"clone","","",42,[[["self"]],["intersperse"]]],[11,"clone","","",43,[[["self"]],["self"]]],[11,"clone","","",44,[[["self"]],["self"]]],[11,"clone","itertools","",2,[[["self"]],["minmaxresult"]]],[11,"clone","itertools::structs","",9,[[["self"]],["multipeek"]]],[11,"clone","","",45,[[["self"]],["padusing"]]],[11,"clone","","",47,[[["self"]],["self"]]],[11,"clone","","",10,[[["self"]],["putbackn"]]],[11,"clone","","",6,[[["self"]],["self"]]],[11,"clone","","",49,[[["self"]],["repeatn"]]],[11,"clone","","",50,[[["self"]],["repeatcall"]]],[11,"clone","","",7,[[["self"]],["unfold"]]],[11,"clone","","",51,[[["self"]],["iterate"]]],[11,"clone","","",53,[[["self"]],["tuplebuffer"]]],[11,"clone","","",11,[[["self"]],["tuples"]]],[11,"clone","","",54,[[["self"]],["tuplewindows"]]],[11,"clone","","",56,[[["self"]],["uniqueby"]]],[11,"clone","","",55,[[["self"]],["unique"]]],[11,"clone","","",57,[[["self"]],["self"]]],[11,"clone","itertools","",3,[[["self"]],["position"]]],[11,"clone","itertools::structs","",58,[[["self"]],["zipeq"]]],[11,"clone","","",59,[[["self"]],["ziplongest"]]],[11,"clone","","",60,[[["self"]],["zip"]]],[11,"clone","itertools","",5,[[["self"]],["foldwhile"]]],[11,"eq","","",4,[[["eitherorboth"],["self"]],["bool"]]],[11,"ne","","",4,[[["eitherorboth"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["minmaxresult"]],["bool"]]],[11,"ne","","",2,[[["self"],["minmaxresult"]],["bool"]]],[11,"eq","","",3,[[["self"],["position"]],["bool"]]],[11,"ne","","",3,[[["self"],["position"]],["bool"]]],[11,"eq","","",5,[[["self"],["foldwhile"]],["bool"]]],[11,"ne","","",5,[[["self"],["foldwhile"]],["bool"]]],[11,"fmt","itertools::structs","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools::structs","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","itertools","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools::structs","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","itertools","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools::structs","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools::structs","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"hash","itertools","",4,[[["self"],["__h"]]]],[11,"fmt","itertools::structs","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"is_left","itertools","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],[["l"],["r"],["either"]]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],[["r"],["l"],["either"]]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[],["either"]]],[11,"left_or","","Return left value or given value",0,[[["l"]],["l"]]],[11,"left_or_default","","Return left or a default",0,[[],["l"]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[["f"]],["l"]]],[11,"right_or","","Return right value or given value",0,[[["r"]],["r"]]],[11,"right_or_default","","Return right or a default",0,[[],["r"]]],[11,"right_or_else","","Returns right value or computes it from a closure",0,[[["f"]],["r"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[],["t"]]],[11,"map","","Map `f` over the contained value and return the result in…",0,[[["f"]],["either"]]]],"p":[[4,"Either"],[4,"Diff"],[4,"MinMaxResult"],[4,"Position"],[4,"EitherOrBoth"],[4,"FoldWhile"],[3,"RcIter"],[3,"Unfold"],[3,"PutBack"],[3,"MultiPeek"],[3,"PutBackN"],[3,"Tuples"],[8,"PeekingNext"],[8,"Itertools"],[3,"DedupBy"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"Product"],[3,"Batching"],[3,"MapInto"],[3,"MapResults"],[3,"MergeBy"],[3,"TakeWhileRef"],[3,"WhileSome"],[3,"Coalesce"],[3,"TupleCombinations"],[3,"Positions"],[3,"Update"],[3,"Step"],[3,"MultiProduct"],[3,"Combinations"],[3,"CombinationsWithReplacement"],[3,"ConsTuples"],[3,"ExactlyOneError"],[3,"Format"],[3,"FormatWith"],[3,"IntoChunks"],[3,"Chunk"],[3,"Chunks"],[3,"GroupBy"],[3,"Group"],[3,"Groups"],[3,"Intersperse"],[3,"KMergeBy"],[3,"MergeJoinBy"],[3,"PadUsing"],[3,"PeekingTakeWhile"],[3,"Permutations"],[3,"ProcessResults"],[3,"RepeatN"],[3,"RepeatCall"],[3,"Iterate"],[3,"Tee"],[3,"TupleBuffer"],[3,"TupleWindows"],[3,"Unique"],[3,"UniqueBy"],[3,"WithPosition"],[3,"ZipEq"],[3,"ZipLongest"],[3,"Zip"]]};
searchIndex["itoa"] = {"doc":"This crate provides fast functions for printing integer…","i":[[3,"Buffer","itoa","A safe API for formatting integers to text.",null,null],[5,"write","","Write integer to an `io::Write`.",null,[[["integer"],["write"]],[["result",["usize"]],["usize"]]]],[5,"fmt","","Write integer to an `fmt::Write`.",null,[[["write"],["integer"]],["result"]]],[8,"Integer","","An integer that can be formatted by `itoa::write` and…",null,null],[11,"new","","This is a cheap operation; you don't need to worry about…",0,[[],["buffer"]]],[11,"format","","Print an integer into this buffer and return a reference…",0,[[["self"],["integer"]],["str"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["self"]]],[11,"default","","",0,[[],["buffer"]]]],"p":[[3,"Buffer"]]};
searchIndex["jobserver"] = {"doc":"An implementation of the GNU make jobserver.","i":[[3,"Client","jobserver","A client of a jobserver",null,null],[3,"Acquired","","An acquired token from a jobserver.",null,null],[3,"HelperThread","","Structure returned from `Client::into_helper_thread` to…",null,null],[11,"drop_without_releasing","","This drops the `Acquired` token without releasing the…",0,[[]]],[11,"new","","Creates a new jobserver initialized with the given…",1,[[["usize"]],[["client"],["result",["client"]]]]],[11,"from_env","","Attempts to connect to the jobserver specified in this…",1,[[],[["client"],["option",["client"]]]]],[11,"acquire","","Acquires a token from this jobserver client.",1,[[["self"]],[["acquired"],["result",["acquired"]]]]],[11,"configure","","Configures a child process to have access to this client's…",1,[[["command"],["self"]]]],[11,"into_helper_thread","","Converts this `Client` into a helper thread to deal with a…",1,[[["f"]],[["result",["helperthread"]],["helperthread"]]]],[11,"acquire_raw","","Blocks the current thread until a token is acquired.",1,[[["self"]],["result"]]],[11,"release_raw","","Releases a jobserver token back to the original jobserver.",1,[[["self"]],["result"]]],[11,"request_token","","Request that the helper thread acquires a token,…",2,[[["self"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"drop","","",0,[[["self"]]]],[11,"drop","","",2,[[["self"]]]],[11,"clone","","",1,[[["self"]],["client"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Acquired"],[3,"Client"],[3,"HelperThread"]]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","i":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes…",null,[[["t"]]]],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy…",null,null],[14,"lazy_static","","",null,null]],"p":[]};
searchIndex["lazycell"] = {"doc":"This crate provides a `LazyCell` struct which acts as a…","i":[[3,"LazyCell","lazycell","A lazily filled `Cell`, with mutable contents.",null,null],[3,"AtomicLazyCell","","A lazily filled and thread-safe `Cell`, with frozen…",null,null],[11,"new","","Creates a new, empty, `LazyCell`.",0,[[],["lazycell"]]],[11,"fill","","Put a value into this cell.",0,[[["self"],["t"]],["result"]]],[11,"replace","","Put a value into this cell.",0,[[["self"],["t"]],["option"]]],[11,"filled","","Test whether this cell has been previously filled.",0,[[["self"]],["bool"]]],[11,"borrow","","Borrows the contents of this lazy cell for the duration of…",0,[[["self"]],[["t"],["option"]]]],[11,"borrow_mut","","Borrows the contents of this lazy cell mutably for the…",0,[[["self"]],[["t"],["option"]]]],[11,"borrow_with","","Borrows the contents of this lazy cell for the duration of…",0,[[["fnonce"],["self"]],["t"]]],[11,"borrow_mut_with","","Borrows the contents of this `LazyCell` mutably for the…",0,[[["fnonce"],["self"]],["t"]]],[11,"try_borrow_with","","Same as `borrow_with`, but allows the initializing…",0,[[["self"],["f"]],[["t"],["result"]]]],[11,"try_borrow_mut_with","","Same as `borrow_mut_with`, but allows the initializing…",0,[[["self"],["f"]],[["result"],["t"]]]],[11,"into_inner","","Consumes this `LazyCell`, returning the underlying value.",0,[[],["option"]]],[11,"get","","Returns a copy of the contents of the lazy cell.",0,[[["self"]],["option"]]],[18,"NONE","","An empty `AtomicLazyCell`.",1,null],[11,"new","","Creates a new, empty, `AtomicLazyCell`.",1,[[],["atomiclazycell"]]],[11,"fill","","Put a value into this cell.",1,[[["self"],["t"]],["result"]]],[11,"replace","","Put a value into this cell.",1,[[["self"],["t"]],["option"]]],[11,"filled","","Test whether this cell has been previously filled.",1,[[["self"]],["bool"]]],[11,"borrow","","Borrows the contents of this lazy cell for the duration of…",1,[[["self"]],[["t"],["option"]]]],[11,"into_inner","","Consumes this `LazyCell`, returning the underlying value.",1,[[],["option"]]],[11,"get","","Returns a copy of the contents of the lazy cell.",1,[[["self"]],["option"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"clone","","Create a clone of this `LazyCell`",0,[[["self"]],["lazycell"]]],[11,"clone","","Create a clone of this `AtomicLazyCell`",1,[[["self"]],["atomiclazycell"]]],[11,"default","","",0,[[],["lazycell"]]],[11,"default","","",1,[[],["atomiclazycell"]]]],"p":[[3,"LazyCell"],[3,"AtomicLazyCell"]]};
searchIndex["libc"] = {"doc":"libc - Raw FFI bindings to platforms' system libraries","i":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",null,null],[3,"group","","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",6,null],[12,"ipv6mr_interface","","",6,null],[3,"hostent","","",null,null],[12,"h_name","","",7,null],[12,"h_aliases","","",7,null],[12,"h_addrtype","","",7,null],[12,"h_length","","",7,null],[12,"h_addr_list","","",7,null],[3,"iovec","","",null,null],[12,"iov_base","","",8,null],[12,"iov_len","","",8,null],[3,"pollfd","","",null,null],[12,"fd","","",9,null],[12,"events","","",9,null],[12,"revents","","",9,null],[3,"winsize","","",null,null],[12,"ws_row","","",10,null],[12,"ws_col","","",10,null],[12,"ws_xpixel","","",10,null],[12,"ws_ypixel","","",10,null],[3,"linger","","",null,null],[12,"l_onoff","","",11,null],[12,"l_linger","","",11,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",12,null],[3,"itimerval","","",null,null],[12,"it_interval","","",13,null],[12,"it_value","","",13,null],[3,"tms","","",null,null],[12,"tms_utime","","",14,null],[12,"tms_stime","","",14,null],[12,"tms_cutime","","",14,null],[12,"tms_cstime","","",14,null],[3,"servent","","",null,null],[12,"s_name","","",15,null],[12,"s_aliases","","",15,null],[12,"s_port","","",15,null],[12,"s_proto","","",15,null],[3,"protoent","","",null,null],[12,"p_name","","",16,null],[12,"p_aliases","","",16,null],[12,"p_proto","","",16,null],[3,"in_addr","","",null,null],[12,"s_addr","","",17,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",18,null],[12,"imr_interface","","",18,null],[3,"ip_mreq_source","","",null,null],[12,"imr_multiaddr","","",19,null],[12,"imr_interface","","",19,null],[12,"imr_sourceaddr","","",19,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",20,null],[12,"sa_data","","",20,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",21,null],[12,"sin_port","","",21,null],[12,"sin_addr","","",21,null],[12,"sin_zero","","",21,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",22,null],[12,"sin6_port","","",22,null],[12,"sin6_flowinfo","","",22,null],[12,"sin6_addr","","",22,null],[12,"sin6_scope_id","","",22,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",23,null],[12,"ai_family","","",23,null],[12,"ai_socktype","","",23,null],[12,"ai_protocol","","",23,null],[12,"ai_addrlen","","",23,null],[12,"ai_addr","","",23,null],[12,"ai_canonname","","",23,null],[12,"ai_next","","",23,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",24,null],[12,"sll_protocol","","",24,null],[12,"sll_ifindex","","",24,null],[12,"sll_hatype","","",24,null],[12,"sll_pkttype","","",24,null],[12,"sll_halen","","",24,null],[12,"sll_addr","","",24,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",25,null],[12,"tm_min","","",25,null],[12,"tm_hour","","",25,null],[12,"tm_mday","","",25,null],[12,"tm_mon","","",25,null],[12,"tm_year","","",25,null],[12,"tm_wday","","",25,null],[12,"tm_yday","","",25,null],[12,"tm_isdst","","",25,null],[12,"tm_gmtoff","","",25,null],[12,"tm_zone","","",25,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",26,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",27,null],[12,"dli_fbase","","",27,null],[12,"dli_sname","","",27,null],[12,"dli_saddr","","",27,null],[3,"lconv","","",null,null],[12,"decimal_point","","",28,null],[12,"thousands_sep","","",28,null],[12,"grouping","","",28,null],[12,"int_curr_symbol","","",28,null],[12,"currency_symbol","","",28,null],[12,"mon_decimal_point","","",28,null],[12,"mon_thousands_sep","","",28,null],[12,"mon_grouping","","",28,null],[12,"positive_sign","","",28,null],[12,"negative_sign","","",28,null],[12,"int_frac_digits","","",28,null],[12,"frac_digits","","",28,null],[12,"p_cs_precedes","","",28,null],[12,"p_sep_by_space","","",28,null],[12,"n_cs_precedes","","",28,null],[12,"n_sep_by_space","","",28,null],[12,"p_sign_posn","","",28,null],[12,"n_sign_posn","","",28,null],[12,"int_p_cs_precedes","","",28,null],[12,"int_p_sep_by_space","","",28,null],[12,"int_n_cs_precedes","","",28,null],[12,"int_n_sep_by_space","","",28,null],[12,"int_p_sign_posn","","",28,null],[12,"int_n_sign_posn","","",28,null],[3,"in_pktinfo","","",null,null],[12,"ipi_ifindex","","",29,null],[12,"ipi_spec_dst","","",29,null],[12,"ipi_addr","","",29,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",30,null],[12,"ifa_name","","",30,null],[12,"ifa_flags","","",30,null],[12,"ifa_addr","","",30,null],[12,"ifa_netmask","","",30,null],[12,"ifa_ifu","","",30,null],[12,"ifa_data","","",30,null],[3,"in6_rtmsg","","",null,null],[3,"arpreq","","",null,null],[12,"arp_pa","","",31,null],[12,"arp_ha","","",31,null],[12,"arp_flags","","",31,null],[12,"arp_netmask","","",31,null],[12,"arp_dev","","",31,null],[3,"arpreq_old","","",null,null],[12,"arp_pa","","",32,null],[12,"arp_ha","","",32,null],[12,"arp_flags","","",32,null],[12,"arp_netmask","","",32,null],[3,"arphdr","","",null,null],[12,"ar_hrd","","",33,null],[12,"ar_pro","","",33,null],[12,"ar_hln","","",33,null],[12,"ar_pln","","",33,null],[12,"ar_op","","",33,null],[3,"mmsghdr","","",null,null],[12,"msg_hdr","","",34,null],[12,"msg_len","","",34,null],[3,"epoll_event","","",null,null],[12,"events","","",35,null],[12,"u64","","",35,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",36,null],[12,"sun_path","","",36,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",37,null],[3,"utsname","","",null,null],[12,"sysname","","",38,null],[12,"nodename","","",38,null],[12,"release","","",38,null],[12,"version","","",38,null],[12,"machine","","",38,null],[12,"domainname","","",38,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",39,null],[12,"sigev_signo","","",39,null],[12,"sigev_notify","","",39,null],[12,"sigev_notify_thread_id","","",39,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",40,null],[12,"rlim_max","","",40,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",41,null],[12,"gl_pathv","","",41,null],[12,"gl_offs","","",41,null],[12,"gl_flags","","",41,null],[3,"passwd","","",null,null],[12,"pw_name","","",42,null],[12,"pw_passwd","","",42,null],[12,"pw_uid","","",42,null],[12,"pw_gid","","",42,null],[12,"pw_gecos","","",42,null],[12,"pw_dir","","",42,null],[12,"pw_shell","","",42,null],[3,"spwd","","",null,null],[12,"sp_namp","","",43,null],[12,"sp_pwdp","","",43,null],[12,"sp_lstchg","","",43,null],[12,"sp_min","","",43,null],[12,"sp_max","","",43,null],[12,"sp_warn","","",43,null],[12,"sp_inact","","",43,null],[12,"sp_expire","","",43,null],[12,"sp_flag","","",43,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",44,null],[12,"dqb_bsoftlimit","","",44,null],[12,"dqb_curspace","","",44,null],[12,"dqb_ihardlimit","","",44,null],[12,"dqb_isoftlimit","","",44,null],[12,"dqb_curinodes","","",44,null],[12,"dqb_btime","","",44,null],[12,"dqb_itime","","",44,null],[12,"dqb_valid","","",44,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",45,null],[12,"ssi_errno","","",45,null],[12,"ssi_code","","",45,null],[12,"ssi_pid","","",45,null],[12,"ssi_uid","","",45,null],[12,"ssi_fd","","",45,null],[12,"ssi_tid","","",45,null],[12,"ssi_band","","",45,null],[12,"ssi_overrun","","",45,null],[12,"ssi_trapno","","",45,null],[12,"ssi_status","","",45,null],[12,"ssi_int","","",45,null],[12,"ssi_ptr","","",45,null],[12,"ssi_utime","","",45,null],[12,"ssi_stime","","",45,null],[12,"ssi_addr","","",45,null],[12,"ssi_addr_lsb","","",45,null],[12,"ssi_syscall","","",45,null],[12,"ssi_call_addr","","",45,null],[12,"ssi_arch","","",45,null],[3,"itimerspec","","",null,null],[12,"it_interval","","",46,null],[12,"it_value","","",46,null],[3,"fsid_t","","",null,null],[3,"packet_mreq","","",null,null],[12,"mr_ifindex","","",47,null],[12,"mr_type","","",47,null],[12,"mr_alen","","",47,null],[12,"mr_address","","",47,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",48,null],[12,"if_name","","",48,null],[3,"msginfo","","",null,null],[12,"msgpool","","",49,null],[12,"msgmap","","",49,null],[12,"msgmax","","",49,null],[12,"msgmnb","","",49,null],[12,"msgmni","","",49,null],[12,"msgssz","","",49,null],[12,"msgtql","","",49,null],[12,"msgseg","","",49,null],[3,"sembuf","","",null,null],[12,"sem_num","","",50,null],[12,"sem_op","","",50,null],[12,"sem_flg","","",50,null],[3,"input_event","","",null,null],[12,"time","","",51,null],[12,"type_","","",51,null],[12,"code","","",51,null],[12,"value","","",51,null],[3,"input_id","","",null,null],[12,"bustype","","",52,null],[12,"vendor","","",52,null],[12,"product","","",52,null],[12,"version","","",52,null],[3,"input_absinfo","","",null,null],[12,"value","","",53,null],[12,"minimum","","",53,null],[12,"maximum","","",53,null],[12,"fuzz","","",53,null],[12,"flat","","",53,null],[12,"resolution","","",53,null],[3,"input_keymap_entry","","",null,null],[12,"flags","","",54,null],[12,"len","","",54,null],[12,"index","","",54,null],[12,"keycode","","",54,null],[12,"scancode","","",54,null],[3,"input_mask","","",null,null],[12,"type_","","",55,null],[12,"codes_size","","",55,null],[12,"codes_ptr","","",55,null],[3,"ff_replay","","",null,null],[12,"length","","",56,null],[12,"delay","","",56,null],[3,"ff_trigger","","",null,null],[12,"button","","",57,null],[12,"interval","","",57,null],[3,"ff_envelope","","",null,null],[12,"attack_length","","",58,null],[12,"attack_level","","",58,null],[12,"fade_length","","",58,null],[12,"fade_level","","",58,null],[3,"ff_constant_effect","","",null,null],[12,"level","","",59,null],[12,"envelope","","",59,null],[3,"ff_ramp_effect","","",null,null],[12,"start_level","","",60,null],[12,"end_level","","",60,null],[12,"envelope","","",60,null],[3,"ff_condition_effect","","",null,null],[12,"right_saturation","","",61,null],[12,"left_saturation","","",61,null],[12,"right_coeff","","",61,null],[12,"left_coeff","","",61,null],[12,"deadband","","",61,null],[12,"center","","",61,null],[3,"ff_periodic_effect","","",null,null],[12,"waveform","","",62,null],[12,"period","","",62,null],[12,"magnitude","","",62,null],[12,"offset","","",62,null],[12,"phase","","",62,null],[12,"envelope","","",62,null],[12,"custom_len","","",62,null],[12,"custom_data","","",62,null],[3,"ff_rumble_effect","","",null,null],[12,"strong_magnitude","","",63,null],[12,"weak_magnitude","","",63,null],[3,"ff_effect","","",null,null],[12,"type_","","",64,null],[12,"id","","",64,null],[12,"direction","","",64,null],[12,"trigger","","",64,null],[12,"replay","","",64,null],[12,"u","","",64,null],[3,"dl_phdr_info","","",null,null],[12,"dlpi_addr","","",65,null],[12,"dlpi_name","","",65,null],[12,"dlpi_phdr","","",65,null],[12,"dlpi_phnum","","",65,null],[12,"dlpi_adds","","",65,null],[12,"dlpi_subs","","",65,null],[12,"dlpi_tls_modid","","",65,null],[12,"dlpi_tls_data","","",65,null],[3,"Elf32_Ehdr","","",null,null],[12,"e_ident","","",66,null],[12,"e_type","","",66,null],[12,"e_machine","","",66,null],[12,"e_version","","",66,null],[12,"e_entry","","",66,null],[12,"e_phoff","","",66,null],[12,"e_shoff","","",66,null],[12,"e_flags","","",66,null],[12,"e_ehsize","","",66,null],[12,"e_phentsize","","",66,null],[12,"e_phnum","","",66,null],[12,"e_shentsize","","",66,null],[12,"e_shnum","","",66,null],[12,"e_shstrndx","","",66,null],[3,"Elf64_Ehdr","","",null,null],[12,"e_ident","","",67,null],[12,"e_type","","",67,null],[12,"e_machine","","",67,null],[12,"e_version","","",67,null],[12,"e_entry","","",67,null],[12,"e_phoff","","",67,null],[12,"e_shoff","","",67,null],[12,"e_flags","","",67,null],[12,"e_ehsize","","",67,null],[12,"e_phentsize","","",67,null],[12,"e_phnum","","",67,null],[12,"e_shentsize","","",67,null],[12,"e_shnum","","",67,null],[12,"e_shstrndx","","",67,null],[3,"Elf32_Sym","","",null,null],[12,"st_name","","",68,null],[12,"st_value","","",68,null],[12,"st_size","","",68,null],[12,"st_info","","",68,null],[12,"st_other","","",68,null],[12,"st_shndx","","",68,null],[3,"Elf64_Sym","","",null,null],[12,"st_name","","",69,null],[12,"st_info","","",69,null],[12,"st_other","","",69,null],[12,"st_shndx","","",69,null],[12,"st_value","","",69,null],[12,"st_size","","",69,null],[3,"Elf32_Phdr","","",null,null],[12,"p_type","","",70,null],[12,"p_offset","","",70,null],[12,"p_vaddr","","",70,null],[12,"p_paddr","","",70,null],[12,"p_filesz","","",70,null],[12,"p_memsz","","",70,null],[12,"p_flags","","",70,null],[12,"p_align","","",70,null],[3,"Elf64_Phdr","","",null,null],[12,"p_type","","",71,null],[12,"p_flags","","",71,null],[12,"p_offset","","",71,null],[12,"p_vaddr","","",71,null],[12,"p_paddr","","",71,null],[12,"p_filesz","","",71,null],[12,"p_memsz","","",71,null],[12,"p_align","","",71,null],[3,"Elf32_Shdr","","",null,null],[12,"sh_name","","",72,null],[12,"sh_type","","",72,null],[12,"sh_flags","","",72,null],[12,"sh_addr","","",72,null],[12,"sh_offset","","",72,null],[12,"sh_size","","",72,null],[12,"sh_link","","",72,null],[12,"sh_info","","",72,null],[12,"sh_addralign","","",72,null],[12,"sh_entsize","","",72,null],[3,"Elf64_Shdr","","",null,null],[12,"sh_name","","",73,null],[12,"sh_type","","",73,null],[12,"sh_flags","","",73,null],[12,"sh_addr","","",73,null],[12,"sh_offset","","",73,null],[12,"sh_size","","",73,null],[12,"sh_link","","",73,null],[12,"sh_info","","",73,null],[12,"sh_addralign","","",73,null],[12,"sh_entsize","","",73,null],[3,"Elf32_Chdr","","",null,null],[12,"ch_type","","",74,null],[12,"ch_size","","",74,null],[12,"ch_addralign","","",74,null],[3,"Elf64_Chdr","","",null,null],[12,"ch_type","","",75,null],[12,"ch_reserved","","",75,null],[12,"ch_size","","",75,null],[12,"ch_addralign","","",75,null],[3,"ucred","","",null,null],[12,"pid","","",76,null],[12,"uid","","",76,null],[12,"gid","","",76,null],[3,"mntent","","",null,null],[12,"mnt_fsname","","",77,null],[12,"mnt_dir","","",77,null],[12,"mnt_type","","",77,null],[12,"mnt_opts","","",77,null],[12,"mnt_freq","","",77,null],[12,"mnt_passno","","",77,null],[3,"posix_spawn_file_actions_t","","",null,null],[3,"posix_spawnattr_t","","",null,null],[3,"genlmsghdr","","",null,null],[12,"cmd","","",78,null],[12,"version","","",78,null],[12,"reserved","","",78,null],[3,"in6_pktinfo","","",null,null],[12,"ipi6_addr","","",79,null],[12,"ipi6_ifindex","","",79,null],[3,"arpd_request","","",null,null],[12,"req","","",80,null],[12,"ip","","",80,null],[12,"dev","","",80,null],[12,"stamp","","",80,null],[12,"updated","","",80,null],[12,"ha","","",80,null],[3,"inotify_event","","",null,null],[12,"wd","","",81,null],[12,"mask","","",81,null],[12,"cookie","","",81,null],[12,"len","","",81,null],[3,"fanotify_response","","",null,null],[12,"fd","","",82,null],[12,"response","","",82,null],[3,"sockaddr_vm","","",null,null],[12,"svm_family","","",83,null],[12,"svm_reserved1","","",83,null],[12,"svm_port","","",83,null],[12,"svm_cid","","",83,null],[12,"svm_zero","","",83,null],[3,"regmatch_t","","",null,null],[12,"rm_so","","",84,null],[12,"rm_eo","","",84,null],[3,"sock_extended_err","","",null,null],[12,"ee_errno","","",85,null],[12,"ee_origin","","",85,null],[12,"ee_type","","",85,null],[12,"ee_code","","",85,null],[12,"ee_pad","","",85,null],[12,"ee_info","","",85,null],[12,"ee_data","","",85,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",86,null],[12,"nl_pid","","",86,null],[12,"nl_groups","","",86,null],[3,"dirent","","",null,null],[12,"d_ino","","",87,null],[12,"d_off","","",87,null],[12,"d_reclen","","",87,null],[12,"d_type","","",87,null],[12,"d_name","","",87,null],[3,"dirent64","","",null,null],[12,"d_ino","","",88,null],[12,"d_off","","",88,null],[12,"d_reclen","","",88,null],[12,"d_type","","",88,null],[12,"d_name","","",88,null],[3,"sockaddr_alg","","",null,null],[12,"salg_family","","",89,null],[12,"salg_type","","",89,null],[12,"salg_feat","","",89,null],[12,"salg_mask","","",89,null],[12,"salg_name","","",89,null],[3,"af_alg_iv","","",null,null],[12,"ivlen","","",90,null],[12,"iv","","",90,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",91,null],[12,"mq_maxmsg","","",91,null],[12,"mq_msgsize","","",91,null],[12,"mq_curmsgs","","",91,null],[3,"statx","","",null,null],[12,"stx_mask","","",92,null],[12,"stx_blksize","","",92,null],[12,"stx_attributes","","",92,null],[12,"stx_nlink","","",92,null],[12,"stx_uid","","",92,null],[12,"stx_gid","","",92,null],[12,"stx_mode","","",92,null],[12,"__statx_pad1","","",92,null],[12,"stx_ino","","",92,null],[12,"stx_size","","",92,null],[12,"stx_blocks","","",92,null],[12,"stx_attributes_mask","","",92,null],[12,"stx_atime","","",92,null],[12,"stx_btime","","",92,null],[12,"stx_ctime","","",92,null],[12,"stx_mtime","","",92,null],[12,"stx_rdev_major","","",92,null],[12,"stx_rdev_minor","","",92,null],[12,"stx_dev_major","","",92,null],[12,"stx_dev_minor","","",92,null],[12,"__statx_pad2","","",92,null],[3,"statx_timestamp","","",null,null],[12,"tv_sec","","",93,null],[12,"tv_nsec","","",93,null],[12,"__statx_timestamp_pad1","","",93,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",94,null],[12,"aio_lio_opcode","","",94,null],[12,"aio_reqprio","","",94,null],[12,"aio_buf","","",94,null],[12,"aio_nbytes","","",94,null],[12,"aio_sigevent","","",94,null],[12,"aio_offset","","",94,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",95,null],[12,"e_exit","","",95,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",96,null],[12,"tv_usec","","",96,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",97,null],[12,"gl_pathv","","",97,null],[12,"gl_offs","","",97,null],[12,"gl_flags","","",97,null],[3,"msghdr","","",null,null],[12,"msg_name","","",98,null],[12,"msg_namelen","","",98,null],[12,"msg_iov","","",98,null],[12,"msg_iovlen","","",98,null],[12,"msg_control","","",98,null],[12,"msg_controllen","","",98,null],[12,"msg_flags","","",98,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",99,null],[12,"cmsg_level","","",99,null],[12,"cmsg_type","","",99,null],[3,"termios","","",null,null],[12,"c_iflag","","",100,null],[12,"c_oflag","","",100,null],[12,"c_cflag","","",100,null],[12,"c_lflag","","",100,null],[12,"c_line","","",100,null],[12,"c_cc","","",100,null],[12,"c_ispeed","","",100,null],[12,"c_ospeed","","",100,null],[3,"mallinfo","","",null,null],[12,"arena","","",101,null],[12,"ordblks","","",101,null],[12,"smblks","","",101,null],[12,"hblks","","",101,null],[12,"hblkhd","","",101,null],[12,"usmblks","","",101,null],[12,"fsmblks","","",101,null],[12,"uordblks","","",101,null],[12,"fordblks","","",101,null],[12,"keepcost","","",101,null],[3,"nlmsghdr","","",null,null],[12,"nlmsg_len","","",102,null],[12,"nlmsg_type","","",102,null],[12,"nlmsg_flags","","",102,null],[12,"nlmsg_seq","","",102,null],[12,"nlmsg_pid","","",102,null],[3,"nlmsgerr","","",null,null],[12,"error","","",103,null],[12,"msg","","",103,null],[3,"nl_pktinfo","","",null,null],[12,"group","","",104,null],[3,"nl_mmap_req","","",null,null],[12,"nm_block_size","","",105,null],[12,"nm_block_nr","","",105,null],[12,"nm_frame_size","","",105,null],[12,"nm_frame_nr","","",105,null],[3,"nl_mmap_hdr","","",null,null],[12,"nm_status","","",106,null],[12,"nm_len","","",106,null],[12,"nm_group","","",106,null],[12,"nm_pid","","",106,null],[12,"nm_uid","","",106,null],[12,"nm_gid","","",106,null],[3,"nlattr","","",null,null],[12,"nla_len","","",107,null],[12,"nla_type","","",107,null],[3,"rtentry","","",null,null],[12,"rt_pad1","","",108,null],[12,"rt_dst","","",108,null],[12,"rt_gateway","","",108,null],[12,"rt_genmask","","",108,null],[12,"rt_flags","","",108,null],[12,"rt_pad2","","",108,null],[12,"rt_pad3","","",108,null],[12,"rt_tos","","",108,null],[12,"rt_class","","",108,null],[12,"rt_pad4","","",108,null],[12,"rt_metric","","",108,null],[12,"rt_dev","","",108,null],[12,"rt_mtu","","",108,null],[12,"rt_window","","",108,null],[12,"rt_irtt","","",108,null],[3,"timex","","",null,null],[12,"modes","","",109,null],[12,"offset","","",109,null],[12,"freq","","",109,null],[12,"maxerror","","",109,null],[12,"esterror","","",109,null],[12,"status","","",109,null],[12,"constant","","",109,null],[12,"precision","","",109,null],[12,"tolerance","","",109,null],[12,"time","","",109,null],[12,"tick","","",109,null],[12,"ppsfreq","","",109,null],[12,"jitter","","",109,null],[12,"shift","","",109,null],[12,"stabil","","",109,null],[12,"jitcnt","","",109,null],[12,"calcnt","","",109,null],[12,"errcnt","","",109,null],[12,"stbcnt","","",109,null],[12,"tai","","",109,null],[12,"__unused1","","",109,null],[12,"__unused2","","",109,null],[12,"__unused3","","",109,null],[12,"__unused4","","",109,null],[12,"__unused5","","",109,null],[12,"__unused6","","",109,null],[12,"__unused7","","",109,null],[12,"__unused8","","",109,null],[12,"__unused9","","",109,null],[12,"__unused10","","",109,null],[12,"__unused11","","",109,null],[3,"ntptimeval","","",null,null],[12,"time","","",110,null],[12,"maxerror","","",110,null],[12,"esterror","","",110,null],[12,"tai","","",110,null],[12,"__glibc_reserved1","","",110,null],[12,"__glibc_reserved2","","",110,null],[12,"__glibc_reserved3","","",110,null],[12,"__glibc_reserved4","","",110,null],[3,"regex_t","","",null,null],[3,"utmpx","","",null,null],[12,"ut_type","","",111,null],[12,"ut_pid","","",111,null],[12,"ut_line","","",111,null],[12,"ut_id","","",111,null],[12,"ut_user","","",111,null],[12,"ut_host","","",111,null],[12,"ut_exit","","",111,null],[12,"ut_session","","",111,null],[12,"ut_tv","","",111,null],[12,"ut_addr_v6","","",111,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",112,null],[12,"loads","","",112,null],[12,"totalram","","",112,null],[12,"freeram","","",112,null],[12,"sharedram","","",112,null],[12,"bufferram","","",112,null],[12,"totalswap","","",112,null],[12,"freeswap","","",112,null],[12,"procs","","",112,null],[12,"pad","","",112,null],[12,"totalhigh","","",112,null],[12,"freehigh","","",112,null],[12,"mem_unit","","",112,null],[12,"_f","","",112,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",113,null],[12,"msg_stime","","",113,null],[12,"msg_rtime","","",113,null],[12,"msg_ctime","","",113,null],[12,"msg_qnum","","",113,null],[12,"msg_qbytes","","",113,null],[12,"msg_lspid","","",113,null],[12,"msg_lrpid","","",113,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",114,null],[12,"sa_mask","","",114,null],[12,"sa_flags","","",114,null],[12,"sa_restorer","","",114,null],[3,"statfs","","",null,null],[12,"f_type","","",115,null],[12,"f_bsize","","",115,null],[12,"f_blocks","","",115,null],[12,"f_bfree","","",115,null],[12,"f_bavail","","",115,null],[12,"f_files","","",115,null],[12,"f_ffree","","",115,null],[12,"f_fsid","","",115,null],[12,"f_namelen","","",115,null],[12,"f_frsize","","",115,null],[3,"flock","","",null,null],[12,"l_type","","",116,null],[12,"l_whence","","",116,null],[12,"l_start","","",116,null],[12,"l_len","","",116,null],[12,"l_pid","","",116,null],[3,"flock64","","",null,null],[12,"l_type","","",117,null],[12,"l_whence","","",117,null],[12,"l_start","","",117,null],[12,"l_len","","",117,null],[12,"l_pid","","",117,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",118,null],[12,"si_errno","","",118,null],[12,"si_code","","",118,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",119,null],[12,"ss_flags","","",119,null],[12,"ss_size","","",119,null],[3,"stat","","",null,null],[12,"st_dev","","",120,null],[12,"st_ino","","",120,null],[12,"st_nlink","","",120,null],[12,"st_mode","","",120,null],[12,"st_uid","","",120,null],[12,"st_gid","","",120,null],[12,"st_rdev","","",120,null],[12,"st_size","","",120,null],[12,"st_blksize","","",120,null],[12,"st_blocks","","",120,null],[12,"st_atime","","",120,null],[12,"st_atime_nsec","","",120,null],[12,"st_mtime","","",120,null],[12,"st_mtime_nsec","","",120,null],[12,"st_ctime","","",120,null],[12,"st_ctime_nsec","","",120,null],[3,"stat64","","",null,null],[12,"st_dev","","",121,null],[12,"st_ino","","",121,null],[12,"st_nlink","","",121,null],[12,"st_mode","","",121,null],[12,"st_uid","","",121,null],[12,"st_gid","","",121,null],[12,"st_rdev","","",121,null],[12,"st_size","","",121,null],[12,"st_blksize","","",121,null],[12,"st_blocks","","",121,null],[12,"st_atime","","",121,null],[12,"st_atime_nsec","","",121,null],[12,"st_mtime","","",121,null],[12,"st_mtime_nsec","","",121,null],[12,"st_ctime","","",121,null],[12,"st_ctime_nsec","","",121,null],[3,"statfs64","","",null,null],[12,"f_type","","",122,null],[12,"f_bsize","","",122,null],[12,"f_blocks","","",122,null],[12,"f_bfree","","",122,null],[12,"f_bavail","","",122,null],[12,"f_files","","",122,null],[12,"f_ffree","","",122,null],[12,"f_fsid","","",122,null],[12,"f_namelen","","",122,null],[12,"f_frsize","","",122,null],[12,"f_flags","","",122,null],[12,"f_spare","","",122,null],[3,"statvfs64","","",null,null],[12,"f_bsize","","",123,null],[12,"f_frsize","","",123,null],[12,"f_blocks","","",123,null],[12,"f_bfree","","",123,null],[12,"f_bavail","","",123,null],[12,"f_files","","",123,null],[12,"f_ffree","","",123,null],[12,"f_favail","","",123,null],[12,"f_fsid","","",123,null],[12,"f_flag","","",123,null],[12,"f_namemax","","",123,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",124,null],[12,"exponent","","",124,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",125,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",126,null],[12,"swd","","",126,null],[12,"ftw","","",126,null],[12,"fop","","",126,null],[12,"rip","","",126,null],[12,"rdp","","",126,null],[12,"mxcsr","","",126,null],[12,"mxcr_mask","","",126,null],[12,"_st","","",126,null],[12,"_xmm","","",126,null],[3,"user_regs_struct","","",null,null],[12,"r15","","",127,null],[12,"r14","","",127,null],[12,"r13","","",127,null],[12,"r12","","",127,null],[12,"rbp","","",127,null],[12,"rbx","","",127,null],[12,"r11","","",127,null],[12,"r10","","",127,null],[12,"r9","","",127,null],[12,"r8","","",127,null],[12,"rax","","",127,null],[12,"rcx","","",127,null],[12,"rdx","","",127,null],[12,"rsi","","",127,null],[12,"rdi","","",127,null],[12,"orig_rax","","",127,null],[12,"rip","","",127,null],[12,"cs","","",127,null],[12,"eflags","","",127,null],[12,"rsp","","",127,null],[12,"ss","","",127,null],[12,"fs_base","","",127,null],[12,"gs_base","","",127,null],[12,"ds","","",127,null],[12,"es","","",127,null],[12,"fs","","",127,null],[12,"gs","","",127,null],[3,"user","","",null,null],[12,"regs","","",128,null],[12,"u_fpvalid","","",128,null],[12,"i387","","",128,null],[12,"u_tsize","","",128,null],[12,"u_dsize","","",128,null],[12,"u_ssize","","",128,null],[12,"start_code","","",128,null],[12,"start_stack","","",128,null],[12,"signal","","",128,null],[12,"u_ar0","","",128,null],[12,"u_fpstate","","",128,null],[12,"magic","","",128,null],[12,"u_comm","","",128,null],[12,"u_debugreg","","",128,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",129,null],[12,"fpregs","","",129,null],[3,"ipc_perm","","",null,null],[12,"__key","","",130,null],[12,"uid","","",130,null],[12,"gid","","",130,null],[12,"cuid","","",130,null],[12,"cgid","","",130,null],[12,"mode","","",130,null],[12,"__seq","","",130,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",131,null],[12,"shm_segsz","","",131,null],[12,"shm_atime","","",131,null],[12,"shm_dtime","","",131,null],[12,"shm_ctime","","",131,null],[12,"shm_cpid","","",131,null],[12,"shm_lpid","","",131,null],[12,"shm_nattch","","",131,null],[3,"termios2","","",null,null],[12,"c_iflag","","",132,null],[12,"c_oflag","","",132,null],[12,"c_cflag","","",132,null],[12,"c_lflag","","",132,null],[12,"c_line","","",132,null],[12,"c_cc","","",132,null],[12,"c_ispeed","","",132,null],[12,"c_ospeed","","",132,null],[3,"ip_mreqn","","",null,null],[12,"imr_multiaddr","","",133,null],[12,"imr_address","","",133,null],[12,"imr_ifindex","","",133,null],[3,"user_fpregs_struct","","",null,null],[12,"cwd","","",134,null],[12,"swd","","",134,null],[12,"ftw","","",134,null],[12,"fop","","",134,null],[12,"rip","","",134,null],[12,"rdp","","",134,null],[12,"mxcsr","","",134,null],[12,"mxcr_mask","","",134,null],[12,"st_space","","",134,null],[12,"xmm_space","","",134,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",135,null],[12,"uc_link","","",135,null],[12,"uc_stack","","",135,null],[12,"uc_mcontext","","",135,null],[12,"uc_sigmask","","",135,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",136,null],[12,"f_frsize","","",136,null],[12,"f_blocks","","",136,null],[12,"f_bfree","","",136,null],[12,"f_bavail","","",136,null],[12,"f_files","","",136,null],[12,"f_ffree","","",136,null],[12,"f_favail","","",136,null],[12,"f_fsid","","",136,null],[12,"f_flag","","",136,null],[12,"f_namemax","","",136,null],[3,"max_align_t","","",null,null],[3,"sem_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"fanotify_event_metadata","","",null,null],[12,"event_len","","",137,null],[12,"vers","","",137,null],[12,"reserved","","",137,null],[12,"metadata_len","","",137,null],[12,"mask","","",137,null],[12,"fd","","",137,null],[12,"pid","","",137,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",138,null],[4,"DIR","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"CMSG_FIRSTHDR","","",null,[[]]],[5,"CMSG_DATA","","",null,[[]]],[5,"CMSG_SPACE","","",null,[[["c_uint"]],["c_uint"]]],[5,"CMSG_LEN","","",null,[[["c_uint"]],["c_uint"]]],[5,"FD_CLR","","",null,[[["c_int"]]]],[5,"FD_ISSET","","",null,[[["c_int"]],["bool"]]],[5,"FD_SET","","",null,[[["c_int"]]]],[5,"FD_ZERO","","",null,[[]]],[5,"WIFSTOPPED","","",null,[[["c_int"]],["bool"]]],[5,"WSTOPSIG","","",null,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED","","",null,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED","","",null,[[["c_int"]],["bool"]]],[5,"WTERMSIG","","",null,[[["c_int"]],["c_int"]]],[5,"WIFEXITED","","",null,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS","","",null,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP","","",null,[[["c_int"]],["bool"]]],[5,"QCMD","","",null,[[["c_int"]],["c_int"]]],[5,"IPOPT_COPIED","","",null,[[["u8"]],["u8"]]],[5,"IPOPT_CLASS","","",null,[[["u8"]],["u8"]]],[5,"IPOPT_NUMBER","","",null,[[["u8"]],["u8"]]],[5,"IPTOS_ECN","","",null,[[["u8"]],["u8"]]],[5,"NLA_ALIGN","","",null,[[["c_int"]],["c_int"]]],[5,"CMSG_NXTHDR","","",null,[[]]],[5,"CPU_ALLOC_SIZE","","",null,[[["c_int"]],["size_t"]]],[5,"CPU_ZERO","","",null,[[["cpu_set_t"]]]],[5,"CPU_SET","","",null,[[["cpu_set_t"],["usize"]]]],[5,"CPU_CLR","","",null,[[["cpu_set_t"],["usize"]]]],[5,"CPU_ISSET","","",null,[[["cpu_set_t"],["usize"]],["bool"]]],[5,"CPU_COUNT_S","","",null,[[["cpu_set_t"],["usize"]],["c_int"]]],[5,"CPU_COUNT","","",null,[[["cpu_set_t"]],["c_int"]]],[5,"CPU_EQUAL","","",null,[[["cpu_set_t"]],["bool"]]],[5,"major","","",null,[[["dev_t"]],["c_uint"]]],[5,"minor","","",null,[[["dev_t"]],["c_uint"]]],[5,"makedev","","",null,[[["c_uint"]],["dev_t"]]],[5,"IPTOS_TOS","","",null,[[["u8"]],["u8"]]],[5,"IPTOS_PREC","","",null,[[["u8"]],["u8"]]],[5,"RT_TOS","","",null,[[["u8"]],["u8"]]],[5,"RT_ADDRCLASS","","",null,[[["u32"]],["u32"]]],[5,"RT_LOCALADDR","","",null,[[["u32"]],["bool"]]],[5,"SO_EE_OFFENDER","","",null,[[]]],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"isblank","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"qsort","","",null,null],[5,"bsearch","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strndup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strcasecmp","","",null,null],[5,"strncasecmp","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"strsignal","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"wmemchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setegid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"ttyname_r","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"mknod","","",null,null],[5,"gethostname","","",null,null],[5,"getservbyname","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"timegm","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"strcasestr","","",null,null],[5,"getline","","",null,null],[5,"lockf","","",null,null],[5,"getsid","","",null,null],[5,"truncate","","",null,null],[5,"pause","","",null,null],[5,"readlinkat","","",null,null],[5,"mkdirat","","",null,null],[5,"openat","","",null,null],[5,"fdopendir","","",null,null],[5,"readdir_r","","The 64-bit libc on Solaris and illumos only has readdir_r.…",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetspeed","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_init","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_settime","","",null,null],[5,"dirfd","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"pipe2","","",null,null],[5,"statfs","","",null,null],[5,"statfs64","","",null,null],[5,"fstatfs","","",null,null],[5,"fstatfs64","","",null,null],[5,"statvfs64","","",null,null],[5,"fstatvfs64","","",null,null],[5,"memrchr","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"fstatat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"openat64","","",null,null],[5,"pread64","","",null,null],[5,"preadv64","","",null,null],[5,"pwrite64","","",null,null],[5,"pwritev64","","",null,null],[5,"readdir64","","",null,null],[5,"readdir64_r","","",null,null],[5,"stat64","","",null,null],[5,"truncate64","","",null,null],[5,"mknodat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"setreuid","","",null,null],[5,"setregid","","",null,null],[5,"getresuid","","",null,null],[5,"getresgid","","",null,null],[5,"acct","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"vfork","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"wait4","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"login_tty","","",null,null],[5,"execvpe","","",null,null],[5,"fexecve","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"uname","","",null,null],[5,"strerror_r","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setgrent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"getspnam_r","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"semget","","",null,null],[5,"semop","","",null,null],[5,"semctl","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"fallocate64","","",null,null],[5,"posix_fallocate","","",null,null],[5,"posix_fallocate64","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"timerfd_create","","",null,null],[5,"timerfd_gettime","","",null,null],[5,"timerfd_settime","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_timedreceive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_timedsend","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"pthread_setschedprio","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"mremap","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"remap_file_pages","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"vhangup","","",null,null],[5,"sync","","",null,null],[5,"syscall","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_wait","","",null,null],[5,"epoll_ctl","","",null,null],[5,"pthread_getschedparam","","",null,null],[5,"unshare","","",null,null],[5,"umount","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"tee","","",null,null],[5,"settimeofday","","",null,null],[5,"splice","","",null,null],[5,"eventfd","","",null,null],[5,"sched_rr_get_interval","","",null,null],[5,"sem_timedwait","","",null,null],[5,"sem_getvalue","","",null,null],[5,"sched_setparam","","",null,null],[5,"setns","","",null,null],[5,"swapoff","","",null,null],[5,"vmsplice","","",null,null],[5,"mount","","",null,null],[5,"personality","","",null,null],[5,"prctl","","",null,null],[5,"sched_getparam","","",null,null],[5,"ppoll","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"clone","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"sethostname","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"sysinfo","","",null,null],[5,"umount2","","",null,null],[5,"pthread_setschedparam","","",null,null],[5,"swapon","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sendfile","","",null,null],[5,"sigsuspend","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"initgroups","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"daemon","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"getgrouplist","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"dl_iterate_phdr","","",null,null],[5,"setmntent","","",null,null],[5,"getmntent","","",null,null],[5,"addmntent","","",null,null],[5,"endmntent","","",null,null],[5,"hasmntopt","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawnattr_getschedpolicy","","",null,null],[5,"posix_spawnattr_setschedpolicy","","",null,null],[5,"posix_spawnattr_getschedparam","","",null,null],[5,"posix_spawnattr_setschedparam","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[5,"fread_unlocked","","",null,null],[5,"inotify_rm_watch","","",null,null],[5,"inotify_init","","",null,null],[5,"inotify_init1","","",null,null],[5,"inotify_add_watch","","",null,null],[5,"fanotify_init","","",null,null],[5,"regcomp","","",null,null],[5,"regexec","","",null,null],[5,"regerror","","",null,null],[5,"regfree","","",null,null],[5,"fgetspent_r","","",null,null],[5,"sgetspent_r","","",null,null],[5,"getspent_r","","",null,null],[5,"qsort_r","","",null,null],[5,"sendmmsg","","",null,null],[5,"recvmmsg","","",null,null],[5,"getrlimit64","","",null,null],[5,"setrlimit64","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"utmpname","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"mallopt","","",null,null],[5,"gettimeofday","","",null,null],[5,"statx","","",null,null],[5,"getrandom","","",null,null],[5,"memmem","","",null,null],[5,"getauxval","","",null,null],[5,"adjtimex","","",null,null],[5,"ntp_adjtime","","",null,null],[5,"ntp_gettime","","",null,null],[5,"copy_file_range","","",null,null],[5,"fanotify_mark","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"pthread_rwlockattr_getkind_np","","",null,null],[5,"pthread_rwlockattr_setkind_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"mallinfo","","",null,null],[5,"malloc_usable_size","","",null,null],[5,"getpwent_r","","",null,null],[5,"getgrent_r","","",null,null],[5,"pthread_getname_np","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"dlmopen","","",null,null],[5,"dlinfo","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[5,"iopl","","",null,null],[5,"ioperm","","",null,null],[5,"sysctl","","",null,null],[11,"si_addr","","",118,[[["self"]]]],[11,"si_value","","",118,[[["self"]],["sigval"]]],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"locale_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"loff_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"__u8","","",null,null],[6,"__u16","","",null,null],[6,"__s16","","",null,null],[6,"__u32","","",null,null],[6,"__s32","","",null,null],[6,"Elf32_Half","","",null,null],[6,"Elf32_Word","","",null,null],[6,"Elf32_Off","","",null,null],[6,"Elf32_Addr","","",null,null],[6,"Elf64_Half","","",null,null],[6,"Elf64_Word","","",null,null],[6,"Elf64_Off","","",null,null],[6,"Elf64_Addr","","",null,null],[6,"Elf64_Xword","","",null,null],[6,"Elf64_Sxword","","",null,null],[6,"Elf32_Section","","",null,null],[6,"Elf64_Section","","",null,null],[6,"pthread_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"__rlimit_resource_t","","",null,null],[6,"Lmid_t","","",null,null],[6,"regoff_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"__u64","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"ARPOP_REQUEST","","",null,null],[17,"ARPOP_REPLY","","",null,null],[17,"ATF_COM","","",null,null],[17,"ATF_PERM","","",null,null],[17,"ATF_PUBL","","",null,null],[17,"ATF_USETRAILERS","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_CANCELLK","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"F_ADD_SEALS","","",null,null],[17,"F_GET_SEALS","","",null,null],[17,"F_SEAL_SEAL","","",null,null],[17,"F_SEAL_SHRINK","","",null,null],[17,"F_SEAL_GROW","","",null,null],[17,"F_SEAL_WRITE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"CLOCK_TAI","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_CREDENTIALS","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_UDP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_ICMPV6","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_ALG","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TOS","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_PKTINFO","","",null,null],[17,"IP_MTU_DISCOVER","","",null,null],[17,"IP_RECVTOS","","",null,null],[17,"IP_RECVERR","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_ADD_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_DROP_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADDRFORM","","",null,null],[17,"IPV6_2292PKTINFO","","",null,null],[17,"IPV6_2292HOPOPTS","","",null,null],[17,"IPV6_2292DSTOPTS","","",null,null],[17,"IPV6_2292RTHDR","","",null,null],[17,"IPV6_2292PKTOPTIONS","","",null,null],[17,"IPV6_CHECKSUM","","",null,null],[17,"IPV6_2292HOPLIMIT","","",null,null],[17,"IPV6_NEXTHOP","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ROUTER_ALERT","","",null,null],[17,"IPV6_MTU_DISCOVER","","",null,null],[17,"IPV6_MTU","","",null,null],[17,"IPV6_RECVERR","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"IPV6_JOIN_ANYCAST","","",null,null],[17,"IPV6_LEAVE_ANYCAST","","",null,null],[17,"IPV6_RECVPKTINFO","","",null,null],[17,"IPV6_PKTINFO","","",null,null],[17,"IPV6_HOPLIMIT","","",null,null],[17,"IPV6_RECVTCLASS","","",null,null],[17,"IPV6_TCLASS","","",null,null],[17,"IP_PMTUDISC_DONT","","",null,null],[17,"IP_PMTUDISC_WANT","","",null,null],[17,"IP_PMTUDISC_DO","","",null,null],[17,"IP_PMTUDISC_PROBE","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"OFDEL","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_O_MASK","","",null,null],[17,"PTRACE_EVENT_FORK","","",null,null],[17,"PTRACE_EVENT_VFORK","","",null,null],[17,"PTRACE_EVENT_CLONE","","",null,null],[17,"PTRACE_EVENT_EXEC","","",null,null],[17,"PTRACE_EVENT_VFORK_DONE","","",null,null],[17,"PTRACE_EVENT_EXIT","","",null,null],[17,"PTRACE_EVENT_SECCOMP","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_NO_AUTOMOUNT","","",null,null],[17,"AT_EMPTY_PATH","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"IPTOS_LOWDELAY","","",null,null],[17,"IPTOS_THROUGHPUT","","",null,null],[17,"IPTOS_RELIABILITY","","",null,null],[17,"IPTOS_MINCOST","","",null,null],[17,"IPTOS_PREC_NETCONTROL","","",null,null],[17,"IPTOS_PREC_INTERNETCONTROL","","",null,null],[17,"IPTOS_PREC_CRITIC_ECP","","",null,null],[17,"IPTOS_PREC_FLASHOVERRIDE","","",null,null],[17,"IPTOS_PREC_FLASH","","",null,null],[17,"IPTOS_PREC_IMMEDIATE","","",null,null],[17,"IPTOS_PREC_PRIORITY","","",null,null],[17,"IPTOS_PREC_ROUTINE","","",null,null],[17,"IPTOS_ECN_MASK","","",null,null],[17,"IPTOS_ECN_ECT1","","",null,null],[17,"IPTOS_ECN_ECT0","","",null,null],[17,"IPTOS_ECN_CE","","",null,null],[17,"IPOPT_COPY","","",null,null],[17,"IPOPT_CLASS_MASK","","",null,null],[17,"IPOPT_NUMBER_MASK","","",null,null],[17,"IPOPT_CONTROL","","",null,null],[17,"IPOPT_RESERVED1","","",null,null],[17,"IPOPT_MEASUREMENT","","",null,null],[17,"IPOPT_RESERVED2","","",null,null],[17,"IPOPT_END","","",null,null],[17,"IPOPT_NOOP","","",null,null],[17,"IPOPT_SEC","","",null,null],[17,"IPOPT_LSRR","","",null,null],[17,"IPOPT_TIMESTAMP","","",null,null],[17,"IPOPT_RR","","",null,null],[17,"IPOPT_SID","","",null,null],[17,"IPOPT_SSRR","","",null,null],[17,"IPOPT_RA","","",null,null],[17,"IPVERSION","","",null,null],[17,"MAXTTL","","",null,null],[17,"IPDEFTTL","","",null,null],[17,"IPOPT_OPTVAL","","",null,null],[17,"IPOPT_OLEN","","",null,null],[17,"IPOPT_OFFSET","","",null,null],[17,"IPOPT_MINOFF","","",null,null],[17,"MAX_IPOPTLEN","","",null,null],[17,"IPOPT_NOP","","",null,null],[17,"IPOPT_EOL","","",null,null],[17,"IPOPT_TS","","",null,null],[17,"IPOPT_TS_TSONLY","","",null,null],[17,"IPOPT_TS_TSANDADDR","","",null,null],[17,"IPOPT_TS_PRESPEC","","",null,null],[17,"ARPOP_RREQUEST","","",null,null],[17,"ARPOP_RREPLY","","",null,null],[17,"ARPOP_InREQUEST","","",null,null],[17,"ARPOP_InREPLY","","",null,null],[17,"ARPOP_NAK","","",null,null],[17,"ATF_NETMASK","","",null,null],[17,"ATF_DONTPUB","","",null,null],[17,"ARPHRD_NETROM","","",null,null],[17,"ARPHRD_ETHER","","",null,null],[17,"ARPHRD_EETHER","","",null,null],[17,"ARPHRD_AX25","","",null,null],[17,"ARPHRD_PRONET","","",null,null],[17,"ARPHRD_CHAOS","","",null,null],[17,"ARPHRD_IEEE802","","",null,null],[17,"ARPHRD_ARCNET","","",null,null],[17,"ARPHRD_APPLETLK","","",null,null],[17,"ARPHRD_DLCI","","",null,null],[17,"ARPHRD_ATM","","",null,null],[17,"ARPHRD_METRICOM","","",null,null],[17,"ARPHRD_IEEE1394","","",null,null],[17,"ARPHRD_EUI64","","",null,null],[17,"ARPHRD_INFINIBAND","","",null,null],[17,"ARPHRD_SLIP","","",null,null],[17,"ARPHRD_CSLIP","","",null,null],[17,"ARPHRD_SLIP6","","",null,null],[17,"ARPHRD_CSLIP6","","",null,null],[17,"ARPHRD_RSRVD","","",null,null],[17,"ARPHRD_ADAPT","","",null,null],[17,"ARPHRD_ROSE","","",null,null],[17,"ARPHRD_X25","","",null,null],[17,"ARPHRD_HWX25","","",null,null],[17,"ARPHRD_PPP","","",null,null],[17,"ARPHRD_CISCO","","",null,null],[17,"ARPHRD_HDLC","","",null,null],[17,"ARPHRD_LAPB","","",null,null],[17,"ARPHRD_DDCMP","","",null,null],[17,"ARPHRD_RAWHDLC","","",null,null],[17,"ARPHRD_TUNNEL","","",null,null],[17,"ARPHRD_TUNNEL6","","",null,null],[17,"ARPHRD_FRAD","","",null,null],[17,"ARPHRD_SKIP","","",null,null],[17,"ARPHRD_LOOPBACK","","",null,null],[17,"ARPHRD_LOCALTLK","","",null,null],[17,"ARPHRD_FDDI","","",null,null],[17,"ARPHRD_BIF","","",null,null],[17,"ARPHRD_SIT","","",null,null],[17,"ARPHRD_IPDDP","","",null,null],[17,"ARPHRD_IPGRE","","",null,null],[17,"ARPHRD_PIMREG","","",null,null],[17,"ARPHRD_HIPPI","","",null,null],[17,"ARPHRD_ASH","","",null,null],[17,"ARPHRD_ECONET","","",null,null],[17,"ARPHRD_IRDA","","",null,null],[17,"ARPHRD_FCPP","","",null,null],[17,"ARPHRD_FCAL","","",null,null],[17,"ARPHRD_FCPL","","",null,null],[17,"ARPHRD_FCFABRIC","","",null,null],[17,"ARPHRD_IEEE802_TR","","",null,null],[17,"ARPHRD_IEEE80211","","",null,null],[17,"ARPHRD_IEEE80211_PRISM","","",null,null],[17,"ARPHRD_IEEE80211_RADIOTAP","","",null,null],[17,"ARPHRD_IEEE802154","","",null,null],[17,"ARPHRD_VOID","","",null,null],[17,"ARPHRD_NONE","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_PC_SYNC_IO","","",null,null],[17,"_PC_ASYNC_IO","","",null,null],[17,"_PC_PRIO_IO","","",null,null],[17,"_PC_SOCK_MAXBUF","","",null,null],[17,"_PC_FILESIZEBITS","","",null,null],[17,"_PC_REC_INCR_XFER_SIZE","","",null,null],[17,"_PC_REC_MAX_XFER_SIZE","","",null,null],[17,"_PC_REC_MIN_XFER_SIZE","","",null,null],[17,"_PC_REC_XFER_ALIGN","","",null,null],[17,"_PC_ALLOC_SIZE_MIN","","",null,null],[17,"_PC_SYMLINK_MAX","","",null,null],[17,"_PC_2_SYMLINKS","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_UIO_MAXIOV","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"_SC_AVPHYS_PAGES","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XOPEN_XPG2","","",null,null],[17,"_SC_XOPEN_XPG3","","",null,null],[17,"_SC_XOPEN_XPG4","","",null,null],[17,"_SC_NZERO","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_STREAMS","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_V7_ILP32_OFF32","","",null,null],[17,"_SC_V7_ILP32_OFFBIG","","",null,null],[17,"_SC_V7_LP64_OFF64","","",null,null],[17,"_SC_V7_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_SEAL_FUTURE_WRITE","","",null,null],[17,"IFF_LOWER_UP","","",null,null],[17,"IFF_DORMANT","","",null,null],[17,"IFF_ECHO","","",null,null],[17,"IFA_UNSPEC","","",null,null],[17,"IFA_ADDRESS","","",null,null],[17,"IFA_LOCAL","","",null,null],[17,"IFA_LABEL","","",null,null],[17,"IFA_BROADCAST","","",null,null],[17,"IFA_ANYCAST","","",null,null],[17,"IFA_CACHEINFO","","",null,null],[17,"IFA_MULTICAST","","",null,null],[17,"IFA_F_SECONDARY","","",null,null],[17,"IFA_F_TEMPORARY","","",null,null],[17,"IFA_F_NODAD","","",null,null],[17,"IFA_F_OPTIMISTIC","","",null,null],[17,"IFA_F_DADFAILED","","",null,null],[17,"IFA_F_HOMEADDRESS","","",null,null],[17,"IFA_F_DEPRECATED","","",null,null],[17,"IFA_F_TENTATIVE","","",null,null],[17,"IFA_F_PERMANENT","","",null,null],[17,"IFLA_UNSPEC","","",null,null],[17,"IFLA_ADDRESS","","",null,null],[17,"IFLA_BROADCAST","","",null,null],[17,"IFLA_IFNAME","","",null,null],[17,"IFLA_MTU","","",null,null],[17,"IFLA_LINK","","",null,null],[17,"IFLA_QDISC","","",null,null],[17,"IFLA_STATS","","",null,null],[17,"IFLA_COST","","",null,null],[17,"IFLA_PRIORITY","","",null,null],[17,"IFLA_MASTER","","",null,null],[17,"IFLA_WIRELESS","","",null,null],[17,"IFLA_PROTINFO","","",null,null],[17,"IFLA_TXQLEN","","",null,null],[17,"IFLA_MAP","","",null,null],[17,"IFLA_WEIGHT","","",null,null],[17,"IFLA_OPERSTATE","","",null,null],[17,"IFLA_LINKMODE","","",null,null],[17,"IFLA_LINKINFO","","",null,null],[17,"IFLA_NET_NS_PID","","",null,null],[17,"IFLA_IFALIAS","","",null,null],[17,"IFLA_NUM_VF","","",null,null],[17,"IFLA_VFINFO_LIST","","",null,null],[17,"IFLA_STATS64","","",null,null],[17,"IFLA_VF_PORTS","","",null,null],[17,"IFLA_PORT_SELF","","",null,null],[17,"IFLA_AF_SPEC","","",null,null],[17,"IFLA_GROUP","","",null,null],[17,"IFLA_NET_NS_FD","","",null,null],[17,"IFLA_EXT_MASK","","",null,null],[17,"IFLA_PROMISCUITY","","",null,null],[17,"IFLA_NUM_TX_QUEUES","","",null,null],[17,"IFLA_NUM_RX_QUEUES","","",null,null],[17,"IFLA_CARRIER","","",null,null],[17,"IFLA_PHYS_PORT_ID","","",null,null],[17,"IFLA_CARRIER_CHANGES","","",null,null],[17,"IFLA_PHYS_SWITCH_ID","","",null,null],[17,"IFLA_LINK_NETNSID","","",null,null],[17,"IFLA_PHYS_PORT_NAME","","",null,null],[17,"IFLA_PROTO_DOWN","","",null,null],[17,"IFLA_INFO_UNSPEC","","",null,null],[17,"IFLA_INFO_KIND","","",null,null],[17,"IFLA_INFO_DATA","","",null,null],[17,"IFLA_INFO_XSTATS","","",null,null],[17,"IFLA_INFO_SLAVE_KIND","","",null,null],[17,"IFLA_INFO_SLAVE_DATA","","",null,null],[17,"IFF_TUN","","",null,null],[17,"IFF_TAP","","",null,null],[17,"IFF_NO_PI","","",null,null],[17,"TUN_READQ_SIZE","","",null,null],[17,"TUN_TUN_DEV","","",null,null],[17,"TUN_TAP_DEV","","",null,null],[17,"TUN_TYPE_MASK","","",null,null],[17,"IFF_ONE_QUEUE","","",null,null],[17,"IFF_VNET_HDR","","",null,null],[17,"IFF_TUN_EXCL","","",null,null],[17,"IFF_MULTI_QUEUE","","",null,null],[17,"IFF_ATTACH_QUEUE","","",null,null],[17,"IFF_DETACH_QUEUE","","",null,null],[17,"IFF_PERSIST","","",null,null],[17,"IFF_NOFILTER","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"AT_EACCESS","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"RENAME_NOREPLACE","","",null,null],[17,"RENAME_EXCHANGE","","",null,null],[17,"RENAME_WHITEOUT","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"SCHED_RESET_ON_FORK","","",null,null],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_DCCP","","DCCP",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_MTP","","",null,null],[17,"IPPROTO_BEETPH","","",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_PIM","","Protocol indep. multicast",null,null],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_MH","","",null,null],[17,"IPPROTO_UDPLITE","","",null,null],[17,"IPPROTO_MPLS","","",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"IP_MSFILTER","","",null,null],[17,"MCAST_JOIN_GROUP","","",null,null],[17,"MCAST_BLOCK_SOURCE","","",null,null],[17,"MCAST_UNBLOCK_SOURCE","","",null,null],[17,"MCAST_LEAVE_GROUP","","",null,null],[17,"MCAST_JOIN_SOURCE_GROUP","","",null,null],[17,"MCAST_LEAVE_SOURCE_GROUP","","",null,null],[17,"MCAST_MSFILTER","","",null,null],[17,"IP_MULTICAST_ALL","","",null,null],[17,"IP_UNICAST_IF","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"AF_XDP","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"PF_XDP","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"GRND_NONBLOCK","","",null,null],[17,"GRND_RANDOM","","",null,null],[17,"SECCOMP_MODE_DISABLED","","",null,null],[17,"SECCOMP_MODE_STRICT","","",null,null],[17,"SECCOMP_MODE_FILTER","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[17,"TFD_CLOEXEC","","",null,null],[17,"TFD_NONBLOCK","","",null,null],[17,"TFD_TIMER_ABSTIME","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FALLOC_FL_COLLAPSE_RANGE","","",null,null],[17,"FALLOC_FL_ZERO_RANGE","","",null,null],[17,"FALLOC_FL_INSERT_RANGE","","",null,null],[17,"FALLOC_FL_UNSHARE_RANGE","","",null,null],[17,"ENOATTR","","",null,null],[17,"SO_ORIGINAL_DST","","",null,null],[17,"IP_ORIGDSTADDR","","",null,null],[17,"IP_RECVORIGDSTADDR","","",null,null],[17,"IPV6_FLOWINFO","","",null,null],[17,"IPV6_ORIGDSTADDR","","",null,null],[17,"IPV6_RECVORIGDSTADDR","","",null,null],[17,"IPV6_FLOWLABEL_MGR","","",null,null],[17,"IPV6_FLOWINFO_SEND","","",null,null],[17,"IPV6_FLOWINFO_FLOWLABEL","","",null,null],[17,"IPV6_FLOWINFO_PRIORITY","","",null,null],[17,"IUTF8","","",null,null],[17,"CMSPAR","","",null,null],[17,"MFD_CLOEXEC","","",null,null],[17,"MFD_ALLOW_SEALING","","",null,null],[17,"MFD_HUGETLB","","",null,null],[17,"PT_NULL","","",null,null],[17,"PT_LOAD","","",null,null],[17,"PT_DYNAMIC","","",null,null],[17,"PT_INTERP","","",null,null],[17,"PT_NOTE","","",null,null],[17,"PT_SHLIB","","",null,null],[17,"PT_PHDR","","",null,null],[17,"PT_TLS","","",null,null],[17,"PT_NUM","","",null,null],[17,"PT_LOOS","","",null,null],[17,"PT_GNU_EH_FRAME","","",null,null],[17,"PT_GNU_STACK","","",null,null],[17,"PT_GNU_RELRO","","",null,null],[17,"ETH_ALEN","","",null,null],[17,"ETH_HLEN","","",null,null],[17,"ETH_ZLEN","","",null,null],[17,"ETH_DATA_LEN","","",null,null],[17,"ETH_FRAME_LEN","","",null,null],[17,"ETH_FCS_LEN","","",null,null],[17,"ETH_P_LOOP","","",null,null],[17,"ETH_P_PUP","","",null,null],[17,"ETH_P_PUPAT","","",null,null],[17,"ETH_P_IP","","",null,null],[17,"ETH_P_X25","","",null,null],[17,"ETH_P_ARP","","",null,null],[17,"ETH_P_BPQ","","",null,null],[17,"ETH_P_IEEEPUP","","",null,null],[17,"ETH_P_IEEEPUPAT","","",null,null],[17,"ETH_P_BATMAN","","",null,null],[17,"ETH_P_DEC","","",null,null],[17,"ETH_P_DNA_DL","","",null,null],[17,"ETH_P_DNA_RC","","",null,null],[17,"ETH_P_DNA_RT","","",null,null],[17,"ETH_P_LAT","","",null,null],[17,"ETH_P_DIAG","","",null,null],[17,"ETH_P_CUST","","",null,null],[17,"ETH_P_SCA","","",null,null],[17,"ETH_P_TEB","","",null,null],[17,"ETH_P_RARP","","",null,null],[17,"ETH_P_ATALK","","",null,null],[17,"ETH_P_AARP","","",null,null],[17,"ETH_P_8021Q","","",null,null],[17,"ETH_P_IPX","","",null,null],[17,"ETH_P_IPV6","","",null,null],[17,"ETH_P_PAUSE","","",null,null],[17,"ETH_P_SLOW","","",null,null],[17,"ETH_P_WCCP","","",null,null],[17,"ETH_P_MPLS_UC","","",null,null],[17,"ETH_P_MPLS_MC","","",null,null],[17,"ETH_P_ATMMPOA","","",null,null],[17,"ETH_P_PPP_DISC","","",null,null],[17,"ETH_P_PPP_SES","","",null,null],[17,"ETH_P_LINK_CTL","","",null,null],[17,"ETH_P_ATMFATE","","",null,null],[17,"ETH_P_PAE","","",null,null],[17,"ETH_P_AOE","","",null,null],[17,"ETH_P_8021AD","","",null,null],[17,"ETH_P_802_EX1","","",null,null],[17,"ETH_P_TIPC","","",null,null],[17,"ETH_P_MACSEC","","",null,null],[17,"ETH_P_8021AH","","",null,null],[17,"ETH_P_MVRP","","",null,null],[17,"ETH_P_1588","","",null,null],[17,"ETH_P_PRP","","",null,null],[17,"ETH_P_FCOE","","",null,null],[17,"ETH_P_TDLS","","",null,null],[17,"ETH_P_FIP","","",null,null],[17,"ETH_P_80221","","",null,null],[17,"ETH_P_LOOPBACK","","",null,null],[17,"ETH_P_QINQ1","","",null,null],[17,"ETH_P_QINQ2","","",null,null],[17,"ETH_P_QINQ3","","",null,null],[17,"ETH_P_EDSA","","",null,null],[17,"ETH_P_AF_IUCV","","",null,null],[17,"ETH_P_802_3_MIN","","",null,null],[17,"ETH_P_802_3","","",null,null],[17,"ETH_P_AX25","","",null,null],[17,"ETH_P_ALL","","",null,null],[17,"ETH_P_802_2","","",null,null],[17,"ETH_P_SNAP","","",null,null],[17,"ETH_P_DDCMP","","",null,null],[17,"ETH_P_WAN_PPP","","",null,null],[17,"ETH_P_PPP_MP","","",null,null],[17,"ETH_P_LOCALTALK","","",null,null],[17,"ETH_P_CANFD","","",null,null],[17,"ETH_P_PPPTALK","","",null,null],[17,"ETH_P_TR_802_2","","",null,null],[17,"ETH_P_MOBITEX","","",null,null],[17,"ETH_P_CONTROL","","",null,null],[17,"ETH_P_IRDA","","",null,null],[17,"ETH_P_ECONET","","",null,null],[17,"ETH_P_HDLC","","",null,null],[17,"ETH_P_ARCNET","","",null,null],[17,"ETH_P_DSA","","",null,null],[17,"ETH_P_TRAILER","","",null,null],[17,"ETH_P_PHONET","","",null,null],[17,"ETH_P_IEEE802154","","",null,null],[17,"ETH_P_CAIF","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",null,null],[17,"POSIX_SPAWN_SETSCHEDULER","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NFNLGRP_NONE","","",null,null],[17,"NFNLGRP_CONNTRACK_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_DESTROY","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_DESTROY","","",null,null],[17,"NFNLGRP_NFTABLES","","",null,null],[17,"NFNLGRP_ACCT_QUOTA","","",null,null],[17,"NFNETLINK_V0","","",null,null],[17,"NFNL_SUBSYS_NONE","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_EXP","","",null,null],[17,"NFNL_SUBSYS_QUEUE","","",null,null],[17,"NFNL_SUBSYS_ULOG","","",null,null],[17,"NFNL_SUBSYS_OSF","","",null,null],[17,"NFNL_SUBSYS_IPSET","","",null,null],[17,"NFNL_SUBSYS_ACCT","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_TIMEOUT","","",null,null],[17,"NFNL_SUBSYS_CTHELPER","","",null,null],[17,"NFNL_SUBSYS_NFTABLES","","",null,null],[17,"NFNL_SUBSYS_NFT_COMPAT","","",null,null],[17,"NFNL_SUBSYS_COUNT","","",null,null],[17,"NFNL_MSG_BATCH_BEGIN","","",null,null],[17,"NFNL_MSG_BATCH_END","","",null,null],[17,"NFULNL_MSG_PACKET","","",null,null],[17,"NFULNL_MSG_CONFIG","","",null,null],[17,"NFULA_UNSPEC","","",null,null],[17,"NFULA_PACKET_HDR","","",null,null],[17,"NFULA_MARK","","",null,null],[17,"NFULA_TIMESTAMP","","",null,null],[17,"NFULA_IFINDEX_INDEV","","",null,null],[17,"NFULA_IFINDEX_OUTDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFULA_HWADDR","","",null,null],[17,"NFULA_PAYLOAD","","",null,null],[17,"NFULA_PREFIX","","",null,null],[17,"NFULA_UID","","",null,null],[17,"NFULA_SEQ","","",null,null],[17,"NFULA_SEQ_GLOBAL","","",null,null],[17,"NFULA_GID","","",null,null],[17,"NFULA_HWTYPE","","",null,null],[17,"NFULA_HWHEADER","","",null,null],[17,"NFULA_HWLEN","","",null,null],[17,"NFULA_CT","","",null,null],[17,"NFULA_CT_INFO","","",null,null],[17,"NFULNL_CFG_CMD_NONE","","",null,null],[17,"NFULNL_CFG_CMD_BIND","","",null,null],[17,"NFULNL_CFG_CMD_UNBIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFULA_CFG_UNSPEC","","",null,null],[17,"NFULA_CFG_CMD","","",null,null],[17,"NFULA_CFG_MODE","","",null,null],[17,"NFULA_CFG_NLBUFSIZ","","",null,null],[17,"NFULA_CFG_TIMEOUT","","",null,null],[17,"NFULA_CFG_QTHRESH","","",null,null],[17,"NFULA_CFG_FLAGS","","",null,null],[17,"NFULNL_COPY_NONE","","",null,null],[17,"NFULNL_COPY_META","","",null,null],[17,"NFULNL_COPY_PACKET","","",null,null],[17,"NFULNL_CFG_F_SEQ","","",null,null],[17,"NFULNL_CFG_F_SEQ_GLOBAL","","",null,null],[17,"NFULNL_CFG_F_CONNTRACK","","",null,null],[17,"NFQNL_MSG_PACKET","","",null,null],[17,"NFQNL_MSG_VERDICT","","",null,null],[17,"NFQNL_MSG_CONFIG","","",null,null],[17,"NFQNL_MSG_VERDICT_BATCH","","",null,null],[17,"NFQA_UNSPEC","","",null,null],[17,"NFQA_PACKET_HDR","","",null,null],[17,"NFQA_VERDICT_HDR","","",null,null],[17,"NFQA_MARK","","",null,null],[17,"NFQA_TIMESTAMP","","",null,null],[17,"NFQA_IFINDEX_INDEV","","",null,null],[17,"NFQA_IFINDEX_OUTDEV","","",null,null],[17,"NFQA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFQA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFQA_HWADDR","","",null,null],[17,"NFQA_PAYLOAD","","",null,null],[17,"NFQA_CT","","",null,null],[17,"NFQA_CT_INFO","","",null,null],[17,"NFQA_CAP_LEN","","",null,null],[17,"NFQA_SKB_INFO","","",null,null],[17,"NFQA_EXP","","",null,null],[17,"NFQA_UID","","",null,null],[17,"NFQA_GID","","",null,null],[17,"NFQA_SECCTX","","",null,null],[17,"NFQNL_CFG_CMD_NONE","","",null,null],[17,"NFQNL_CFG_CMD_BIND","","",null,null],[17,"NFQNL_CFG_CMD_UNBIND","","",null,null],[17,"NFQNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFQNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFQNL_COPY_NONE","","",null,null],[17,"NFQNL_COPY_META","","",null,null],[17,"NFQNL_COPY_PACKET","","",null,null],[17,"NFQA_CFG_UNSPEC","","",null,null],[17,"NFQA_CFG_CMD","","",null,null],[17,"NFQA_CFG_PARAMS","","",null,null],[17,"NFQA_CFG_QUEUE_MAXLEN","","",null,null],[17,"NFQA_CFG_MASK","","",null,null],[17,"NFQA_CFG_FLAGS","","",null,null],[17,"NFQA_CFG_F_FAIL_OPEN","","",null,null],[17,"NFQA_CFG_F_CONNTRACK","","",null,null],[17,"NFQA_CFG_F_GSO","","",null,null],[17,"NFQA_CFG_F_UID_GID","","",null,null],[17,"NFQA_CFG_F_SECCTX","","",null,null],[17,"NFQA_CFG_F_MAX","","",null,null],[17,"NFQA_SKB_CSUMNOTREADY","","",null,null],[17,"NFQA_SKB_GSO","","",null,null],[17,"NFQA_SKB_CSUM_NOTVERIFIED","","",null,null],[17,"GENL_NAMSIZ","","",null,null],[17,"GENL_MIN_ID","","",null,null],[17,"GENL_MAX_ID","","",null,null],[17,"GENL_ADMIN_PERM","","",null,null],[17,"GENL_CMD_CAP_DO","","",null,null],[17,"GENL_CMD_CAP_DUMP","","",null,null],[17,"GENL_CMD_CAP_HASPOL","","",null,null],[17,"GENL_ID_CTRL","","",null,null],[17,"CTRL_CMD_UNSPEC","","",null,null],[17,"CTRL_CMD_NEWFAMILY","","",null,null],[17,"CTRL_CMD_DELFAMILY","","",null,null],[17,"CTRL_CMD_GETFAMILY","","",null,null],[17,"CTRL_CMD_NEWOPS","","",null,null],[17,"CTRL_CMD_DELOPS","","",null,null],[17,"CTRL_CMD_GETOPS","","",null,null],[17,"CTRL_CMD_NEWMCAST_GRP","","",null,null],[17,"CTRL_CMD_DELMCAST_GRP","","",null,null],[17,"CTRL_CMD_GETMCAST_GRP","","",null,null],[17,"CTRL_ATTR_UNSPEC","","",null,null],[17,"CTRL_ATTR_FAMILY_ID","","",null,null],[17,"CTRL_ATTR_FAMILY_NAME","","",null,null],[17,"CTRL_ATTR_VERSION","","",null,null],[17,"CTRL_ATTR_HDRSIZE","","",null,null],[17,"CTRL_ATTR_MAXATTR","","",null,null],[17,"CTRL_ATTR_OPS","","",null,null],[17,"CTRL_ATTR_MCAST_GROUPS","","",null,null],[17,"CTRL_ATTR_OP_UNSPEC","","",null,null],[17,"CTRL_ATTR_OP_ID","","",null,null],[17,"CTRL_ATTR_OP_FLAGS","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_ID","","",null,null],[17,"PACKET_ADD_MEMBERSHIP","","",null,null],[17,"PACKET_DROP_MEMBERSHIP","","",null,null],[17,"PACKET_MR_MULTICAST","","",null,null],[17,"PACKET_MR_PROMISC","","",null,null],[17,"PACKET_MR_ALLMULTI","","",null,null],[17,"PACKET_MR_UNICAST","","",null,null],[17,"NF_DROP","","",null,null],[17,"NF_ACCEPT","","",null,null],[17,"NF_STOLEN","","",null,null],[17,"NF_QUEUE","","",null,null],[17,"NF_REPEAT","","",null,null],[17,"NF_STOP","","",null,null],[17,"NF_MAX_VERDICT","","",null,null],[17,"NF_VERDICT_MASK","","",null,null],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",null,null],[17,"NF_VERDICT_QMASK","","",null,null],[17,"NF_VERDICT_QBITS","","",null,null],[17,"NF_VERDICT_BITS","","",null,null],[17,"NF_INET_PRE_ROUTING","","",null,null],[17,"NF_INET_LOCAL_IN","","",null,null],[17,"NF_INET_FORWARD","","",null,null],[17,"NF_INET_LOCAL_OUT","","",null,null],[17,"NF_INET_POST_ROUTING","","",null,null],[17,"NF_INET_NUMHOOKS","","",null,null],[17,"NFPROTO_UNSPEC","","",null,null],[17,"NFPROTO_IPV4","","",null,null],[17,"NFPROTO_ARP","","",null,null],[17,"NFPROTO_BRIDGE","","",null,null],[17,"NFPROTO_IPV6","","",null,null],[17,"NFPROTO_DECNET","","",null,null],[17,"NFPROTO_NUMPROTO","","",null,null],[17,"NF_IP_PRE_ROUTING","","",null,null],[17,"NF_IP_LOCAL_IN","","",null,null],[17,"NF_IP_FORWARD","","",null,null],[17,"NF_IP_LOCAL_OUT","","",null,null],[17,"NF_IP_POST_ROUTING","","",null,null],[17,"NF_IP_NUMHOOKS","","",null,null],[17,"NF_IP_PRI_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP_PRI_RAW","","",null,null],[17,"NF_IP_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK","","",null,null],[17,"NF_IP_PRI_MANGLE","","",null,null],[17,"NF_IP_PRI_NAT_DST","","",null,null],[17,"NF_IP_PRI_FILTER","","",null,null],[17,"NF_IP_PRI_SECURITY","","",null,null],[17,"NF_IP_PRI_NAT_SRC","","",null,null],[17,"NF_IP_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",null,null],[17,"NF_IP_PRI_LAST","","",null,null],[17,"NF_IP6_PRE_ROUTING","","",null,null],[17,"NF_IP6_LOCAL_IN","","",null,null],[17,"NF_IP6_FORWARD","","",null,null],[17,"NF_IP6_LOCAL_OUT","","",null,null],[17,"NF_IP6_POST_ROUTING","","",null,null],[17,"NF_IP6_NUMHOOKS","","",null,null],[17,"NF_IP6_PRI_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP6_PRI_RAW","","",null,null],[17,"NF_IP6_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK","","",null,null],[17,"NF_IP6_PRI_MANGLE","","",null,null],[17,"NF_IP6_PRI_NAT_DST","","",null,null],[17,"NF_IP6_PRI_FILTER","","",null,null],[17,"NF_IP6_PRI_SECURITY","","",null,null],[17,"NF_IP6_PRI_NAT_SRC","","",null,null],[17,"NF_IP6_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP6_PRI_LAST","","",null,null],[17,"IP6T_SO_ORIGINAL_DST","","",null,null],[17,"SIOCADDRT","","",null,null],[17,"SIOCDELRT","","",null,null],[17,"SIOCGIFNAME","","",null,null],[17,"SIOCSIFLINK","","",null,null],[17,"SIOCGIFCONF","","",null,null],[17,"SIOCGIFFLAGS","","",null,null],[17,"SIOCSIFFLAGS","","",null,null],[17,"SIOCGIFADDR","","",null,null],[17,"SIOCSIFADDR","","",null,null],[17,"SIOCGIFDSTADDR","","",null,null],[17,"SIOCSIFDSTADDR","","",null,null],[17,"SIOCGIFBRDADDR","","",null,null],[17,"SIOCSIFBRDADDR","","",null,null],[17,"SIOCGIFNETMASK","","",null,null],[17,"SIOCSIFNETMASK","","",null,null],[17,"SIOCGIFMETRIC","","",null,null],[17,"SIOCSIFMETRIC","","",null,null],[17,"SIOCGIFMEM","","",null,null],[17,"SIOCSIFMEM","","",null,null],[17,"SIOCGIFMTU","","",null,null],[17,"SIOCSIFMTU","","",null,null],[17,"SIOCSIFHWADDR","","",null,null],[17,"SIOCGIFENCAP","","",null,null],[17,"SIOCSIFENCAP","","",null,null],[17,"SIOCGIFHWADDR","","",null,null],[17,"SIOCGIFSLAVE","","",null,null],[17,"SIOCSIFSLAVE","","",null,null],[17,"SIOCADDMULTI","","",null,null],[17,"SIOCDELMULTI","","",null,null],[17,"SIOCDARP","","",null,null],[17,"SIOCGARP","","",null,null],[17,"SIOCSARP","","",null,null],[17,"SIOCDRARP","","",null,null],[17,"SIOCGRARP","","",null,null],[17,"SIOCSRARP","","",null,null],[17,"SIOCGIFMAP","","",null,null],[17,"SIOCSIFMAP","","",null,null],[17,"IPTOS_TOS_MASK","","",null,null],[17,"IPTOS_PREC_MASK","","",null,null],[17,"IPTOS_ECN_NOT_ECT","","",null,null],[17,"RTF_UP","","",null,null],[17,"RTF_GATEWAY","","",null,null],[17,"RTF_HOST","","",null,null],[17,"RTF_REINSTATE","","",null,null],[17,"RTF_DYNAMIC","","",null,null],[17,"RTF_MODIFIED","","",null,null],[17,"RTF_MTU","","",null,null],[17,"RTF_MSS","","",null,null],[17,"RTF_WINDOW","","",null,null],[17,"RTF_IRTT","","",null,null],[17,"RTF_REJECT","","",null,null],[17,"RTF_STATIC","","",null,null],[17,"RTF_XRESOLVE","","",null,null],[17,"RTF_NOFORWARD","","",null,null],[17,"RTF_THROW","","",null,null],[17,"RTF_NOPMTUDISC","","",null,null],[17,"RTF_DEFAULT","","",null,null],[17,"RTF_ALLONLINK","","",null,null],[17,"RTF_ADDRCONF","","",null,null],[17,"RTF_LINKRT","","",null,null],[17,"RTF_NONEXTHOP","","",null,null],[17,"RTF_CACHE","","",null,null],[17,"RTF_FLOW","","",null,null],[17,"RTF_POLICY","","",null,null],[17,"RTCF_VALVE","","",null,null],[17,"RTCF_MASQ","","",null,null],[17,"RTCF_NAT","","",null,null],[17,"RTCF_DOREDIRECT","","",null,null],[17,"RTCF_LOG","","",null,null],[17,"RTCF_DIRECTSRC","","",null,null],[17,"RTF_LOCAL","","",null,null],[17,"RTF_INTERFACE","","",null,null],[17,"RTF_MULTICAST","","",null,null],[17,"RTF_BROADCAST","","",null,null],[17,"RTF_NAT","","",null,null],[17,"RTF_ADDRCLASSMASK","","",null,null],[17,"RT_CLASS_UNSPEC","","",null,null],[17,"RT_CLASS_DEFAULT","","",null,null],[17,"RT_CLASS_MAIN","","",null,null],[17,"RT_CLASS_LOCAL","","",null,null],[17,"RT_CLASS_MAX","","",null,null],[17,"NUD_NONE","","",null,null],[17,"NUD_INCOMPLETE","","",null,null],[17,"NUD_REACHABLE","","",null,null],[17,"NUD_STALE","","",null,null],[17,"NUD_DELAY","","",null,null],[17,"NUD_PROBE","","",null,null],[17,"NUD_FAILED","","",null,null],[17,"NUD_NOARP","","",null,null],[17,"NUD_PERMANENT","","",null,null],[17,"NTF_USE","","",null,null],[17,"NTF_SELF","","",null,null],[17,"NTF_MASTER","","",null,null],[17,"NTF_PROXY","","",null,null],[17,"NTF_ROUTER","","",null,null],[17,"NDA_UNSPEC","","",null,null],[17,"NDA_DST","","",null,null],[17,"NDA_LLADDR","","",null,null],[17,"NDA_CACHEINFO","","",null,null],[17,"NDA_PROBES","","",null,null],[17,"NDA_VLAN","","",null,null],[17,"NDA_PORT","","",null,null],[17,"NDA_VNI","","",null,null],[17,"NDA_IFINDEX","","",null,null],[17,"NLA_ALIGNTO","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"TCA_UNSPEC","","",null,null],[17,"TCA_KIND","","",null,null],[17,"TCA_OPTIONS","","",null,null],[17,"TCA_STATS","","",null,null],[17,"TCA_XSTATS","","",null,null],[17,"TCA_RATE","","",null,null],[17,"TCA_FCNT","","",null,null],[17,"TCA_STATS2","","",null,null],[17,"TCA_STAB","","",null,null],[17,"RTM_NEWLINK","","",null,null],[17,"RTM_DELLINK","","",null,null],[17,"RTM_GETLINK","","",null,null],[17,"RTM_SETLINK","","",null,null],[17,"RTM_NEWADDR","","",null,null],[17,"RTM_DELADDR","","",null,null],[17,"RTM_GETADDR","","",null,null],[17,"RTM_NEWROUTE","","",null,null],[17,"RTM_DELROUTE","","",null,null],[17,"RTM_GETROUTE","","",null,null],[17,"RTM_NEWNEIGH","","",null,null],[17,"RTM_DELNEIGH","","",null,null],[17,"RTM_GETNEIGH","","",null,null],[17,"RTM_NEWRULE","","",null,null],[17,"RTM_DELRULE","","",null,null],[17,"RTM_GETRULE","","",null,null],[17,"RTM_NEWQDISC","","",null,null],[17,"RTM_DELQDISC","","",null,null],[17,"RTM_GETQDISC","","",null,null],[17,"RTM_NEWTCLASS","","",null,null],[17,"RTM_DELTCLASS","","",null,null],[17,"RTM_GETTCLASS","","",null,null],[17,"RTM_NEWTFILTER","","",null,null],[17,"RTM_DELTFILTER","","",null,null],[17,"RTM_GETTFILTER","","",null,null],[17,"RTM_NEWACTION","","",null,null],[17,"RTM_DELACTION","","",null,null],[17,"RTM_GETACTION","","",null,null],[17,"RTM_NEWPREFIX","","",null,null],[17,"RTM_GETMULTICAST","","",null,null],[17,"RTM_GETANYCAST","","",null,null],[17,"RTM_NEWNEIGHTBL","","",null,null],[17,"RTM_GETNEIGHTBL","","",null,null],[17,"RTM_SETNEIGHTBL","","",null,null],[17,"RTM_NEWNDUSEROPT","","",null,null],[17,"RTM_NEWADDRLABEL","","",null,null],[17,"RTM_DELADDRLABEL","","",null,null],[17,"RTM_GETADDRLABEL","","",null,null],[17,"RTM_GETDCB","","",null,null],[17,"RTM_SETDCB","","",null,null],[17,"RTM_NEWNETCONF","","",null,null],[17,"RTM_GETNETCONF","","",null,null],[17,"RTM_NEWMDB","","",null,null],[17,"RTM_DELMDB","","",null,null],[17,"RTM_GETMDB","","",null,null],[17,"RTM_NEWNSID","","",null,null],[17,"RTM_DELNSID","","",null,null],[17,"RTM_GETNSID","","",null,null],[17,"RTM_F_NOTIFY","","",null,null],[17,"RTM_F_CLONED","","",null,null],[17,"RTM_F_EQUALIZE","","",null,null],[17,"RTM_F_PREFIX","","",null,null],[17,"RTA_UNSPEC","","",null,null],[17,"RTA_DST","","",null,null],[17,"RTA_SRC","","",null,null],[17,"RTA_IIF","","",null,null],[17,"RTA_OIF","","",null,null],[17,"RTA_GATEWAY","","",null,null],[17,"RTA_PRIORITY","","",null,null],[17,"RTA_PREFSRC","","",null,null],[17,"RTA_METRICS","","",null,null],[17,"RTA_MULTIPATH","","",null,null],[17,"RTA_PROTOINFO","","",null,null],[17,"RTA_FLOW","","",null,null],[17,"RTA_CACHEINFO","","",null,null],[17,"RTA_SESSION","","",null,null],[17,"RTA_MP_ALGO","","",null,null],[17,"RTA_TABLE","","",null,null],[17,"RTA_MARK","","",null,null],[17,"RTA_MFC_STATS","","",null,null],[17,"RTN_UNSPEC","","",null,null],[17,"RTN_UNICAST","","",null,null],[17,"RTN_LOCAL","","",null,null],[17,"RTN_BROADCAST","","",null,null],[17,"RTN_ANYCAST","","",null,null],[17,"RTN_MULTICAST","","",null,null],[17,"RTN_BLACKHOLE","","",null,null],[17,"RTN_UNREACHABLE","","",null,null],[17,"RTN_PROHIBIT","","",null,null],[17,"RTN_THROW","","",null,null],[17,"RTN_NAT","","",null,null],[17,"RTN_XRESOLVE","","",null,null],[17,"RTPROT_UNSPEC","","",null,null],[17,"RTPROT_REDIRECT","","",null,null],[17,"RTPROT_KERNEL","","",null,null],[17,"RTPROT_BOOT","","",null,null],[17,"RTPROT_STATIC","","",null,null],[17,"RT_SCOPE_UNIVERSE","","",null,null],[17,"RT_SCOPE_SITE","","",null,null],[17,"RT_SCOPE_LINK","","",null,null],[17,"RT_SCOPE_HOST","","",null,null],[17,"RT_SCOPE_NOWHERE","","",null,null],[17,"RT_TABLE_UNSPEC","","",null,null],[17,"RT_TABLE_COMPAT","","",null,null],[17,"RT_TABLE_DEFAULT","","",null,null],[17,"RT_TABLE_MAIN","","",null,null],[17,"RT_TABLE_LOCAL","","",null,null],[17,"RTMSG_OVERRUN","","",null,null],[17,"RTMSG_NEWDEVICE","","",null,null],[17,"RTMSG_DELDEVICE","","",null,null],[17,"RTMSG_NEWROUTE","","",null,null],[17,"RTMSG_DELROUTE","","",null,null],[17,"RTMSG_NEWRULE","","",null,null],[17,"RTMSG_DELRULE","","",null,null],[17,"RTMSG_CONTROL","","",null,null],[17,"RTMSG_AR_FAILED","","",null,null],[17,"MAX_ADDR_LEN","","",null,null],[17,"ARPD_UPDATE","","",null,null],[17,"ARPD_LOOKUP","","",null,null],[17,"ARPD_FLUSH","","",null,null],[17,"ATF_MAGIC","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[17,"MODULE_INIT_IGNORE_MODVERSIONS","","",null,null],[17,"MODULE_INIT_IGNORE_VERMAGIC","","",null,null],[17,"SOF_TIMESTAMPING_TX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_TX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SYS_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RAW_HARDWARE","","",null,null],[17,"ALG_SET_KEY","","",null,null],[17,"ALG_SET_IV","","",null,null],[17,"ALG_SET_OP","","",null,null],[17,"ALG_SET_AEAD_ASSOCLEN","","",null,null],[17,"ALG_SET_AEAD_AUTHSIZE","","",null,null],[17,"ALG_OP_DECRYPT","","",null,null],[17,"ALG_OP_ENCRYPT","","",null,null],[17,"UDP_CORK","","",null,null],[17,"UDP_ENCAP","","",null,null],[17,"UDP_NO_CHECK6_TX","","",null,null],[17,"UDP_NO_CHECK6_RX","","",null,null],[17,"UDP_SEGMENT","","",null,null],[17,"UDP_GRO","","",null,null],[17,"MAP_SHARED_VALIDATE","","",null,null],[17,"MAP_FIXED_NOREPLACE","","",null,null],[17,"VMADDR_CID_ANY","","",null,null],[17,"VMADDR_CID_HYPERVISOR","","",null,null],[17,"VMADDR_CID_RESERVED","","",null,null],[17,"VMADDR_CID_HOST","","",null,null],[17,"VMADDR_PORT_ANY","","",null,null],[17,"IN_ACCESS","","",null,null],[17,"IN_MODIFY","","",null,null],[17,"IN_ATTRIB","","",null,null],[17,"IN_CLOSE_WRITE","","",null,null],[17,"IN_CLOSE_NOWRITE","","",null,null],[17,"IN_CLOSE","","",null,null],[17,"IN_OPEN","","",null,null],[17,"IN_MOVED_FROM","","",null,null],[17,"IN_MOVED_TO","","",null,null],[17,"IN_MOVE","","",null,null],[17,"IN_CREATE","","",null,null],[17,"IN_DELETE","","",null,null],[17,"IN_DELETE_SELF","","",null,null],[17,"IN_MOVE_SELF","","",null,null],[17,"IN_UNMOUNT","","",null,null],[17,"IN_Q_OVERFLOW","","",null,null],[17,"IN_IGNORED","","",null,null],[17,"IN_ONLYDIR","","",null,null],[17,"IN_DONT_FOLLOW","","",null,null],[17,"KEY_SPEC_THREAD_KEYRING","","",null,null],[17,"KEY_SPEC_PROCESS_KEYRING","","",null,null],[17,"KEY_SPEC_SESSION_KEYRING","","",null,null],[17,"KEY_SPEC_USER_KEYRING","","",null,null],[17,"KEY_SPEC_USER_SESSION_KEYRING","","",null,null],[17,"KEY_SPEC_GROUP_KEYRING","","",null,null],[17,"KEY_SPEC_REQKEY_AUTH_KEY","","",null,null],[17,"KEY_SPEC_REQUESTOR_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_NO_CHANGE","","",null,null],[17,"KEY_REQKEY_DEFL_DEFAULT","","",null,null],[17,"KEY_REQKEY_DEFL_THREAD_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_PROCESS_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_SESSION_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_USER_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_USER_SESSION_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_GROUP_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_REQUESTOR_KEYRING","","",null,null],[17,"KEYCTL_GET_KEYRING_ID","","",null,null],[17,"KEYCTL_JOIN_SESSION_KEYRING","","",null,null],[17,"KEYCTL_UPDATE","","",null,null],[17,"KEYCTL_REVOKE","","",null,null],[17,"KEYCTL_CHOWN","","",null,null],[17,"KEYCTL_SETPERM","","",null,null],[17,"KEYCTL_DESCRIBE","","",null,null],[17,"KEYCTL_CLEAR","","",null,null],[17,"KEYCTL_LINK","","",null,null],[17,"KEYCTL_UNLINK","","",null,null],[17,"KEYCTL_SEARCH","","",null,null],[17,"KEYCTL_READ","","",null,null],[17,"KEYCTL_INSTANTIATE","","",null,null],[17,"KEYCTL_NEGATE","","",null,null],[17,"KEYCTL_SET_REQKEY_KEYRING","","",null,null],[17,"KEYCTL_SET_TIMEOUT","","",null,null],[17,"KEYCTL_ASSUME_AUTHORITY","","",null,null],[17,"KEYCTL_GET_SECURITY","","",null,null],[17,"KEYCTL_SESSION_TO_PARENT","","",null,null],[17,"KEYCTL_REJECT","","",null,null],[17,"KEYCTL_INSTANTIATE_IOV","","",null,null],[17,"KEYCTL_INVALIDATE","","",null,null],[17,"KEYCTL_GET_PERSISTENT","","",null,null],[17,"IN_ISDIR","","",null,null],[17,"IN_ONESHOT","","",null,null],[17,"IN_ALL_EVENTS","","",null,null],[17,"IN_CLOEXEC","","",null,null],[17,"IN_NONBLOCK","","",null,null],[17,"FAN_ACCESS","","",null,null],[17,"FAN_MODIFY","","",null,null],[17,"FAN_CLOSE_WRITE","","",null,null],[17,"FAN_CLOSE_NOWRITE","","",null,null],[17,"FAN_OPEN","","",null,null],[17,"FAN_Q_OVERFLOW","","",null,null],[17,"FAN_OPEN_PERM","","",null,null],[17,"FAN_ACCESS_PERM","","",null,null],[17,"FAN_ONDIR","","",null,null],[17,"FAN_EVENT_ON_CHILD","","",null,null],[17,"FAN_CLOSE","","",null,null],[17,"FAN_CLOEXEC","","",null,null],[17,"FAN_NONBLOCK","","",null,null],[17,"FAN_CLASS_NOTIF","","",null,null],[17,"FAN_CLASS_CONTENT","","",null,null],[17,"FAN_CLASS_PRE_CONTENT","","",null,null],[17,"FAN_UNLIMITED_QUEUE","","",null,null],[17,"FAN_UNLIMITED_MARKS","","",null,null],[17,"FAN_MARK_ADD","","",null,null],[17,"FAN_MARK_REMOVE","","",null,null],[17,"FAN_MARK_DONT_FOLLOW","","",null,null],[17,"FAN_MARK_ONLYDIR","","",null,null],[17,"FAN_MARK_INODE","","",null,null],[17,"FAN_MARK_MOUNT","","",null,null],[17,"FAN_MARK_FILESYSTEM","","",null,null],[17,"FAN_MARK_IGNORED_MASK","","",null,null],[17,"FAN_MARK_IGNORED_SURV_MODIFY","","",null,null],[17,"FAN_MARK_FLUSH","","",null,null],[17,"FANOTIFY_METADATA_VERSION","","",null,null],[17,"FAN_ALLOW","","",null,null],[17,"FAN_DENY","","",null,null],[17,"FAN_NOFD","","",null,null],[17,"FUTEX_WAIT","","",null,null],[17,"FUTEX_WAKE","","",null,null],[17,"FUTEX_FD","","",null,null],[17,"FUTEX_REQUEUE","","",null,null],[17,"FUTEX_CMP_REQUEUE","","",null,null],[17,"FUTEX_WAKE_OP","","",null,null],[17,"FUTEX_LOCK_PI","","",null,null],[17,"FUTEX_UNLOCK_PI","","",null,null],[17,"FUTEX_TRYLOCK_PI","","",null,null],[17,"FUTEX_WAIT_BITSET","","",null,null],[17,"FUTEX_WAKE_BITSET","","",null,null],[17,"FUTEX_WAIT_REQUEUE_PI","","",null,null],[17,"FUTEX_CMP_REQUEUE_PI","","",null,null],[17,"FUTEX_PRIVATE_FLAG","","",null,null],[17,"FUTEX_CLOCK_REALTIME","","",null,null],[17,"FUTEX_CMD_MASK","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"REG_EXTENDED","","",null,null],[17,"REG_ICASE","","",null,null],[17,"REG_NEWLINE","","",null,null],[17,"REG_NOSUB","","",null,null],[17,"REG_NOTBOL","","",null,null],[17,"REG_NOTEOL","","",null,null],[17,"REG_ENOSYS","","",null,null],[17,"REG_NOMATCH","","",null,null],[17,"REG_BADPAT","","",null,null],[17,"REG_ECOLLATE","","",null,null],[17,"REG_ECTYPE","","",null,null],[17,"REG_EESCAPE","","",null,null],[17,"REG_ESUBREG","","",null,null],[17,"REG_EBRACK","","",null,null],[17,"REG_EPAREN","","",null,null],[17,"REG_EBRACE","","",null,null],[17,"REG_BADBR","","",null,null],[17,"REG_ERANGE","","",null,null],[17,"REG_ESPACE","","",null,null],[17,"REG_BADRPT","","",null,null],[17,"SO_EE_ORIGIN_NONE","","",null,null],[17,"SO_EE_ORIGIN_LOCAL","","",null,null],[17,"SO_EE_ORIGIN_ICMP","","",null,null],[17,"SO_EE_ORIGIN_ICMP6","","",null,null],[17,"SO_EE_ORIGIN_TXSTATUS","","",null,null],[17,"SO_EE_ORIGIN_TIMESTAMPING","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"HUGETLB_FLAG_ENCODE_SHIFT","","",null,null],[17,"HUGETLB_FLAG_ENCODE_MASK","","",null,null],[17,"HUGETLB_FLAG_ENCODE_64KB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_512KB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_1MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_2MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_8MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_16MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_32MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_256MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_512MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_1GB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_2GB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_16GB","","",null,null],[17,"MAP_HUGE_SHIFT","","",null,null],[17,"MAP_HUGE_MASK","","",null,null],[17,"MAP_HUGE_64KB","","",null,null],[17,"MAP_HUGE_512KB","","",null,null],[17,"MAP_HUGE_1MB","","",null,null],[17,"MAP_HUGE_2MB","","",null,null],[17,"MAP_HUGE_8MB","","",null,null],[17,"MAP_HUGE_16MB","","",null,null],[17,"MAP_HUGE_32MB","","",null,null],[17,"MAP_HUGE_256MB","","",null,null],[17,"MAP_HUGE_512MB","","",null,null],[17,"MAP_HUGE_1GB","","",null,null],[17,"MAP_HUGE_2GB","","",null,null],[17,"MAP_HUGE_16GB","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"LM_ID_BASE","","",null,null],[17,"LM_ID_NEWLM","","",null,null],[17,"RTLD_DI_LMID","","",null,null],[17,"RTLD_DI_LINKMAP","","",null,null],[17,"RTLD_DI_CONFIGADDR","","",null,null],[17,"RTLD_DI_SERINFO","","",null,null],[17,"RTLD_DI_SERINFOSIZE","","",null,null],[17,"RTLD_DI_ORIGIN","","",null,null],[17,"RTLD_DI_PROFILENAME","","",null,null],[17,"RTLD_DI_PROFILEOUT","","",null,null],[17,"RTLD_DI_TLS_MODID","","",null,null],[17,"RTLD_DI_TLS_DATA","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_NFC","","",null,null],[17,"SOL_XDP","","",null,null],[17,"MSG_TRYHARD","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"ENOTSUP","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOCK_DCCP","","",null,null],[17,"SOCK_PACKET","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"TCP_FASTOPEN_CONNECT","","",null,null],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",null,null],[17,"DCCP_SOCKOPT_SERVICE","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_L","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_R","","",null,null],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",null,null],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",null,null],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",null,null],[17,"DCCP_SOCKOPT_CCID","","",null,null],[17,"DCCP_SOCKOPT_TX_CCID","","",null,null],[17,"DCCP_SOCKOPT_RX_CCID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",null,null],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",null,null],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",null,null],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening…",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_EQUIV_CLASS_MAX","","",null,null],[17,"_SC_CHARCLASS_NAME_MAX","","",null,null],[17,"_SC_PII","","",null,null],[17,"_SC_PII_XTI","","",null,null],[17,"_SC_PII_SOCKET","","",null,null],[17,"_SC_PII_INTERNET","","",null,null],[17,"_SC_PII_OSI","","",null,null],[17,"_SC_POLL","","",null,null],[17,"_SC_SELECT","","",null,null],[17,"_SC_PII_INTERNET_STREAM","","",null,null],[17,"_SC_PII_INTERNET_DGRAM","","",null,null],[17,"_SC_PII_OSI_COTS","","",null,null],[17,"_SC_PII_OSI_CLTS","","",null,null],[17,"_SC_PII_OSI_M","","",null,null],[17,"_SC_T_IOV_MAX","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_CHAR_BIT","","",null,null],[17,"_SC_CHAR_MAX","","",null,null],[17,"_SC_CHAR_MIN","","",null,null],[17,"_SC_INT_MAX","","",null,null],[17,"_SC_INT_MIN","","",null,null],[17,"_SC_LONG_BIT","","",null,null],[17,"_SC_WORD_BIT","","",null,null],[17,"_SC_MB_LEN_MAX","","",null,null],[17,"_SC_SSIZE_MAX","","",null,null],[17,"_SC_SCHAR_MAX","","",null,null],[17,"_SC_SCHAR_MIN","","",null,null],[17,"_SC_SHRT_MAX","","",null,null],[17,"_SC_SHRT_MIN","","",null,null],[17,"_SC_UCHAR_MAX","","",null,null],[17,"_SC_UINT_MAX","","",null,null],[17,"_SC_ULONG_MAX","","",null,null],[17,"_SC_USHRT_MAX","","",null,null],[17,"_SC_NL_ARGMAX","","",null,null],[17,"_SC_NL_LANGMAX","","",null,null],[17,"_SC_NL_MSGMAX","","",null,null],[17,"_SC_NL_NMAX","","",null,null],[17,"_SC_NL_SETMAX","","",null,null],[17,"_SC_NL_TEXTMAX","","",null,null],[17,"_SC_BASE","","",null,null],[17,"_SC_C_LANG_SUPPORT","","",null,null],[17,"_SC_C_LANG_SUPPORT_R","","",null,null],[17,"_SC_DEVICE_IO","","",null,null],[17,"_SC_DEVICE_SPECIFIC","","",null,null],[17,"_SC_DEVICE_SPECIFIC_R","","",null,null],[17,"_SC_FD_MGMT","","",null,null],[17,"_SC_FIFO","","",null,null],[17,"_SC_PIPE","","",null,null],[17,"_SC_FILE_ATTRIBUTES","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_FILE_SYSTEM","","",null,null],[17,"_SC_MULTI_PROCESS","","",null,null],[17,"_SC_SINGLE_PROCESS","","",null,null],[17,"_SC_NETWORKING","","",null,null],[17,"_SC_REGEX_VERSION","","",null,null],[17,"_SC_SIGNALS","","",null,null],[17,"_SC_SYSTEM_DATABASE","","",null,null],[17,"_SC_SYSTEM_DATABASE_R","","",null,null],[17,"_SC_USER_GROUPS","","",null,null],[17,"_SC_USER_GROUPS_R","","",null,null],[17,"_SC_LEVEL1_ICACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"CGROUP_SUPER_MAGIC","","",null,null],[17,"CGROUP2_SUPER_MAGIC","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"TCA_PAD","","",null,null],[17,"TCA_DUMP_INVISIBLE","","",null,null],[17,"TCA_CHAIN","","",null,null],[17,"TCA_HW_OFFLOAD","","",null,null],[17,"RTM_DELNETCONF","","",null,null],[17,"RTM_NEWSTATS","","",null,null],[17,"RTM_GETSTATS","","",null,null],[17,"RTM_NEWCACHEREPORT","","",null,null],[17,"RTM_F_LOOKUP_TABLE","","",null,null],[17,"RTM_F_FIB_MATCH","","",null,null],[17,"RTA_VIA","","",null,null],[17,"RTA_NEWDST","","",null,null],[17,"RTA_PREF","","",null,null],[17,"RTA_ENCAP_TYPE","","",null,null],[17,"RTA_ENCAP","","",null,null],[17,"RTA_EXPIRES","","",null,null],[17,"RTA_PAD","","",null,null],[17,"RTA_UID","","",null,null],[17,"RTA_TTL_PROPAGATE","","",null,null],[17,"NTF_EXT_LEARNED","","",null,null],[17,"NTF_OFFLOADED","","",null,null],[17,"NDA_MASTER","","",null,null],[17,"NDA_LINK_NETNSID","","",null,null],[17,"NDA_SRC_VNI","","",null,null],[17,"IFA_FLAGS","","",null,null],[17,"IFA_F_MANAGETEMPADDR","","",null,null],[17,"IFA_F_NOPREFIXROUTE","","",null,null],[17,"IFA_F_MCAUTOJOIN","","",null,null],[17,"IFA_F_STABLE_PRIVACY","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"GENL_UNS_ADMIN_PERM","","",null,null],[17,"GENL_ID_VFS_DQUOT","","",null,null],[17,"GENL_ID_PMCRAID","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"NF_NETDEV_INGRESS","","",null,null],[17,"NF_NETDEV_NUMHOOKS","","",null,null],[17,"NFPROTO_INET","","",null,null],[17,"NFPROTO_NETDEV","","",null,null],[17,"KEYCTL_DH_COMPUTE","","",null,null],[17,"KEYCTL_PKEY_QUERY","","",null,null],[17,"KEYCTL_PKEY_ENCRYPT","","",null,null],[17,"KEYCTL_PKEY_DECRYPT","","",null,null],[17,"KEYCTL_PKEY_SIGN","","",null,null],[17,"KEYCTL_PKEY_VERIFY","","",null,null],[17,"KEYCTL_RESTRICT_KEYRING","","",null,null],[17,"KEYCTL_SUPPORTS_ENCRYPT","","",null,null],[17,"KEYCTL_SUPPORTS_DECRYPT","","",null,null],[17,"KEYCTL_SUPPORTS_SIGN","","",null,null],[17,"KEYCTL_SUPPORTS_VERIFY","","",null,null],[17,"KEYCTL_MOVE","","",null,null],[17,"KEYCTL_CAPABILITIES","","",null,null],[17,"KEYCTL_CAPS0_CAPABILITIES","","",null,null],[17,"KEYCTL_CAPS0_PERSISTENT_KEYRINGS","","",null,null],[17,"KEYCTL_CAPS0_DIFFIE_HELLMAN","","",null,null],[17,"KEYCTL_CAPS0_PUBLIC_KEY","","",null,null],[17,"KEYCTL_CAPS0_BIG_KEY","","",null,null],[17,"KEYCTL_CAPS0_INVALIDATE","","",null,null],[17,"KEYCTL_CAPS0_RESTRICT_KEYRING","","",null,null],[17,"KEYCTL_CAPS0_MOVE","","",null,null],[17,"KEYCTL_CAPS1_NS_KEYRING_NAME","","",null,null],[17,"KEYCTL_CAPS1_NS_KEY_TAG","","",null,null],[17,"NFT_TABLE_MAXNAMELEN","","",null,null],[17,"NFT_CHAIN_MAXNAMELEN","","",null,null],[17,"NFT_SET_MAXNAMELEN","","",null,null],[17,"NFT_OBJ_MAXNAMELEN","","",null,null],[17,"NFT_USERDATA_MAXLEN","","",null,null],[17,"NFT_REG_VERDICT","","",null,null],[17,"NFT_REG_1","","",null,null],[17,"NFT_REG_2","","",null,null],[17,"NFT_REG_3","","",null,null],[17,"NFT_REG_4","","",null,null],[17,"__NFT_REG_MAX","","",null,null],[17,"NFT_REG32_00","","",null,null],[17,"NFT_REG32_01","","",null,null],[17,"NFT_REG32_02","","",null,null],[17,"NFT_REG32_03","","",null,null],[17,"NFT_REG32_04","","",null,null],[17,"NFT_REG32_05","","",null,null],[17,"NFT_REG32_06","","",null,null],[17,"NFT_REG32_07","","",null,null],[17,"NFT_REG32_08","","",null,null],[17,"NFT_REG32_09","","",null,null],[17,"NFT_REG32_10","","",null,null],[17,"NFT_REG32_11","","",null,null],[17,"NFT_REG32_12","","",null,null],[17,"NFT_REG32_13","","",null,null],[17,"NFT_REG32_14","","",null,null],[17,"NFT_REG32_15","","",null,null],[17,"NFT_REG_SIZE","","",null,null],[17,"NFT_REG32_SIZE","","",null,null],[17,"NFT_CONTINUE","","",null,null],[17,"NFT_BREAK","","",null,null],[17,"NFT_JUMP","","",null,null],[17,"NFT_GOTO","","",null,null],[17,"NFT_RETURN","","",null,null],[17,"NFT_MSG_NEWTABLE","","",null,null],[17,"NFT_MSG_GETTABLE","","",null,null],[17,"NFT_MSG_DELTABLE","","",null,null],[17,"NFT_MSG_NEWCHAIN","","",null,null],[17,"NFT_MSG_GETCHAIN","","",null,null],[17,"NFT_MSG_DELCHAIN","","",null,null],[17,"NFT_MSG_NEWRULE","","",null,null],[17,"NFT_MSG_GETRULE","","",null,null],[17,"NFT_MSG_DELRULE","","",null,null],[17,"NFT_MSG_NEWSET","","",null,null],[17,"NFT_MSG_GETSET","","",null,null],[17,"NFT_MSG_DELSET","","",null,null],[17,"NFT_MSG_NEWSETELEM","","",null,null],[17,"NFT_MSG_GETSETELEM","","",null,null],[17,"NFT_MSG_DELSETELEM","","",null,null],[17,"NFT_MSG_NEWGEN","","",null,null],[17,"NFT_MSG_GETGEN","","",null,null],[17,"NFT_MSG_TRACE","","",null,null],[17,"NFT_MSG_NEWOBJ","","",null,null],[17,"NFT_MSG_GETOBJ","","",null,null],[17,"NFT_MSG_DELOBJ","","",null,null],[17,"NFT_MSG_GETOBJ_RESET","","",null,null],[17,"NFT_MSG_MAX","","",null,null],[17,"NFT_SET_ANONYMOUS","","",null,null],[17,"NFT_SET_CONSTANT","","",null,null],[17,"NFT_SET_INTERVAL","","",null,null],[17,"NFT_SET_MAP","","",null,null],[17,"NFT_SET_TIMEOUT","","",null,null],[17,"NFT_SET_EVAL","","",null,null],[17,"NFT_SET_POL_PERFORMANCE","","",null,null],[17,"NFT_SET_POL_MEMORY","","",null,null],[17,"NFT_SET_ELEM_INTERVAL_END","","",null,null],[17,"NFT_DATA_VALUE","","",null,null],[17,"NFT_DATA_VERDICT","","",null,null],[17,"NFT_DATA_RESERVED_MASK","","",null,null],[17,"NFT_DATA_VALUE_MAXLEN","","",null,null],[17,"NFT_BYTEORDER_NTOH","","",null,null],[17,"NFT_BYTEORDER_HTON","","",null,null],[17,"NFT_CMP_EQ","","",null,null],[17,"NFT_CMP_NEQ","","",null,null],[17,"NFT_CMP_LT","","",null,null],[17,"NFT_CMP_LTE","","",null,null],[17,"NFT_CMP_GT","","",null,null],[17,"NFT_CMP_GTE","","",null,null],[17,"NFT_RANGE_EQ","","",null,null],[17,"NFT_RANGE_NEQ","","",null,null],[17,"NFT_LOOKUP_F_INV","","",null,null],[17,"NFT_DYNSET_OP_ADD","","",null,null],[17,"NFT_DYNSET_OP_UPDATE","","",null,null],[17,"NFT_DYNSET_F_INV","","",null,null],[17,"NFT_PAYLOAD_LL_HEADER","","",null,null],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",null,null],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",null,null],[17,"NFT_PAYLOAD_CSUM_NONE","","",null,null],[17,"NFT_PAYLOAD_CSUM_INET","","",null,null],[17,"NFT_META_LEN","","",null,null],[17,"NFT_META_PROTOCOL","","",null,null],[17,"NFT_META_PRIORITY","","",null,null],[17,"NFT_META_MARK","","",null,null],[17,"NFT_META_IIF","","",null,null],[17,"NFT_META_OIF","","",null,null],[17,"NFT_META_IIFNAME","","",null,null],[17,"NFT_META_OIFNAME","","",null,null],[17,"NFT_META_IIFTYPE","","",null,null],[17,"NFT_META_OIFTYPE","","",null,null],[17,"NFT_META_SKUID","","",null,null],[17,"NFT_META_SKGID","","",null,null],[17,"NFT_META_NFTRACE","","",null,null],[17,"NFT_META_RTCLASSID","","",null,null],[17,"NFT_META_SECMARK","","",null,null],[17,"NFT_META_NFPROTO","","",null,null],[17,"NFT_META_L4PROTO","","",null,null],[17,"NFT_META_BRI_IIFNAME","","",null,null],[17,"NFT_META_BRI_OIFNAME","","",null,null],[17,"NFT_META_PKTTYPE","","",null,null],[17,"NFT_META_CPU","","",null,null],[17,"NFT_META_IIFGROUP","","",null,null],[17,"NFT_META_OIFGROUP","","",null,null],[17,"NFT_META_CGROUP","","",null,null],[17,"NFT_META_PRANDOM","","",null,null],[17,"NFT_CT_STATE","","",null,null],[17,"NFT_CT_DIRECTION","","",null,null],[17,"NFT_CT_STATUS","","",null,null],[17,"NFT_CT_MARK","","",null,null],[17,"NFT_CT_SECMARK","","",null,null],[17,"NFT_CT_EXPIRATION","","",null,null],[17,"NFT_CT_HELPER","","",null,null],[17,"NFT_CT_L3PROTOCOL","","",null,null],[17,"NFT_CT_SRC","","",null,null],[17,"NFT_CT_DST","","",null,null],[17,"NFT_CT_PROTOCOL","","",null,null],[17,"NFT_CT_PROTO_SRC","","",null,null],[17,"NFT_CT_PROTO_DST","","",null,null],[17,"NFT_CT_LABELS","","",null,null],[17,"NFT_CT_PKTS","","",null,null],[17,"NFT_CT_BYTES","","",null,null],[17,"NFT_LIMIT_PKTS","","",null,null],[17,"NFT_LIMIT_PKT_BYTES","","",null,null],[17,"NFT_LIMIT_F_INV","","",null,null],[17,"NFT_QUEUE_FLAG_BYPASS","","",null,null],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",null,null],[17,"NFT_QUEUE_FLAG_MASK","","",null,null],[17,"NFT_QUOTA_F_INV","","",null,null],[17,"NFT_REJECT_ICMP_UNREACH","","",null,null],[17,"NFT_REJECT_TCP_RST","","",null,null],[17,"NFT_REJECT_ICMPX_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",null,null],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",null,null],[17,"NFT_NAT_SNAT","","",null,null],[17,"NFT_NAT_DNAT","","",null,null],[17,"NFT_TRACETYPE_UNSPEC","","",null,null],[17,"NFT_TRACETYPE_POLICY","","",null,null],[17,"NFT_TRACETYPE_RETURN","","",null,null],[17,"NFT_TRACETYPE_RULE","","",null,null],[17,"NFT_NG_INCREMENTAL","","",null,null],[17,"NFT_NG_RANDOM","","",null,null],[17,"M_MXFAST","","",null,null],[17,"M_NLBLKS","","",null,null],[17,"M_GRAIN","","",null,null],[17,"M_KEEP","","",null,null],[17,"M_TRIM_THRESHOLD","","",null,null],[17,"M_TOP_PAD","","",null,null],[17,"M_MMAP_THRESHOLD","","",null,null],[17,"M_MMAP_MAX","","",null,null],[17,"M_CHECK_ACTION","","",null,null],[17,"M_PERTURB","","",null,null],[17,"M_ARENA_TEST","","",null,null],[17,"M_ARENA_MAX","","",null,null],[17,"AT_STATX_SYNC_TYPE","","",null,null],[17,"AT_STATX_SYNC_AS_STAT","","",null,null],[17,"AT_STATX_FORCE_SYNC","","",null,null],[17,"AT_STATX_DONT_SYNC","","",null,null],[17,"STATX_TYPE","","",null,null],[17,"STATX_MODE","","",null,null],[17,"STATX_NLINK","","",null,null],[17,"STATX_UID","","",null,null],[17,"STATX_GID","","",null,null],[17,"STATX_ATIME","","",null,null],[17,"STATX_MTIME","","",null,null],[17,"STATX_CTIME","","",null,null],[17,"STATX_INO","","",null,null],[17,"STATX_SIZE","","",null,null],[17,"STATX_BLOCKS","","",null,null],[17,"STATX_BASIC_STATS","","",null,null],[17,"STATX_BTIME","","",null,null],[17,"STATX_ALL","","",null,null],[17,"STATX__RESERVED","","",null,null],[17,"STATX_ATTR_COMPRESSED","","",null,null],[17,"STATX_ATTR_IMMUTABLE","","",null,null],[17,"STATX_ATTR_APPEND","","",null,null],[17,"STATX_ATTR_NODUMP","","",null,null],[17,"STATX_ATTR_ENCRYPTED","","",null,null],[17,"STATX_ATTR_AUTOMOUNT","","",null,null],[17,"AT_NULL","","",null,null],[17,"AT_IGNORE","","",null,null],[17,"AT_EXECFD","","",null,null],[17,"AT_PHDR","","",null,null],[17,"AT_PHENT","","",null,null],[17,"AT_PHNUM","","",null,null],[17,"AT_PAGESZ","","",null,null],[17,"AT_BASE","","",null,null],[17,"AT_FLAGS","","",null,null],[17,"AT_ENTRY","","",null,null],[17,"AT_NOTELF","","",null,null],[17,"AT_UID","","",null,null],[17,"AT_EUID","","",null,null],[17,"AT_GID","","",null,null],[17,"AT_EGID","","",null,null],[17,"AT_PLATFORM","","",null,null],[17,"AT_HWCAP","","",null,null],[17,"AT_CLKTCK","","",null,null],[17,"AT_SECURE","","",null,null],[17,"AT_BASE_PLATFORM","","",null,null],[17,"AT_RANDOM","","",null,null],[17,"AT_HWCAP2","","",null,null],[17,"AT_EXECFN","","",null,null],[17,"ADJ_OFFSET","","",null,null],[17,"ADJ_FREQUENCY","","",null,null],[17,"ADJ_MAXERROR","","",null,null],[17,"ADJ_ESTERROR","","",null,null],[17,"ADJ_STATUS","","",null,null],[17,"ADJ_TIMECONST","","",null,null],[17,"ADJ_TAI","","",null,null],[17,"ADJ_SETOFFSET","","",null,null],[17,"ADJ_MICRO","","",null,null],[17,"ADJ_NANO","","",null,null],[17,"ADJ_TICK","","",null,null],[17,"ADJ_OFFSET_SINGLESHOT","","",null,null],[17,"ADJ_OFFSET_SS_READ","","",null,null],[17,"MOD_OFFSET","","",null,null],[17,"MOD_FREQUENCY","","",null,null],[17,"MOD_MAXERROR","","",null,null],[17,"MOD_ESTERROR","","",null,null],[17,"MOD_STATUS","","",null,null],[17,"MOD_TIMECONST","","",null,null],[17,"MOD_CLKB","","",null,null],[17,"MOD_CLKA","","",null,null],[17,"MOD_TAI","","",null,null],[17,"MOD_MICRO","","",null,null],[17,"MOD_NANO","","",null,null],[17,"STA_PLL","","",null,null],[17,"STA_PPSFREQ","","",null,null],[17,"STA_PPSTIME","","",null,null],[17,"STA_FLL","","",null,null],[17,"STA_INS","","",null,null],[17,"STA_DEL","","",null,null],[17,"STA_UNSYNC","","",null,null],[17,"STA_FREQHOLD","","",null,null],[17,"STA_PPSSIGNAL","","",null,null],[17,"STA_PPSJITTER","","",null,null],[17,"STA_PPSWANDER","","",null,null],[17,"STA_PPSERROR","","",null,null],[17,"STA_CLOCKERR","","",null,null],[17,"STA_NANO","","",null,null],[17,"STA_MODE","","",null,null],[17,"STA_CLK","","",null,null],[17,"STA_RONLY","","",null,null],[17,"NTP_API","","",null,null],[17,"TIME_OK","","",null,null],[17,"TIME_INS","","",null,null],[17,"TIME_DEL","","",null,null],[17,"TIME_OOP","","",null,null],[17,"TIME_WAIT","","",null,null],[17,"TIME_ERROR","","",null,null],[17,"TIME_BAD","","",null,null],[17,"MAXTC","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",null,null],[17,"REG_STARTEND","","",null,null],[17,"REG_EEND","","",null,null],[17,"REG_ESIZE","","",null,null],[17,"REG_ERPAREN","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"O_LARGEFILE","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"VEOF","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCGRS485","","",null,null],[17,"TIOCSRS485","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NOATIME","","",null,null],[17,"O_PATH","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"MADV_SOFT_OFFLINE","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"F_OFD_GETLK","","",null,null],[17,"F_OFD_SETLK","","",null,null],[17,"F_OFD_SETLKW","","",null,null],[17,"F_RDLCK","","",null,null],[17,"F_WRLCK","","",null,null],[17,"F_UNLCK","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"MAP_SYNC","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CIBAUD","","",null,null],[17,"CBAUDEX","","",null,null],[17,"VSWTC","","",null,null],[17,"OLCUC","","",null,null],[17,"NLDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"XTABS","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"BOTHER","","",null,null],[17,"B57600","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"B460800","","",null,null],[17,"B500000","","",null,null],[17,"B576000","","",null,null],[17,"B921600","","",null,null],[17,"B1000000","","",null,null],[17,"B1152000","","",null,null],[17,"B1500000","","",null,null],[17,"B2000000","","",null,null],[17,"B2500000","","",null,null],[17,"B3000000","","",null,null],[17,"B3500000","","",null,null],[17,"B4000000","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null],[17,"TIOCSBRK","","",null,null],[17,"TIOCCBRK","","",null,null],[17,"R15","","",null,null],[17,"R14","","",null,null],[17,"R13","","",null,null],[17,"R12","","",null,null],[17,"RBP","","",null,null],[17,"RBX","","",null,null],[17,"R11","","",null,null],[17,"R10","","",null,null],[17,"R9","","",null,null],[17,"R8","","",null,null],[17,"RAX","","",null,null],[17,"RCX","","",null,null],[17,"RDX","","",null,null],[17,"RSI","","",null,null],[17,"RDI","","",null,null],[17,"ORIG_RAX","","",null,null],[17,"RIP","","",null,null],[17,"CS","","",null,null],[17,"EFLAGS","","",null,null],[17,"RSP","","",null,null],[17,"SS","","",null,null],[17,"FS_BASE","","",null,null],[17,"GS_BASE","","",null,null],[17,"DS","","",null,null],[17,"ES","","",null,null],[17,"FS","","",null,null],[17,"GS","","",null,null],[17,"REG_R8","","",null,null],[17,"REG_R9","","",null,null],[17,"REG_R10","","",null,null],[17,"REG_R11","","",null,null],[17,"REG_R12","","",null,null],[17,"REG_R13","","",null,null],[17,"REG_R14","","",null,null],[17,"REG_R15","","",null,null],[17,"REG_RDI","","",null,null],[17,"REG_RSI","","",null,null],[17,"REG_RBP","","",null,null],[17,"REG_RBX","","",null,null],[17,"REG_RDX","","",null,null],[17,"REG_RAX","","",null,null],[17,"REG_RCX","","",null,null],[17,"REG_RSP","","",null,null],[17,"REG_RIP","","",null,null],[17,"REG_EFL","","",null,null],[17,"REG_CSGSFS","","",null,null],[17,"REG_ERR","","",null,null],[17,"REG_TRAPNO","","",null,null],[17,"REG_OLDMASK","","",null,null],[17,"REG_CR2","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"SYS_read","","",null,null],[17,"SYS_write","","",null,null],[17,"SYS_open","","",null,null],[17,"SYS_close","","",null,null],[17,"SYS_stat","","",null,null],[17,"SYS_fstat","","",null,null],[17,"SYS_lstat","","",null,null],[17,"SYS_poll","","",null,null],[17,"SYS_lseek","","",null,null],[17,"SYS_mmap","","",null,null],[17,"SYS_mprotect","","",null,null],[17,"SYS_munmap","","",null,null],[17,"SYS_brk","","",null,null],[17,"SYS_rt_sigaction","","",null,null],[17,"SYS_rt_sigprocmask","","",null,null],[17,"SYS_rt_sigreturn","","",null,null],[17,"SYS_ioctl","","",null,null],[17,"SYS_pread64","","",null,null],[17,"SYS_pwrite64","","",null,null],[17,"SYS_readv","","",null,null],[17,"SYS_writev","","",null,null],[17,"SYS_access","","",null,null],[17,"SYS_pipe","","",null,null],[17,"SYS_select","","",null,null],[17,"SYS_sched_yield","","",null,null],[17,"SYS_mremap","","",null,null],[17,"SYS_msync","","",null,null],[17,"SYS_mincore","","",null,null],[17,"SYS_madvise","","",null,null],[17,"SYS_shmget","","",null,null],[17,"SYS_shmat","","",null,null],[17,"SYS_shmctl","","",null,null],[17,"SYS_dup","","",null,null],[17,"SYS_dup2","","",null,null],[17,"SYS_pause","","",null,null],[17,"SYS_nanosleep","","",null,null],[17,"SYS_getitimer","","",null,null],[17,"SYS_alarm","","",null,null],[17,"SYS_setitimer","","",null,null],[17,"SYS_getpid","","",null,null],[17,"SYS_sendfile","","",null,null],[17,"SYS_socket","","",null,null],[17,"SYS_connect","","",null,null],[17,"SYS_accept","","",null,null],[17,"SYS_sendto","","",null,null],[17,"SYS_recvfrom","","",null,null],[17,"SYS_sendmsg","","",null,null],[17,"SYS_recvmsg","","",null,null],[17,"SYS_shutdown","","",null,null],[17,"SYS_bind","","",null,null],[17,"SYS_listen","","",null,null],[17,"SYS_getsockname","","",null,null],[17,"SYS_getpeername","","",null,null],[17,"SYS_socketpair","","",null,null],[17,"SYS_setsockopt","","",null,null],[17,"SYS_getsockopt","","",null,null],[17,"SYS_clone","","",null,null],[17,"SYS_fork","","",null,null],[17,"SYS_vfork","","",null,null],[17,"SYS_execve","","",null,null],[17,"SYS_exit","","",null,null],[17,"SYS_wait4","","",null,null],[17,"SYS_kill","","",null,null],[17,"SYS_uname","","",null,null],[17,"SYS_semget","","",null,null],[17,"SYS_semop","","",null,null],[17,"SYS_semctl","","",null,null],[17,"SYS_shmdt","","",null,null],[17,"SYS_msgget","","",null,null],[17,"SYS_msgsnd","","",null,null],[17,"SYS_msgrcv","","",null,null],[17,"SYS_msgctl","","",null,null],[17,"SYS_fcntl","","",null,null],[17,"SYS_flock","","",null,null],[17,"SYS_fsync","","",null,null],[17,"SYS_fdatasync","","",null,null],[17,"SYS_truncate","","",null,null],[17,"SYS_ftruncate","","",null,null],[17,"SYS_getdents","","",null,null],[17,"SYS_getcwd","","",null,null],[17,"SYS_chdir","","",null,null],[17,"SYS_fchdir","","",null,null],[17,"SYS_rename","","",null,null],[17,"SYS_mkdir","","",null,null],[17,"SYS_rmdir","","",null,null],[17,"SYS_creat","","",null,null],[17,"SYS_link","","",null,null],[17,"SYS_unlink","","",null,null],[17,"SYS_symlink","","",null,null],[17,"SYS_readlink","","",null,null],[17,"SYS_chmod","","",null,null],[17,"SYS_fchmod","","",null,null],[17,"SYS_chown","","",null,null],[17,"SYS_fchown","","",null,null],[17,"SYS_lchown","","",null,null],[17,"SYS_umask","","",null,null],[17,"SYS_gettimeofday","","",null,null],[17,"SYS_getrlimit","","",null,null],[17,"SYS_getrusage","","",null,null],[17,"SYS_sysinfo","","",null,null],[17,"SYS_times","","",null,null],[17,"SYS_ptrace","","",null,null],[17,"SYS_getuid","","",null,null],[17,"SYS_syslog","","",null,null],[17,"SYS_getgid","","",null,null],[17,"SYS_setuid","","",null,null],[17,"SYS_setgid","","",null,null],[17,"SYS_geteuid","","",null,null],[17,"SYS_getegid","","",null,null],[17,"SYS_setpgid","","",null,null],[17,"SYS_getppid","","",null,null],[17,"SYS_getpgrp","","",null,null],[17,"SYS_setsid","","",null,null],[17,"SYS_setreuid","","",null,null],[17,"SYS_setregid","","",null,null],[17,"SYS_getgroups","","",null,null],[17,"SYS_setgroups","","",null,null],[17,"SYS_setresuid","","",null,null],[17,"SYS_getresuid","","",null,null],[17,"SYS_setresgid","","",null,null],[17,"SYS_getresgid","","",null,null],[17,"SYS_getpgid","","",null,null],[17,"SYS_setfsuid","","",null,null],[17,"SYS_setfsgid","","",null,null],[17,"SYS_getsid","","",null,null],[17,"SYS_capget","","",null,null],[17,"SYS_capset","","",null,null],[17,"SYS_rt_sigpending","","",null,null],[17,"SYS_rt_sigtimedwait","","",null,null],[17,"SYS_rt_sigqueueinfo","","",null,null],[17,"SYS_rt_sigsuspend","","",null,null],[17,"SYS_sigaltstack","","",null,null],[17,"SYS_utime","","",null,null],[17,"SYS_mknod","","",null,null],[17,"SYS_uselib","","",null,null],[17,"SYS_personality","","",null,null],[17,"SYS_ustat","","",null,null],[17,"SYS_statfs","","",null,null],[17,"SYS_fstatfs","","",null,null],[17,"SYS_sysfs","","",null,null],[17,"SYS_getpriority","","",null,null],[17,"SYS_setpriority","","",null,null],[17,"SYS_sched_setparam","","",null,null],[17,"SYS_sched_getparam","","",null,null],[17,"SYS_sched_setscheduler","","",null,null],[17,"SYS_sched_getscheduler","","",null,null],[17,"SYS_sched_get_priority_max","","",null,null],[17,"SYS_sched_get_priority_min","","",null,null],[17,"SYS_sched_rr_get_interval","","",null,null],[17,"SYS_mlock","","",null,null],[17,"SYS_munlock","","",null,null],[17,"SYS_mlockall","","",null,null],[17,"SYS_munlockall","","",null,null],[17,"SYS_vhangup","","",null,null],[17,"SYS_modify_ldt","","",null,null],[17,"SYS_pivot_root","","",null,null],[17,"SYS__sysctl","","",null,null],[17,"SYS_prctl","","",null,null],[17,"SYS_arch_prctl","","",null,null],[17,"SYS_adjtimex","","",null,null],[17,"SYS_setrlimit","","",null,null],[17,"SYS_chroot","","",null,null],[17,"SYS_sync","","",null,null],[17,"SYS_acct","","",null,null],[17,"SYS_settimeofday","","",null,null],[17,"SYS_mount","","",null,null],[17,"SYS_umount2","","",null,null],[17,"SYS_swapon","","",null,null],[17,"SYS_swapoff","","",null,null],[17,"SYS_reboot","","",null,null],[17,"SYS_sethostname","","",null,null],[17,"SYS_setdomainname","","",null,null],[17,"SYS_iopl","","",null,null],[17,"SYS_ioperm","","",null,null],[17,"SYS_create_module","","",null,null],[17,"SYS_init_module","","",null,null],[17,"SYS_delete_module","","",null,null],[17,"SYS_get_kernel_syms","","",null,null],[17,"SYS_query_module","","",null,null],[17,"SYS_quotactl","","",null,null],[17,"SYS_nfsservctl","","",null,null],[17,"SYS_getpmsg","","",null,null],[17,"SYS_putpmsg","","",null,null],[17,"SYS_afs_syscall","","",null,null],[17,"SYS_tuxcall","","",null,null],[17,"SYS_security","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_readahead","","",null,null],[17,"SYS_setxattr","","",null,null],[17,"SYS_lsetxattr","","",null,null],[17,"SYS_fsetxattr","","",null,null],[17,"SYS_getxattr","","",null,null],[17,"SYS_lgetxattr","","",null,null],[17,"SYS_fgetxattr","","",null,null],[17,"SYS_listxattr","","",null,null],[17,"SYS_llistxattr","","",null,null],[17,"SYS_flistxattr","","",null,null],[17,"SYS_removexattr","","",null,null],[17,"SYS_lremovexattr","","",null,null],[17,"SYS_fremovexattr","","",null,null],[17,"SYS_tkill","","",null,null],[17,"SYS_time","","",null,null],[17,"SYS_futex","","",null,null],[17,"SYS_sched_setaffinity","","",null,null],[17,"SYS_sched_getaffinity","","",null,null],[17,"SYS_set_thread_area","","",null,null],[17,"SYS_io_setup","","",null,null],[17,"SYS_io_destroy","","",null,null],[17,"SYS_io_getevents","","",null,null],[17,"SYS_io_submit","","",null,null],[17,"SYS_io_cancel","","",null,null],[17,"SYS_get_thread_area","","",null,null],[17,"SYS_lookup_dcookie","","",null,null],[17,"SYS_epoll_create","","",null,null],[17,"SYS_epoll_ctl_old","","",null,null],[17,"SYS_epoll_wait_old","","",null,null],[17,"SYS_remap_file_pages","","",null,null],[17,"SYS_getdents64","","",null,null],[17,"SYS_set_tid_address","","",null,null],[17,"SYS_restart_syscall","","",null,null],[17,"SYS_semtimedop","","",null,null],[17,"SYS_fadvise64","","",null,null],[17,"SYS_timer_create","","",null,null],[17,"SYS_timer_settime","","",null,null],[17,"SYS_timer_gettime","","",null,null],[17,"SYS_timer_getoverrun","","",null,null],[17,"SYS_timer_delete","","",null,null],[17,"SYS_clock_settime","","",null,null],[17,"SYS_clock_gettime","","",null,null],[17,"SYS_clock_getres","","",null,null],[17,"SYS_clock_nanosleep","","",null,null],[17,"SYS_exit_group","","",null,null],[17,"SYS_epoll_wait","","",null,null],[17,"SYS_epoll_ctl","","",null,null],[17,"SYS_tgkill","","",null,null],[17,"SYS_utimes","","",null,null],[17,"SYS_vserver","","",null,null],[17,"SYS_mbind","","",null,null],[17,"SYS_set_mempolicy","","",null,null],[17,"SYS_get_mempolicy","","",null,null],[17,"SYS_mq_open","","",null,null],[17,"SYS_mq_unlink","","",null,null],[17,"SYS_mq_timedsend","","",null,null],[17,"SYS_mq_timedreceive","","",null,null],[17,"SYS_mq_notify","","",null,null],[17,"SYS_mq_getsetattr","","",null,null],[17,"SYS_kexec_load","","",null,null],[17,"SYS_waitid","","",null,null],[17,"SYS_add_key","","",null,null],[17,"SYS_request_key","","",null,null],[17,"SYS_keyctl","","",null,null],[17,"SYS_ioprio_set","","",null,null],[17,"SYS_ioprio_get","","",null,null],[17,"SYS_inotify_init","","",null,null],[17,"SYS_inotify_add_watch","","",null,null],[17,"SYS_inotify_rm_watch","","",null,null],[17,"SYS_migrate_pages","","",null,null],[17,"SYS_openat","","",null,null],[17,"SYS_mkdirat","","",null,null],[17,"SYS_mknodat","","",null,null],[17,"SYS_fchownat","","",null,null],[17,"SYS_futimesat","","",null,null],[17,"SYS_newfstatat","","",null,null],[17,"SYS_unlinkat","","",null,null],[17,"SYS_renameat","","",null,null],[17,"SYS_linkat","","",null,null],[17,"SYS_symlinkat","","",null,null],[17,"SYS_readlinkat","","",null,null],[17,"SYS_fchmodat","","",null,null],[17,"SYS_faccessat","","",null,null],[17,"SYS_pselect6","","",null,null],[17,"SYS_ppoll","","",null,null],[17,"SYS_unshare","","",null,null],[17,"SYS_set_robust_list","","",null,null],[17,"SYS_get_robust_list","","",null,null],[17,"SYS_splice","","",null,null],[17,"SYS_tee","","",null,null],[17,"SYS_sync_file_range","","",null,null],[17,"SYS_vmsplice","","",null,null],[17,"SYS_move_pages","","",null,null],[17,"SYS_utimensat","","",null,null],[17,"SYS_epoll_pwait","","",null,null],[17,"SYS_signalfd","","",null,null],[17,"SYS_timerfd_create","","",null,null],[17,"SYS_eventfd","","",null,null],[17,"SYS_fallocate","","",null,null],[17,"SYS_timerfd_settime","","",null,null],[17,"SYS_timerfd_gettime","","",null,null],[17,"SYS_accept4","","",null,null],[17,"SYS_signalfd4","","",null,null],[17,"SYS_eventfd2","","",null,null],[17,"SYS_epoll_create1","","",null,null],[17,"SYS_dup3","","",null,null],[17,"SYS_pipe2","","",null,null],[17,"SYS_inotify_init1","","",null,null],[17,"SYS_preadv","","",null,null],[17,"SYS_pwritev","","",null,null],[17,"SYS_rt_tgsigqueueinfo","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"SYS_recvmmsg","","",null,null],[17,"SYS_fanotify_init","","",null,null],[17,"SYS_fanotify_mark","","",null,null],[17,"SYS_prlimit64","","",null,null],[17,"SYS_name_to_handle_at","","",null,null],[17,"SYS_open_by_handle_at","","",null,null],[17,"SYS_clock_adjtime","","",null,null],[17,"SYS_syncfs","","",null,null],[17,"SYS_sendmmsg","","",null,null],[17,"SYS_setns","","",null,null],[17,"SYS_getcpu","","",null,null],[17,"SYS_process_vm_readv","","",null,null],[17,"SYS_process_vm_writev","","",null,null],[17,"SYS_kcmp","","",null,null],[17,"SYS_finit_module","","",null,null],[17,"SYS_sched_setattr","","",null,null],[17,"SYS_sched_getattr","","",null,null],[17,"SYS_renameat2","","",null,null],[17,"SYS_seccomp","","",null,null],[17,"SYS_getrandom","","",null,null],[17,"SYS_memfd_create","","",null,null],[17,"SYS_kexec_file_load","","",null,null],[17,"SYS_bpf","","",null,null],[17,"SYS_execveat","","",null,null],[17,"SYS_userfaultfd","","",null,null],[17,"SYS_membarrier","","",null,null],[17,"SYS_mlock2","","",null,null],[17,"SYS_copy_file_range","","",null,null],[17,"SYS_preadv2","","",null,null],[17,"SYS_pwritev2","","",null,null],[17,"SYS_pkey_mprotect","","",null,null],[17,"SYS_pkey_alloc","","",null,null],[17,"SYS_pkey_free","","",null,null],[17,"SYS_statx","","",null,null],[11,"from","","",139,[[["t"]],["t"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"into","","",139,[[],["u"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"into","","",16,[[],["u"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"into","","",140,[[],["u"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"into","","",141,[[],["u"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into","","",34,[[],["u"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"into","","",35,[[],["u"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"into","","",36,[[],["u"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"into","","",37,[[],["u"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"into","","",38,[[],["u"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"into","","",39,[[],["u"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"into","","",40,[[],["u"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"into","","",41,[[],["u"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"into","","",42,[[],["u"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"into","","",43,[[],["u"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"into","","",44,[[],["u"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"into","","",45,[[],["u"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"into","","",46,[[],["u"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"into","","",142,[[],["u"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"into","","",47,[[],["u"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"into","","",143,[[],["u"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"into","","",48,[[],["u"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"into","","",49,[[],["u"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"into","","",50,[[],["u"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"into","","",51,[[],["u"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"into","","",52,[[],["u"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"into","","",53,[[],["u"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"into","","",54,[[],["u"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"into","","",55,[[],["u"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"into","","",56,[[],["u"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"into","","",57,[[],["u"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"into","","",58,[[],["u"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"into","","",59,[[],["u"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"into","","",60,[[],["u"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"into","","",61,[[],["u"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"into","","",62,[[],["u"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"into","","",63,[[],["u"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"into","","",64,[[],["u"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"into","","",65,[[],["u"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"into","","",66,[[],["u"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"into","","",67,[[],["u"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"into","","",68,[[],["u"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"into","","",69,[[],["u"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"into","","",70,[[],["u"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"into","","",71,[[],["u"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"into","","",72,[[],["u"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"into","","",73,[[],["u"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"into","","",74,[[],["u"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"into","","",75,[[],["u"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"into","","",76,[[],["u"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"into","","",77,[[],["u"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"into","","",144,[[],["u"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"into","","",145,[[],["u"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"into","","",78,[[],["u"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"into","","",79,[[],["u"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"into","","",80,[[],["u"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"into","","",81,[[],["u"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"into","","",82,[[],["u"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"into","","",83,[[],["u"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"into","","",84,[[],["u"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"into","","",85,[[],["u"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"into","","",86,[[],["u"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"into","","",87,[[],["u"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"into","","",88,[[],["u"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"into","","",89,[[],["u"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"into","","",90,[[],["u"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"into","","",91,[[],["u"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"into","","",92,[[],["u"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"into","","",93,[[],["u"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"into","","",94,[[],["u"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"into","","",95,[[],["u"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"into","","",96,[[],["u"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"into","","",97,[[],["u"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"into","","",98,[[],["u"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"into","","",99,[[],["u"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"into","","",100,[[],["u"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"into","","",101,[[],["u"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"into","","",102,[[],["u"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"into","","",103,[[],["u"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"into","","",104,[[],["u"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"into","","",105,[[],["u"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"into","","",106,[[],["u"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"into","","",107,[[],["u"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"into","","",108,[[],["u"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"into","","",109,[[],["u"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"into","","",110,[[],["u"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"into","","",146,[[],["u"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"into","","",111,[[],["u"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"into","","",147,[[],["u"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"into","","",112,[[],["u"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"into","","",113,[[],["u"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"into","","",114,[[],["u"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"into","","",115,[[],["u"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"into","","",116,[[],["u"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"into","","",117,[[],["u"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"into","","",118,[[],["u"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"into","","",119,[[],["u"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"into","","",120,[[],["u"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"into","","",121,[[],["u"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"into","","",122,[[],["u"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"into","","",123,[[],["u"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"into","","",148,[[],["u"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"into","","",124,[[],["u"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"into","","",125,[[],["u"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"into","","",126,[[],["u"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"into","","",127,[[],["u"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"into","","",128,[[],["u"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"into","","",129,[[],["u"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"into","","",130,[[],["u"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"into","","",131,[[],["u"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"into","","",132,[[],["u"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"into","","",133,[[],["u"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"into","","",134,[[],["u"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"into","","",135,[[],["u"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"into","","",136,[[],["u"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"into","","",149,[[],["u"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"into","","",150,[[],["u"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"into","","",151,[[],["u"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"into","","",152,[[],["u"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"into","","",153,[[],["u"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"into","","",137,[[],["u"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"into","","",154,[[],["u"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"into","","",155,[[],["u"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"into","","",156,[[],["u"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"into","","",138,[[],["u"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"into","","",157,[[],["u"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"into","","",158,[[],["u"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"into","","",159,[[],["u"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"into","","",160,[[],["u"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"into","","",161,[[],["u"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"fmt","","",139,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"clone","","",157,[[["self"]],["dir"]]],[11,"clone","","",0,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["utimbuf"]]],[11,"clone","","",2,[[["self"]],["timeval"]]],[11,"clone","","",3,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["rlimit"]]],[11,"clone","","",5,[[["self"]],["rusage"]]],[11,"clone","","",6,[[["self"]],["ipv6_mreq"]]],[11,"clone","","",7,[[["self"]],["hostent"]]],[11,"clone","","",8,[[["self"]],["iovec"]]],[11,"clone","","",9,[[["self"]],["pollfd"]]],[11,"clone","","",10,[[["self"]],["winsize"]]],[11,"clone","","",11,[[["self"]],["linger"]]],[11,"clone","","",12,[[["self"]],["sigval"]]],[11,"clone","","",13,[[["self"]],["itimerval"]]],[11,"clone","","",14,[[["self"]],["tms"]]],[11,"clone","","",15,[[["self"]],["servent"]]],[11,"clone","","",16,[[["self"]],["protoent"]]],[11,"clone","","",158,[[["self"]],["file"]]],[11,"clone","","",159,[[["self"]],["fpos_t"]]],[11,"clone","","",160,[[["self"]],["timezone"]]],[11,"clone","","",17,[[["self"]],["in_addr"]]],[11,"clone","","",18,[[["self"]],["ip_mreq"]]],[11,"clone","","",19,[[["self"]],["ip_mreq_source"]]],[11,"clone","","",20,[[["self"]],["sockaddr"]]],[11,"clone","","",21,[[["self"]],["sockaddr_in"]]],[11,"clone","","",22,[[["self"]],["sockaddr_in6"]]],[11,"clone","","",23,[[["self"]],["addrinfo"]]],[11,"clone","","",24,[[["self"]],["sockaddr_ll"]]],[11,"clone","","",140,[[["self"]],["fd_set"]]],[11,"clone","","",25,[[["self"]],["tm"]]],[11,"clone","","",26,[[["self"]],["sched_param"]]],[11,"clone","","",27,[[["self"]],["dl_info"]]],[11,"clone","","",28,[[["self"]],["lconv"]]],[11,"clone","","",29,[[["self"]],["in_pktinfo"]]],[11,"clone","","",30,[[["self"]],["ifaddrs"]]],[11,"clone","","",141,[[["self"]],["in6_rtmsg"]]],[11,"clone","","",31,[[["self"]],["arpreq"]]],[11,"clone","","",32,[[["self"]],["arpreq_old"]]],[11,"clone","","",33,[[["self"]],["arphdr"]]],[11,"clone","","",34,[[["self"]],["mmsghdr"]]],[11,"clone","","",35,[[["self"]],["epoll_event"]]],[11,"clone","","",36,[[["self"]],["sockaddr_un"]]],[11,"clone","","",37,[[["self"]],["sockaddr_storage"]]],[11,"clone","","",38,[[["self"]],["utsname"]]],[11,"clone","","",39,[[["self"]],["sigevent"]]],[11,"clone","","",161,[[["self"]],["fpos64_t"]]],[11,"clone","","",40,[[["self"]],["rlimit64"]]],[11,"clone","","",41,[[["self"]],["glob_t"]]],[11,"clone","","",42,[[["self"]],["passwd"]]],[11,"clone","","",43,[[["self"]],["spwd"]]],[11,"clone","","",44,[[["self"]],["dqblk"]]],[11,"clone","","",45,[[["self"]],["signalfd_siginfo"]]],[11,"clone","","",46,[[["self"]],["itimerspec"]]],[11,"clone","","",142,[[["self"]],["fsid_t"]]],[11,"clone","","",47,[[["self"]],["packet_mreq"]]],[11,"clone","","",143,[[["self"]],["cpu_set_t"]]],[11,"clone","","",48,[[["self"]],["if_nameindex"]]],[11,"clone","","",49,[[["self"]],["msginfo"]]],[11,"clone","","",50,[[["self"]],["sembuf"]]],[11,"clone","","",51,[[["self"]],["input_event"]]],[11,"clone","","",52,[[["self"]],["input_id"]]],[11,"clone","","",53,[[["self"]],["input_absinfo"]]],[11,"clone","","",54,[[["self"]],["input_keymap_entry"]]],[11,"clone","","",55,[[["self"]],["input_mask"]]],[11,"clone","","",56,[[["self"]],["ff_replay"]]],[11,"clone","","",57,[[["self"]],["ff_trigger"]]],[11,"clone","","",58,[[["self"]],["ff_envelope"]]],[11,"clone","","",59,[[["self"]],["ff_constant_effect"]]],[11,"clone","","",60,[[["self"]],["ff_ramp_effect"]]],[11,"clone","","",61,[[["self"]],["ff_condition_effect"]]],[11,"clone","","",62,[[["self"]],["ff_periodic_effect"]]],[11,"clone","","",63,[[["self"]],["ff_rumble_effect"]]],[11,"clone","","",64,[[["self"]],["ff_effect"]]],[11,"clone","","",65,[[["self"]],["dl_phdr_info"]]],[11,"clone","","",66,[[["self"]],["elf32_ehdr"]]],[11,"clone","","",67,[[["self"]],["elf64_ehdr"]]],[11,"clone","","",68,[[["self"]],["elf32_sym"]]],[11,"clone","","",69,[[["self"]],["elf64_sym"]]],[11,"clone","","",70,[[["self"]],["elf32_phdr"]]],[11,"clone","","",71,[[["self"]],["elf64_phdr"]]],[11,"clone","","",72,[[["self"]],["elf32_shdr"]]],[11,"clone","","",73,[[["self"]],["elf64_shdr"]]],[11,"clone","","",74,[[["self"]],["elf32_chdr"]]],[11,"clone","","",75,[[["self"]],["elf64_chdr"]]],[11,"clone","","",76,[[["self"]],["ucred"]]],[11,"clone","","",77,[[["self"]],["mntent"]]],[11,"clone","","",144,[[["self"]],["posix_spawn_file_actions_t"]]],[11,"clone","","",145,[[["self"]],["posix_spawnattr_t"]]],[11,"clone","","",78,[[["self"]],["genlmsghdr"]]],[11,"clone","","",79,[[["self"]],["in6_pktinfo"]]],[11,"clone","","",80,[[["self"]],["arpd_request"]]],[11,"clone","","",81,[[["self"]],["inotify_event"]]],[11,"clone","","",82,[[["self"]],["fanotify_response"]]],[11,"clone","","",83,[[["self"]],["sockaddr_vm"]]],[11,"clone","","",84,[[["self"]],["regmatch_t"]]],[11,"clone","","",85,[[["self"]],["sock_extended_err"]]],[11,"clone","","",86,[[["self"]],["sockaddr_nl"]]],[11,"clone","","",87,[[["self"]],["dirent"]]],[11,"clone","","",88,[[["self"]],["dirent64"]]],[11,"clone","","",89,[[["self"]],["sockaddr_alg"]]],[11,"clone","","",90,[[["self"]],["af_alg_iv"]]],[11,"clone","","",91,[[["self"]],["mq_attr"]]],[11,"clone","","",92,[[["self"]],["statx"]]],[11,"clone","","",93,[[["self"]],["statx_timestamp"]]],[11,"clone","","",94,[[["self"]],["aiocb"]]],[11,"clone","","",95,[[["self"]],["__exit_status"]]],[11,"clone","","",96,[[["self"]],["__timeval"]]],[11,"clone","","",97,[[["self"]],["glob64_t"]]],[11,"clone","","",98,[[["self"]],["msghdr"]]],[11,"clone","","",99,[[["self"]],["cmsghdr"]]],[11,"clone","","",100,[[["self"]],["termios"]]],[11,"clone","","",101,[[["self"]],["mallinfo"]]],[11,"clone","","",102,[[["self"]],["nlmsghdr"]]],[11,"clone","","",103,[[["self"]],["nlmsgerr"]]],[11,"clone","","",104,[[["self"]],["nl_pktinfo"]]],[11,"clone","","",105,[[["self"]],["nl_mmap_req"]]],[11,"clone","","",106,[[["self"]],["nl_mmap_hdr"]]],[11,"clone","","",107,[[["self"]],["nlattr"]]],[11,"clone","","",108,[[["self"]],["rtentry"]]],[11,"clone","","",109,[[["self"]],["timex"]]],[11,"clone","","",110,[[["self"]],["ntptimeval"]]],[11,"clone","","",146,[[["self"]],["regex_t"]]],[11,"clone","","",111,[[["self"]],["utmpx"]]],[11,"clone","","",147,[[["self"]],["sigset_t"]]],[11,"clone","","",112,[[["self"]],["sysinfo"]]],[11,"clone","","",113,[[["self"]],["msqid_ds"]]],[11,"clone","","",114,[[["self"]],["sigaction"]]],[11,"clone","","",115,[[["self"]],["statfs"]]],[11,"clone","","",116,[[["self"]],["flock"]]],[11,"clone","","",117,[[["self"]],["flock64"]]],[11,"clone","","",118,[[["self"]],["siginfo_t"]]],[11,"clone","","",119,[[["self"]],["stack_t"]]],[11,"clone","","",120,[[["self"]],["stat"]]],[11,"clone","","",121,[[["self"]],["stat64"]]],[11,"clone","","",122,[[["self"]],["statfs64"]]],[11,"clone","","",123,[[["self"]],["statvfs64"]]],[11,"clone","","",148,[[["self"]],["pthread_attr_t"]]],[11,"clone","","",124,[[["self"]],["_libc_fpxreg"]]],[11,"clone","","",125,[[["self"]],["_libc_xmmreg"]]],[11,"clone","","",126,[[["self"]],["_libc_fpstate"]]],[11,"clone","","",127,[[["self"]],["user_regs_struct"]]],[11,"clone","","",128,[[["self"]],["user"]]],[11,"clone","","",129,[[["self"]],["mcontext_t"]]],[11,"clone","","",130,[[["self"]],["ipc_perm"]]],[11,"clone","","",131,[[["self"]],["shmid_ds"]]],[11,"clone","","",132,[[["self"]],["termios2"]]],[11,"clone","","",133,[[["self"]],["ip_mreqn"]]],[11,"clone","","",134,[[["self"]],["user_fpregs_struct"]]],[11,"clone","","",135,[[["self"]],["ucontext_t"]]],[11,"clone","","",136,[[["self"]],["statvfs"]]],[11,"clone","","",149,[[["self"]],["max_align_t"]]],[11,"clone","","",150,[[["self"]],["sem_t"]]],[11,"clone","","",151,[[["self"]],["pthread_mutexattr_t"]]],[11,"clone","","",152,[[["self"]],["pthread_rwlockattr_t"]]],[11,"clone","","",153,[[["self"]],["pthread_condattr_t"]]],[11,"clone","","",137,[[["self"]],["fanotify_event_metadata"]]],[11,"clone","","",154,[[["self"]],["pthread_cond_t"]]],[11,"clone","","",155,[[["self"]],["pthread_mutex_t"]]],[11,"clone","","",156,[[["self"]],["pthread_rwlock_t"]]],[11,"clone","","",138,[[["self"]],["in6_addr"]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"in_addr"],[3,"ip_mreq"],[3,"ip_mreq_source"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"mmsghdr"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"sigevent"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"Elf32_Chdr"],[3,"Elf64_Chdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"inotify_event"],[3,"fanotify_response"],[3,"sockaddr_vm"],[3,"regmatch_t"],[3,"sock_extended_err"],[3,"sockaddr_nl"],[3,"dirent"],[3,"dirent64"],[3,"sockaddr_alg"],[3,"af_alg_iv"],[3,"mq_attr"],[3,"statx"],[3,"statx_timestamp"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"glob64_t"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"timex"],[3,"ntptimeval"],[3,"utmpx"],[3,"sysinfo"],[3,"msqid_ds"],[3,"sigaction"],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,"siginfo_t"],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"ip_mreqn"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"fanotify_event_metadata"],[3,"in6_addr"],[4,"c_void"],[3,"fd_set"],[3,"in6_rtmsg"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"regex_t"],[3,"sigset_t"],[3,"pthread_attr_t"],[3,"max_align_t"],[3,"sem_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,"timezone"],[4,"fpos64_t"]]};
searchIndex["libgit2_sys"] = {"doc":"","i":[[3,"git_revspec","libgit2_sys","",null,null],[12,"from","","",0,null],[12,"to","","",0,null],[12,"flags","","",0,null],[3,"git_error","","",null,null],[12,"message","","",1,null],[12,"klass","","",1,null],[3,"git_oid","","",null,null],[12,"id","","",2,null],[3,"git_strarray","","",null,null],[12,"strings","","",3,null],[12,"count","","",3,null],[3,"git_oidarray","","",null,null],[12,"ids","","",4,null],[12,"count","","",4,null],[3,"git_signature","","",null,null],[12,"name","","",5,null],[12,"email","","",5,null],[12,"when","","",5,null],[3,"git_time","","",null,null],[12,"time","","",6,null],[12,"offset","","",6,null],[12,"sign","","",6,null],[3,"git_clone_options","","",null,null],[12,"version","","",7,null],[12,"checkout_opts","","",7,null],[12,"fetch_opts","","",7,null],[12,"bare","","",7,null],[12,"local","","",7,null],[12,"checkout_branch","","",7,null],[12,"repository_cb","","",7,null],[12,"repository_cb_payload","","",7,null],[12,"remote_cb","","",7,null],[12,"remote_cb_payload","","",7,null],[3,"git_checkout_options","","",null,null],[12,"version","","",8,null],[12,"checkout_strategy","","",8,null],[12,"disable_filters","","",8,null],[12,"dir_mode","","",8,null],[12,"file_mode","","",8,null],[12,"file_open_flags","","",8,null],[12,"notify_flags","","",8,null],[12,"notify_cb","","",8,null],[12,"notify_payload","","",8,null],[12,"progress_cb","","",8,null],[12,"progress_payload","","",8,null],[12,"paths","","",8,null],[12,"baseline","","",8,null],[12,"baseline_index","","",8,null],[12,"target_directory","","",8,null],[12,"ancestor_label","","",8,null],[12,"our_label","","",8,null],[12,"their_label","","",8,null],[12,"perfdata_cb","","",8,null],[12,"perfdata_payload","","",8,null],[3,"git_checkout_perfdata","","",null,null],[12,"mkdir_calls","","",9,null],[12,"stat_calls","","",9,null],[12,"chmod_calls","","",9,null],[3,"git_indexer_progress","","",null,null],[12,"total_objects","","",10,null],[12,"indexed_objects","","",10,null],[12,"received_objects","","",10,null],[12,"local_objects","","",10,null],[12,"total_deltas","","",10,null],[12,"indexed_deltas","","",10,null],[12,"received_bytes","","",10,null],[3,"git_remote_callbacks","","",null,null],[12,"version","","",11,null],[12,"sideband_progress","","",11,null],[12,"completion","","",11,null],[12,"credentials","","",11,null],[12,"certificate_check","","",11,null],[12,"transfer_progress","","",11,null],[12,"update_tips","","",11,null],[12,"pack_progress","","",11,null],[12,"push_transfer_progress","","",11,null],[12,"push_update_reference","","",11,null],[12,"push_negotiation","","",11,null],[12,"transport","","",11,null],[12,"payload","","",11,null],[12,"resolve_url","","",11,null],[3,"git_fetch_options","","",null,null],[12,"version","","",12,null],[12,"callbacks","","",12,null],[12,"prune","","",12,null],[12,"update_fetchhead","","",12,null],[12,"download_tags","","",12,null],[12,"proxy_opts","","",12,null],[12,"custom_headers","","",12,null],[3,"git_push_update","","",null,null],[12,"src_refname","","",13,null],[12,"dst_refname","","",13,null],[12,"src","","",13,null],[12,"dst","","",13,null],[3,"git_cert","","",null,null],[12,"cert_type","","",14,null],[3,"git_cert_hostkey","","",null,null],[12,"parent","","",15,null],[12,"kind","","",15,null],[12,"hash_md5","","",15,null],[12,"hash_sha1","","",15,null],[12,"hash_sha256","","",15,null],[3,"git_cert_x509","","",null,null],[12,"parent","","",16,null],[12,"data","","",16,null],[12,"len","","",16,null],[3,"git_diff_file","","",null,null],[12,"id","","",17,null],[12,"path","","",17,null],[12,"size","","",17,null],[12,"flags","","",17,null],[12,"mode","","",17,null],[12,"id_abbrev","","",17,null],[3,"git_status_options","","",null,null],[12,"version","","",18,null],[12,"show","","",18,null],[12,"flags","","",18,null],[12,"pathspec","","",18,null],[12,"baseline","","",18,null],[3,"git_diff_delta","","",null,null],[12,"status","","",19,null],[12,"flags","","",19,null],[12,"similarity","","",19,null],[12,"nfiles","","",19,null],[12,"old_file","","",19,null],[12,"new_file","","",19,null],[3,"git_status_entry","","",null,null],[12,"status","","",20,null],[12,"head_to_index","","",20,null],[12,"index_to_workdir","","",20,null],[3,"git_buf","","",null,null],[12,"ptr","","",21,null],[12,"asize","","",21,null],[12,"size","","",21,null],[3,"git_blame_options","","",null,null],[12,"version","","",22,null],[12,"flags","","",22,null],[12,"min_match_characters","","",22,null],[12,"newest_commit","","",22,null],[12,"oldest_commit","","",22,null],[12,"min_line","","",22,null],[12,"max_line","","",22,null],[3,"git_blame_hunk","","",null,null],[12,"lines_in_hunk","","",23,null],[12,"final_commit_id","","",23,null],[12,"final_start_line_number","","",23,null],[12,"final_signature","","",23,null],[12,"orig_commit_id","","",23,null],[12,"orig_path","","",23,null],[12,"orig_start_line_number","","",23,null],[12,"orig_signature","","",23,null],[12,"boundary","","",23,null],[3,"git_index_entry","","",null,null],[12,"ctime","","",24,null],[12,"mtime","","",24,null],[12,"dev","","",24,null],[12,"ino","","",24,null],[12,"mode","","",24,null],[12,"uid","","",24,null],[12,"gid","","",24,null],[12,"file_size","","",24,null],[12,"id","","",24,null],[12,"flags","","",24,null],[12,"flags_extended","","",24,null],[12,"path","","",24,null],[3,"git_index_time","","",null,null],[12,"seconds","","",25,null],[12,"nanoseconds","","",25,null],[3,"git_config_entry","","",null,null],[12,"name","","",26,null],[12,"value","","",26,null],[12,"include_depth","","",26,null],[12,"level","","",26,null],[12,"free","","",26,null],[12,"payload","","",26,null],[3,"git_submodule_update_options","","",null,null],[12,"version","","",27,null],[12,"checkout_opts","","",27,null],[12,"fetch_opts","","",27,null],[12,"allow_fetch","","",27,null],[3,"git_writestream","","",null,null],[12,"write","","",28,null],[12,"close","","",28,null],[12,"free","","",28,null],[3,"git_cred","","",null,null],[12,"credtype","","",29,null],[12,"free","","",29,null],[3,"git_push_options","","",null,null],[12,"version","","",30,null],[12,"pb_parallelism","","",30,null],[12,"callbacks","","",30,null],[12,"proxy_opts","","",30,null],[12,"custom_headers","","",30,null],[3,"git_repository_init_options","","",null,null],[12,"version","","",31,null],[12,"flags","","",31,null],[12,"mode","","",31,null],[12,"workdir_path","","",31,null],[12,"description","","",31,null],[12,"template_path","","",31,null],[12,"initial_head","","",31,null],[12,"origin_url","","",31,null],[3,"git_remote_head","","",null,null],[12,"local","","",32,null],[12,"oid","","",32,null],[12,"loid","","",32,null],[12,"name","","",32,null],[12,"symref_target","","",32,null],[3,"git_diff_hunk","","",null,null],[12,"old_start","","",33,null],[12,"old_lines","","",33,null],[12,"new_start","","",33,null],[12,"new_lines","","",33,null],[12,"header_len","","",33,null],[12,"header","","",33,null],[3,"git_diff_line","","",null,null],[12,"origin","","",34,null],[12,"old_lineno","","",34,null],[12,"new_lineno","","",34,null],[12,"num_lines","","",34,null],[12,"content_len","","",34,null],[12,"content_offset","","",34,null],[12,"content","","",34,null],[3,"git_diff_options","","",null,null],[12,"version","","",35,null],[12,"flags","","",35,null],[12,"ignore_submodules","","",35,null],[12,"pathspec","","",35,null],[12,"notify_cb","","",35,null],[12,"progress_cb","","",35,null],[12,"payload","","",35,null],[12,"context_lines","","",35,null],[12,"interhunk_lines","","",35,null],[12,"id_abbrev","","",35,null],[12,"max_size","","",35,null],[12,"old_prefix","","",35,null],[12,"new_prefix","","",35,null],[3,"git_diff_find_options","","",null,null],[12,"version","","",36,null],[12,"flags","","",36,null],[12,"rename_threshold","","",36,null],[12,"rename_from_rewrite_threshold","","",36,null],[12,"copy_threshold","","",36,null],[12,"break_rewrite_threshold","","",36,null],[12,"rename_limit","","",36,null],[12,"metric","","",36,null],[3,"git_diff_similarity_metric","","",null,null],[12,"file_signature","","",37,null],[12,"buffer_signature","","",37,null],[12,"free_signature","","",37,null],[12,"similarity","","",37,null],[12,"payload","","",37,null],[3,"git_diff_format_email_options","","",null,null],[12,"version","","",38,null],[12,"flags","","",38,null],[12,"patch_no","","",38,null],[12,"total_patches","","",38,null],[12,"id","","",38,null],[12,"summary","","",38,null],[12,"body","","",38,null],[12,"author","","",38,null],[3,"git_diff_binary","","",null,null],[12,"contains_data","","",39,null],[12,"old_file","","",39,null],[12,"new_file","","",39,null],[3,"git_diff_binary_file","","",null,null],[12,"kind","","",40,null],[12,"data","","",40,null],[12,"datalen","","",40,null],[12,"inflatedlen","","",40,null],[3,"git_merge_options","","",null,null],[12,"version","","",41,null],[12,"flags","","",41,null],[12,"rename_threshold","","",41,null],[12,"target_limit","","",41,null],[12,"metric","","",41,null],[12,"recursion_limit","","",41,null],[12,"default_driver","","",41,null],[12,"file_favor","","",41,null],[12,"file_flags","","",41,null],[3,"git_transport","","",null,null],[12,"version","","",42,null],[12,"set_callbacks","","",42,null],[12,"set_custom_headers","","",42,null],[12,"connect","","",42,null],[12,"ls","","",42,null],[12,"push","","",42,null],[12,"negotiate_fetch","","",42,null],[12,"download_pack","","",42,null],[12,"is_connected","","",42,null],[12,"read_flags","","",42,null],[12,"cancel","","",42,null],[12,"close","","",42,null],[12,"free","","",42,null],[3,"git_odb_backend","","",null,null],[12,"version","","",43,null],[12,"odb","","",43,null],[12,"read","","",43,null],[12,"read_prefix","","",43,null],[12,"read_header","","",43,null],[12,"write","","",43,null],[12,"writestream","","",43,null],[12,"readstream","","",43,null],[12,"exists","","",43,null],[12,"exists_prefix","","",43,null],[12,"refresh","","",43,null],[12,"foreach","","",43,null],[12,"writepack","","",43,null],[12,"freshen","","",43,null],[12,"free","","",43,null],[3,"git_odb_writepack","","",null,null],[12,"backend","","",44,null],[12,"append","","",44,null],[12,"commit","","",44,null],[12,"free","","",44,null],[3,"git_refdb_backend","","",null,null],[12,"version","","",45,null],[12,"exists","","",45,null],[12,"lookup","","",45,null],[12,"iterator","","",45,null],[12,"write","","",45,null],[12,"rename","","",45,null],[12,"del","","",45,null],[12,"compress","","",45,null],[12,"has_log","","",45,null],[12,"ensure_log","","",45,null],[12,"free","","",45,null],[12,"reflog_read","","",45,null],[12,"reflog_write","","",45,null],[12,"reflog_rename","","",45,null],[12,"reflog_delete","","",45,null],[12,"lock","","",45,null],[12,"unlock","","",45,null],[3,"git_proxy_options","","",null,null],[12,"version","","",46,null],[12,"kind","","",46,null],[12,"url","","",46,null],[12,"credentials","","",46,null],[12,"certificate_check","","",46,null],[12,"payload","","",46,null],[3,"git_smart_subtransport_stream","","",null,null],[12,"subtransport","","",47,null],[12,"read","","",47,null],[12,"write","","",47,null],[12,"free","","",47,null],[3,"git_smart_subtransport","","",null,null],[12,"action","","",48,null],[12,"close","","",48,null],[12,"free","","",48,null],[3,"git_smart_subtransport_definition","","",null,null],[12,"callback","","",49,null],[12,"rpc","","",49,null],[12,"param","","",49,null],[3,"git_describe_options","","",null,null],[12,"version","","",50,null],[12,"max_candidates_tags","","",50,null],[12,"describe_strategy","","",50,null],[12,"pattern","","",50,null],[12,"only_follow_first_parent","","",50,null],[12,"show_commit_oid_as_fallback","","",50,null],[3,"git_describe_format_options","","",null,null],[12,"version","","",51,null],[12,"abbreviated_size","","",51,null],[12,"always_use_long_format","","",51,null],[12,"dirty_suffix","","",51,null],[3,"git_stash_apply_options","","",null,null],[12,"version","","",52,null],[12,"flags","","",52,null],[12,"checkout_options","","",52,null],[12,"progress_cb","","",52,null],[12,"progress_payload","","",52,null],[3,"git_rebase_options","","",null,null],[12,"version","","",53,null],[12,"quiet","","",53,null],[12,"inmemory","","",53,null],[12,"rewrite_notes_ref","","",53,null],[12,"merge_options","","",53,null],[12,"checkout_options","","",53,null],[12,"signing_cb","","",53,null],[12,"payload","","",53,null],[3,"git_rebase_operation","","",null,null],[12,"kind","","",54,null],[12,"id","","",54,null],[12,"exec","","",54,null],[3,"git_cherrypick_options","","",null,null],[12,"version","","",55,null],[12,"mainline","","",55,null],[12,"merge_opts","","",55,null],[12,"checkout_opts","","",55,null],[3,"git_apply_options","","",null,null],[12,"version","","",56,null],[12,"delta_cb","","",56,null],[12,"hunk_cb","","",56,null],[12,"payload","","",56,null],[12,"flags","","",56,null],[4,"git_blob","","",null,null],[4,"git_branch_iterator","","",null,null],[4,"git_blame","","",null,null],[4,"git_commit","","",null,null],[4,"git_config","","",null,null],[4,"git_config_iterator","","",null,null],[4,"git_index","","",null,null],[4,"git_index_conflict_iterator","","",null,null],[4,"git_object","","",null,null],[4,"git_reference","","",null,null],[4,"git_reference_iterator","","",null,null],[4,"git_annotated_commit","","",null,null],[4,"git_refdb","","",null,null],[4,"git_refspec","","",null,null],[4,"git_remote","","",null,null],[4,"git_repository","","",null,null],[4,"git_revwalk","","",null,null],[4,"git_submodule","","",null,null],[4,"git_tag","","",null,null],[4,"git_tree","","",null,null],[4,"git_tree_entry","","",null,null],[4,"git_treebuilder","","",null,null],[4,"git_push","","",null,null],[4,"git_note","","",null,null],[4,"git_note_iterator","","",null,null],[4,"git_status_list","","",null,null],[4,"git_pathspec","","",null,null],[4,"git_pathspec_match_list","","",null,null],[4,"git_diff","","",null,null],[4,"git_diff_stats","","",null,null],[4,"git_patch","","",null,null],[4,"git_rebase","","",null,null],[4,"git_reflog","","",null,null],[4,"git_reflog_entry","","",null,null],[4,"git_describe_result","","",null,null],[4,"git_packbuilder","","",null,null],[4,"git_odb","","",null,null],[4,"git_odb_stream","","",null,null],[4,"git_odb_object","","",null,null],[4,"git_worktree","","",null,null],[4,"LIBSSH2_SESSION","","",null,null],[4,"LIBSSH2_USERAUTH_KBDINT_PROMPT","","",null,null],[4,"LIBSSH2_USERAUTH_KBDINT_RESPONSE","","",null,null],[5,"init","","",null,[[]]],[5,"git_libgit2_init","","",null,null],[5,"git_libgit2_shutdown","","",null,null],[5,"git_repository_new","","",null,null],[5,"git_repository_free","","",null,null],[5,"git_repository_open","","",null,null],[5,"git_repository_open_bare","","",null,null],[5,"git_repository_open_ext","","",null,null],[5,"git_repository_open_from_worktree","","",null,null],[5,"git_repository_wrap_odb","","",null,null],[5,"git_repository_init","","",null,null],[5,"git_repository_init_ext","","",null,null],[5,"git_repository_init_init_options","","",null,null],[5,"git_repository_get_namespace","","",null,null],[5,"git_repository_set_namespace","","",null,null],[5,"git_repository_head","","",null,null],[5,"git_repository_set_head","","",null,null],[5,"git_repository_head_detached","","",null,null],[5,"git_repository_set_head_detached","","",null,null],[5,"git_repository_set_head_detached_from_annotated","","",null,null],[5,"git_repository_set_bare","","",null,null],[5,"git_repository_is_worktree","","",null,null],[5,"git_repository_is_bare","","",null,null],[5,"git_repository_is_empty","","",null,null],[5,"git_repository_is_shallow","","",null,null],[5,"git_repository_path","","",null,null],[5,"git_repository_state","","",null,null],[5,"git_repository_workdir","","",null,null],[5,"git_repository_set_workdir","","",null,null],[5,"git_repository_index","","",null,null],[5,"git_repository_set_index","","",null,null],[5,"git_repository_message","","",null,null],[5,"git_repository_message_remove","","",null,null],[5,"git_repository_config","","",null,null],[5,"git_repository_set_config","","",null,null],[5,"git_repository_config_snapshot","","",null,null],[5,"git_repository_discover","","",null,null],[5,"git_repository_set_odb","","",null,null],[5,"git_repository_refdb","","",null,null],[5,"git_repository_set_refdb","","",null,null],[5,"git_repository_reinit_filesystem","","",null,null],[5,"git_ignore_add_rule","","",null,null],[5,"git_ignore_clear_internal_rules","","",null,null],[5,"git_ignore_path_is_ignored","","",null,null],[5,"git_revparse","","",null,null],[5,"git_revparse_single","","",null,null],[5,"git_revparse_ext","","",null,null],[5,"git_object_dup","","",null,null],[5,"git_object_id","","",null,null],[5,"git_object_free","","",null,null],[5,"git_object_lookup","","",null,null],[5,"git_object_type","","",null,null],[5,"git_object_peel","","",null,null],[5,"git_object_short_id","","",null,null],[5,"git_object_type2string","","",null,null],[5,"git_object_string2type","","",null,null],[5,"git_object_typeisloose","","",null,null],[5,"git_oid_fromraw","","",null,null],[5,"git_oid_fromstrn","","",null,null],[5,"git_oid_tostr","","",null,null],[5,"git_oid_cmp","","",null,null],[5,"git_oid_equal","","",null,null],[5,"git_oid_streq","","",null,null],[5,"git_oid_iszero","","",null,null],[5,"git_error_last","","",null,null],[5,"git_error_clear","","",null,null],[5,"git_error_set_str","","",null,null],[5,"git_remote_create","","",null,null],[5,"git_remote_create_with_fetchspec","","",null,null],[5,"git_remote_lookup","","",null,null],[5,"git_remote_create_anonymous","","",null,null],[5,"git_remote_delete","","",null,null],[5,"git_remote_free","","",null,null],[5,"git_remote_name","","",null,null],[5,"git_remote_pushurl","","",null,null],[5,"git_remote_refspec_count","","",null,null],[5,"git_remote_url","","",null,null],[5,"git_remote_connect","","",null,null],[5,"git_remote_connected","","",null,null],[5,"git_remote_disconnect","","",null,null],[5,"git_remote_add_fetch","","",null,null],[5,"git_remote_add_push","","",null,null],[5,"git_remote_download","","",null,null],[5,"git_remote_stop","","",null,null],[5,"git_remote_dup","","",null,null],[5,"git_remote_get_fetch_refspecs","","",null,null],[5,"git_remote_get_push_refspecs","","",null,null],[5,"git_remote_get_refspec","","",null,null],[5,"git_remote_is_valid_name","","",null,null],[5,"git_remote_list","","",null,null],[5,"git_remote_rename","","",null,null],[5,"git_remote_fetch","","",null,null],[5,"git_remote_push","","",null,null],[5,"git_remote_update_tips","","",null,null],[5,"git_remote_set_url","","",null,null],[5,"git_remote_set_pushurl","","",null,null],[5,"git_remote_init_callbacks","","",null,null],[5,"git_fetch_init_options","","",null,null],[5,"git_remote_stats","","",null,null],[5,"git_remote_ls","","",null,null],[5,"git_remote_set_autotag","","",null,null],[5,"git_remote_prune","","",null,null],[5,"git_refspec_direction","","",null,null],[5,"git_refspec_dst","","",null,null],[5,"git_refspec_dst_matches","","",null,null],[5,"git_refspec_src","","",null,null],[5,"git_refspec_src_matches","","",null,null],[5,"git_refspec_force","","",null,null],[5,"git_refspec_string","","",null,null],[5,"git_strarray_free","","",null,null],[5,"git_oidarray_free","","",null,null],[5,"git_signature_default","","",null,null],[5,"git_signature_free","","",null,null],[5,"git_signature_new","","",null,null],[5,"git_signature_now","","",null,null],[5,"git_signature_dup","","",null,null],[5,"git_status_list_new","","",null,null],[5,"git_status_list_entrycount","","",null,null],[5,"git_status_byindex","","",null,null],[5,"git_status_list_free","","",null,null],[5,"git_status_init_options","","",null,null],[5,"git_status_file","","",null,null],[5,"git_status_should_ignore","","",null,null],[5,"git_clone","","",null,null],[5,"git_clone_init_options","","",null,null],[5,"git_reset","","",null,null],[5,"git_reset_default","","",null,null],[5,"git_reference_cmp","","",null,null],[5,"git_reference_delete","","",null,null],[5,"git_reference_free","","",null,null],[5,"git_reference_is_branch","","",null,null],[5,"git_reference_is_note","","",null,null],[5,"git_reference_is_remote","","",null,null],[5,"git_reference_is_tag","","",null,null],[5,"git_reference_is_valid_name","","",null,null],[5,"git_reference_lookup","","",null,null],[5,"git_reference_dwim","","",null,null],[5,"git_reference_name","","",null,null],[5,"git_reference_name_to_id","","",null,null],[5,"git_reference_peel","","",null,null],[5,"git_reference_rename","","",null,null],[5,"git_reference_resolve","","",null,null],[5,"git_reference_shorthand","","",null,null],[5,"git_reference_symbolic_target","","",null,null],[5,"git_reference_target","","",null,null],[5,"git_reference_target_peel","","",null,null],[5,"git_reference_set_target","","",null,null],[5,"git_reference_type","","",null,null],[5,"git_reference_iterator_new","","",null,null],[5,"git_reference_iterator_glob_new","","",null,null],[5,"git_reference_iterator_free","","",null,null],[5,"git_reference_next","","",null,null],[5,"git_reference_next_name","","",null,null],[5,"git_reference_create","","",null,null],[5,"git_reference_symbolic_create","","",null,null],[5,"git_reference_create_matching","","",null,null],[5,"git_reference_symbolic_create_matching","","",null,null],[5,"git_reference_has_log","","",null,null],[5,"git_reference_ensure_log","","",null,null],[5,"git_stash_save","","",null,null],[5,"git_stash_apply_init_options","","",null,null],[5,"git_stash_apply","","",null,null],[5,"git_stash_foreach","","",null,null],[5,"git_stash_drop","","",null,null],[5,"git_stash_pop","","",null,null],[5,"git_submodule_add_finalize","","",null,null],[5,"git_submodule_add_setup","","",null,null],[5,"git_submodule_add_to_index","","",null,null],[5,"git_submodule_branch","","",null,null],[5,"git_submodule_foreach","","",null,null],[5,"git_submodule_free","","",null,null],[5,"git_submodule_head_id","","",null,null],[5,"git_submodule_index_id","","",null,null],[5,"git_submodule_init","","",null,null],[5,"git_submodule_location","","",null,null],[5,"git_submodule_lookup","","",null,null],[5,"git_submodule_name","","",null,null],[5,"git_submodule_open","","",null,null],[5,"git_submodule_path","","",null,null],[5,"git_submodule_reload","","",null,null],[5,"git_submodule_set_ignore","","",null,null],[5,"git_submodule_set_update","","",null,null],[5,"git_submodule_set_url","","",null,null],[5,"git_submodule_sync","","",null,null],[5,"git_submodule_update_strategy","","",null,null],[5,"git_submodule_update","","",null,null],[5,"git_submodule_update_init_options","","",null,null],[5,"git_submodule_url","","",null,null],[5,"git_submodule_wd_id","","",null,null],[5,"git_submodule_status","","",null,null],[5,"git_submodule_set_branch","","",null,null],[5,"git_blob_free","","",null,null],[5,"git_blob_id","","",null,null],[5,"git_blob_is_binary","","",null,null],[5,"git_blob_lookup","","",null,null],[5,"git_blob_lookup_prefix","","",null,null],[5,"git_blob_rawcontent","","",null,null],[5,"git_blob_rawsize","","",null,null],[5,"git_blob_create_frombuffer","","",null,null],[5,"git_blob_create_fromdisk","","",null,null],[5,"git_blob_create_fromworkdir","","",null,null],[5,"git_blob_create_fromstream","","",null,null],[5,"git_blob_create_fromstream_commit","","",null,null],[5,"git_tree_entry_byid","","",null,null],[5,"git_tree_entry_byindex","","",null,null],[5,"git_tree_entry_byname","","",null,null],[5,"git_tree_entry_bypath","","",null,null],[5,"git_tree_entry_cmp","","",null,null],[5,"git_tree_entry_dup","","",null,null],[5,"git_tree_entry_filemode","","",null,null],[5,"git_tree_entry_filemode_raw","","",null,null],[5,"git_tree_entry_free","","",null,null],[5,"git_tree_entry_id","","",null,null],[5,"git_tree_entry_name","","",null,null],[5,"git_tree_entry_to_object","","",null,null],[5,"git_tree_entry_type","","",null,null],[5,"git_tree_entrycount","","",null,null],[5,"git_tree_free","","",null,null],[5,"git_tree_id","","",null,null],[5,"git_tree_lookup","","",null,null],[5,"git_tree_walk","","",null,null],[5,"git_treebuilder_new","","",null,null],[5,"git_treebuilder_clear","","",null,null],[5,"git_treebuilder_entrycount","","",null,null],[5,"git_treebuilder_free","","",null,null],[5,"git_treebuilder_get","","",null,null],[5,"git_treebuilder_insert","","",null,null],[5,"git_treebuilder_remove","","",null,null],[5,"git_treebuilder_filter","","",null,null],[5,"git_treebuilder_write","","",null,null],[5,"git_buf_dispose","","",null,null],[5,"git_buf_grow","","",null,null],[5,"git_buf_set","","",null,null],[5,"git_commit_author","","",null,null],[5,"git_commit_committer","","",null,null],[5,"git_commit_free","","",null,null],[5,"git_commit_id","","",null,null],[5,"git_commit_lookup","","",null,null],[5,"git_commit_message","","",null,null],[5,"git_commit_message_encoding","","",null,null],[5,"git_commit_message_raw","","",null,null],[5,"git_commit_nth_gen_ancestor","","",null,null],[5,"git_commit_parent","","",null,null],[5,"git_commit_parent_id","","",null,null],[5,"git_commit_parentcount","","",null,null],[5,"git_commit_raw_header","","",null,null],[5,"git_commit_summary","","",null,null],[5,"git_commit_time","","",null,null],[5,"git_commit_time_offset","","",null,null],[5,"git_commit_tree","","",null,null],[5,"git_commit_tree_id","","",null,null],[5,"git_commit_amend","","",null,null],[5,"git_commit_create","","",null,null],[5,"git_commit_create_buffer","","",null,null],[5,"git_commit_header_field","","",null,null],[5,"git_annotated_commit_lookup","","",null,null],[5,"git_commit_create_with_signature","","",null,null],[5,"git_commit_extract_signature","","",null,null],[5,"git_branch_create","","",null,null],[5,"git_branch_create_from_annotated","","",null,null],[5,"git_branch_delete","","",null,null],[5,"git_branch_is_head","","",null,null],[5,"git_branch_iterator_free","","",null,null],[5,"git_branch_iterator_new","","",null,null],[5,"git_branch_lookup","","",null,null],[5,"git_branch_move","","",null,null],[5,"git_branch_name","","",null,null],[5,"git_branch_next","","",null,null],[5,"git_branch_set_upstream","","",null,null],[5,"git_branch_upstream","","",null,null],[5,"git_branch_upstream_name","","",null,null],[5,"git_branch_upstream_remote","","",null,null],[5,"git_index_add","","",null,null],[5,"git_index_add_all","","",null,null],[5,"git_index_add_bypath","","",null,null],[5,"git_index_add_frombuffer","","",null,null],[5,"git_index_conflict_add","","",null,null],[5,"git_index_conflict_remove","","",null,null],[5,"git_index_conflict_get","","",null,null],[5,"git_index_conflict_iterator_new","","",null,null],[5,"git_index_conflict_next","","",null,null],[5,"git_index_conflict_iterator_free","","",null,null],[5,"git_index_clear","","",null,null],[5,"git_index_entry_stage","","",null,null],[5,"git_index_entrycount","","",null,null],[5,"git_index_find","","",null,null],[5,"git_index_free","","",null,null],[5,"git_index_get_byindex","","",null,null],[5,"git_index_get_bypath","","",null,null],[5,"git_index_has_conflicts","","",null,null],[5,"git_index_new","","",null,null],[5,"git_index_open","","",null,null],[5,"git_index_path","","",null,null],[5,"git_index_read","","",null,null],[5,"git_index_read_tree","","",null,null],[5,"git_index_remove","","",null,null],[5,"git_index_remove_all","","",null,null],[5,"git_index_remove_bypath","","",null,null],[5,"git_index_remove_directory","","",null,null],[5,"git_index_update_all","","",null,null],[5,"git_index_write","","",null,null],[5,"git_index_write_tree","","",null,null],[5,"git_index_write_tree_to","","",null,null],[5,"git_config_add_file_ondisk","","",null,null],[5,"git_config_delete_entry","","",null,null],[5,"git_config_delete_multivar","","",null,null],[5,"git_config_find_programdata","","",null,null],[5,"git_config_find_global","","",null,null],[5,"git_config_find_system","","",null,null],[5,"git_config_find_xdg","","",null,null],[5,"git_config_free","","",null,null],[5,"git_config_get_bool","","",null,null],[5,"git_config_get_entry","","",null,null],[5,"git_config_get_int32","","",null,null],[5,"git_config_get_int64","","",null,null],[5,"git_config_get_string","","",null,null],[5,"git_config_get_string_buf","","",null,null],[5,"git_config_get_path","","",null,null],[5,"git_config_iterator_free","","",null,null],[5,"git_config_iterator_glob_new","","",null,null],[5,"git_config_iterator_new","","",null,null],[5,"git_config_new","","",null,null],[5,"git_config_next","","",null,null],[5,"git_config_open_default","","",null,null],[5,"git_config_open_global","","",null,null],[5,"git_config_open_level","","",null,null],[5,"git_config_open_ondisk","","",null,null],[5,"git_config_parse_bool","","",null,null],[5,"git_config_parse_int32","","",null,null],[5,"git_config_parse_int64","","",null,null],[5,"git_config_set_bool","","",null,null],[5,"git_config_set_int32","","",null,null],[5,"git_config_set_int64","","",null,null],[5,"git_config_set_multivar","","",null,null],[5,"git_config_set_string","","",null,null],[5,"git_config_snapshot","","",null,null],[5,"git_config_entry_free","","",null,null],[5,"git_attr_get","","",null,null],[5,"git_attr_value","","",null,null],[5,"git_cred_default_new","","",null,null],[5,"git_cred_has_username","","",null,null],[5,"git_cred_ssh_custom_new","","",null,null],[5,"git_cred_ssh_interactive_new","","",null,null],[5,"git_cred_ssh_key_from_agent","","",null,null],[5,"git_cred_ssh_key_new","","",null,null],[5,"git_cred_ssh_key_memory_new","","",null,null],[5,"git_cred_userpass","","",null,null],[5,"git_cred_userpass_plaintext_new","","",null,null],[5,"git_cred_username_new","","",null,null],[5,"git_tag_annotation_create","","",null,null],[5,"git_tag_create","","",null,null],[5,"git_tag_create_frombuffer","","",null,null],[5,"git_tag_create_lightweight","","",null,null],[5,"git_tag_delete","","",null,null],[5,"git_tag_foreach","","",null,null],[5,"git_tag_free","","",null,null],[5,"git_tag_id","","",null,null],[5,"git_tag_list","","",null,null],[5,"git_tag_list_match","","",null,null],[5,"git_tag_lookup","","",null,null],[5,"git_tag_lookup_prefix","","",null,null],[5,"git_tag_message","","",null,null],[5,"git_tag_name","","",null,null],[5,"git_tag_peel","","",null,null],[5,"git_tag_tagger","","",null,null],[5,"git_tag_target","","",null,null],[5,"git_tag_target_id","","",null,null],[5,"git_tag_target_type","","",null,null],[5,"git_checkout_head","","",null,null],[5,"git_checkout_index","","",null,null],[5,"git_checkout_tree","","",null,null],[5,"git_checkout_init_options","","",null,null],[5,"git_annotated_commit_id","","",null,null],[5,"git_annotated_commit_ref","","",null,null],[5,"git_annotated_commit_from_ref","","",null,null],[5,"git_annotated_commit_from_fetchhead","","",null,null],[5,"git_annotated_commit_free","","",null,null],[5,"git_merge_init_options","","",null,null],[5,"git_merge","","",null,null],[5,"git_merge_commits","","",null,null],[5,"git_merge_trees","","",null,null],[5,"git_repository_state_cleanup","","",null,null],[5,"git_merge_analysis","","",null,null],[5,"git_note_author","","",null,null],[5,"git_note_committer","","",null,null],[5,"git_note_create","","",null,null],[5,"git_note_default_ref","","",null,null],[5,"git_note_free","","",null,null],[5,"git_note_id","","",null,null],[5,"git_note_iterator_free","","",null,null],[5,"git_note_iterator_new","","",null,null],[5,"git_note_message","","",null,null],[5,"git_note_next","","",null,null],[5,"git_note_read","","",null,null],[5,"git_note_remove","","",null,null],[5,"git_blame_file","","",null,null],[5,"git_blame_free","","",null,null],[5,"git_blame_init_options","","",null,null],[5,"git_blame_get_hunk_count","","",null,null],[5,"git_blame_get_hunk_byline","","",null,null],[5,"git_blame_get_hunk_byindex","","",null,null],[5,"git_revwalk_new","","",null,null],[5,"git_revwalk_free","","",null,null],[5,"git_revwalk_reset","","",null,null],[5,"git_revwalk_sorting","","",null,null],[5,"git_revwalk_push_head","","",null,null],[5,"git_revwalk_push","","",null,null],[5,"git_revwalk_push_ref","","",null,null],[5,"git_revwalk_push_glob","","",null,null],[5,"git_revwalk_push_range","","",null,null],[5,"git_revwalk_simplify_first_parent","","",null,null],[5,"git_revwalk_hide_head","","",null,null],[5,"git_revwalk_hide","","",null,null],[5,"git_revwalk_hide_ref","","",null,null],[5,"git_revwalk_hide_glob","","",null,null],[5,"git_revwalk_add_hide_cb","","",null,null],[5,"git_revwalk_next","","",null,null],[5,"git_merge_base","","",null,null],[5,"git_merge_base_many","","",null,null],[5,"git_merge_bases","","",null,null],[5,"git_merge_bases_many","","",null,null],[5,"git_pathspec_free","","",null,null],[5,"git_pathspec_match_diff","","",null,null],[5,"git_pathspec_match_index","","",null,null],[5,"git_pathspec_match_list_diff_entry","","",null,null],[5,"git_pathspec_match_list_entry","","",null,null],[5,"git_pathspec_match_list_entrycount","","",null,null],[5,"git_pathspec_match_list_failed_entry","","",null,null],[5,"git_pathspec_match_list_failed_entrycount","","",null,null],[5,"git_pathspec_match_list_free","","",null,null],[5,"git_pathspec_match_tree","","",null,null],[5,"git_pathspec_match_workdir","","",null,null],[5,"git_pathspec_matches_path","","",null,null],[5,"git_pathspec_new","","",null,null],[5,"git_diff_blob_to_buffer","","",null,null],[5,"git_diff_blobs","","",null,null],[5,"git_diff_buffers","","",null,null],[5,"git_diff_from_buffer","","",null,null],[5,"git_diff_find_similar","","",null,null],[5,"git_diff_find_init_options","","",null,null],[5,"git_diff_foreach","","",null,null],[5,"git_diff_free","","",null,null],[5,"git_diff_get_delta","","",null,null],[5,"git_diff_get_stats","","",null,null],[5,"git_diff_index_to_index","","",null,null],[5,"git_diff_index_to_workdir","","",null,null],[5,"git_diff_init_options","","",null,null],[5,"git_diff_is_sorted_icase","","",null,null],[5,"git_diff_merge","","",null,null],[5,"git_diff_num_deltas","","",null,null],[5,"git_diff_num_deltas_of_type","","",null,null],[5,"git_diff_print","","",null,null],[5,"git_diff_stats_deletions","","",null,null],[5,"git_diff_stats_files_changed","","",null,null],[5,"git_diff_stats_free","","",null,null],[5,"git_diff_stats_insertions","","",null,null],[5,"git_diff_stats_to_buf","","",null,null],[5,"git_diff_status_char","","",null,null],[5,"git_diff_tree_to_index","","",null,null],[5,"git_diff_tree_to_tree","","",null,null],[5,"git_diff_tree_to_workdir","","",null,null],[5,"git_diff_tree_to_workdir_with_index","","",null,null],[5,"git_graph_ahead_behind","","",null,null],[5,"git_graph_descendant_of","","",null,null],[5,"git_diff_format_email","","",null,null],[5,"git_diff_format_email_options_init","","",null,null],[5,"git_patch_from_diff","","",null,null],[5,"git_patch_from_blobs","","",null,null],[5,"git_patch_from_blob_and_buffer","","",null,null],[5,"git_patch_from_buffers","","",null,null],[5,"git_patch_free","","",null,null],[5,"git_patch_get_delta","","",null,null],[5,"git_patch_num_hunks","","",null,null],[5,"git_patch_line_stats","","",null,null],[5,"git_patch_get_hunk","","",null,null],[5,"git_patch_num_lines_in_hunk","","",null,null],[5,"git_patch_get_line_in_hunk","","",null,null],[5,"git_patch_size","","",null,null],[5,"git_patch_print","","",null,null],[5,"git_patch_to_buf","","",null,null],[5,"git_reflog_append","","",null,null],[5,"git_reflog_delete","","",null,null],[5,"git_reflog_drop","","",null,null],[5,"git_reflog_entry_byindex","","",null,null],[5,"git_reflog_entry_committer","","",null,null],[5,"git_reflog_entry_id_new","","",null,null],[5,"git_reflog_entry_id_old","","",null,null],[5,"git_reflog_entry_message","","",null,null],[5,"git_reflog_entrycount","","",null,null],[5,"git_reflog_free","","",null,null],[5,"git_reflog_read","","",null,null],[5,"git_reflog_rename","","",null,null],[5,"git_reflog_write","","",null,null],[5,"git_transport_register","","",null,null],[5,"git_transport_unregister","","",null,null],[5,"git_transport_smart","","",null,null],[5,"git_describe_commit","","",null,null],[5,"git_describe_format","","",null,null],[5,"git_describe_result_free","","",null,null],[5,"git_describe_workdir","","",null,null],[5,"git_message_prettify","","",null,null],[5,"git_packbuilder_new","","",null,null],[5,"git_packbuilder_set_threads","","",null,null],[5,"git_packbuilder_insert","","",null,null],[5,"git_packbuilder_insert_tree","","",null,null],[5,"git_packbuilder_insert_commit","","",null,null],[5,"git_packbuilder_insert_walk","","",null,null],[5,"git_packbuilder_insert_recur","","",null,null],[5,"git_packbuilder_write_buf","","",null,null],[5,"git_packbuilder_write","","",null,null],[5,"git_packbuilder_hash","","",null,null],[5,"git_packbuilder_foreach","","",null,null],[5,"git_packbuilder_object_count","","",null,null],[5,"git_packbuilder_written","","",null,null],[5,"git_packbuilder_set_callbacks","","",null,null],[5,"git_packbuilder_free","","",null,null],[5,"git_repository_odb","","",null,null],[5,"git_odb_new","","",null,null],[5,"git_odb_free","","",null,null],[5,"git_odb_open_rstream","","",null,null],[5,"git_odb_stream_read","","",null,null],[5,"git_odb_open_wstream","","",null,null],[5,"git_odb_stream_write","","",null,null],[5,"git_odb_stream_finalize_write","","",null,null],[5,"git_odb_stream_free","","",null,null],[5,"git_odb_foreach","","",null,null],[5,"git_odb_read","","",null,null],[5,"git_odb_read_header","","",null,null],[5,"git_odb_write","","",null,null],[5,"git_odb_write_pack","","",null,null],[5,"git_odb_hash","","",null,null],[5,"git_odb_hashfile","","",null,null],[5,"git_odb_exists_prefix","","",null,null],[5,"git_odb_exists","","",null,null],[5,"git_odb_refresh","","",null,null],[5,"git_odb_object_id","","",null,null],[5,"git_odb_object_size","","",null,null],[5,"git_odb_object_type","","",null,null],[5,"git_odb_object_data","","",null,null],[5,"git_odb_object_dup","","",null,null],[5,"git_odb_object_free","","",null,null],[5,"git_odb_init_backend","","",null,null],[5,"git_odb_add_backend","","",null,null],[5,"git_odb_backend_pack","","",null,null],[5,"git_odb_backend_one_pack","","",null,null],[5,"git_odb_add_disk_alternate","","",null,null],[5,"git_odb_backend_loose","","",null,null],[5,"git_odb_add_alternate","","",null,null],[5,"git_odb_backend_malloc","","",null,null],[5,"git_odb_num_backends","","",null,null],[5,"git_odb_get_backend","","",null,null],[5,"git_mempack_new","","",null,null],[5,"git_mempack_reset","","",null,null],[5,"git_mempack_dump","","",null,null],[5,"git_refdb_new","","",null,null],[5,"git_refdb_open","","",null,null],[5,"git_refdb_backend_fs","","",null,null],[5,"git_refdb_init_backend","","",null,null],[5,"git_refdb_set_backend","","",null,null],[5,"git_refdb_compress","","",null,null],[5,"git_refdb_free","","",null,null],[5,"git_rebase_init_options","","",null,null],[5,"git_rebase_init","","",null,null],[5,"git_rebase_open","","",null,null],[5,"git_rebase_operation_entrycount","","",null,null],[5,"git_rebase_operation_current","","",null,null],[5,"git_rebase_operation_byindex","","",null,null],[5,"git_rebase_orig_head_id","","",null,null],[5,"git_rebase_orig_head_name","","",null,null],[5,"git_rebase_next","","",null,null],[5,"git_rebase_inmemory_index","","",null,null],[5,"git_rebase_commit","","",null,null],[5,"git_rebase_abort","","",null,null],[5,"git_rebase_finish","","",null,null],[5,"git_rebase_free","","",null,null],[5,"git_cherrypick_init_options","","",null,null],[5,"git_cherrypick","","",null,null],[5,"git_cherrypick_commit","","",null,null],[5,"git_apply_options_init","","",null,null],[5,"git_apply_to_tree","","",null,null],[5,"git_apply","","",null,null],[6,"git_off_t","","",null,null],[6,"git_time_t","","",null,null],[6,"git_object_size_t","","",null,null],[6,"git_revparse_mode_t","","",null,null],[6,"git_error_code","","",null,null],[6,"git_error_t","","",null,null],[6,"git_repository_state_t","","",null,null],[6,"git_direction","","",null,null],[6,"git_clone_local_t","","",null,null],[6,"git_checkout_notify_cb","","",null,null],[6,"git_checkout_progress_cb","","",null,null],[6,"git_checkout_perfdata_cb","","",null,null],[6,"git_indexer_progress_cb","","",null,null],[6,"git_transfer_progress","","",null,null],[6,"git_remote_autotag_option_t","","",null,null],[6,"git_fetch_prune_t","","",null,null],[6,"git_remote_completion_type","","",null,null],[6,"git_transport_message_cb","","",null,null],[6,"git_cred_acquire_cb","","",null,null],[6,"git_transfer_progress_cb","","",null,null],[6,"git_packbuilder_progress","","",null,null],[6,"git_push_transfer_progress","","",null,null],[6,"git_transport_certificate_check_cb","","",null,null],[6,"git_push_negotiation","","",null,null],[6,"git_push_update_reference_cb","","",null,null],[6,"git_url_resolve_cb","","",null,null],[6,"git_cert_t","","",null,null],[6,"git_cert_ssh_t","","",null,null],[6,"git_diff_flag_t","","",null,null],[6,"git_repository_create_cb","","",null,null],[6,"git_remote_create_cb","","",null,null],[6,"git_checkout_notify_t","","",null,null],[6,"git_status_t","","",null,null],[6,"git_status_opt_t","","",null,null],[6,"git_status_show_t","","",null,null],[6,"git_delta_t","","",null,null],[6,"git_checkout_strategy_t","","",null,null],[6,"git_reset_t","","",null,null],[6,"git_object_t","","",null,null],[6,"git_reference_t","","",null,null],[6,"git_filemode_t","","",null,null],[6,"git_treewalk_mode","","",null,null],[6,"git_treewalk_cb","","",null,null],[6,"git_treebuilder_filter_cb","","",null,null],[6,"git_revwalk_hide_cb","","",null,null],[6,"git_branch_t","","",null,null],[6,"git_index_matched_path_cb","","",null,null],[6,"git_index_entry_extended_flag_t","","",null,null],[6,"git_index_entry_flag_t","","",null,null],[6,"git_config_level_t","","",null,null],[6,"git_submodule_update_t","","",null,null],[6,"git_submodule_ignore_t","","",null,null],[6,"git_submodule_cb","","",null,null],[6,"git_attr_value_t","","",null,null],[6,"git_credtype_t","","",null,null],[6,"git_cred_ssh_interactive_callback","","",null,null],[6,"git_cred_sign_callback","","",null,null],[6,"git_tag_foreach_cb","","",null,null],[6,"git_index_add_option_t","","",null,null],[6,"git_repository_open_flag_t","","",null,null],[6,"git_repository_init_flag_t","","",null,null],[6,"git_repository_init_mode_t","","",null,null],[6,"git_sort_t","","",null,null],[6,"git_submodule_status_t","","",null,null],[6,"git_pathspec_flag_t","","",null,null],[6,"git_diff_file_cb","","",null,null],[6,"git_diff_hunk_cb","","",null,null],[6,"git_diff_line_cb","","",null,null],[6,"git_diff_binary_cb","","",null,null],[6,"git_diff_line_t","","",null,null],[6,"git_diff_format_t","","",null,null],[6,"git_diff_stats_format_t","","",null,null],[6,"git_diff_notify_cb","","",null,null],[6,"git_diff_progress_cb","","",null,null],[6,"git_diff_option_t","","",null,null],[6,"git_diff_binary_t","","",null,null],[6,"git_merge_flag_t","","",null,null],[6,"git_merge_file_favor_t","","",null,null],[6,"git_merge_file_flag_t","","",null,null],[6,"git_merge_analysis_t","","",null,null],[6,"git_merge_preference_t","","",null,null],[6,"git_transport_cb","","",null,null],[6,"git_proxy_t","","",null,null],[6,"git_smart_service_t","","",null,null],[6,"git_smart_subtransport_cb","","",null,null],[6,"git_describe_strategy_t","","",null,null],[6,"git_packbuilder_stage_t","","",null,null],[6,"git_stash_flags","","",null,null],[6,"git_stash_apply_flags","","",null,null],[6,"git_stash_apply_progress_t","","",null,null],[6,"git_stash_apply_progress_cb","","",null,null],[6,"git_stash_cb","","",null,null],[6,"git_packbuilder_foreach_cb","","",null,null],[6,"git_odb_foreach_cb","","",null,null],[6,"git_commit_signing_cb","","",null,null],[6,"git_rebase_operation_t","","",null,null],[6,"git_apply_delta_cb","","",null,null],[6,"git_apply_hunk_cb","","",null,null],[6,"git_apply_flags_t","","",null,null],[6,"git_apply_location_t","","",null,null],[17,"GIT_OID_RAWSZ","","",null,null],[17,"GIT_OID_HEXSZ","","",null,null],[17,"GIT_CLONE_OPTIONS_VERSION","","",null,null],[17,"GIT_STASH_APPLY_OPTIONS_VERSION","","",null,null],[17,"GIT_CHECKOUT_OPTIONS_VERSION","","",null,null],[17,"GIT_MERGE_OPTIONS_VERSION","","",null,null],[17,"GIT_REMOTE_CALLBACKS_VERSION","","",null,null],[17,"GIT_STATUS_OPTIONS_VERSION","","",null,null],[17,"GIT_BLAME_OPTIONS_VERSION","","",null,null],[17,"GIT_PROXY_OPTIONS_VERSION","","",null,null],[17,"GIT_SUBMODULE_UPDATE_OPTIONS_VERSION","","",null,null],[17,"GIT_ODB_BACKEND_VERSION","","",null,null],[17,"GIT_REFDB_BACKEND_VERSION","","",null,null],[17,"GIT_CHERRYPICK_OPTIONS_VERSION","","",null,null],[17,"GIT_APPLY_OPTIONS_VERSION","","",null,null],[17,"GIT_REVPARSE_SINGLE","","",null,null],[17,"GIT_REVPARSE_RANGE","","",null,null],[17,"GIT_REVPARSE_MERGE_BASE","","",null,null],[17,"GIT_OK","","",null,null],[17,"GIT_ERROR","","",null,null],[17,"GIT_ENOTFOUND","","",null,null],[17,"GIT_EEXISTS","","",null,null],[17,"GIT_EAMBIGUOUS","","",null,null],[17,"GIT_EBUFS","","",null,null],[17,"GIT_EUSER","","",null,null],[17,"GIT_EBAREREPO","","",null,null],[17,"GIT_EUNBORNBRANCH","","",null,null],[17,"GIT_EUNMERGED","","",null,null],[17,"GIT_ENONFASTFORWARD","","",null,null],[17,"GIT_EINVALIDSPEC","","",null,null],[17,"GIT_ECONFLICT","","",null,null],[17,"GIT_ELOCKED","","",null,null],[17,"GIT_EMODIFIED","","",null,null],[17,"GIT_EAUTH","","",null,null],[17,"GIT_ECERTIFICATE","","",null,null],[17,"GIT_EAPPLIED","","",null,null],[17,"GIT_EPEEL","","",null,null],[17,"GIT_EEOF","","",null,null],[17,"GIT_EINVALID","","",null,null],[17,"GIT_EUNCOMMITTED","","",null,null],[17,"GIT_EDIRECTORY","","",null,null],[17,"GIT_EMERGECONFLICT","","",null,null],[17,"GIT_PASSTHROUGH","","",null,null],[17,"GIT_ITEROVER","","",null,null],[17,"GIT_RETRY","","",null,null],[17,"GIT_EMISMATCH","","",null,null],[17,"GIT_EINDEXDIRTY","","",null,null],[17,"GIT_EAPPLYFAIL","","",null,null],[17,"GIT_ERROR_NONE","","",null,null],[17,"GIT_ERROR_NOMEMORY","","",null,null],[17,"GIT_ERROR_OS","","",null,null],[17,"GIT_ERROR_INVALID","","",null,null],[17,"GIT_ERROR_REFERENCE","","",null,null],[17,"GIT_ERROR_ZLIB","","",null,null],[17,"GIT_ERROR_REPOSITORY","","",null,null],[17,"GIT_ERROR_CONFIG","","",null,null],[17,"GIT_ERROR_REGEX","","",null,null],[17,"GIT_ERROR_ODB","","",null,null],[17,"GIT_ERROR_INDEX","","",null,null],[17,"GIT_ERROR_OBJECT","","",null,null],[17,"GIT_ERROR_NET","","",null,null],[17,"GIT_ERROR_TAG","","",null,null],[17,"GIT_ERROR_TREE","","",null,null],[17,"GIT_ERROR_INDEXER","","",null,null],[17,"GIT_ERROR_SSL","","",null,null],[17,"GIT_ERROR_SUBMODULE","","",null,null],[17,"GIT_ERROR_THREAD","","",null,null],[17,"GIT_ERROR_STASH","","",null,null],[17,"GIT_ERROR_CHECKOUT","","",null,null],[17,"GIT_ERROR_FETCHHEAD","","",null,null],[17,"GIT_ERROR_MERGE","","",null,null],[17,"GIT_ERROR_SSH","","",null,null],[17,"GIT_ERROR_FILTER","","",null,null],[17,"GIT_ERROR_REVERT","","",null,null],[17,"GIT_ERROR_CALLBACK","","",null,null],[17,"GIT_ERROR_CHERRYPICK","","",null,null],[17,"GIT_ERROR_DESCRIBE","","",null,null],[17,"GIT_ERROR_REBASE","","",null,null],[17,"GIT_ERROR_FILESYSTEM","","",null,null],[17,"GIT_ERROR_PATCH","","",null,null],[17,"GIT_ERROR_WORKTREE","","",null,null],[17,"GIT_ERROR_SHA1","","",null,null],[17,"GIT_ERROR_HTTP","","",null,null],[17,"GIT_REPOSITORY_STATE_NONE","","",null,null],[17,"GIT_REPOSITORY_STATE_MERGE","","",null,null],[17,"GIT_REPOSITORY_STATE_REVERT","","",null,null],[17,"GIT_REPOSITORY_STATE_REVERT_SEQUENCE","","",null,null],[17,"GIT_REPOSITORY_STATE_CHERRYPICK","","",null,null],[17,"GIT_REPOSITORY_STATE_CHERRYPICK_SEQUENCE","","",null,null],[17,"GIT_REPOSITORY_STATE_BISECT","","",null,null],[17,"GIT_REPOSITORY_STATE_REBASE","","",null,null],[17,"GIT_REPOSITORY_STATE_REBASE_INTERACTIVE","","",null,null],[17,"GIT_REPOSITORY_STATE_REBASE_MERGE","","",null,null],[17,"GIT_REPOSITORY_STATE_APPLY_MAILBOX","","",null,null],[17,"GIT_REPOSITORY_STATE_APPLY_MAILBOX_OR_REBASE","","",null,null],[17,"GIT_DIRECTION_FETCH","","",null,null],[17,"GIT_DIRECTION_PUSH","","",null,null],[17,"GIT_CLONE_LOCAL_AUTO","","",null,null],[17,"GIT_CLONE_LOCAL","","",null,null],[17,"GIT_CLONE_NO_LOCAL","","",null,null],[17,"GIT_CLONE_LOCAL_NO_LINKS","","",null,null],[17,"GIT_REMOTE_DOWNLOAD_TAGS_UNSPECIFIED","","",null,null],[17,"GIT_REMOTE_DOWNLOAD_TAGS_AUTO","","",null,null],[17,"GIT_REMOTE_DOWNLOAD_TAGS_NONE","","",null,null],[17,"GIT_REMOTE_DOWNLOAD_TAGS_ALL","","",null,null],[17,"GIT_FETCH_PRUNE_UNSPECIFIED","","",null,null],[17,"GIT_FETCH_PRUNE","","",null,null],[17,"GIT_FETCH_NO_PRUNE","","",null,null],[17,"GIT_REMOTE_COMPLETION_DOWNLOAD","","",null,null],[17,"GIT_REMOTE_COMPLETION_INDEXING","","",null,null],[17,"GIT_REMOTE_COMPLETION_ERROR","","",null,null],[17,"GIT_CERT_NONE","","",null,null],[17,"GIT_CERT_X509","","",null,null],[17,"GIT_CERT_HOSTKEY_LIBSSH2","","",null,null],[17,"GIT_CERT_STRARRAY","","",null,null],[17,"GIT_CERT_SSH_MD5","","",null,null],[17,"GIT_CERT_SSH_SHA1","","",null,null],[17,"GIT_CERT_SSH_SHA256","","",null,null],[17,"GIT_DIFF_FLAG_BINARY","","",null,null],[17,"GIT_DIFF_FLAG_NOT_BINARY","","",null,null],[17,"GIT_DIFF_FLAG_VALID_ID","","",null,null],[17,"GIT_DIFF_FLAG_EXISTS","","",null,null],[17,"GIT_CHECKOUT_NOTIFY_NONE","","",null,null],[17,"GIT_CHECKOUT_NOTIFY_CONFLICT","","",null,null],[17,"GIT_CHECKOUT_NOTIFY_DIRTY","","",null,null],[17,"GIT_CHECKOUT_NOTIFY_UPDATED","","",null,null],[17,"GIT_CHECKOUT_NOTIFY_UNTRACKED","","",null,null],[17,"GIT_CHECKOUT_NOTIFY_IGNORED","","",null,null],[17,"GIT_CHECKOUT_NOTIFY_ALL","","",null,null],[17,"GIT_STATUS_CURRENT","","",null,null],[17,"GIT_STATUS_INDEX_NEW","","",null,null],[17,"GIT_STATUS_INDEX_MODIFIED","","",null,null],[17,"GIT_STATUS_INDEX_DELETED","","",null,null],[17,"GIT_STATUS_INDEX_RENAMED","","",null,null],[17,"GIT_STATUS_INDEX_TYPECHANGE","","",null,null],[17,"GIT_STATUS_WT_NEW","","",null,null],[17,"GIT_STATUS_WT_MODIFIED","","",null,null],[17,"GIT_STATUS_WT_DELETED","","",null,null],[17,"GIT_STATUS_WT_TYPECHANGE","","",null,null],[17,"GIT_STATUS_WT_RENAMED","","",null,null],[17,"GIT_STATUS_WT_UNREADABLE","","",null,null],[17,"GIT_STATUS_IGNORED","","",null,null],[17,"GIT_STATUS_CONFLICTED","","",null,null],[17,"GIT_STATUS_OPT_INCLUDE_UNTRACKED","","",null,null],[17,"GIT_STATUS_OPT_INCLUDE_IGNORED","","",null,null],[17,"GIT_STATUS_OPT_INCLUDE_UNMODIFIED","","",null,null],[17,"GIT_STATUS_OPT_EXCLUDE_SUBMODULES","","",null,null],[17,"GIT_STATUS_OPT_RECURSE_UNTRACKED_DIRS","","",null,null],[17,"GIT_STATUS_OPT_DISABLE_PATHSPEC_MATCH","","",null,null],[17,"GIT_STATUS_OPT_RECURSE_IGNORED_DIRS","","",null,null],[17,"GIT_STATUS_OPT_RENAMES_HEAD_TO_INDEX","","",null,null],[17,"GIT_STATUS_OPT_RENAMES_INDEX_TO_WORKDIR","","",null,null],[17,"GIT_STATUS_OPT_SORT_CASE_SENSITIVELY","","",null,null],[17,"GIT_STATUS_OPT_SORT_CASE_INSENSITIVELY","","",null,null],[17,"GIT_STATUS_OPT_RENAMES_FROM_REWRITES","","",null,null],[17,"GIT_STATUS_OPT_NO_REFRESH","","",null,null],[17,"GIT_STATUS_OPT_UPDATE_INDEX","","",null,null],[17,"GIT_STATUS_OPT_INCLUDE_UNREADABLE","","",null,null],[17,"GIT_STATUS_OPT_INCLUDE_UNREADABLE_AS_UNTRACKED","","",null,null],[17,"GIT_STATUS_SHOW_INDEX_AND_WORKDIR","","",null,null],[17,"GIT_STATUS_SHOW_INDEX_ONLY","","",null,null],[17,"GIT_STATUS_SHOW_WORKDIR_ONLY","","",null,null],[17,"GIT_DELTA_UNMODIFIED","","",null,null],[17,"GIT_DELTA_ADDED","","",null,null],[17,"GIT_DELTA_DELETED","","",null,null],[17,"GIT_DELTA_MODIFIED","","",null,null],[17,"GIT_DELTA_RENAMED","","",null,null],[17,"GIT_DELTA_COPIED","","",null,null],[17,"GIT_DELTA_IGNORED","","",null,null],[17,"GIT_DELTA_UNTRACKED","","",null,null],[17,"GIT_DELTA_TYPECHANGE","","",null,null],[17,"GIT_DELTA_UNREADABLE","","",null,null],[17,"GIT_DELTA_CONFLICTED","","",null,null],[17,"GIT_CHECKOUT_NONE","","",null,null],[17,"GIT_CHECKOUT_SAFE","","",null,null],[17,"GIT_CHECKOUT_FORCE","","",null,null],[17,"GIT_CHECKOUT_RECREATE_MISSING","","",null,null],[17,"GIT_CHECKOUT_ALLOW_CONFLICTS","","",null,null],[17,"GIT_CHECKOUT_REMOVE_UNTRACKED","","",null,null],[17,"GIT_CHECKOUT_REMOVE_IGNORED","","",null,null],[17,"GIT_CHECKOUT_UPDATE_ONLY","","",null,null],[17,"GIT_CHECKOUT_DONT_UPDATE_INDEX","","",null,null],[17,"GIT_CHECKOUT_NO_REFRESH","","",null,null],[17,"GIT_CHECKOUT_SKIP_UNMERGED","","",null,null],[17,"GIT_CHECKOUT_USE_OURS","","",null,null],[17,"GIT_CHECKOUT_USE_THEIRS","","",null,null],[17,"GIT_CHECKOUT_DISABLE_PATHSPEC_MATCH","","",null,null],[17,"GIT_CHECKOUT_SKIP_LOCKED_DIRECTORIES","","",null,null],[17,"GIT_CHECKOUT_DONT_OVERWRITE_IGNORED","","",null,null],[17,"GIT_CHECKOUT_CONFLICT_STYLE_MERGE","","",null,null],[17,"GIT_CHECKOUT_CONFLICT_STYLE_DIFF3","","",null,null],[17,"GIT_CHECKOUT_UPDATE_SUBMODULES","","",null,null],[17,"GIT_CHECKOUT_UPDATE_SUBMODULES_IF_CHANGED","","",null,null],[17,"GIT_RESET_SOFT","","",null,null],[17,"GIT_RESET_MIXED","","",null,null],[17,"GIT_RESET_HARD","","",null,null],[17,"GIT_OBJECT_ANY","","",null,null],[17,"GIT_OBJECT_INVALID","","",null,null],[17,"GIT_OBJECT_COMMIT","","",null,null],[17,"GIT_OBJECT_TREE","","",null,null],[17,"GIT_OBJECT_BLOB","","",null,null],[17,"GIT_OBJECT_TAG","","",null,null],[17,"GIT_OBJECT_OFS_DELTA","","",null,null],[17,"GIT_OBJECT_REF_DELTA","","",null,null],[17,"GIT_REFERENCE_INVALID","","",null,null],[17,"GIT_REFERENCE_DIRECT","","",null,null],[17,"GIT_REFERENCE_SYMBOLIC","","",null,null],[17,"GIT_REFERENCE_ALL","","",null,null],[17,"GIT_FILEMODE_UNREADABLE","","",null,null],[17,"GIT_FILEMODE_TREE","","",null,null],[17,"GIT_FILEMODE_BLOB","","",null,null],[17,"GIT_FILEMODE_BLOB_EXECUTABLE","","",null,null],[17,"GIT_FILEMODE_LINK","","",null,null],[17,"GIT_FILEMODE_COMMIT","","",null,null],[17,"GIT_TREEWALK_PRE","","",null,null],[17,"GIT_TREEWALK_POST","","",null,null],[17,"GIT_BRANCH_LOCAL","","",null,null],[17,"GIT_BRANCH_REMOTE","","",null,null],[17,"GIT_BRANCH_ALL","","",null,null],[17,"GIT_BLAME_NORMAL","","",null,null],[17,"GIT_BLAME_TRACK_COPIES_SAME_FILE","","",null,null],[17,"GIT_BLAME_TRACK_COPIES_SAME_COMMIT_MOVES","","",null,null],[17,"GIT_BLAME_TRACK_COPIES_SAME_COMMIT_COPIES","","",null,null],[17,"GIT_BLAME_TRACK_COPIES_ANY_COMMIT_COPIES","","",null,null],[17,"GIT_BLAME_FIRST_PARENT","","",null,null],[17,"GIT_INDEX_ENTRY_INTENT_TO_ADD","","",null,null],[17,"GIT_INDEX_ENTRY_SKIP_WORKTREE","","",null,null],[17,"GIT_INDEX_ENTRY_UPTODATE","","",null,null],[17,"GIT_INDEX_ENTRY_EXTENDED","","",null,null],[17,"GIT_INDEX_ENTRY_VALID","","",null,null],[17,"GIT_INDEX_ENTRY_NAMEMASK","","",null,null],[17,"GIT_INDEX_ENTRY_STAGEMASK","","",null,null],[17,"GIT_INDEX_ENTRY_STAGESHIFT","","",null,null],[17,"GIT_CONFIG_LEVEL_PROGRAMDATA","","",null,null],[17,"GIT_CONFIG_LEVEL_SYSTEM","","",null,null],[17,"GIT_CONFIG_LEVEL_XDG","","",null,null],[17,"GIT_CONFIG_LEVEL_GLOBAL","","",null,null],[17,"GIT_CONFIG_LEVEL_LOCAL","","",null,null],[17,"GIT_CONFIG_LEVEL_APP","","",null,null],[17,"GIT_CONFIG_HIGHEST_LEVEL","","",null,null],[17,"GIT_SUBMODULE_UPDATE_CHECKOUT","","",null,null],[17,"GIT_SUBMODULE_UPDATE_REBASE","","",null,null],[17,"GIT_SUBMODULE_UPDATE_MERGE","","",null,null],[17,"GIT_SUBMODULE_UPDATE_NONE","","",null,null],[17,"GIT_SUBMODULE_UPDATE_DEFAULT","","",null,null],[17,"GIT_SUBMODULE_IGNORE_UNSPECIFIED","","",null,null],[17,"GIT_SUBMODULE_IGNORE_NONE","","",null,null],[17,"GIT_SUBMODULE_IGNORE_UNTRACKED","","",null,null],[17,"GIT_SUBMODULE_IGNORE_DIRTY","","",null,null],[17,"GIT_SUBMODULE_IGNORE_ALL","","",null,null],[17,"GIT_ATTR_VALUE_UNSPECIFIED","","",null,null],[17,"GIT_ATTR_VALUE_TRUE","","",null,null],[17,"GIT_ATTR_VALUE_FALSE","","",null,null],[17,"GIT_ATTR_VALUE_STRING","","",null,null],[17,"GIT_ATTR_CHECK_FILE_THEN_INDEX","","",null,null],[17,"GIT_ATTR_CHECK_INDEX_THEN_FILE","","",null,null],[17,"GIT_ATTR_CHECK_INDEX_ONLY","","",null,null],[17,"GIT_ATTR_CHECK_NO_SYSTEM","","",null,null],[17,"GIT_ATTR_CHECK_INCLUDE_HEAD","","",null,null],[17,"GIT_CREDTYPE_USERPASS_PLAINTEXT","","",null,null],[17,"GIT_CREDTYPE_SSH_KEY","","",null,null],[17,"GIT_CREDTYPE_SSH_CUSTOM","","",null,null],[17,"GIT_CREDTYPE_DEFAULT","","",null,null],[17,"GIT_CREDTYPE_SSH_INTERACTIVE","","",null,null],[17,"GIT_CREDTYPE_USERNAME","","",null,null],[17,"GIT_CREDTYPE_SSH_MEMORY","","",null,null],[17,"GIT_INDEX_ADD_DEFAULT","","",null,null],[17,"GIT_INDEX_ADD_FORCE","","",null,null],[17,"GIT_INDEX_ADD_DISABLE_PATHSPEC_MATCH","","",null,null],[17,"GIT_INDEX_ADD_CHECK_PATHSPEC","","",null,null],[17,"GIT_REPOSITORY_OPEN_NO_SEARCH","","",null,null],[17,"GIT_REPOSITORY_OPEN_CROSS_FS","","",null,null],[17,"GIT_REPOSITORY_OPEN_BARE","","",null,null],[17,"GIT_REPOSITORY_OPEN_NO_DOTGIT","","",null,null],[17,"GIT_REPOSITORY_OPEN_FROM_ENV","","",null,null],[17,"GIT_REPOSITORY_INIT_OPTIONS_VERSION","","",null,null],[17,"GIT_REPOSITORY_INIT_BARE","","",null,null],[17,"GIT_REPOSITORY_INIT_NO_REINIT","","",null,null],[17,"GIT_REPOSITORY_INIT_NO_DOTGIT_DIR","","",null,null],[17,"GIT_REPOSITORY_INIT_MKDIR","","",null,null],[17,"GIT_REPOSITORY_INIT_MKPATH","","",null,null],[17,"GIT_REPOSITORY_INIT_EXTERNAL_TEMPLATE","","",null,null],[17,"GIT_REPOSITORY_INIT_SHARED_UMASK","","",null,null],[17,"GIT_REPOSITORY_INIT_SHARED_GROUP","","",null,null],[17,"GIT_REPOSITORY_INIT_SHARED_ALL","","",null,null],[17,"GIT_SORT_NONE","","",null,null],[17,"GIT_SORT_TOPOLOGICAL","","",null,null],[17,"GIT_SORT_TIME","","",null,null],[17,"GIT_SORT_REVERSE","","",null,null],[17,"GIT_SUBMODULE_STATUS_IN_HEAD","","",null,null],[17,"GIT_SUBMODULE_STATUS_IN_INDEX","","",null,null],[17,"GIT_SUBMODULE_STATUS_IN_CONFIG","","",null,null],[17,"GIT_SUBMODULE_STATUS_IN_WD","","",null,null],[17,"GIT_SUBMODULE_STATUS_INDEX_ADDED","","",null,null],[17,"GIT_SUBMODULE_STATUS_INDEX_DELETED","","",null,null],[17,"GIT_SUBMODULE_STATUS_INDEX_MODIFIED","","",null,null],[17,"GIT_SUBMODULE_STATUS_WD_UNINITIALIZED","","",null,null],[17,"GIT_SUBMODULE_STATUS_WD_ADDED","","",null,null],[17,"GIT_SUBMODULE_STATUS_WD_DELETED","","",null,null],[17,"GIT_SUBMODULE_STATUS_WD_MODIFIED","","",null,null],[17,"GIT_SUBMODULE_STATUS_WD_INDEX_MODIFIED","","",null,null],[17,"GIT_SUBMODULE_STATUS_WD_WD_MODIFIED","","",null,null],[17,"GIT_SUBMODULE_STATUS_WD_UNTRACKED","","",null,null],[17,"GIT_PATHSPEC_DEFAULT","","",null,null],[17,"GIT_PATHSPEC_IGNORE_CASE","","",null,null],[17,"GIT_PATHSPEC_USE_CASE","","",null,null],[17,"GIT_PATHSPEC_NO_GLOB","","",null,null],[17,"GIT_PATHSPEC_NO_MATCH_ERROR","","",null,null],[17,"GIT_PATHSPEC_FIND_FAILURES","","",null,null],[17,"GIT_PATHSPEC_FAILURES_ONLY","","",null,null],[17,"GIT_DIFF_LINE_CONTEXT","","",null,null],[17,"GIT_DIFF_LINE_ADDITION","","",null,null],[17,"GIT_DIFF_LINE_DELETION","","",null,null],[17,"GIT_DIFF_LINE_CONTEXT_EOFNL","","",null,null],[17,"GIT_DIFF_LINE_ADD_EOFNL","","",null,null],[17,"GIT_DIFF_LINE_DEL_EOFNL","","",null,null],[17,"GIT_DIFF_LINE_FILE_HDR","","",null,null],[17,"GIT_DIFF_LINE_HUNK_HDR","","",null,null],[17,"GIT_DIFF_LINE_BINARY","","",null,null],[17,"GIT_DIFF_FORMAT_PATCH","","",null,null],[17,"GIT_DIFF_FORMAT_PATCH_HEADER","","",null,null],[17,"GIT_DIFF_FORMAT_RAW","","",null,null],[17,"GIT_DIFF_FORMAT_NAME_ONLY","","",null,null],[17,"GIT_DIFF_FORMAT_NAME_STATUS","","",null,null],[17,"GIT_DIFF_FORMAT_PATCH_ID","","",null,null],[17,"GIT_DIFF_STATS_NONE","","",null,null],[17,"GIT_DIFF_STATS_FULL","","",null,null],[17,"GIT_DIFF_STATS_SHORT","","",null,null],[17,"GIT_DIFF_STATS_NUMBER","","",null,null],[17,"GIT_DIFF_STATS_INCLUDE_SUMMARY","","",null,null],[17,"GIT_DIFF_NORMAL","","",null,null],[17,"GIT_DIFF_REVERSE","","",null,null],[17,"GIT_DIFF_INCLUDE_IGNORED","","",null,null],[17,"GIT_DIFF_RECURSE_IGNORED_DIRS","","",null,null],[17,"GIT_DIFF_INCLUDE_UNTRACKED","","",null,null],[17,"GIT_DIFF_RECURSE_UNTRACKED_DIRS","","",null,null],[17,"GIT_DIFF_INCLUDE_UNMODIFIED","","",null,null],[17,"GIT_DIFF_INCLUDE_TYPECHANGE","","",null,null],[17,"GIT_DIFF_INCLUDE_TYPECHANGE_TREES","","",null,null],[17,"GIT_DIFF_IGNORE_FILEMODE","","",null,null],[17,"GIT_DIFF_IGNORE_SUBMODULES","","",null,null],[17,"GIT_DIFF_IGNORE_CASE","","",null,null],[17,"GIT_DIFF_DISABLE_PATHSPEC_MATCH","","",null,null],[17,"GIT_DIFF_SKIP_BINARY_CHECK","","",null,null],[17,"GIT_DIFF_ENABLE_FAST_UNTRACKED_DIRS","","",null,null],[17,"GIT_DIFF_UPDATE_INDEX","","",null,null],[17,"GIT_DIFF_INCLUDE_UNREADABLE","","",null,null],[17,"GIT_DIFF_INCLUDE_UNREADABLE_AS_UNTRACKED","","",null,null],[17,"GIT_DIFF_INDENT_HEURISTIC","","",null,null],[17,"GIT_DIFF_FORCE_TEXT","","",null,null],[17,"GIT_DIFF_FORCE_BINARY","","",null,null],[17,"GIT_DIFF_IGNORE_WHITESPACE","","",null,null],[17,"GIT_DIFF_IGNORE_WHITESPACE_CHANGE","","",null,null],[17,"GIT_DIFF_IGNORE_WHITESPACE_EOL","","",null,null],[17,"GIT_DIFF_SHOW_UNTRACKED_CONTENT","","",null,null],[17,"GIT_DIFF_SHOW_UNMODIFIED","","",null,null],[17,"GIT_DIFF_PATIENCE","","",null,null],[17,"GIT_DIFF_MINIMAL","","",null,null],[17,"GIT_DIFF_SHOW_BINARY","","",null,null],[17,"GIT_DIFF_FIND_OPTIONS_VERSION","","",null,null],[17,"GIT_DIFF_FIND_BY_CONFIG","","",null,null],[17,"GIT_DIFF_FIND_RENAMES","","",null,null],[17,"GIT_DIFF_FIND_RENAMES_FROM_REWRITES","","",null,null],[17,"GIT_DIFF_FIND_COPIES","","",null,null],[17,"GIT_DIFF_FIND_COPIES_FROM_UNMODIFIED","","",null,null],[17,"GIT_DIFF_FIND_REWRITES","","",null,null],[17,"GIT_DIFF_BREAK_REWRITES","","",null,null],[17,"GIT_DIFF_FIND_AND_BREAK_REWRITES","","",null,null],[17,"GIT_DIFF_FIND_FOR_UNTRACKED","","",null,null],[17,"GIT_DIFF_FIND_ALL","","",null,null],[17,"GIT_DIFF_FIND_IGNORE_LEADING_WHITESPACE","","",null,null],[17,"GIT_DIFF_FIND_IGNORE_WHITESPACE","","",null,null],[17,"GIT_DIFF_FIND_DONT_IGNORE_WHITESPACE","","",null,null],[17,"GIT_DIFF_FIND_EXACT_MATCH_ONLY","","",null,null],[17,"GIT_DIFF_BREAK_REWRITES_FOR_RENAMES_ONLY","","",null,null],[17,"GIT_DIFF_FIND_REMOVE_UNMODIFIED","","",null,null],[17,"GIT_DIFF_FORMAT_EMAIL_OPTIONS_VERSION","","",null,null],[17,"GIT_DIFF_FORMAT_EMAIL_NONE","","",null,null],[17,"GIT_DIFF_FORMAT_EMAIL_EXCLUDE_SUBJECT_PATCH_MARKER","","",null,null],[17,"GIT_DIFF_BINARY_NONE","","",null,null],[17,"GIT_DIFF_BINARY_LITERAL","","",null,null],[17,"GIT_DIFF_BINARY_DELTA","","",null,null],[17,"GIT_MERGE_FIND_RENAMES","","",null,null],[17,"GIT_MERGE_FAIL_ON_CONFLICT","","",null,null],[17,"GIT_MERGE_SKIP_REUC","","",null,null],[17,"GIT_MERGE_NO_RECURSIVE","","",null,null],[17,"GIT_MERGE_FILE_FAVOR_NORMAL","","",null,null],[17,"GIT_MERGE_FILE_FAVOR_OURS","","",null,null],[17,"GIT_MERGE_FILE_FAVOR_THEIRS","","",null,null],[17,"GIT_MERGE_FILE_FAVOR_UNION","","",null,null],[17,"GIT_MERGE_FILE_DEFAULT","","",null,null],[17,"GIT_MERGE_FILE_STYLE_MERGE","","",null,null],[17,"GIT_MERGE_FILE_STYLE_DIFF3","","",null,null],[17,"GIT_MERGE_FILE_SIMPLIFY_ALNUM","","",null,null],[17,"GIT_MERGE_FILE_IGNORE_WHITESPACE","","",null,null],[17,"GIT_MERGE_FILE_IGNORE_WHITESPACE_CHANGE","","",null,null],[17,"GIT_MERGE_FILE_IGNORE_WHITESPACE_EOL","","",null,null],[17,"GIT_MERGE_FILE_DIFF_PATIENCE","","",null,null],[17,"GIT_MERGE_FILE_DIFF_MINIMAL","","",null,null],[17,"GIT_MERGE_ANALYSIS_NONE","","",null,null],[17,"GIT_MERGE_ANALYSIS_NORMAL","","",null,null],[17,"GIT_MERGE_ANALYSIS_UP_TO_DATE","","",null,null],[17,"GIT_MERGE_ANALYSIS_FASTFORWARD","","",null,null],[17,"GIT_MERGE_ANALYSIS_UNBORN","","",null,null],[17,"GIT_MERGE_PREFERENCE_NONE","","",null,null],[17,"GIT_MERGE_PREFERENCE_NO_FASTFORWARD","","",null,null],[17,"GIT_MERGE_PREFERENCE_FASTFORWARD_ONLY","","",null,null],[17,"GIT_PROXY_NONE","","",null,null],[17,"GIT_PROXY_AUTO","","",null,null],[17,"GIT_PROXY_SPECIFIED","","",null,null],[17,"GIT_SERVICE_UPLOADPACK_LS","","",null,null],[17,"GIT_SERVICE_UPLOADPACK","","",null,null],[17,"GIT_SERVICE_RECEIVEPACK_LS","","",null,null],[17,"GIT_SERVICE_RECEIVEPACK","","",null,null],[17,"GIT_DESCRIBE_DEFAULT","","",null,null],[17,"GIT_DESCRIBE_TAGS","","",null,null],[17,"GIT_DESCRIBE_ALL","","",null,null],[17,"GIT_PACKBUILDER_ADDING_OBJECTS","","",null,null],[17,"GIT_PACKBUILDER_DELTAFICATION","","",null,null],[17,"GIT_STASH_DEFAULT","","",null,null],[17,"GIT_STASH_KEEP_INDEX","","",null,null],[17,"GIT_STASH_INCLUDE_UNTRACKED","","",null,null],[17,"GIT_STASH_INCLUDE_IGNORED","","",null,null],[17,"GIT_STASH_APPLY_DEFAULT","","",null,null],[17,"GIT_STASH_APPLY_REINSTATE_INDEX","","",null,null],[17,"GIT_STASH_APPLY_PROGRESS_NONE","","",null,null],[17,"GIT_STASH_APPLY_PROGRESS_LOADING_STASH","","",null,null],[17,"GIT_STASH_APPLY_PROGRESS_ANALYZE_INDEX","","",null,null],[17,"GIT_STASH_APPLY_PROGRESS_ANALYZE_MODIFIED","","",null,null],[17,"GIT_STASH_APPLY_PROGRESS_ANALYZE_UNTRACKED","","",null,null],[17,"GIT_STASH_APPLY_PROGRESS_CHECKOUT_UNTRACKED","","",null,null],[17,"GIT_STASH_APPLY_PROGRESS_CHECKOUT_MODIFIED","","",null,null],[17,"GIT_STASH_APPLY_PROGRESS_DONE","","",null,null],[17,"GIT_REBASE_NO_OPERATION","","",null,null],[17,"GIT_REBASE_OPERATION_PICK","","",null,null],[17,"GIT_REBASE_OPERATION_REWORD","","",null,null],[17,"GIT_REBASE_OPERATION_EDIT","","",null,null],[17,"GIT_REBASE_OPERATION_SQUASH","","",null,null],[17,"GIT_REBASE_OPERATION_FIXUP","","",null,null],[17,"GIT_REBASE_OPERATION_EXEC","","",null,null],[17,"GIT_APPLY_CHECK","","",null,null],[17,"GIT_APPLY_LOCATION_WORKDIR","","",null,null],[17,"GIT_APPLY_LOCATION_INDEX","","",null,null],[17,"GIT_APPLY_LOCATION_BOTH","","",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"clone","","",2,[[["self"]],["git_oid"]]],[11,"clone","","",3,[[["self"]],["git_strarray"]]],[11,"clone","","",4,[[["self"]],["git_oidarray"]]],[11,"clone","","",6,[[["self"]],["git_time"]]],[11,"clone","","",10,[[["self"]],["git_indexer_progress"]]],[11,"clone","","",21,[[["self"]],["git_buf"]]],[11,"clone","","",22,[[["self"]],["git_blame_options"]]],[11,"clone","","",23,[[["self"]],["git_blame_hunk"]]],[11,"clone","","",24,[[["self"]],["git_index_entry"]]],[11,"clone","","",25,[[["self"]],["git_index_time"]]],[11,"eq","","",6,[[["self"],["git_time"]],["bool"]]],[11,"ne","","",6,[[["self"],["git_time"]],["bool"]]],[11,"eq","","",25,[[["self"],["git_index_time"]],["bool"]]],[11,"ne","","",25,[[["self"],["git_index_time"]],["bool"]]]],"p":[[3,"git_revspec"],[3,"git_error"],[3,"git_oid"],[3,"git_strarray"],[3,"git_oidarray"],[3,"git_signature"],[3,"git_time"],[3,"git_clone_options"],[3,"git_checkout_options"],[3,"git_checkout_perfdata"],[3,"git_indexer_progress"],[3,"git_remote_callbacks"],[3,"git_fetch_options"],[3,"git_push_update"],[3,"git_cert"],[3,"git_cert_hostkey"],[3,"git_cert_x509"],[3,"git_diff_file"],[3,"git_status_options"],[3,"git_diff_delta"],[3,"git_status_entry"],[3,"git_buf"],[3,"git_blame_options"],[3,"git_blame_hunk"],[3,"git_index_entry"],[3,"git_index_time"],[3,"git_config_entry"],[3,"git_submodule_update_options"],[3,"git_writestream"],[3,"git_cred"],[3,"git_push_options"],[3,"git_repository_init_options"],[3,"git_remote_head"],[3,"git_diff_hunk"],[3,"git_diff_line"],[3,"git_diff_options"],[3,"git_diff_find_options"],[3,"git_diff_similarity_metric"],[3,"git_diff_format_email_options"],[3,"git_diff_binary"],[3,"git_diff_binary_file"],[3,"git_merge_options"],[3,"git_transport"],[3,"git_odb_backend"],[3,"git_odb_writepack"],[3,"git_refdb_backend"],[3,"git_proxy_options"],[3,"git_smart_subtransport_stream"],[3,"git_smart_subtransport"],[3,"git_smart_subtransport_definition"],[3,"git_describe_options"],[3,"git_describe_format_options"],[3,"git_stash_apply_options"],[3,"git_rebase_options"],[3,"git_rebase_operation"],[3,"git_cherrypick_options"],[3,"git_apply_options"],[4,"git_blob"],[4,"git_branch_iterator"],[4,"git_blame"],[4,"git_commit"],[4,"git_config"],[4,"git_config_iterator"],[4,"git_index"],[4,"git_index_conflict_iterator"],[4,"git_object"],[4,"git_reference"],[4,"git_reference_iterator"],[4,"git_annotated_commit"],[4,"git_refdb"],[4,"git_refspec"],[4,"git_remote"],[4,"git_repository"],[4,"git_revwalk"],[4,"git_submodule"],[4,"git_tag"],[4,"git_tree"],[4,"git_tree_entry"],[4,"git_treebuilder"],[4,"git_push"],[4,"git_note"],[4,"git_note_iterator"],[4,"git_status_list"],[4,"git_pathspec"],[4,"git_pathspec_match_list"],[4,"git_diff"],[4,"git_diff_stats"],[4,"git_patch"],[4,"git_rebase"],[4,"git_reflog"],[4,"git_reflog_entry"],[4,"git_describe_result"],[4,"git_packbuilder"],[4,"git_odb"],[4,"git_odb_stream"],[4,"git_odb_object"],[4,"git_worktree"],[4,"LIBSSH2_SESSION"],[4,"LIBSSH2_USERAUTH_KBDINT_PROMPT"],[4,"LIBSSH2_USERAUTH_KBDINT_RESPONSE"]]};
searchIndex["libnghttp2_sys"] = {"doc":"","i":[[3,"nghttp2_session","libnghttp2_sys","",null,null],[3,"nghttp2_info","","@struct",null,null],[12,"age","","Age of this struct. This instance of nghttp2 sets it to…",0,null],[12,"version_num","","the :macro:`NGHTTP2_VERSION_NUM` number (since age ==1)",0,null],[12,"version_str","","points to the :macro:`NGHTTP2_VERSION` string (since age…",0,null],[12,"proto_str","","points to the :macro:`NGHTTP2_PROTO_VERSION_ID` string…",0,null],[3,"nghttp2_vec","","@struct",null,null],[12,"base","","The pointer to the buffer.",1,null],[12,"len","","The length of the buffer.",1,null],[3,"nghttp2_rcbuf","","",null,null],[3,"nghttp2_nv","","@struct",null,null],[12,"name","","The |name| byte string. If this struct is presented from…",2,null],[12,"value","","The |value| byte string. If this struct is presented from…",2,null],[12,"namelen","","The length of the |name|, excluding terminating NULL.",2,null],[12,"valuelen","","The length of the |value|, excluding terminating NULL.",2,null],[12,"flags","","Bitwise OR of one or more of :type:`nghttp2_nv_flag`.",2,null],[3,"nghttp2_frame_hd","","@struct The frame header.",null,null],[12,"length","","The length field of this frame, excluding frame header.",3,null],[12,"stream_id","","The stream identifier (aka, stream ID)",3,null],[12,"type_","","The type of this frame.  See `nghttp2_frame_type`.",3,null],[12,"flags","","The flags.",3,null],[12,"reserved","","Reserved bit in frame header. Currently, this is always…",3,null],[3,"nghttp2_data_provider","","@struct",null,null],[12,"source","","The data source.",4,null],[12,"read_callback","","The callback function to read a chunk of data from the…",4,null],[3,"nghttp2_data","","@struct",null,null],[12,"hd","","",5,null],[12,"padlen","","The length of the padding in this frame. This includes…",5,null],[3,"nghttp2_priority_spec","","@struct",null,null],[12,"stream_id","","The stream ID of the stream to depend on. Specifying 0…",6,null],[12,"weight","","The weight of this dependency.",6,null],[12,"exclusive","","nonzero means exclusive dependency",6,null],[3,"nghttp2_headers","","@struct",null,null],[12,"hd","","The frame header.",7,null],[12,"padlen","","The length of the padding in this frame. This includes…",7,null],[12,"pri_spec","","The priority specification",7,null],[12,"nva","","The name/value pairs.",7,null],[12,"nvlen","","The number of name/value pairs in |nva|.",7,null],[12,"cat","","The category of this HEADERS frame.",7,null],[3,"nghttp2_priority","","@struct",null,null],[12,"hd","","The frame header.",8,null],[12,"pri_spec","","The priority specification.",8,null],[3,"nghttp2_rst_stream","","@struct",null,null],[12,"hd","","The frame header.",9,null],[12,"error_code","","The error code.  See :type:`nghttp2_error_code`.",9,null],[3,"nghttp2_settings_entry","","@struct",null,null],[12,"settings_id","","The SETTINGS ID.  See :type:`nghttp2_settings_id`.",10,null],[12,"value","","The value of this entry.",10,null],[3,"nghttp2_settings","","@struct",null,null],[12,"hd","","The frame header.",11,null],[12,"niv","","The number of SETTINGS ID/Value pairs in |iv|.",11,null],[12,"iv","","The pointer to the array of SETTINGS ID/Value pair.",11,null],[3,"nghttp2_push_promise","","@struct",null,null],[12,"hd","","The frame header.",12,null],[12,"padlen","","The length of the padding in this frame. This includes…",12,null],[12,"nva","","The name/value pairs.",12,null],[12,"nvlen","","The number of name/value pairs in |nva|.",12,null],[12,"promised_stream_id","","The promised stream ID",12,null],[12,"reserved","","Reserved bit. Currently this is always set to 0 and…",12,null],[3,"nghttp2_ping","","@struct",null,null],[12,"hd","","The frame header.",13,null],[12,"opaque_data","","The opaque data",13,null],[3,"nghttp2_goaway","","@struct",null,null],[12,"hd","","The frame header.",14,null],[12,"last_stream_id","","The last stream stream ID.",14,null],[12,"error_code","","The error code.  See :type:`nghttp2_error_code`.",14,null],[12,"opaque_data","","The additional debug data",14,null],[12,"opaque_data_len","","The length of |opaque_data| member.",14,null],[12,"reserved","","Reserved bit. Currently this is always set to 0 and…",14,null],[3,"nghttp2_window_update","","@struct",null,null],[12,"hd","","The frame header.",15,null],[12,"window_size_increment","","The window size increment.",15,null],[12,"reserved","","Reserved bit. Currently this is always set to 0 and…",15,null],[3,"nghttp2_extension","","@struct",null,null],[12,"hd","","The frame header.",16,null],[12,"payload","","The pointer to extension payload. The exact pointer type…",16,null],[3,"nghttp2_session_callbacks","","",null,null],[3,"nghttp2_mem","","@struct",null,null],[12,"mem_user_data","","An arbitrary user supplied data. This is passed to each…",17,null],[12,"malloc","","Custom allocator function to replace malloc().",17,null],[12,"free","","Custom allocator function to replace free().",17,null],[12,"calloc","","Custom allocator function to replace calloc().",17,null],[12,"realloc","","Custom allocator function to replace realloc().",17,null],[3,"nghttp2_option","","",null,null],[3,"nghttp2_ext_altsvc","","@struct",null,null],[12,"origin","","The pointer to origin which this alternative service is…",18,null],[12,"origin_len","","The length of the |origin|.",18,null],[12,"field_value","","The pointer to Alt-Svc field value contained in ALTSVC…",18,null],[12,"field_value_len","","The length of the |field_value|.",18,null],[3,"nghttp2_origin_entry","","@struct",null,null],[12,"origin","","The pointer to origin. No validation is made against this…",19,null],[12,"origin_len","","The length of the |origin|.",19,null],[3,"nghttp2_ext_origin","","@struct",null,null],[12,"nov","","The number of origins contained in |ov|.",20,null],[12,"ov","","The pointer to the array of origins contained in ORIGIN…",20,null],[3,"nghttp2_hd_deflater","","",null,null],[3,"nghttp2_hd_inflater","","",null,null],[3,"nghttp2_stream","","",null,null],[19,"nghttp2_data_source","","@union",null,null],[12,"fd","","The integer field, suitable for a file descriptor.",21,null],[12,"ptr","","The pointer to an arbitrary object.",21,null],[19,"nghttp2_frame","","@union",null,null],[12,"hd","","The frame header, which is convenient to inspect frame…",22,null],[12,"data","","The DATA frame.",22,null],[12,"headers","","The HEADERS frame.",22,null],[12,"priority","","The PRIORITY frame.",22,null],[12,"rst_stream","","The RST_STREAM frame.",22,null],[12,"settings","","The SETTINGS frame.",22,null],[12,"push_promise","","The PUSH_PROMISE frame.",22,null],[12,"ping","","The PING frame.",22,null],[12,"goaway","","The GOAWAY frame.",22,null],[12,"window_update","","The WINDOW_UPDATE frame.",22,null],[12,"ext","","The extension frame.",22,null],[5,"nghttp2_rcbuf_incref","","@function",null,null],[5,"nghttp2_rcbuf_decref","","@function",null,null],[5,"nghttp2_rcbuf_get_buf","","@function",null,null],[5,"nghttp2_rcbuf_is_static","","@function",null,null],[5,"nghttp2_session_callbacks_new","","@function",null,null],[5,"nghttp2_session_callbacks_del","","@function",null,null],[5,"nghttp2_session_callbacks_set_send_callback","","@function",null,null],[5,"nghttp2_session_callbacks_set_recv_callback","","@function",null,null],[5,"nghttp2_session_callbacks_set_on_frame_recv_callback","","@function",null,null],[5,"nghttp2_session_callbacks_set_on_invalid_frame_recv_callback","","@function",null,null],[5,"nghttp2_session_callbacks_set_on_data_chunk_recv_callback","","@function",null,null],[5,"nghttp2_session_callbacks_set_before_frame_send_callback","","@function",null,null],[5,"nghttp2_session_callbacks_set_on_frame_send_callback","","@function",null,null],[5,"nghttp2_session_callbacks_set_on_frame_not_send_callback","","@function",null,null],[5,"nghttp2_session_callbacks_set_on_stream_close_callback","","@function",null,null],[5,"nghttp2_session_callbacks_set_on_begin_headers_callback","","@function",null,null],[5,"nghttp2_session_callbacks_set_on_header_callback","","@function",null,null],[5,"nghttp2_session_callbacks_set_on_header_callback2","","@function",null,null],[5,"nghttp2_session_callbacks_set_on_invalid_header_callback","","@function",null,null],[5,"nghttp2_session_callbacks_set_on_invalid_header_callback2","","@function",null,null],[5,"nghttp2_session_callbacks_set_select_padding_callback","","@function",null,null],[5,"nghttp2_session_callbacks_set_data_source_read_length_callback","","@function",null,null],[5,"nghttp2_session_callbacks_set_on_begin_frame_callback","","@function",null,null],[5,"nghttp2_session_callbacks_set_send_data_callback","","@function",null,null],[5,"nghttp2_session_callbacks_set_pack_extension_callback","","@function",null,null],[5,"nghttp2_session_callbacks_set_unpack_extension_callback","","@function",null,null],[5,"nghttp2_session_callbacks_set_on_extension_chunk_recv_callback","","@function",null,null],[5,"nghttp2_session_callbacks_set_error_callback","","@function",null,null],[5,"nghttp2_session_callbacks_set_error_callback2","","@function",null,null],[5,"nghttp2_option_new","","@function",null,null],[5,"nghttp2_option_del","","@function",null,null],[5,"nghttp2_option_set_no_auto_window_update","","@function",null,null],[5,"nghttp2_option_set_peer_max_concurrent_streams","","@function",null,null],[5,"nghttp2_option_set_no_recv_client_magic","","@function",null,null],[5,"nghttp2_option_set_no_http_messaging","","@function",null,null],[5,"nghttp2_option_set_max_reserved_remote_streams","","@function",null,null],[5,"nghttp2_option_set_user_recv_extension_type","","@function",null,null],[5,"nghttp2_option_set_builtin_recv_extension_type","","@function",null,null],[5,"nghttp2_option_set_no_auto_ping_ack","","@function",null,null],[5,"nghttp2_option_set_max_send_header_block_length","","@function",null,null],[5,"nghttp2_option_set_max_deflate_dynamic_table_size","","@function",null,null],[5,"nghttp2_option_set_no_closed_streams","","@function",null,null],[5,"nghttp2_session_client_new","","@function",null,null],[5,"nghttp2_session_server_new","","@function",null,null],[5,"nghttp2_session_client_new2","","@function",null,null],[5,"nghttp2_session_server_new2","","@function",null,null],[5,"nghttp2_session_client_new3","","@function",null,null],[5,"nghttp2_session_server_new3","","@function",null,null],[5,"nghttp2_session_del","","@function",null,null],[5,"nghttp2_session_send","","@function",null,null],[5,"nghttp2_session_mem_send","","@function",null,null],[5,"nghttp2_session_recv","","@function",null,null],[5,"nghttp2_session_mem_recv","","@function",null,null],[5,"nghttp2_session_resume_data","","@function",null,null],[5,"nghttp2_session_want_read","","@function",null,null],[5,"nghttp2_session_want_write","","@function",null,null],[5,"nghttp2_session_get_stream_user_data","","@function",null,null],[5,"nghttp2_session_set_stream_user_data","","@function",null,null],[5,"nghttp2_session_set_user_data","","@function",null,null],[5,"nghttp2_session_get_outbound_queue_size","","@function",null,null],[5,"nghttp2_session_get_stream_effective_recv_data_length","","@function",null,null],[5,"nghttp2_session_get_stream_effective_local_window_size","","@function",null,null],[5,"nghttp2_session_get_stream_local_window_size","","@function",null,null],[5,"nghttp2_session_get_effective_recv_data_length","","@function",null,null],[5,"nghttp2_session_get_effective_local_window_size","","@function",null,null],[5,"nghttp2_session_get_local_window_size","","@function",null,null],[5,"nghttp2_session_get_stream_remote_window_size","","@function",null,null],[5,"nghttp2_session_get_remote_window_size","","@function",null,null],[5,"nghttp2_session_get_stream_local_close","","@function",null,null],[5,"nghttp2_session_get_stream_remote_close","","@function",null,null],[5,"nghttp2_session_get_hd_inflate_dynamic_table_size","","@function",null,null],[5,"nghttp2_session_get_hd_deflate_dynamic_table_size","","@function",null,null],[5,"nghttp2_session_terminate_session","","@function",null,null],[5,"nghttp2_session_terminate_session2","","@function",null,null],[5,"nghttp2_submit_shutdown_notice","","@function",null,null],[5,"nghttp2_session_get_remote_settings","","@function",null,null],[5,"nghttp2_session_get_local_settings","","@function",null,null],[5,"nghttp2_session_set_next_stream_id","","@function",null,null],[5,"nghttp2_session_get_next_stream_id","","@function",null,null],[5,"nghttp2_session_consume","","@function",null,null],[5,"nghttp2_session_consume_connection","","@function",null,null],[5,"nghttp2_session_consume_stream","","@function",null,null],[5,"nghttp2_session_change_stream_priority","","@function",null,null],[5,"nghttp2_session_create_idle_stream","","@function",null,null],[5,"nghttp2_session_upgrade","","@function",null,null],[5,"nghttp2_session_upgrade2","","@function",null,null],[5,"nghttp2_pack_settings_payload","","@function",null,null],[5,"nghttp2_strerror","","@function",null,null],[5,"nghttp2_http2_strerror","","@function",null,null],[5,"nghttp2_priority_spec_init","","@function",null,null],[5,"nghttp2_priority_spec_default_init","","@function",null,null],[5,"nghttp2_priority_spec_check_default","","@function",null,null],[5,"nghttp2_submit_request","","@function",null,null],[5,"nghttp2_submit_response","","@function",null,null],[5,"nghttp2_submit_trailer","","@function",null,null],[5,"nghttp2_submit_headers","","@function",null,null],[5,"nghttp2_submit_data","","@function",null,null],[5,"nghttp2_submit_priority","","@function",null,null],[5,"nghttp2_submit_rst_stream","","@function",null,null],[5,"nghttp2_submit_settings","","@function",null,null],[5,"nghttp2_submit_push_promise","","@function",null,null],[5,"nghttp2_submit_ping","","@function",null,null],[5,"nghttp2_submit_goaway","","@function",null,null],[5,"nghttp2_session_get_last_proc_stream_id","","@function",null,null],[5,"nghttp2_session_check_request_allowed","","@function",null,null],[5,"nghttp2_session_check_server_session","","@function",null,null],[5,"nghttp2_submit_window_update","","@function",null,null],[5,"nghttp2_session_set_local_window_size","","@function",null,null],[5,"nghttp2_submit_extension","","@function",null,null],[5,"nghttp2_submit_altsvc","","@function",null,null],[5,"nghttp2_submit_origin","","@function",null,null],[5,"nghttp2_nv_compare_name","","@function",null,null],[5,"nghttp2_select_next_protocol","","@function",null,null],[5,"nghttp2_version","","@function",null,null],[5,"nghttp2_is_fatal","","@function",null,null],[5,"nghttp2_check_header_name","","@function",null,null],[5,"nghttp2_check_header_value","","@function",null,null],[5,"nghttp2_hd_deflate_new","","@function",null,null],[5,"nghttp2_hd_deflate_new2","","@function",null,null],[5,"nghttp2_hd_deflate_del","","@function",null,null],[5,"nghttp2_hd_deflate_change_table_size","","@function",null,null],[5,"nghttp2_hd_deflate_hd","","@function",null,null],[5,"nghttp2_hd_deflate_hd_vec","","@function",null,null],[5,"nghttp2_hd_deflate_bound","","@function",null,null],[5,"nghttp2_hd_deflate_get_num_table_entries","","@function",null,null],[5,"nghttp2_hd_deflate_get_table_entry","","@function",null,null],[5,"nghttp2_hd_deflate_get_dynamic_table_size","","@function",null,null],[5,"nghttp2_hd_deflate_get_max_dynamic_table_size","","@function",null,null],[5,"nghttp2_hd_inflate_new","","@function",null,null],[5,"nghttp2_hd_inflate_new2","","@function",null,null],[5,"nghttp2_hd_inflate_del","","@function",null,null],[5,"nghttp2_hd_inflate_change_table_size","","@function",null,null],[5,"nghttp2_hd_inflate_hd","","@function",null,null],[5,"nghttp2_hd_inflate_hd2","","@function",null,null],[5,"nghttp2_hd_inflate_end_headers","","@function",null,null],[5,"nghttp2_hd_inflate_get_num_table_entries","","@function",null,null],[5,"nghttp2_hd_inflate_get_table_entry","","@function",null,null],[5,"nghttp2_hd_inflate_get_dynamic_table_size","","@function",null,null],[5,"nghttp2_hd_inflate_get_max_dynamic_table_size","","@function",null,null],[5,"nghttp2_session_find_stream","","@function",null,null],[5,"nghttp2_stream_get_state","","@function",null,null],[5,"nghttp2_session_get_root_stream","","@function",null,null],[5,"nghttp2_stream_get_parent","","@function",null,null],[5,"nghttp2_stream_get_stream_id","","",null,null],[5,"nghttp2_stream_get_next_sibling","","@function",null,null],[5,"nghttp2_stream_get_previous_sibling","","@function",null,null],[5,"nghttp2_stream_get_first_child","","@function",null,null],[5,"nghttp2_stream_get_weight","","@function",null,null],[5,"nghttp2_stream_get_sum_dependency_weight","","@function",null,null],[6,"nghttp2_error","","@enum",null,null],[6,"nghttp2_nv_flag","","@enum",null,null],[6,"nghttp2_frame_type","","@enum",null,null],[6,"nghttp2_flag","","@enum",null,null],[6,"nghttp2_settings_id","","@enum The SETTINGS ID.",null,null],[6,"nghttp2_error_code","","@enum The status codes for the RST_STREAM and GOAWAY frames.",null,null],[6,"nghttp2_data_flag","","@enum",null,null],[6,"nghttp2_data_source_read_callback","","@functypedef",null,null],[6,"nghttp2_headers_category","","@enum",null,null],[6,"nghttp2_send_callback","","@functypedef",null,null],[6,"nghttp2_send_data_callback","","@functypedef",null,null],[6,"nghttp2_recv_callback","","@functypedef",null,null],[6,"nghttp2_on_frame_recv_callback","","@functypedef",null,null],[6,"nghttp2_on_invalid_frame_recv_callback","","@functypedef",null,null],[6,"nghttp2_on_data_chunk_recv_callback","","@functypedef",null,null],[6,"nghttp2_before_frame_send_callback","","@functypedef",null,null],[6,"nghttp2_on_frame_send_callback","","@functypedef",null,null],[6,"nghttp2_on_frame_not_send_callback","","@functypedef",null,null],[6,"nghttp2_on_stream_close_callback","","@functypedef",null,null],[6,"nghttp2_on_begin_headers_callback","","@functypedef",null,null],[6,"nghttp2_on_header_callback","","@functypedef",null,null],[6,"nghttp2_on_header_callback2","","@functypedef",null,null],[6,"nghttp2_on_invalid_header_callback","","@functypedef",null,null],[6,"nghttp2_on_invalid_header_callback2","","@functypedef",null,null],[6,"nghttp2_select_padding_callback","","@functypedef",null,null],[6,"nghttp2_data_source_read_length_callback","","@functypedef",null,null],[6,"nghttp2_on_begin_frame_callback","","@functypedef",null,null],[6,"nghttp2_on_extension_chunk_recv_callback","","@functypedef",null,null],[6,"nghttp2_unpack_extension_callback","","@functypedef",null,null],[6,"nghttp2_pack_extension_callback","","@functypedef",null,null],[6,"nghttp2_error_callback","","@functypedef",null,null],[6,"nghttp2_error_callback2","","@functypedef",null,null],[6,"nghttp2_malloc","","@functypedef",null,null],[6,"nghttp2_free","","@functypedef",null,null],[6,"nghttp2_calloc","","@functypedef",null,null],[6,"nghttp2_realloc","","@functypedef",null,null],[6,"nghttp2_hd_inflate_flag","","@enum",null,null],[6,"nghttp2_stream_proto_state","","@enum",null,null],[17,"NGHTTP2_ERR_INVALID_ARGUMENT","","Invalid argument passed.",null,null],[17,"NGHTTP2_ERR_BUFFER_ERROR","","Out of buffer space.",null,null],[17,"NGHTTP2_ERR_UNSUPPORTED_VERSION","","The specified protocol version is not supported.",null,null],[17,"NGHTTP2_ERR_WOULDBLOCK","","Used as a return value from :type:`nghttp2_send_callback`,…",null,null],[17,"NGHTTP2_ERR_PROTO","","General protocol error",null,null],[17,"NGHTTP2_ERR_INVALID_FRAME","","The frame is invalid.",null,null],[17,"NGHTTP2_ERR_EOF","","The peer performed a shutdown on the connection.",null,null],[17,"NGHTTP2_ERR_DEFERRED","","Used as a return value from…",null,null],[17,"NGHTTP2_ERR_STREAM_ID_NOT_AVAILABLE","","Stream ID has reached the maximum value. Therefore no…",null,null],[17,"NGHTTP2_ERR_STREAM_CLOSED","","The stream is already closed; or the stream ID is invalid.",null,null],[17,"NGHTTP2_ERR_STREAM_CLOSING","","RST_STREAM has been added to the outbound queue. The…",null,null],[17,"NGHTTP2_ERR_STREAM_SHUT_WR","","The transmission is not allowed for this stream (e.g., a…",null,null],[17,"NGHTTP2_ERR_INVALID_STREAM_ID","","The stream ID is invalid.",null,null],[17,"NGHTTP2_ERR_INVALID_STREAM_STATE","","The state of the stream is not valid (e.g., DATA cannot be…",null,null],[17,"NGHTTP2_ERR_DEFERRED_DATA_EXIST","","Another DATA frame has already been deferred.",null,null],[17,"NGHTTP2_ERR_START_STREAM_NOT_ALLOWED","","Starting new stream is not allowed (e.g., GOAWAY has been…",null,null],[17,"NGHTTP2_ERR_GOAWAY_ALREADY_SENT","","GOAWAY has already been sent.",null,null],[17,"NGHTTP2_ERR_INVALID_HEADER_BLOCK","","The received frame contains the invalid header block…",null,null],[17,"NGHTTP2_ERR_INVALID_STATE","","Indicates that the context is not suitable to perform the…",null,null],[17,"NGHTTP2_ERR_TEMPORAL_CALLBACK_FAILURE","","The user callback function failed due to the temporal error.",null,null],[17,"NGHTTP2_ERR_FRAME_SIZE_ERROR","","The length of the frame is invalid, either too large or…",null,null],[17,"NGHTTP2_ERR_HEADER_COMP","","Header block inflate/deflate error.",null,null],[17,"NGHTTP2_ERR_FLOW_CONTROL","","Flow control error",null,null],[17,"NGHTTP2_ERR_INSUFF_BUFSIZE","","Insufficient buffer size given to function.",null,null],[17,"NGHTTP2_ERR_PAUSE","","Callback was paused by the application",null,null],[17,"NGHTTP2_ERR_TOO_MANY_INFLIGHT_SETTINGS","","There are too many in-flight SETTING frame and no more…",null,null],[17,"NGHTTP2_ERR_PUSH_DISABLED","","The server push is disabled.",null,null],[17,"NGHTTP2_ERR_DATA_EXIST","","DATA or HEADERS frame for a given stream has been already…",null,null],[17,"NGHTTP2_ERR_SESSION_CLOSING","","The current session is closing due to a connection error…",null,null],[17,"NGHTTP2_ERR_HTTP_HEADER","","Invalid HTTP header field was received and stream is going…",null,null],[17,"NGHTTP2_ERR_HTTP_MESSAGING","","Violation in HTTP messaging rule.",null,null],[17,"NGHTTP2_ERR_REFUSED_STREAM","","Stream was refused.",null,null],[17,"NGHTTP2_ERR_INTERNAL","","Unexpected internal error, but recovered.",null,null],[17,"NGHTTP2_ERR_CANCEL","","Indicates that a processing was canceled.",null,null],[17,"NGHTTP2_ERR_SETTINGS_EXPECTED","","When a local endpoint expects to receive SETTINGS frame,…",null,null],[17,"NGHTTP2_ERR_FATAL","","The errors < :enum:`NGHTTP2_ERR_FATAL` mean that the…",null,null],[17,"NGHTTP2_ERR_NOMEM","","Out of memory.  This is a fatal error.",null,null],[17,"NGHTTP2_ERR_CALLBACK_FAILURE","","The user callback function failed.  This is a fatal error.",null,null],[17,"NGHTTP2_ERR_BAD_CLIENT_MAGIC","","Invalid client magic (see :macro:`NGHTTP2_CLIENT_MAGIC`)…",null,null],[17,"NGHTTP2_ERR_FLOODED","","Possible flooding by peer was detected in this HTTP/2…",null,null],[17,"NGHTTP2_NV_FLAG_NONE","","No flag set.",null,null],[17,"NGHTTP2_NV_FLAG_NO_INDEX","","Indicates that this name/value pair must not be indexed…",null,null],[17,"NGHTTP2_NV_FLAG_NO_COPY_NAME","","This flag is set solely by application. If this flag is…",null,null],[17,"NGHTTP2_NV_FLAG_NO_COPY_VALUE","","This flag is set solely by application. If this flag is…",null,null],[17,"NGHTTP2_DATA","","The DATA frame.",null,null],[17,"NGHTTP2_HEADERS","","The HEADERS frame.",null,null],[17,"NGHTTP2_PRIORITY","","The PRIORITY frame.",null,null],[17,"NGHTTP2_RST_STREAM","","The RST_STREAM frame.",null,null],[17,"NGHTTP2_SETTINGS","","The SETTINGS frame.",null,null],[17,"NGHTTP2_PUSH_PROMISE","","The PUSH_PROMISE frame.",null,null],[17,"NGHTTP2_PING","","The PING frame.",null,null],[17,"NGHTTP2_GOAWAY","","The GOAWAY frame.",null,null],[17,"NGHTTP2_WINDOW_UPDATE","","The WINDOW_UPDATE frame.",null,null],[17,"NGHTTP2_CONTINUATION","","The CONTINUATION frame. This frame type won't be passed to…",null,null],[17,"NGHTTP2_ALTSVC","","The ALTSVC frame, which is defined in `RFC 7383…",null,null],[17,"NGHTTP2_ORIGIN","","The ORIGIN frame, which is defined by `RFC 8336…",null,null],[17,"NGHTTP2_FLAG_NONE","","No flag set.",null,null],[17,"NGHTTP2_FLAG_END_STREAM","","The END_STREAM flag.",null,null],[17,"NGHTTP2_FLAG_END_HEADERS","","The END_HEADERS flag.",null,null],[17,"NGHTTP2_FLAG_ACK","","The ACK flag.",null,null],[17,"NGHTTP2_FLAG_PADDED","","The PADDED flag.",null,null],[17,"NGHTTP2_FLAG_PRIORITY","","The PRIORITY flag.",null,null],[17,"NGHTTP2_SETTINGS_HEADER_TABLE_SIZE","","SETTINGS_HEADER_TABLE_SIZE",null,null],[17,"NGHTTP2_SETTINGS_ENABLE_PUSH","","SETTINGS_ENABLE_PUSH",null,null],[17,"NGHTTP2_SETTINGS_MAX_CONCURRENT_STREAMS","","SETTINGS_MAX_CONCURRENT_STREAMS",null,null],[17,"NGHTTP2_SETTINGS_INITIAL_WINDOW_SIZE","","SETTINGS_INITIAL_WINDOW_SIZE",null,null],[17,"NGHTTP2_SETTINGS_MAX_FRAME_SIZE","","SETTINGS_MAX_FRAME_SIZE",null,null],[17,"NGHTTP2_SETTINGS_MAX_HEADER_LIST_SIZE","","SETTINGS_MAX_HEADER_LIST_SIZE",null,null],[17,"NGHTTP2_NO_ERROR","","No errors.",null,null],[17,"NGHTTP2_PROTOCOL_ERROR","","PROTOCOL_ERROR",null,null],[17,"NGHTTP2_INTERNAL_ERROR","","INTERNAL_ERROR",null,null],[17,"NGHTTP2_FLOW_CONTROL_ERROR","","FLOW_CONTROL_ERROR",null,null],[17,"NGHTTP2_SETTINGS_TIMEOUT","","SETTINGS_TIMEOUT",null,null],[17,"NGHTTP2_STREAM_CLOSED","","STREAM_CLOSED",null,null],[17,"NGHTTP2_FRAME_SIZE_ERROR","","FRAME_SIZE_ERROR",null,null],[17,"NGHTTP2_REFUSED_STREAM","","REFUSED_STREAM",null,null],[17,"NGHTTP2_CANCEL","","CANCEL",null,null],[17,"NGHTTP2_COMPRESSION_ERROR","","COMPRESSION_ERROR",null,null],[17,"NGHTTP2_CONNECT_ERROR","","CONNECT_ERROR",null,null],[17,"NGHTTP2_ENHANCE_YOUR_CALM","","ENHANCE_YOUR_CALM",null,null],[17,"NGHTTP2_INADEQUATE_SECURITY","","INADEQUATE_SECURITY",null,null],[17,"NGHTTP2_HTTP_1_1_REQUIRED","","HTTP_1_1_REQUIRED",null,null],[17,"NGHTTP2_DATA_FLAG_NONE","","No flag set.",null,null],[17,"NGHTTP2_DATA_FLAG_EOF","","Indicates EOF was sensed.",null,null],[17,"NGHTTP2_DATA_FLAG_NO_END_STREAM","","Indicates that END_STREAM flag must not be set even if…",null,null],[17,"NGHTTP2_DATA_FLAG_NO_COPY","","Indicates that application will send complete DATA frame…",null,null],[17,"NGHTTP2_HCAT_REQUEST","","The HEADERS frame is opening new stream, which is…",null,null],[17,"NGHTTP2_HCAT_RESPONSE","","The HEADERS frame is the first response headers, which is…",null,null],[17,"NGHTTP2_HCAT_PUSH_RESPONSE","","The HEADERS frame is the first headers sent against…",null,null],[17,"NGHTTP2_HCAT_HEADERS","","The HEADERS frame which does not apply for the above…",null,null],[17,"NGHTTP2_HD_INFLATE_NONE","","No flag set.",null,null],[17,"NGHTTP2_HD_INFLATE_FINAL","","Indicates all headers were inflated.",null,null],[17,"NGHTTP2_HD_INFLATE_EMIT","","Indicates a header was emitted.",null,null],[17,"NGHTTP2_STREAM_STATE_IDLE","","idle state.",null,null],[17,"NGHTTP2_STREAM_STATE_OPEN","","open state.",null,null],[17,"NGHTTP2_STREAM_STATE_RESERVED_LOCAL","","reserved (local) state.",null,null],[17,"NGHTTP2_STREAM_STATE_RESERVED_REMOTE","","reserved (remote) state.",null,null],[17,"NGHTTP2_STREAM_STATE_HALF_CLOSED_LOCAL","","half closed (local) state.",null,null],[17,"NGHTTP2_STREAM_STATE_HALF_CLOSED_REMOTE","","half closed (remote) state.",null,null],[17,"NGHTTP2_STREAM_STATE_CLOSED","","closed state.",null,null],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"clone","","",23,[[["self"]],["nghttp2_session"]]],[11,"clone","","",0,[[["self"]],["nghttp2_info"]]],[11,"clone","","",1,[[["self"]],["nghttp2_vec"]]],[11,"clone","","",24,[[["self"]],["nghttp2_rcbuf"]]],[11,"clone","","",2,[[["self"]],["nghttp2_nv"]]],[11,"clone","","",3,[[["self"]],["nghttp2_frame_hd"]]],[11,"clone","","",21,[[["self"]],["nghttp2_data_source"]]],[11,"clone","","",4,[[["self"]],["nghttp2_data_provider"]]],[11,"clone","","",5,[[["self"]],["nghttp2_data"]]],[11,"clone","","",6,[[["self"]],["nghttp2_priority_spec"]]],[11,"clone","","",7,[[["self"]],["nghttp2_headers"]]],[11,"clone","","",8,[[["self"]],["nghttp2_priority"]]],[11,"clone","","",9,[[["self"]],["nghttp2_rst_stream"]]],[11,"clone","","",10,[[["self"]],["nghttp2_settings_entry"]]],[11,"clone","","",11,[[["self"]],["nghttp2_settings"]]],[11,"clone","","",12,[[["self"]],["nghttp2_push_promise"]]],[11,"clone","","",13,[[["self"]],["nghttp2_ping"]]],[11,"clone","","",14,[[["self"]],["nghttp2_goaway"]]],[11,"clone","","",15,[[["self"]],["nghttp2_window_update"]]],[11,"clone","","",16,[[["self"]],["nghttp2_extension"]]],[11,"clone","","",22,[[["self"]],["nghttp2_frame"]]],[11,"clone","","",25,[[["self"]],["nghttp2_session_callbacks"]]],[11,"clone","","",17,[[["self"]],["nghttp2_mem"]]],[11,"clone","","",26,[[["self"]],["nghttp2_option"]]],[11,"clone","","",18,[[["self"]],["nghttp2_ext_altsvc"]]],[11,"clone","","",19,[[["self"]],["nghttp2_origin_entry"]]],[11,"clone","","",20,[[["self"]],["nghttp2_ext_origin"]]],[11,"clone","","",27,[[["self"]],["nghttp2_hd_deflater"]]],[11,"clone","","",28,[[["self"]],["nghttp2_hd_inflater"]]],[11,"clone","","",29,[[["self"]],["nghttp2_stream"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]]],"p":[[3,"nghttp2_info"],[3,"nghttp2_vec"],[3,"nghttp2_nv"],[3,"nghttp2_frame_hd"],[3,"nghttp2_data_provider"],[3,"nghttp2_data"],[3,"nghttp2_priority_spec"],[3,"nghttp2_headers"],[3,"nghttp2_priority"],[3,"nghttp2_rst_stream"],[3,"nghttp2_settings_entry"],[3,"nghttp2_settings"],[3,"nghttp2_push_promise"],[3,"nghttp2_ping"],[3,"nghttp2_goaway"],[3,"nghttp2_window_update"],[3,"nghttp2_extension"],[3,"nghttp2_mem"],[3,"nghttp2_ext_altsvc"],[3,"nghttp2_origin_entry"],[3,"nghttp2_ext_origin"],[19,"nghttp2_data_source"],[19,"nghttp2_frame"],[3,"nghttp2_session"],[3,"nghttp2_rcbuf"],[3,"nghttp2_session_callbacks"],[3,"nghttp2_option"],[3,"nghttp2_hd_deflater"],[3,"nghttp2_hd_inflater"],[3,"nghttp2_stream"]]};
searchIndex["libssh2_sys"] = {"doc":"","i":[[3,"libssh2_struct_stat","libssh2_sys","",null,null],[3,"libssh2_agent_publickey","","",null,null],[12,"magic","","",0,null],[12,"node","","",0,null],[12,"blob","","",0,null],[12,"blob_len","","",0,null],[12,"comment","","",0,null],[3,"libssh2_knownhost","","",null,null],[12,"magic","","",1,null],[12,"node","","",1,null],[12,"name","","",1,null],[12,"key","","",1,null],[12,"typemask","","",1,null],[3,"LIBSSH2_SFTP_ATTRIBUTES","","",null,null],[12,"flags","","",2,null],[12,"filesize","","",2,null],[12,"uid","","",2,null],[12,"gid","","",2,null],[12,"permissions","","",2,null],[12,"atime","","",2,null],[12,"mtime","","",2,null],[3,"LIBSSH2_SFTP_STATVFS","","",null,null],[12,"f_bsize","","",3,null],[12,"f_frsize","","",3,null],[12,"f_blocks","","",3,null],[12,"f_bfree","","",3,null],[12,"f_bavail","","",3,null],[12,"f_files","","",3,null],[12,"f_ffree","","",3,null],[12,"f_favail","","",3,null],[12,"f_fsid","","",3,null],[12,"f_flag","","",3,null],[12,"f_namemax","","",3,null],[3,"LIBSSH2_USERAUTH_KBDINT_PROMPT","","",null,null],[12,"text","","",4,null],[12,"length","","",4,null],[12,"echo","","",4,null],[3,"LIBSSH2_USERAUTH_KBDINT_RESPONSE","","",null,null],[12,"text","","",5,null],[12,"length","","",5,null],[4,"LIBSSH2_SESSION","","",null,null],[4,"LIBSSH2_AGENT","","",null,null],[4,"LIBSSH2_CHANNEL","","",null,null],[4,"LIBSSH2_LISTENER","","",null,null],[4,"LIBSSH2_KNOWNHOSTS","","",null,null],[4,"LIBSSH2_SFTP","","",null,null],[4,"LIBSSH2_SFTP_HANDLE","","",null,null],[5,"init","","",null,[[]]],[5,"libssh2_init","","",null,null],[5,"libssh2_exit","","",null,null],[5,"libssh2_free","","",null,null],[5,"libssh2_hostkey_hash","","",null,null],[5,"libssh2_session_init_ex","","",null,null],[5,"libssh2_session_abstract","","",null,null],[5,"libssh2_session_free","","",null,null],[5,"libssh2_session_banner_get","","",null,null],[5,"libssh2_session_banner_set","","",null,null],[5,"libssh2_session_disconnect_ex","","",null,null],[5,"libssh2_session_flag","","",null,null],[5,"libssh2_session_get_blocking","","",null,null],[5,"libssh2_session_get_timeout","","",null,null],[5,"libssh2_session_hostkey","","",null,null],[5,"libssh2_session_method_pref","","",null,null],[5,"libssh2_session_methods","","",null,null],[5,"libssh2_session_set_blocking","","",null,null],[5,"libssh2_session_set_timeout","","",null,null],[5,"libssh2_session_supported_algs","","",null,null],[5,"libssh2_session_last_error","","",null,null],[5,"libssh2_session_handshake","","",null,null],[5,"libssh2_keepalive_config","","",null,null],[5,"libssh2_keepalive_send","","",null,null],[5,"libssh2_session_block_directions","","",null,null],[5,"libssh2_agent_init","","",null,null],[5,"libssh2_agent_free","","",null,null],[5,"libssh2_agent_connect","","",null,null],[5,"libssh2_agent_disconnect","","",null,null],[5,"libssh2_agent_list_identities","","",null,null],[5,"libssh2_agent_get_identity","","",null,null],[5,"libssh2_agent_userauth","","",null,null],[5,"libssh2_channel_free","","",null,null],[5,"libssh2_channel_close","","",null,null],[5,"libssh2_channel_wait_closed","","",null,null],[5,"libssh2_channel_wait_eof","","",null,null],[5,"libssh2_channel_eof","","",null,null],[5,"libssh2_channel_process_startup","","",null,null],[5,"libssh2_channel_flush_ex","","",null,null],[5,"libssh2_channel_write_ex","","",null,null],[5,"libssh2_channel_get_exit_signal","","",null,null],[5,"libssh2_channel_get_exit_status","","",null,null],[5,"libssh2_channel_open_ex","","",null,null],[5,"libssh2_channel_read_ex","","",null,null],[5,"libssh2_channel_setenv_ex","","",null,null],[5,"libssh2_channel_send_eof","","",null,null],[5,"libssh2_channel_request_pty_ex","","",null,null],[5,"libssh2_channel_request_pty_size_ex","","",null,null],[5,"libssh2_channel_window_read_ex","","",null,null],[5,"libssh2_channel_window_write_ex","","",null,null],[5,"libssh2_channel_receive_window_adjust2","","",null,null],[5,"libssh2_channel_direct_tcpip_ex","","",null,null],[5,"libssh2_channel_forward_accept","","",null,null],[5,"libssh2_channel_forward_cancel","","",null,null],[5,"libssh2_channel_forward_listen_ex","","",null,null],[5,"libssh2_channel_handle_extended_data2","","",null,null],[5,"libssh2_channel_request_auth_agent","","",null,null],[5,"libssh2_userauth_authenticated","","",null,null],[5,"libssh2_userauth_list","","",null,null],[5,"libssh2_userauth_hostbased_fromfile_ex","","",null,null],[5,"libssh2_userauth_publickey_fromfile_ex","","",null,null],[5,"libssh2_userauth_publickey_frommemory","","",null,null],[5,"libssh2_userauth_password_ex","","",null,null],[5,"libssh2_userauth_keyboard_interactive_ex","","",null,null],[5,"libssh2_knownhost_free","","",null,null],[5,"libssh2_knownhost_addc","","",null,null],[5,"libssh2_knownhost_check","","",null,null],[5,"libssh2_knownhost_checkp","","",null,null],[5,"libssh2_knownhost_del","","",null,null],[5,"libssh2_knownhost_get","","",null,null],[5,"libssh2_knownhost_readfile","","",null,null],[5,"libssh2_knownhost_readline","","",null,null],[5,"libssh2_knownhost_writefile","","",null,null],[5,"libssh2_knownhost_writeline","","",null,null],[5,"libssh2_knownhost_init","","",null,null],[5,"libssh2_scp_recv","","",null,null],[5,"libssh2_scp_recv2","","",null,null],[5,"libssh2_scp_send64","","",null,null],[5,"libssh2_sftp_init","","",null,null],[5,"libssh2_sftp_shutdown","","",null,null],[5,"libssh2_sftp_last_error","","",null,null],[5,"libssh2_sftp_open_ex","","",null,null],[5,"libssh2_sftp_close_handle","","",null,null],[5,"libssh2_sftp_mkdir_ex","","",null,null],[5,"libssh2_sftp_fsync","","",null,null],[5,"libssh2_sftp_fstat_ex","","",null,null],[5,"libssh2_sftp_fstatvfs","","",null,null],[5,"libssh2_sftp_stat_ex","","",null,null],[5,"libssh2_sftp_read","","",null,null],[5,"libssh2_sftp_symlink_ex","","",null,null],[5,"libssh2_sftp_rename_ex","","",null,null],[5,"libssh2_sftp_rmdir_ex","","",null,null],[5,"libssh2_sftp_write","","",null,null],[5,"libssh2_sftp_tell64","","",null,null],[5,"libssh2_sftp_seek64","","",null,null],[5,"libssh2_sftp_readdir_ex","","",null,null],[5,"libssh2_sftp_unlink_ex","","",null,null],[6,"libssh2_int64_t","","",null,null],[6,"libssh2_uint64_t","","",null,null],[6,"LIBSSH2_ALLOC_FUNC","","",null,null],[6,"LIBSSH2_FREE_FUNC","","",null,null],[6,"LIBSSH2_REALLOC_FUNC","","",null,null],[6,"LIBSSH2_PASSWD_CHANGEREQ_FUNC","","",null,null],[6,"LIBSSH2_USERAUTH_KBDINT_RESPONSE_FUNC","","",null,null],[6,"libssh2_socket_t","","",null,null],[17,"SSH_DISCONNECT_HOST_NOT_ALLOWED_TO_CONNECT","","",null,null],[17,"SSH_DISCONNECT_PROTOCOL_ERROR","","",null,null],[17,"SSH_DISCONNECT_KEY_EXCHANGE_FAILED","","",null,null],[17,"SSH_DISCONNECT_RESERVED","","",null,null],[17,"SSH_DISCONNECT_MAC_ERROR","","",null,null],[17,"SSH_DISCONNECT_COMPRESSION_ERROR","","",null,null],[17,"SSH_DISCONNECT_SERVICE_NOT_AVAILABLE","","",null,null],[17,"SSH_DISCONNECT_PROTOCOL_VERSION_NOT_SUPPORTED","","",null,null],[17,"SSH_DISCONNECT_HOST_KEY_NOT_VERIFIABLE","","",null,null],[17,"SSH_DISCONNECT_CONNECTION_LOST","","",null,null],[17,"SSH_DISCONNECT_BY_APPLICATION","","",null,null],[17,"SSH_DISCONNECT_TOO_MANY_CONNECTIONS","","",null,null],[17,"SSH_DISCONNECT_AUTH_CANCELLED_BY_USER","","",null,null],[17,"SSH_DISCONNECT_NO_MORE_AUTH_METHODS_AVAILABLE","","",null,null],[17,"SSH_DISCONNECT_ILLEGAL_USER_NAME","","",null,null],[17,"LIBSSH2_FLAG_SIGPIPE","","",null,null],[17,"LIBSSH2_FLAG_COMPRESS","","",null,null],[17,"LIBSSH2_HOSTKEY_TYPE_UNKNOWN","","",null,null],[17,"LIBSSH2_HOSTKEY_TYPE_RSA","","",null,null],[17,"LIBSSH2_HOSTKEY_TYPE_DSS","","",null,null],[17,"LIBSSH2_HOSTKEY_TYPE_ECDSA_256","","",null,null],[17,"LIBSSH2_HOSTKEY_TYPE_ECDSA_384","","",null,null],[17,"LIBSSH2_HOSTKEY_TYPE_ECDSA_521","","",null,null],[17,"LIBSSH2_HOSTKEY_TYPE_ED25519","","",null,null],[17,"LIBSSH2_METHOD_KEX","","",null,null],[17,"LIBSSH2_METHOD_HOSTKEY","","",null,null],[17,"LIBSSH2_METHOD_CRYPT_CS","","",null,null],[17,"LIBSSH2_METHOD_CRYPT_SC","","",null,null],[17,"LIBSSH2_METHOD_MAC_CS","","",null,null],[17,"LIBSSH2_METHOD_MAC_SC","","",null,null],[17,"LIBSSH2_METHOD_COMP_CS","","",null,null],[17,"LIBSSH2_METHOD_COMP_SC","","",null,null],[17,"LIBSSH2_METHOD_LANG_CS","","",null,null],[17,"LIBSSH2_METHOD_LANG_SC","","",null,null],[17,"LIBSSH2_CHANNEL_PACKET_DEFAULT","","",null,null],[17,"LIBSSH2_CHANNEL_WINDOW_DEFAULT","","",null,null],[17,"LIBSSH2_ERROR_BANNER_RECV","","",null,null],[17,"LIBSSH2_ERROR_BANNER_SEND","","",null,null],[17,"LIBSSH2_ERROR_INVALID_MAC","","",null,null],[17,"LIBSSH2_ERROR_KEX_FAILURE","","",null,null],[17,"LIBSSH2_ERROR_ALLOC","","",null,null],[17,"LIBSSH2_ERROR_SOCKET_SEND","","",null,null],[17,"LIBSSH2_ERROR_KEY_EXCHANGE_FAILURE","","",null,null],[17,"LIBSSH2_ERROR_TIMEOUT","","",null,null],[17,"LIBSSH2_ERROR_HOSTKEY_INIT","","",null,null],[17,"LIBSSH2_ERROR_HOSTKEY_SIGN","","",null,null],[17,"LIBSSH2_ERROR_DECRYPT","","",null,null],[17,"LIBSSH2_ERROR_SOCKET_DISCONNECT","","",null,null],[17,"LIBSSH2_ERROR_PROTO","","",null,null],[17,"LIBSSH2_ERROR_PASSWORD_EXPIRED","","",null,null],[17,"LIBSSH2_ERROR_FILE","","",null,null],[17,"LIBSSH2_ERROR_METHOD_NONE","","",null,null],[17,"LIBSSH2_ERROR_AUTHENTICATION_FAILED","","",null,null],[17,"LIBSSH2_ERROR_PUBLICKEY_UNRECOGNIZED","","",null,null],[17,"LIBSSH2_ERROR_PUBLICKEY_UNVERIFIED","","",null,null],[17,"LIBSSH2_ERROR_CHANNEL_OUTOFORDER","","",null,null],[17,"LIBSSH2_ERROR_CHANNEL_FAILURE","","",null,null],[17,"LIBSSH2_ERROR_CHANNEL_REQUEST_DENIED","","",null,null],[17,"LIBSSH2_ERROR_CHANNEL_UNKNOWN","","",null,null],[17,"LIBSSH2_ERROR_CHANNEL_WINDOW_EXCEEDED","","",null,null],[17,"LIBSSH2_ERROR_CHANNEL_PACKET_EXCEEDED","","",null,null],[17,"LIBSSH2_ERROR_CHANNEL_CLOSED","","",null,null],[17,"LIBSSH2_ERROR_CHANNEL_EOF_SENT","","",null,null],[17,"LIBSSH2_ERROR_SCP_PROTOCOL","","",null,null],[17,"LIBSSH2_ERROR_ZLIB","","",null,null],[17,"LIBSSH2_ERROR_SOCKET_TIMEOUT","","",null,null],[17,"LIBSSH2_ERROR_SFTP_PROTOCOL","","",null,null],[17,"LIBSSH2_ERROR_REQUEST_DENIED","","",null,null],[17,"LIBSSH2_ERROR_METHOD_NOT_SUPPORTED","","",null,null],[17,"LIBSSH2_ERROR_INVAL","","",null,null],[17,"LIBSSH2_ERROR_INVALID_POLL_TYPE","","",null,null],[17,"LIBSSH2_ERROR_PUBLICKEY_PROTOCOL","","",null,null],[17,"LIBSSH2_ERROR_EAGAIN","","",null,null],[17,"LIBSSH2_ERROR_BUFFER_TOO_SMALL","","",null,null],[17,"LIBSSH2_ERROR_BAD_USE","","",null,null],[17,"LIBSSH2_ERROR_COMPRESS","","",null,null],[17,"LIBSSH2_ERROR_OUT_OF_BOUNDARY","","",null,null],[17,"LIBSSH2_ERROR_AGENT_PROTOCOL","","",null,null],[17,"LIBSSH2_ERROR_SOCKET_RECV","","",null,null],[17,"LIBSSH2_ERROR_ENCRYPT","","",null,null],[17,"LIBSSH2_ERROR_BAD_SOCKET","","",null,null],[17,"LIBSSH2_ERROR_KNOWN_HOSTS","","",null,null],[17,"LIBSSH2_FX_EOF","","",null,null],[17,"LIBSSH2_FX_NO_SUCH_FILE","","",null,null],[17,"LIBSSH2_FX_PERMISSION_DENIED","","",null,null],[17,"LIBSSH2_FX_FAILURE","","",null,null],[17,"LIBSSH2_FX_BAD_MESSAGE","","",null,null],[17,"LIBSSH2_FX_NO_CONNECTION","","",null,null],[17,"LIBSSH2_FX_CONNECTION_LOST","","",null,null],[17,"LIBSSH2_FX_OP_UNSUPPORTED","","",null,null],[17,"LIBSSH2_FX_INVALID_HANDLE","","",null,null],[17,"LIBSSH2_FX_NO_SUCH_PATH","","",null,null],[17,"LIBSSH2_FX_FILE_ALREADY_EXISTS","","",null,null],[17,"LIBSSH2_FX_WRITE_PROTECT","","",null,null],[17,"LIBSSH2_FX_NO_MEDIA","","",null,null],[17,"LIBSSH2_FX_NO_SPACE_ON_FILESYSTEM","","",null,null],[17,"LIBSSH2_FX_QUOTA_EXCEEDED","","",null,null],[17,"LIBSSH2_FX_UNKNOWN_PRINCIPAL","","",null,null],[17,"LIBSSH2_FX_LOCK_CONFLICT","","",null,null],[17,"LIBSSH2_FX_DIR_NOT_EMPTY","","",null,null],[17,"LIBSSH2_FX_NOT_A_DIRECTORY","","",null,null],[17,"LIBSSH2_FX_INVALID_FILENAME","","",null,null],[17,"LIBSSH2_FX_LINK_LOOP","","",null,null],[17,"LIBSSH2_HOSTKEY_HASH_MD5","","",null,null],[17,"LIBSSH2_HOSTKEY_HASH_SHA1","","",null,null],[17,"LIBSSH2_HOSTKEY_HASH_SHA256","","",null,null],[17,"LIBSSH2_KNOWNHOST_FILE_OPENSSH","","",null,null],[17,"LIBSSH2_KNOWNHOST_CHECK_MATCH","","",null,null],[17,"LIBSSH2_KNOWNHOST_CHECK_MISMATCH","","",null,null],[17,"LIBSSH2_KNOWNHOST_CHECK_NOTFOUND","","",null,null],[17,"LIBSSH2_KNOWNHOST_CHECK_FAILURE","","",null,null],[17,"LIBSSH2_KNOWNHOST_TYPE_PLAIN","","",null,null],[17,"LIBSSH2_KNOWNHOST_TYPE_SHA1","","",null,null],[17,"LIBSSH2_KNOWNHOST_TYPE_CUSTOM","","",null,null],[17,"LIBSSH2_KNOWNHOST_KEYENC_RAW","","",null,null],[17,"LIBSSH2_KNOWNHOST_KEYENC_BASE64","","",null,null],[17,"LIBSSH2_KNOWNHOST_KEY_RSA1","","",null,null],[17,"LIBSSH2_KNOWNHOST_KEY_SSHRSA","","",null,null],[17,"LIBSSH2_KNOWNHOST_KEY_SSHDSS","","",null,null],[17,"LIBSSH2_KNOWNHOST_KEY_ECDSA_256","","",null,null],[17,"LIBSSH2_KNOWNHOST_KEY_ECDSA_384","","",null,null],[17,"LIBSSH2_KNOWNHOST_KEY_ECDSA_521","","",null,null],[17,"LIBSSH2_KNOWNHOST_KEY_ED25519","","",null,null],[17,"LIBSSH2_KNOWNHOST_KEY_UNKNOWN","","",null,null],[17,"LIBSSH2_FXF_READ","","",null,null],[17,"LIBSSH2_FXF_WRITE","","",null,null],[17,"LIBSSH2_FXF_APPEND","","",null,null],[17,"LIBSSH2_FXF_CREAT","","",null,null],[17,"LIBSSH2_FXF_TRUNC","","",null,null],[17,"LIBSSH2_FXF_EXCL","","",null,null],[17,"LIBSSH2_SFTP_OPENFILE","","",null,null],[17,"LIBSSH2_SFTP_OPENDIR","","",null,null],[17,"LIBSSH2_SFTP_ATTR_SIZE","","",null,null],[17,"LIBSSH2_SFTP_ATTR_UIDGID","","",null,null],[17,"LIBSSH2_SFTP_ATTR_PERMISSIONS","","",null,null],[17,"LIBSSH2_SFTP_ATTR_ACMODTIME","","",null,null],[17,"LIBSSH2_SFTP_ATTR_EXTENDED","","",null,null],[17,"LIBSSH2_SFTP_STAT","","",null,null],[17,"LIBSSH2_SFTP_LSTAT","","",null,null],[17,"LIBSSH2_SFTP_SETSTAT","","",null,null],[17,"LIBSSH2_SFTP_SYMLINK","","",null,null],[17,"LIBSSH2_SFTP_READLINK","","",null,null],[17,"LIBSSH2_SFTP_REALPATH","","",null,null],[17,"LIBSSH2_SFTP_RENAME_OVERWRITE","","",null,null],[17,"LIBSSH2_SFTP_RENAME_ATOMIC","","",null,null],[17,"LIBSSH2_SFTP_RENAME_NATIVE","","",null,null],[17,"LIBSSH2_INIT_NO_CRYPTO","","",null,null],[17,"LIBSSH2_SFTP_S_IFMT","","",null,null],[17,"LIBSSH2_SFTP_S_IFDIR","","",null,null],[17,"LIBSSH2_SFTP_S_IFREG","","",null,null],[17,"LIBSSH2_SFTP_S_IFLNK","","",null,null],[17,"LIBSSH2_CHANNEL_EXTENDED_DATA_NORMAL","","",null,null],[17,"LIBSSH2_CHANNEL_EXTENDED_DATA_IGNORE","","",null,null],[17,"LIBSSH2_CHANNEL_EXTENDED_DATA_MERGE","","",null,null],[17,"LIBSSH2_SESSION_BLOCK_INBOUND","","",null,null],[17,"LIBSSH2_SESSION_BLOCK_OUTBOUND","","",null,null],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"clone","","",2,[[["self"]],["libssh2_sftp_attributes"]]],[11,"clone","","",3,[[["self"]],["libssh2_sftp_statvfs"]]],[11,"deref","","",6,[[["self"]]]]],"p":[[3,"libssh2_agent_publickey"],[3,"libssh2_knownhost"],[3,"LIBSSH2_SFTP_ATTRIBUTES"],[3,"LIBSSH2_SFTP_STATVFS"],[3,"LIBSSH2_USERAUTH_KBDINT_PROMPT"],[3,"LIBSSH2_USERAUTH_KBDINT_RESPONSE"],[3,"libssh2_struct_stat"],[4,"LIBSSH2_SESSION"],[4,"LIBSSH2_AGENT"],[4,"LIBSSH2_CHANNEL"],[4,"LIBSSH2_LISTENER"],[4,"LIBSSH2_KNOWNHOSTS"],[4,"LIBSSH2_SFTP"],[4,"LIBSSH2_SFTP_HANDLE"]]};
searchIndex["libz_sys"] = {"doc":"","i":[[3,"gz_header","libz_sys","",null,null],[12,"text","","",0,null],[12,"time","","",0,null],[12,"xflags","","",0,null],[12,"os","","",0,null],[12,"extra","","",0,null],[12,"extra_len","","",0,null],[12,"extra_max","","",0,null],[12,"name","","",0,null],[12,"name_max","","",0,null],[12,"comment","","",0,null],[12,"comm_max","","",0,null],[12,"hcrc","","",0,null],[12,"done","","",0,null],[3,"z_stream","","",null,null],[12,"next_in","","",1,null],[12,"avail_in","","",1,null],[12,"total_in","","",1,null],[12,"next_out","","",1,null],[12,"avail_out","","",1,null],[12,"total_out","","",1,null],[12,"msg","","",1,null],[12,"state","","",1,null],[12,"zalloc","","",1,null],[12,"zfree","","",1,null],[12,"opaque","","",1,null],[12,"data_type","","",1,null],[12,"adler","","",1,null],[12,"reserved","","",1,null],[4,"gzFile_s","","",null,null],[4,"internal_state","","",null,null],[5,"adler32","","",null,null],[5,"adler32_combine","","",null,null],[5,"compress","","",null,null],[5,"compress2","","",null,null],[5,"compressBound","","",null,null],[5,"crc32","","",null,null],[5,"crc32_combine","","",null,null],[5,"deflate","","",null,null],[5,"deflateBound","","",null,null],[5,"deflateCopy","","",null,null],[5,"deflateEnd","","",null,null],[5,"deflateInit_","","",null,null],[5,"deflateInit2_","","",null,null],[5,"deflateParams","","",null,null],[5,"deflatePrime","","",null,null],[5,"deflateReset","","",null,null],[5,"deflateSetDictionary","","",null,null],[5,"deflateSetHeader","","",null,null],[5,"deflateTune","","",null,null],[5,"gzdirect","","",null,null],[5,"gzdopen","","",null,null],[5,"gzclearerr","","",null,null],[5,"gzclose","","",null,null],[5,"gzeof","","",null,null],[5,"gzerror","","",null,null],[5,"gzflush","","",null,null],[5,"gzgetc","","",null,null],[5,"gzgets","","",null,null],[5,"gzopen","","",null,null],[5,"gzputc","","",null,null],[5,"gzputs","","",null,null],[5,"gzread","","",null,null],[5,"gzrewind","","",null,null],[5,"gzseek","","",null,null],[5,"gzsetparams","","",null,null],[5,"gztell","","",null,null],[5,"gzungetc","","",null,null],[5,"gzwrite","","",null,null],[5,"inflate","","",null,null],[5,"inflateBack","","",null,null],[5,"inflateBackEnd","","",null,null],[5,"inflateBackInit_","","",null,null],[5,"inflateCopy","","",null,null],[5,"inflateEnd","","",null,null],[5,"inflateGetHeader","","",null,null],[5,"inflateInit_","","",null,null],[5,"inflateInit2_","","",null,null],[5,"inflateMark","","",null,null],[5,"inflatePrime","","",null,null],[5,"inflateReset","","",null,null],[5,"inflateReset2","","",null,null],[5,"inflateSetDictionary","","",null,null],[5,"inflateSync","","",null,null],[5,"uncompress","","",null,null],[5,"zlibCompileFlags","","",null,null],[5,"zlibVersion","","",null,null],[6,"alloc_func","","",null,null],[6,"Bytef","","",null,null],[6,"free_func","","",null,null],[6,"gzFile","","",null,null],[6,"in_func","","",null,null],[6,"out_func","","",null,null],[6,"uInt","","",null,null],[6,"uLong","","",null,null],[6,"uLongf","","",null,null],[6,"voidp","","",null,null],[6,"voidpc","","",null,null],[6,"voidpf","","",null,null],[6,"z_off_t","","",null,null],[6,"gz_headerp","","",null,null],[6,"z_streamp","","",null,null],[17,"Z_NO_FLUSH","","",null,null],[17,"Z_PARTIAL_FLUSH","","",null,null],[17,"Z_SYNC_FLUSH","","",null,null],[17,"Z_FULL_FLUSH","","",null,null],[17,"Z_FINISH","","",null,null],[17,"Z_BLOCK","","",null,null],[17,"Z_TREES","","",null,null],[17,"Z_OK","","",null,null],[17,"Z_STREAM_END","","",null,null],[17,"Z_NEED_DICT","","",null,null],[17,"Z_ERRNO","","",null,null],[17,"Z_STREAM_ERROR","","",null,null],[17,"Z_DATA_ERROR","","",null,null],[17,"Z_MEM_ERROR","","",null,null],[17,"Z_BUF_ERROR","","",null,null],[17,"Z_VERSION_ERROR","","",null,null],[17,"Z_NO_COMPRESSION","","",null,null],[17,"Z_BEST_SPEED","","",null,null],[17,"Z_BEST_COMPRESSION","","",null,null],[17,"Z_DEFAULT_COMPRESSION","","",null,null],[17,"Z_FILTERED","","",null,null],[17,"Z_HUFFMAN_ONLY","","",null,null],[17,"Z_RLE","","",null,null],[17,"Z_FIXED","","",null,null],[17,"Z_DEFAULT_STRATEGY","","",null,null],[17,"Z_BINARY","","",null,null],[17,"Z_TEXT","","",null,null],[17,"Z_ASCII","","",null,null],[17,"Z_UNKNOWN","","",null,null],[17,"Z_DEFLATED","","",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["gz_header"]]],[11,"clone","","",1,[[["self"]],["z_stream"]]]],"p":[[3,"gz_header"],[3,"z_stream"],[4,"gzFile_s"],[4,"internal_state"]]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","i":[[3,"Record","log","The \"payload\" of a log message.",null,null],[3,"RecordBuilder","","Builder for `Record`.",null,null],[3,"Metadata","","Metadata about a log message.",null,null],[3,"MetadataBuilder","","Builder for `Metadata`.",null,null],[3,"SetLoggerError","","The type returned by [`set_logger`] if [`set_logger`] has…",null,null],[3,"ParseLevelError","","The type returned by [`from_str`] when the string doesn't…",null,null],[4,"Level","","An enum representing the available verbosity levels of the…",null,null],[13,"Error","","The \"error\" level.",0,null],[13,"Warn","","The \"warn\" level.",0,null],[13,"Info","","The \"info\" level.",0,null],[13,"Debug","","The \"debug\" level.",0,null],[13,"Trace","","The \"trace\" level.",0,null],[4,"LevelFilter","","An enum representing the available verbosity level filters…",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"set_max_level","","Sets the global maximum log level.",null,[[["levelfilter"]]]],[5,"max_level","","Returns the current maximum log level.",null,[[],["levelfilter"]]],[5,"set_boxed_logger","","Sets the global logger to a `Box<Log>`.",null,[[["box",["log"]],["log"]],[["setloggererror"],["result",["setloggererror"]]]]],[5,"set_logger","","Sets the global logger to a `&'static Log`.",null,[[["log"]],[["setloggererror"],["result",["setloggererror"]]]]],[5,"set_logger_racy","","A thread-unsafe version of [`set_logger`].",null,[[["log"]],[["setloggererror"],["result",["setloggererror"]]]]],[5,"logger","","Returns a reference to the logger.",null,[[],["log"]]],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",null,null],[8,"Log","","A trait encapsulating the operations required of a logger.",null,null],[10,"enabled","","Determines if a log message with the specified metadata…",2,[[["self"],["metadata"]],["bool"]]],[10,"log","","Logs the `Record`.",2,[[["record"],["self"]]]],[10,"flush","","Flushes any buffered records.",2,[[["self"]]]],[11,"max","","Returns the most verbose logging level.",0,[[],["level"]]],[11,"to_level_filter","","Converts the `Level` to the equivalent `LevelFilter`.",0,[[["self"]],["levelfilter"]]],[11,"max","","Returns the most verbose logging level filter.",1,[[],["levelfilter"]]],[11,"to_level","","Converts `self` to the equivalent `Level`.",1,[[["self"]],[["option",["level"]],["level"]]]],[11,"builder","","Returns a new builder.",3,[[],["recordbuilder"]]],[11,"args","","The message body.",3,[[["self"]],["arguments"]]],[11,"metadata","","Metadata about the log directive.",3,[[["self"]],["metadata"]]],[11,"level","","The verbosity level of the message.",3,[[["self"]],["level"]]],[11,"target","","The name of the target of the directive.",3,[[["self"]],["str"]]],[11,"module_path","","The module path of the message.",3,[[["self"]],[["str"],["option",["str"]]]]],[11,"module_path_static","","The module path of the message, if it is a `'static` string.",3,[[["self"]],[["option",["str"]],["str"]]]],[11,"file","","The source file containing the message.",3,[[["self"]],[["str"],["option",["str"]]]]],[11,"file_static","","The module path of the message, if it is a `'static` string.",3,[[["self"]],[["option",["str"]],["str"]]]],[11,"line","","The line containing the message.",3,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"new","","Construct new `RecordBuilder`.",4,[[],["recordbuilder"]]],[11,"args","","Set `args`.",4,[[["self"],["arguments"]],["recordbuilder"]]],[11,"metadata","","Set `metadata`. Construct a `Metadata` object with…",4,[[["self"],["metadata"]],["recordbuilder"]]],[11,"level","","Set `Metadata::level`.",4,[[["self"],["level"]],["recordbuilder"]]],[11,"target","","Set `Metadata::target`",4,[[["self"],["str"]],["recordbuilder"]]],[11,"module_path","","Set `module_path`",4,[[["self"],["str"],["option",["str"]]],["recordbuilder"]]],[11,"module_path_static","","Set `module_path` to a `'static` string",4,[[["option",["str"]],["self"],["str"]],["recordbuilder"]]],[11,"file","","Set `file`",4,[[["self"],["str"],["option",["str"]]],["recordbuilder"]]],[11,"file_static","","Set `file` to a `'static` string.",4,[[["option",["str"]],["self"],["str"]],["recordbuilder"]]],[11,"line","","Set `line`",4,[[["self"],["u32"],["option",["u32"]]],["recordbuilder"]]],[11,"build","","Invoke the builder and return a `Record`",4,[[["self"]],["record"]]],[11,"builder","","Returns a new builder.",5,[[],["metadatabuilder"]]],[11,"level","","The verbosity level of the message.",5,[[["self"]],["level"]]],[11,"target","","The name of the target of the directive.",5,[[["self"]],["str"]]],[11,"new","","Construct a new `MetadataBuilder`.",6,[[],["metadatabuilder"]]],[11,"level","","Setter for `level`.",6,[[["self"],["level"]],["metadatabuilder"]]],[11,"target","","Setter for `target`.",6,[[["self"],["str"]],["metadatabuilder"]]],[11,"build","","Returns a `Metadata` object.",6,[[["self"]],["metadata"]]],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in…",null,null],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["level"]]],[11,"clone","","",1,[[["self"]],["levelfilter"]]],[11,"clone","","",3,[[["self"]],["record"]]],[11,"clone","","",5,[[["self"]],["metadata"]]],[11,"cmp","","",0,[[["self"],["level"]],["ordering"]]],[11,"cmp","","",1,[[["levelfilter"],["self"]],["ordering"]]],[11,"cmp","","",5,[[["metadata"],["self"]],["ordering"]]],[11,"cmp","","",6,[[["metadatabuilder"],["self"]],["ordering"]]],[11,"eq","","",0,[[["self"],["level"]],["bool"]]],[11,"eq","","",0,[[["levelfilter"],["self"]],["bool"]]],[11,"eq","","",1,[[["levelfilter"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["level"]],["bool"]]],[11,"eq","","",5,[[["metadata"],["self"]],["bool"]]],[11,"ne","","",5,[[["metadata"],["self"]],["bool"]]],[11,"eq","","",6,[[["metadatabuilder"],["self"]],["bool"]]],[11,"ne","","",6,[[["metadatabuilder"],["self"]],["bool"]]],[11,"eq","","",8,[[["self"],["parselevelerror"]],["bool"]]],[11,"ne","","",8,[[["self"],["parselevelerror"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["level"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",0,[[["self"],["level"]],["bool"]]],[11,"le","","",0,[[["self"],["level"]],["bool"]]],[11,"gt","","",0,[[["self"],["level"]],["bool"]]],[11,"ge","","",0,[[["self"],["level"]],["bool"]]],[11,"partial_cmp","","",0,[[["levelfilter"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",0,[[["levelfilter"],["self"]],["bool"]]],[11,"le","","",0,[[["levelfilter"],["self"]],["bool"]]],[11,"gt","","",0,[[["levelfilter"],["self"]],["bool"]]],[11,"ge","","",0,[[["levelfilter"],["self"]],["bool"]]],[11,"partial_cmp","","",1,[[["levelfilter"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",1,[[["levelfilter"],["self"]],["bool"]]],[11,"le","","",1,[[["levelfilter"],["self"]],["bool"]]],[11,"gt","","",1,[[["levelfilter"],["self"]],["bool"]]],[11,"ge","","",1,[[["levelfilter"],["self"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["level"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",1,[[["self"],["level"]],["bool"]]],[11,"le","","",1,[[["self"],["level"]],["bool"]]],[11,"gt","","",1,[[["self"],["level"]],["bool"]]],[11,"ge","","",1,[[["self"],["level"]],["bool"]]],[11,"partial_cmp","","",5,[[["metadata"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",5,[[["metadata"],["self"]],["bool"]]],[11,"le","","",5,[[["metadata"],["self"]],["bool"]]],[11,"gt","","",5,[[["metadata"],["self"]],["bool"]]],[11,"ge","","",5,[[["metadata"],["self"]],["bool"]]],[11,"partial_cmp","","",6,[[["metadatabuilder"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",6,[[["metadatabuilder"],["self"]],["bool"]]],[11,"le","","",6,[[["metadatabuilder"],["self"]],["bool"]]],[11,"gt","","",6,[[["metadatabuilder"],["self"]],["bool"]]],[11,"ge","","",6,[[["metadatabuilder"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",5,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"from_str","","",0,[[["str"]],[["result",["level"]],["level"]]]],[11,"from_str","","",1,[[["str"]],[["levelfilter"],["result",["levelfilter"]]]]],[11,"description","","",7,[[["self"]],["str"]]],[11,"description","","",8,[[["self"]],["str"]]]],"p":[[4,"Level"],[4,"LevelFilter"],[8,"Log"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[3,"SetLoggerError"],[3,"ParseLevelError"]]};
searchIndex["matches"] = {"doc":"","i":[[14,"matches","matches","Check if an expression matches a refutable pattern.",null,null],[14,"assert_matches","","Assert that an expression matches a refutable pattern.",null,null],[14,"debug_assert_matches","","Assert that an expression matches a refutable pattern…",null,null]],"p":[]};
searchIndex["memchr"] = {"doc":"The `memchr` crate provides heavily optimized routines for…","i":[[3,"Memchr","memchr","An iterator for `memchr`.",null,null],[3,"Memchr2","","An iterator for `memchr2`.",null,null],[3,"Memchr3","","An iterator for `memchr3`.",null,null],[5,"memchr_iter","","An iterator over all occurrences of the needle in a…",null,[[["u8"]],["memchr"]]],[5,"memchr2_iter","","An iterator over all occurrences of the needles in a…",null,[[["u8"]],["memchr2"]]],[5,"memchr3_iter","","An iterator over all occurrences of the needles in a…",null,[[["u8"]],["memchr3"]]],[5,"memrchr_iter","","An iterator over all occurrences of the needle in a…",null,[[["u8"]],[["memchr"],["rev",["memchr"]]]]],[5,"memrchr2_iter","","An iterator over all occurrences of the needles in a…",null,[[["u8"]],[["memchr2"],["rev",["memchr2"]]]]],[5,"memrchr3_iter","","An iterator over all occurrences of the needles in a…",null,[[["u8"]],[["rev",["memchr3"]],["memchr3"]]]],[5,"memchr","","Search for the first occurrence of a byte in a slice.",null,[[["u8"]],[["usize"],["option",["usize"]]]]],[5,"memchr2","","Like `memchr`, but searches for either of two bytes…",null,[[["u8"]],[["usize"],["option",["usize"]]]]],[5,"memchr3","","Like `memchr`, but searches for any of three bytes instead…",null,[[["u8"]],[["usize"],["option",["usize"]]]]],[5,"memrchr","","Search for the last occurrence of a byte in a slice.",null,[[["u8"]],[["usize"],["option",["usize"]]]]],[5,"memrchr2","","Like `memrchr`, but searches for either of two bytes…",null,[[["u8"]],[["usize"],["option",["usize"]]]]],[5,"memrchr3","","Like `memrchr`, but searches for any of three bytes…",null,[[["u8"]],[["usize"],["option",["usize"]]]]],[11,"new","","Creates a new iterator that yields all positions of needle…",0,[[["u8"]],["memchr"]]],[11,"new","","Creates a new iterator that yields all positions of needle…",1,[[["u8"]],["memchr2"]]],[11,"new","","Create a new `Memchr3` that's initialized to zero with a…",2,[[["u8"]],["memchr3"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"next_back","","",1,[[["self"]],["option"]]],[11,"next_back","","",2,[[["self"]],["option"]]],[11,"next","","",0,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"size_hint","","",0,[[["self"]]]],[11,"next","","",1,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"size_hint","","",1,[[["self"]]]],[11,"next","","",2,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"size_hint","","",2,[[["self"]]]]],"p":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"]]};
searchIndex["nested"] = {"doc":"A two dimensional collection whose purpose it to reduce…","i":[[3,"Nested","nested","A two dimensional collection with minimal allocation",null,null],[3,"Iter","","An iterator over `Nested` elements",null,null],[6,"Item","","A `Nested` item when `T: Collection`",null,null],[6,"ZString","","A `Nested<String>`",null,null],[6,"ZVec","","A `Nested<Vec<T>>`",null,null],[8,"Collection","","A `Collection` trait to expose basic required fn for…",null,null],[10,"new","","",0,[[],["self"]]],[10,"with_capacity","","",0,[[["usize"]],["self"]]],[10,"len","","",0,[[["self"]],["usize"]]],[10,"truncate","","",0,[[["self"],["usize"]]]],[10,"extend_from_slice","","",0,[[["self"]]]],[10,"split_off","","",0,[[["self"],["usize"]],["self"]]],[11,"new","","Create a new `Nested`.",1,[[],["self"]]],[11,"with_capacity","","Creates a new `Nested` with given capacity.",1,[[["usize"]],["self"]]],[11,"push","","Pushes a new item",1,[[["self"],["item"],["asref",["item"]]]]],[11,"pop","","Removes the last element from a `Nested` and returns it,…",1,[[["self"]],["option"]]],[11,"extend_empty","","Extend with `count` empty elements",1,[[["self"],["usize"]]]],[11,"len","","Returns the number of elements in the `Nested`.",1,[[["self"]],["usize"]]],[11,"data_len","","Get the total length taken by the data",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if self has a length of zero.",1,[[["self"]],["bool"]]],[11,"truncate","","Shortens the `Nested`, keeping the first len elements and…",1,[[["self"],["usize"]]]],[11,"clear","","Truncates this `Nested`, removing all contents.",1,[[["self"]]]],[11,"get","","Returns a shared reference to the output at this location,…",1,[[["self"],["usize"]],[["item"],["option",["item"]]]]],[11,"into_parts","","Converts this `Nested` into its constituent parts.",1,[[]]],[11,"indices","","Returns a reference to the underlying indices.",1,[[["self"]]]],[11,"data","","Returns a reference to the underlying data.",1,[[["self"]],["t"]]],[11,"iter","","Returns an iterator over `Nested` elements.",1,[[["self"]],["iter"]]],[11,"split_off","","Splits the collection into two at the given index.",1,[[["self"],["usize"]],["nested"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"next_back","","",2,[[["self"]],["option"]]],[11,"len","","",2,[[["self"]],["usize"]]],[11,"extend","","",1,[[["self"],["i"]]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"size_hint","","",2,[[["self"]]]],[11,"clone","","",1,[[["self"]],["nested"]]],[11,"clone","","",2,[[["self"]],["iter"]]],[11,"eq","","",1,[[["nested"],["self"]],["bool"]]],[11,"ne","","",1,[[["nested"],["self"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"index","","",1,[[["self"],["usize"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"from_iter","","",1,[[["intoiterator"]],["self"]]]],"p":[[8,"Collection"],[3,"Nested"],[3,"Iter"]]};
searchIndex["num_cpus"] = {"doc":"A crate with utilities to determine the number of CPUs…","i":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",null,[[],["usize"]]],[5,"get_physical","","Returns the number of physical cores of the current system.",null,[[],["usize"]]]],"p":[]};
searchIndex["num_traits"] = {"doc":"Numeric traits for generic mathematics","i":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[["partialord"]],["partialord"]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[["partialord"]],["partialord"]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[["partialord"]],["partialord"]]],[0,"bounds","","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",2,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",2,[[],["self"]]],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,[[["numcast"]],[["option"],["numcast"]]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[["self"]],[["isize"],["option",["isize"]]]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[["self"]],[["option",["i8"]],["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[["self"]],[["option",["i16"]],["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[["self"]],[["i32"],["option",["i32"]]]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[["self"]],[["option",["i128"]],["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[["self"]],[["option",["u16"]],["u16"]]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[["self"]],[["u32"],["option",["u32"]]]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[["self"]],[["u128"],["option",["u128"]]]]],[11,"to_f32","","Converts the value of `self` to an `f32`. If the value…",3,[[["self"]],[["option",["f32"]],["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`. If the value…",3,[[["self"]],[["option",["f64"]],["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[["isize"]],["option"]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[["i8"]],["option"]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[["i16"]],["option"]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[["i32"]],["option"]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[["i64"]],["option"]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[["i128"]],["option"]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[["usize"]],["option"]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[["u8"]],["option"]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[["u16"]],["option"]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[["u32"]],["option"]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[["u64"]],["option"]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[["u128"]],["option"]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[["f32"]],["option"]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[["f64"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[["toprimitive"]],["option"]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[],["t"]]],[0,"float","num_traits","",null,null],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with…",null,null],[10,"infinity","","Returns positive infinity.",7,[[],["self"]]],[10,"neg_infinity","","Returns negative infinity.",7,[[],["self"]]],[10,"nan","","Returns NaN.",7,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",7,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",7,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",7,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",7,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",7,[[],["self"]]],[11,"is_nan","","Returns `true` if the number is NaN.",7,[[],["bool"]]],[11,"is_infinite","","Returns `true` if the number is infinite.",7,[[],["bool"]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",7,[[],["bool"]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",7,[[],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",7,[[],["fpcategory"]]],[11,"floor","","Returns the largest integer less than or equal to a number.",7,[[],["self"]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",7,[[],["self"]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",7,[[],["self"]]],[11,"trunc","","Return the integer part of a number.",7,[[],["self"]]],[11,"fract","","Returns the fractional part of a number.",7,[[],["self"]]],[11,"abs","","Computes the absolute value of `self`. Returns…",7,[[],["self"]]],[11,"signum","","Returns a number that represents the sign of `self`.",7,[[],["self"]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",7,[[],["bool"]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",7,[[],["bool"]]],[11,"min","","Returns the minimum of the two numbers.",7,[[],["self"]]],[11,"max","","Returns the maximum of the two numbers.",7,[[],["self"]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",7,[[],["self"]]],[11,"powi","","Raise a number to an integer power.",7,[[["i32"]],["self"]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",7,[[],["self"]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",7,[[],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",7,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",8,[[],["self"]]],[10,"infinity","","Returns the infinite value.",8,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",8,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",8,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",8,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",8,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",8,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",8,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",8,[[],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",8,[[],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",8,[[],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",8,[[],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",8,[[],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",8,[[],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",8,[[],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",8,[[],["self"]]],[10,"trunc","","Return the integer part of a number.",8,[[],["self"]]],[10,"fract","","Returns the fractional part of a number.",8,[[],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",8,[[],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",8,[[],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",8,[[],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",8,[[],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",8,[[],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",8,[[],["self"]]],[10,"powi","","Raise a number to an integer power.",8,[[["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",8,[[],["self"]]],[10,"sqrt","","Take the square root of a number.",8,[[],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",8,[[],["self"]]],[10,"exp2","","Returns `2^(self)`.",8,[[],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",8,[[],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",8,[[],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",8,[[],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",8,[[],["self"]]],[11,"to_degrees","","Converts radians to degrees.",8,[[],["self"]]],[11,"to_radians","","Converts degrees to radians.",8,[[],["self"]]],[10,"max","","Returns the maximum of the two numbers.",8,[[],["self"]]],[10,"min","","Returns the minimum of the two numbers.",8,[[],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",8,[[],["self"]]],[10,"cbrt","","Take the cubic root of a number.",8,[[],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",8,[[],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",8,[[],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",8,[[],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",8,[[],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",8,[[],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",8,[[],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",8,[[],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",8,[[],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",8,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",8,[[],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",8,[[],["self"]]],[10,"sinh","","Hyperbolic sine function.",8,[[],["self"]]],[10,"cosh","","Hyperbolic cosine function.",8,[[],["self"]]],[10,"tanh","","Hyperbolic tangent function.",8,[[],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",8,[[],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",8,[[],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",8,[[],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",8,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",9,[[],["self"]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",9,[[],["self"]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",9,[[],["self"]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",9,[[],["self"]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",9,[[],["self"]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",9,[[],["self"]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",9,[[],["self"]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",9,[[],["self"]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",9,[[],["self"]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",9,[[],["self"]]],[10,"LN_10","","Return `ln(10.0)`.",9,[[],["self"]]],[10,"LN_2","","Return `ln(2.0)`.",9,[[],["self"]]],[10,"LOG10_E","","Return `log10(e)`.",9,[[],["self"]]],[10,"LOG2_E","","Return `log2(e)`.",9,[[],["self"]]],[10,"PI","","Return Archimedes’ constant `π`.",9,[[],["self"]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",9,[[],["self"]]],[11,"TAU","","Return the full circle constant `τ`.",9,[[],["self"]]],[0,"identities","num_traits","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,[[],["zero"]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[],["one"]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",10,[[],["self"]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",10,[[["self"]]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",10,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",11,[[],["self"]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",11,[[["self"]]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",11,[[["self"]],["bool"]]],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",12,[[],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",12,[[],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",12,[[],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",12,[[],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",12,[[],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's…",12,[[],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's…",12,[[],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",12,[[],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's…",12,[[],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",12,[[["u32"]],["self"]]],[0,"ops","num_traits","",null,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",13,[[["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",14,[[["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",15,[[["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",16,[[["self"]],["option"]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",17,[[["self"]],["option"]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can't…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can't…",18,[[["self"]],["option"]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",19,[[["u32"],["self"]],["option"]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",20,[[["u32"],["self"]],["option"]]],[0,"inv","num_traits::ops","",null,null],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",21,null],[10,"inv","","Returns the multiplicative inverse of `self`.",21,[[]]],[0,"mul_add","num_traits::ops","",null,null],[8,"MulAdd","num_traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",22,null],[10,"mul_add","","Performs the fused multiply-add operation.",22,[[["a"],["b"]]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",23,[[["a"],["self"],["b"]]]],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",24,[[],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",24,[[],["self"]]],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",25,[[["self"]],["self"]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",26,[[["self"]],["self"]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",27,[[["self"]],["self"]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",28,[[["u32"],["self"]],["self"]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",29,[[["u32"],["self"]],["self"]]],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation…",null,[[["one"],["usize"],["clone"],["mul"]],[["one"],["clone"],["mul"]]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[["one"],["usize"],["clone"],["checkedmul"]],[["one"],["clone"],["checkedmul"],["option"]]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",30,null],[10,"pow","","Returns `self` to the power `rhs`.",30,[[["rhs"]]]],[0,"real","num_traits","",null,null],[8,"Real","num_traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can…",31,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",31,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",31,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",31,[[],["self"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",31,[[],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",31,[[],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",31,[[],["self"]]],[10,"trunc","","Return the integer part of a number.",31,[[],["self"]]],[10,"fract","","Returns the fractional part of a number.",31,[[],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",31,[[],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",31,[[],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",31,[[],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",31,[[],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",31,[[],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",31,[[],["self"]]],[10,"powi","","Raise a number to an integer power.",31,[[["i32"]],["self"]]],[10,"powf","","Raise a number to a real number power.",31,[[],["self"]]],[10,"sqrt","","Take the square root of a number.",31,[[],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",31,[[],["self"]]],[10,"exp2","","Returns `2^(self)`.",31,[[],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",31,[[],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",31,[[],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",31,[[],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",31,[[],["self"]]],[10,"to_degrees","","Converts radians to degrees.",31,[[],["self"]]],[10,"to_radians","","Converts degrees to radians.",31,[[],["self"]]],[10,"max","","Returns the maximum of the two numbers.",31,[[],["self"]]],[10,"min","","Returns the minimum of the two numbers.",31,[[],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",31,[[],["self"]]],[10,"cbrt","","Take the cubic root of a number.",31,[[],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",31,[[],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",31,[[],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",31,[[],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",31,[[],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",31,[[],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",31,[[],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",31,[[],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",31,[[],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",31,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",31,[[],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",31,[[],["self"]]],[10,"sinh","","Hyperbolic sine function.",31,[[],["self"]]],[10,"cosh","","Hyperbolic cosine function.",31,[[],["self"]]],[10,"tanh","","Hyperbolic tangent function.",31,[[],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",31,[[],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",31,[[],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",31,[[],["self"]]],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,[[["signed"]],["signed"]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[["signed"]],["signed"]]],[5,"signum","","Returns the sign of the number.",null,[[["signed"]],["signed"]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",32,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",32,[[["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",32,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the…",32,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the…",32,[[["self"]],["bool"]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","num_traits","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",33,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",33,[[["str"],["u32"]],["result"]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric…",null,null],[8,"RefNum","","The trait for references which implement numeric…",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"p":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Saturating"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"]]};
searchIndex["once_cell"] = {"doc":"Overview","i":[[0,"unsync","once_cell","",null,null],[3,"OnceCell","once_cell::unsync","A cell which can be written to only once. It is not thread…",null,null],[3,"Lazy","","A value which is initialized on the first access.",null,null],[11,"new","","Creates a new empty cell.",0,[[],["oncecell"]]],[11,"get","","Gets a reference to the underlying value.",0,[[["self"]],[["t"],["option"]]]],[11,"get_mut","","Gets a mutable reference to the underlying value.",0,[[["self"]],[["option"],["t"]]]],[11,"set","","Sets the contents of this cell to `value`.",0,[[["self"],["t"]],["result"]]],[11,"get_or_init","","Gets the contents of the cell, initializing it with `f` if…",0,[[["self"],["f"]],["t"]]],[11,"get_or_try_init","","Gets the contents of the cell, initializing it with `f` if…",0,[[["self"],["f"]],[["t"],["result"]]]],[11,"take","","Takes the value out of this `OnceCell`, moving it back to…",0,[[["self"]],["option"]]],[11,"into_inner","","Consumes the `OnceCell`, returning the wrapped value.",0,[[],["option"]]],[11,"new","","Creates a new lazy value with the given initializing…",1,[[["f"]],["lazy"]]],[11,"force","","Forces the evaluation of this lazy value and returns a…",1,[[["lazy"]],["t"]]],[0,"sync","once_cell","",null,null],[3,"OnceCell","once_cell::sync","A thread-safe cell which can be written to only once.",null,null],[3,"Lazy","","A value which is initialized on the first access.",null,null],[11,"new","","Creates a new empty cell.",2,[[],["oncecell"]]],[11,"get","","Gets the reference to the underlying value.",2,[[["self"]],[["t"],["option"]]]],[11,"get_mut","","Gets the mutable reference to the underlying value.",2,[[["self"]],[["option"],["t"]]]],[11,"get_unchecked","","Get the reference to the underlying value, without…",2,[[["self"]],["t"]]],[11,"set","","Sets the contents of this cell to `value`.",2,[[["self"],["t"]],["result"]]],[11,"get_or_init","","Gets the contents of the cell, initializing it with `f` if…",2,[[["self"],["f"]],["t"]]],[11,"get_or_try_init","","Gets the contents of the cell, initializing it with `f` if…",2,[[["self"],["f"]],[["t"],["result"]]]],[11,"take","","Takes the value out of this `OnceCell`, moving it back to…",2,[[["self"]],["option"]]],[11,"into_inner","","Consumes the `OnceCell`, returning the wrapped value.…",2,[[],["option"]]],[11,"new","","Creates a new lazy value with the given initializing…",3,[[["f"]],["lazy"]]],[11,"force","","Forces the evaluation of this lazy value and returns a…",3,[[["lazy"]],["t"]]],[11,"from","once_cell::unsync","",0,[[],["t"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","once_cell::sync","",2,[[],["t"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","once_cell::unsync","",0,[[["t"]],["self"]]],[11,"from","once_cell::sync","",2,[[["t"]],["self"]]],[11,"clone","once_cell::unsync","",0,[[["self"]],["oncecell"]]],[11,"clone","once_cell::sync","",2,[[["self"]],["oncecell"]]],[11,"default","once_cell::unsync","",0,[[],["self"]]],[11,"default","","Creates a new lazy value using `Default` as the…",1,[[],["lazy"]]],[11,"default","once_cell::sync","",2,[[],["oncecell"]]],[11,"default","","Creates a new lazy value using `Default` as the…",3,[[],["lazy"]]],[11,"eq","once_cell::unsync","",0,[[["self"]],["bool"]]],[11,"eq","once_cell::sync","",2,[[["self"],["oncecell"]],["bool"]]],[11,"deref","once_cell::unsync","",1,[[["self"]],["t"]]],[11,"deref","once_cell::sync","",3,[[["self"]],["t"]]],[11,"deref_mut","once_cell::unsync","",1,[[["self"]],["t"]]],[11,"deref_mut","once_cell::sync","",3,[[["self"]],["t"]]],[11,"fmt","once_cell::unsync","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","once_cell::sync","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]]],"p":[[3,"OnceCell"],[3,"Lazy"],[3,"OnceCell"],[3,"Lazy"]]};
searchIndex["opener"] = {"doc":"This crate provides the [`open`] function, which opens a…","i":[[4,"OpenError","opener","An error type representing the failure to open a path.…",null,null],[13,"Io","","An IO error occurred.",0,null],[13,"ExitStatus","","The command exited with a non-zero exit status.",0,null],[12,"cmd","opener::OpenError","A string that identifies the command.",1,null],[12,"status","","The failed process's exit status.",1,null],[12,"stderr","","Anything the process wrote to stderr.",1,null],[5,"open","opener","Opens a file or link with the system default program.",null,[[["p"]],[["result",["openerror"]],["openerror"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"source","","",0,[[["self"]],[["error"],["option",["error"]]]]]],"p":[[4,"OpenError"],[13,"ExitStatus"]]};
searchIndex["openssl"] = {"doc":"Bindings to OpenSSL","i":[[5,"init","openssl","",null,[[]]],[0,"aes","","Low level AES IGE and key wrapping functionality",null,null],[3,"KeyError","openssl::aes","Provides Error handling for parsing keys.",null,null],[3,"AesKey","","The key used to encrypt or decrypt cipher blocks.",null,null],[5,"aes_ige","","Performs AES IGE encryption or decryption",null,[[["mode"],["aeskey"]]]],[5,"wrap_key","","Wrap a key, according to RFC 3394",null,[[["aeskey"],["option"]],[["result",["usize","keyerror"]],["usize"],["keyerror"]]]],[5,"unwrap_key","","Unwrap a key, according to RFC 3394",null,[[["aeskey"],["option"]],[["result",["usize","keyerror"]],["usize"],["keyerror"]]]],[11,"new_encrypt","","Prepares a key for encryption.",0,[[],[["aeskey"],["keyerror"],["result",["aeskey","keyerror"]]]]],[11,"new_decrypt","","Prepares a key for decryption.",0,[[],[["aeskey"],["keyerror"],["result",["aeskey","keyerror"]]]]],[0,"asn1","openssl","Defines the format of certificiates",null,null],[3,"Asn1GeneralizedTime","openssl::asn1","Non-UTC representation of time",null,null],[3,"Asn1GeneralizedTimeRef","","Reference to a [`Asn1GeneralizedTime`]",null,null],[3,"TimeDiff","","Difference between two ASN1 times.",null,null],[12,"days","","Difference in days",1,null],[12,"secs","","Difference in seconds.",1,null],[3,"Asn1Time","","Time storage and comparison",null,null],[3,"Asn1TimeRef","","Reference to an [`Asn1Time`]",null,null],[3,"Asn1String","","Primary ASN.1 type used by OpenSSL",null,null],[3,"Asn1StringRef","","Reference to [`Asn1String`]",null,null],[3,"Asn1Integer","","Numeric representation",null,null],[3,"Asn1IntegerRef","","Reference to [`Asn1Integer`]",null,null],[3,"Asn1BitString","","Sequence of bytes",null,null],[3,"Asn1BitStringRef","","Reference to [`Asn1BitString`]",null,null],[3,"Asn1Object","","Object Identifier",null,null],[3,"Asn1ObjectRef","","Reference to [`Asn1Object`]",null,null],[11,"diff","","Find difference between two times",2,[[["self"]],[["result",["timediff","errorstack"]],["timediff"],["errorstack"]]]],[11,"compare","","Compare two times",2,[[["self"]],[["ordering"],["result",["ordering","errorstack"]],["errorstack"]]]],[11,"days_from_now","","Creates a new time on specified interval in days from now",3,[[["u32"]],[["errorstack"],["result",["asn1time","errorstack"]],["asn1time"]]]],[11,"from_unix","","Creates a new time from the specified `time_t` value",3,[[["time_t"]],[["errorstack"],["result",["asn1time","errorstack"]],["asn1time"]]]],[11,"from_str","","Creates a new time corresponding to the specified ASN1…",3,[[["str"]],[["errorstack"],["result",["asn1time","errorstack"]],["asn1time"]]]],[11,"as_utf8","","Converts the ASN.1 underlying format to UTF8",4,[[["self"]],[["errorstack"],["opensslstring"],["result",["opensslstring","errorstack"]]]]],[11,"as_slice","","Return the string as an array of bytes",4,[[["self"]]]],[11,"len","","Return the length of the Asn1String (number of bytes)",4,[[["self"]],["usize"]]],[11,"from_bn","","Converts a bignum to an `Asn1Integer`.",5,[[["bignumref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"get","","",6,[[["self"]],["i64"]]],[11,"to_bn","","Converts the integer to a `BigNum`.",6,[[["self"]],[["result",["bignum","errorstack"]],["bignum"],["errorstack"]]]],[11,"set","","Sets the ASN.1 value to the value of a signed 32-bit…",6,[[["self"],["i32"]],[["errorstack"],["result",["errorstack"]]]]],[11,"as_slice","","Returns the Asn1BitString as a slice",7,[[["self"]]]],[11,"len","","Length of Asn1BitString in number of bytes.",7,[[["self"]],["usize"]]],[11,"nid","","Returns the NID associated with this OID.",8,[[["self"]],["nid"]]],[0,"base64","openssl","Base64 encoding support.",null,null],[5,"encode_block","openssl::base64","Encodes a slice of bytes to a base64 string.",null,[[],["string"]]],[5,"decode_block","","Decodes a base64-encoded string to bytes.",null,[[["str"]],[["result",["vec","errorstack"]],["errorstack"],["vec",["u8"]]]]],[0,"bn","openssl","BigNum implementation",null,null],[3,"MsbOption","openssl::bn","Options for the most significant bits of a randomly…",null,null],[3,"BigNumContext","","Temporary storage for BigNums on the secure heap",null,null],[3,"BigNumContextRef","","Reference to [`BigNumContext`]",null,null],[3,"BigNum","","Dynamically sized large number impelementation",null,null],[3,"BigNumRef","","Reference to a [`BigNum`]",null,null],[18,"MAYBE_ZERO","","The most significant bit of the number may be 0.",9,null],[18,"ONE","","The most significant bit of the number must be 1.",9,null],[18,"TWO_ONES","","The most significant two bits of the number must be 1.",9,null],[11,"new","","Returns a new `BigNumContext`.",10,[[],[["errorstack"],["result",["bignumcontext","errorstack"]],["bignumcontext"]]]],[11,"clear","","Erases the memory used by this `BigNum`, resetting its…",11,[[["self"]]]],[11,"add_word","","Adds a `u32` to `self`.",11,[[["self"],["u32"]],[["errorstack"],["result",["errorstack"]]]]],[11,"sub_word","","Subtracts a `u32` from `self`.",11,[[["self"],["u32"]],[["errorstack"],["result",["errorstack"]]]]],[11,"mul_word","","Multiplies a `u32` by `self`.",11,[[["self"],["u32"]],[["errorstack"],["result",["errorstack"]]]]],[11,"div_word","","Divides `self` by a `u32`, returning the remainder.",11,[[["self"],["u32"]],[["result",["u64","errorstack"]],["u64"],["errorstack"]]]],[11,"mod_word","","Returns the result of `self` modulo `w`.",11,[[["u32"],["self"]],[["result",["u64","errorstack"]],["u64"],["errorstack"]]]],[11,"rand_range","","Places a cryptographically-secure pseudo-random…",11,[[["self"],["bignumref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"pseudo_rand_range","","The cryptographically weak counterpart to `rand_in_range`.",11,[[["self"],["bignumref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_bit","","Sets bit `n`. Equivalent to `self |= (1 << n)`.",11,[[["self"],["i32"]],[["errorstack"],["result",["errorstack"]]]]],[11,"clear_bit","","Clears bit `n`, setting it to 0. Equivalent to `self &=…",11,[[["self"],["i32"]],[["errorstack"],["result",["errorstack"]]]]],[11,"is_bit_set","","Returns `true` if the `n`th bit of `self` is set to 1,…",11,[[["self"],["i32"]],["bool"]]],[11,"mask_bits","","Truncates `self` to the lowest `n` bits.",11,[[["self"],["i32"]],[["errorstack"],["result",["errorstack"]]]]],[11,"lshift1","","Places `a << 1` in `self`.  Equivalent to `self * 2`.",11,[[["self"],["bignumref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"rshift1","","Places `a >> 1` in `self`. Equivalent to `self / 2`.",11,[[["self"],["bignumref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"checked_add","","Places `a + b` in `self`. [`core::ops::Add`] is also…",11,[[["self"],["bignumref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"checked_sub","","Places `a - b` in `self`. [`core::ops::Sub`] is also…",11,[[["self"],["bignumref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"lshift","","Places `a << n` in `self`.  Equivalent to `a * 2 ^ n`.",11,[[["self"],["bignumref"],["i32"]],[["errorstack"],["result",["errorstack"]]]]],[11,"rshift","","Places `a >> n` in `self`. Equivalent to `a / 2 ^ n`.",11,[[["self"],["bignumref"],["i32"]],[["errorstack"],["result",["errorstack"]]]]],[11,"to_owned","","Creates a new BigNum with the same value.",11,[[["self"]],[["result",["bignum","errorstack"]],["bignum"],["errorstack"]]]],[11,"set_negative","","Sets the sign of `self`. Pass true to set `self` to a…",11,[[["self"],["bool"]]]],[11,"ucmp","","Compare the absolute values of `self` and `oth`.",11,[[["bignumref"],["self"]],["ordering"]]],[11,"is_negative","","Returns `true` if `self` is negative.",11,[[["self"]],["bool"]]],[11,"num_bits","","Returns the number of significant bits in `self`.",11,[[["self"]],["i32"]]],[11,"num_bytes","","Returns the size of `self` in bytes. Implemented natively.",11,[[["self"]],["i32"]]],[11,"rand","","Generates a cryptographically strong pseudo-random…",11,[[["msboption"],["i32"],["self"],["bool"]],[["errorstack"],["result",["errorstack"]]]]],[11,"pseudo_rand","","The cryptographically weak counterpart to `rand`. Not…",11,[[["msboption"],["i32"],["self"],["bool"]],[["errorstack"],["result",["errorstack"]]]]],[11,"generate_prime","","Generates a prime number, placing it in `self`.",11,[[["option",["bignumref"]],["bignumref"],["i32"],["self"],["bool"]],[["errorstack"],["result",["errorstack"]]]]],[11,"checked_mul","","Places the result of `a * b` in `self`. [`core::ops::Mul`]…",11,[[["bignumcontextref"],["self"],["bignumref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"checked_div","","Places the result of `a / b` in `self`. The remainder is…",11,[[["bignumcontextref"],["self"],["bignumref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"checked_rem","","Places the result of `a % b` in `self`.",11,[[["bignumcontextref"],["self"],["bignumref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"div_rem","","Places the result of `a / b` in `self` and `a % b` in `rem`.",11,[[["bignumref"],["bignumcontextref"],["self"],["bignumref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"sqr","","Places the result of `a²` in `self`.",11,[[["bignumcontextref"],["self"],["bignumref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"nnmod","","Places the result of `a mod m` in `self`. As opposed to…",11,[[["bignumcontextref"],["self"],["bignumref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"mod_add","","Places the result of `(a + b) mod m` in `self`.",11,[[["bignumcontextref"],["self"],["bignumref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"mod_sub","","Places the result of `(a - b) mod m` in `self`.",11,[[["bignumcontextref"],["self"],["bignumref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"mod_mul","","Places the result of `(a * b) mod m` in `self`.",11,[[["bignumcontextref"],["self"],["bignumref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"mod_sqr","","Places the result of `a² mod m` in `self`.",11,[[["bignumcontextref"],["self"],["bignumref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"exp","","Places the result of `a^p` in `self`.",11,[[["bignumcontextref"],["self"],["bignumref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"mod_exp","","Places the result of `a^p mod m` in `self`.",11,[[["bignumcontextref"],["self"],["bignumref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"mod_inverse","","Places the inverse of `a` modulo `n` in `self`.",11,[[["bignumcontextref"],["self"],["bignumref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"gcd","","Places the greatest common denominator of `a` and `b` in…",11,[[["bignumcontextref"],["self"],["bignumref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"is_prime","","Checks whether `self` is prime.",11,[[["bignumcontextref"],["self"],["i32"]],[["bool"],["errorstack"],["result",["bool","errorstack"]]]]],[11,"is_prime_fasttest","","Checks whether `self` is prime with optional trial division.",11,[[["i32"],["bignumcontextref"],["self"],["bool"]],[["bool"],["errorstack"],["result",["bool","errorstack"]]]]],[11,"to_vec","","Returns a big-endian byte vector representation of the…",11,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_dec_str","","Returns a decimal string representation of `self`.",11,[[["self"]],[["errorstack"],["opensslstring"],["result",["opensslstring","errorstack"]]]]],[11,"to_hex_str","","Returns a hexadecimal string representation of `self`.",11,[[["self"]],[["errorstack"],["opensslstring"],["result",["opensslstring","errorstack"]]]]],[11,"to_asn1_integer","","Returns an `Asn1Integer` containing the value of `self`.",11,[[["self"]],[["asn1integer"],["errorstack"],["result",["asn1integer","errorstack"]]]]],[11,"new","","Creates a new `BigNum` with the value 0.",12,[[],[["result",["bignum","errorstack"]],["bignum"],["errorstack"]]]],[11,"from_u32","","Creates a new `BigNum` with the given value.",12,[[["u32"]],[["result",["bignum","errorstack"]],["bignum"],["errorstack"]]]],[11,"from_dec_str","","Creates a `BigNum` from a decimal string.",12,[[["str"]],[["result",["bignum","errorstack"]],["bignum"],["errorstack"]]]],[11,"from_hex_str","","Creates a `BigNum` from a hexadecimal string.",12,[[["str"]],[["result",["bignum","errorstack"]],["bignum"],["errorstack"]]]],[11,"get_rfc2409_prime_768","","Returns a constant used in IKE as defined in [`RFC 2409`].…",12,[[],[["result",["bignum","errorstack"]],["bignum"],["errorstack"]]]],[11,"get_rfc2409_prime_1024","","Returns a constant used in IKE as defined in [`RFC 2409`].…",12,[[],[["result",["bignum","errorstack"]],["bignum"],["errorstack"]]]],[11,"get_rfc3526_prime_1536","","Returns a constant used in IKE as defined in [`RFC 3526`].…",12,[[],[["result",["bignum","errorstack"]],["bignum"],["errorstack"]]]],[11,"get_rfc3526_prime_2048","","Returns a constant used in IKE as defined in [`RFC 3526`].…",12,[[],[["result",["bignum","errorstack"]],["bignum"],["errorstack"]]]],[11,"get_rfc3526_prime_3072","","Returns a constant used in IKE as defined in [`RFC 3526`].…",12,[[],[["result",["bignum","errorstack"]],["bignum"],["errorstack"]]]],[11,"get_rfc3526_prime_4096","","Returns a constant used in IKE as defined in [`RFC 3526`].…",12,[[],[["result",["bignum","errorstack"]],["bignum"],["errorstack"]]]],[11,"get_rfc3526_prime_6144","","Returns a constant used in IKE as defined in [`RFC 3526`].…",12,[[],[["result",["bignum","errorstack"]],["bignum"],["errorstack"]]]],[11,"get_rfc3526_prime_8192","","Returns a constant used in IKE as defined in [`RFC 3526`].…",12,[[],[["result",["bignum","errorstack"]],["bignum"],["errorstack"]]]],[11,"from_slice","","Creates a new `BigNum` from an unsigned, big-endian…",12,[[],[["result",["bignum","errorstack"]],["bignum"],["errorstack"]]]],[0,"cms","openssl","SMIME implementation using CMS",null,null],[3,"CMSOptions","openssl::cms","",null,null],[3,"CmsContentInfo","","High level CMS wrapper",null,null],[3,"CmsContentInfoRef","","Reference to [`CMSContentInfo`]",null,null],[18,"TEXT","","",13,null],[18,"CMS_NOCERTS","","",13,null],[18,"NO_CONTENT_VERIFY","","",13,null],[18,"NO_ATTR_VERIFY","","",13,null],[18,"NOSIGS","","",13,null],[18,"NOINTERN","","",13,null],[18,"NO_SIGNER_CERT_VERIFY","","",13,null],[18,"NOVERIFY","","",13,null],[18,"DETACHED","","",13,null],[18,"BINARY","","",13,null],[18,"NOATTR","","",13,null],[18,"NOSMIMECAP","","",13,null],[18,"NOOLDMIMETYPE","","",13,null],[18,"CRLFEOL","","",13,null],[18,"STREAM","","",13,null],[18,"NOCRL","","",13,null],[18,"PARTIAL","","",13,null],[18,"REUSE_DIGEST","","",13,null],[18,"USE_KEYID","","",13,null],[18,"DEBUG_DECRYPT","","",13,null],[11,"empty","","Returns an empty set of flags",13,[[],["cmsoptions"]]],[11,"all","","Returns the set containing all flags.",13,[[],["cmsoptions"]]],[11,"bits","","Returns the raw value of the flags currently stored.",13,[[["self"]],["c_uint"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",13,[[["c_uint"]],[["cmsoptions"],["option",["cmsoptions"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",13,[[["c_uint"]],["cmsoptions"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",13,[[["c_uint"]],["cmsoptions"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",13,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",13,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",13,[[["self"],["cmsoptions"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",13,[[["self"],["cmsoptions"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",13,[[["self"],["cmsoptions"]]]],[11,"remove","","Removes the specified flags in-place.",13,[[["self"],["cmsoptions"]]]],[11,"toggle","","Toggles the specified flags in-place.",13,[[["self"],["cmsoptions"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",13,[[["bool"],["self"],["cmsoptions"]]]],[11,"decrypt","","Given the sender's private key, `pkey` and the recipient's…",14,[[["x509"],["self"],["pkeyref"]],[["result",["vec","errorstack"]],["errorstack"],["vec",["u8"]]]]],[11,"to_der","","Serializes this CmsContentInfo using DER.",14,[[["self"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"to_pem","","Serializes this CmsContentInfo using DER.",14,[[["self"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"smime_read_cms","","Parses a smime formatted `vec` of bytes into a…",15,[[],[["result",["cmscontentinfo","errorstack"]],["errorstack"],["cmscontentinfo"]]]],[11,"from_der","","Deserializes a DER-encoded ContentInfo structure.",15,[[],[["result",["cmscontentinfo","errorstack"]],["errorstack"],["cmscontentinfo"]]]],[11,"from_pem","","Deserializes a PEM-encoded ContentInfo structure.",15,[[],[["result",["cmscontentinfo","errorstack"]],["errorstack"],["cmscontentinfo"]]]],[11,"sign","","Given a signing cert `signcert`, private key `pkey`, a…",15,[[["option",["stackref"]],["option"],["pkeyref"],["x509ref"],["option",["pkeyref"]],["option",["x509ref"]],["stackref"],["cmsoptions"]],[["result",["cmscontentinfo","errorstack"]],["errorstack"],["cmscontentinfo"]]]],[11,"encrypt","","Given a certificate stack `certs`, data `data`, cipher…",15,[[["stackref"],["cipher"],["cmsoptions"]],[["result",["cmscontentinfo","errorstack"]],["errorstack"],["cmscontentinfo"]]]],[0,"conf","openssl","Interface for processing OpenSSL configuration files.",null,null],[3,"ConfMethod","openssl::conf","",null,null],[3,"Conf","","",null,null],[3,"ConfRef","","",null,null],[11,"default","","Retrieve handle to the default OpenSSL configuration file…",16,[[],["confmethod"]]],[11,"from_ptr","","Construct from raw pointer.",16,[[],["confmethod"]]],[11,"as_ptr","","Convert to raw pointer.",16,[[["self"]]]],[11,"new","","Create a configuration parser.",17,[[["confmethod"]],[["conf"],["errorstack"],["result",["conf","errorstack"]]]]],[0,"derive","openssl","Shared secret derivation.",null,null],[3,"Deriver","openssl::derive","A type used to derive a shared secret between two keys.",null,null],[11,"new","","Creates a new `Deriver` using the provided private key.",18,[[["pkeyref"]],[["result",["deriver","errorstack"]],["errorstack"],["deriver"]]]],[11,"set_peer","","Sets the peer key used for secret derivation.",18,[[["self"],["pkeyref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"len","","Returns the size of the shared secret.",18,[[["self"]],[["errorstack"],["result",["usize","errorstack"]],["usize"]]]],[11,"derive","","Derives a shared secret between the two keys, writing it…",18,[[["self"]],[["errorstack"],["result",["usize","errorstack"]],["usize"]]]],[11,"derive_to_vec","","A convenience function which derives a shared secret and…",18,[[["self"]],[["result",["vec","errorstack"]],["errorstack"],["vec",["u8"]]]]],[0,"dh","openssl","",null,null],[3,"Dh","openssl::dh","",null,null],[3,"DhRef","","",null,null],[11,"params_to_pem","","Serializes the parameters into a PEM-encoded PKCS#3…",19,[[["self"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"params_to_der","","Serializes the parameters into a DER-encoded PKCS#3…",19,[[["self"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"from_params","","",20,[[["bignum"]],[["result",["dh","errorstack"]],["dh",["params"]],["errorstack"]]]],[11,"params_from_pem","","Deserializes a PEM-encoded PKCS#3 DHpararameters structure.",20,[[],[["result",["dh","errorstack"]],["dh",["params"]],["errorstack"]]]],[11,"params_from_der","","Deserializes a DER-encoded PKCS#3 DHparameters structure.",20,[[],[["result",["dh","errorstack"]],["dh",["params"]],["errorstack"]]]],[11,"get_1024_160","","Requires OpenSSL 1.0.2 or newer.",20,[[],[["result",["dh","errorstack"]],["dh",["params"]],["errorstack"]]]],[11,"get_2048_224","","Requires OpenSSL 1.0.2 or newer.",20,[[],[["result",["dh","errorstack"]],["dh",["params"]],["errorstack"]]]],[11,"get_2048_256","","Requires OpenSSL 1.0.2 or newer.",20,[[],[["result",["dh","errorstack"]],["dh",["params"]],["errorstack"]]]],[0,"dsa","openssl","Digital Signatures",null,null],[3,"Dsa","openssl::dsa","Object representing DSA keys.",null,null],[3,"DsaRef","","Reference to [`Dsa`].",null,null],[11,"private_key_to_pem","","Serializes the private key to a PEM-encoded DSAPrivateKey…",21,[[["self"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"private_key_to_pem_passphrase","","Serializes the private key to a PEM-encoded encrypted…",21,[[["self"],["cipher"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"public_key_to_pem","","Serialies the public key into a PEM-encoded…",21,[[["self"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"public_key_to_der","","Serializes the public key into a DER-encoded…",21,[[["self"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"pub_key","","Returns a reference to the public key component of `self`.",21,[[["self"]],["bignumref"]]],[11,"priv_key","","Returns a reference to the private key component of `self`.",21,[[["self"]],["bignumref"]]],[11,"size","","Returns the maximum size of the signature output by `self`…",21,[[["self"]],["u32"]]],[11,"p","","Returns the DSA prime parameter of `self`.",21,[[["self"]],["bignumref"]]],[11,"q","","Returns the DSA sub-prime parameter of `self`.",21,[[["self"]],["bignumref"]]],[11,"g","","Returns the DSA base parameter of `self`.",21,[[["self"]],["bignumref"]]],[11,"generate","","Generate a DSA key pair.",22,[[["u32"]],[["dsa",["private"]],["errorstack"],["result",["dsa","errorstack"]]]]],[11,"from_private_components","","Create a DSA key pair with the given parameters",22,[[["bignum"]],[["dsa",["private"]],["errorstack"],["result",["dsa","errorstack"]]]]],[11,"public_key_from_pem","","Decodes a PEM-encoded SubjectPublicKeyInfo structure…",22,[[],[["result",["dsa","errorstack"]],["dsa",["public"]],["errorstack"]]]],[11,"public_key_from_der","","Decodes a DER-encoded SubjectPublicKeyInfo structure…",22,[[],[["result",["dsa","errorstack"]],["dsa",["public"]],["errorstack"]]]],[11,"from_public_components","","Create a new DSA key with only public components.",22,[[["bignum"]],[["dsa",["public"]],["result",["dsa","errorstack"]],["errorstack"]]]],[0,"ec","openssl","Elliptic Curve",null,null],[3,"PointConversionForm","openssl::ec","Compressed or Uncompressed conversion",null,null],[3,"Asn1Flag","","Named Curve or Explicit",null,null],[3,"EcGroup","","Describes the curve",null,null],[3,"EcGroupRef","","Reference to [`EcGroup`]",null,null],[3,"EcPoint","","Represents a point on the curve",null,null],[3,"EcPointRef","","Reference to [`EcPoint`]",null,null],[3,"EcKey","","Public and optional Private key on the given curve",null,null],[3,"EcKeyRef","","Reference to [`EcKey`]",null,null],[18,"COMPRESSED","","Compressed conversion from point value.",23,null],[18,"UNCOMPRESSED","","Uncompressed conversion from point value.",23,null],[18,"HYBRID","","Performs both compressed and uncompressed conversions.",23,null],[18,"EXPLICIT_CURVE","","Curve defined using polynomial parameters",24,null],[18,"NAMED_CURVE","","Standard Curves",24,null],[11,"from_curve_name","","Returns the group of a standard named curve.",25,[[["nid"]],[["result",["ecgroup","errorstack"]],["errorstack"],["ecgroup"]]]],[11,"components_gfp","","Places the components of a curve over a prime field in the…",26,[[["bignumcontextref"],["self"],["bignumref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"components_gf2m","","Places the components of a curve over a binary field in…",26,[[["bignumcontextref"],["self"],["bignumref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"cofactor","","Places the cofactor of the group in the provided `BigNum`.",26,[[["bignumcontextref"],["self"],["bignumref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"degree","","Returns the degree of the curve.",26,[[["self"]],["u32"]]],[11,"order_bits","","Returns the number of bits in the group order.",26,[[["self"]],["u32"]]],[11,"generator","","Returns the generator for the given curve as a [`EcPoint`].",26,[[["self"]],["ecpointref"]]],[11,"order","","Places the order of the curve in the provided `BigNum`.",26,[[["bignumcontextref"],["self"],["bignumref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_asn1_flag","","Sets the flag determining if the group corresponds to a…",26,[[["self"],["asn1flag"]]]],[11,"curve_name","","Returns the name of the curve, if a name is associated.",26,[[["self"]],[["nid"],["option",["nid"]]]]],[11,"add","","Computes `a + b`, storing the result in `self`.",27,[[["ecgroupref"],["ecpointref"],["bignumcontextref"],["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"mul","","Computes `q * m`, storing the result in `self`.",27,[[["bignumref"],["ecgroupref"],["ecpointref"],["self"],["bignumcontextref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"mul_generator","","Computes `generator * n`, storing the result in `self`.",27,[[["bignumref"],["ecgroupref"],["self"],["bignumcontextref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"mul_full","","Computes `generator * n + q * m`, storing the result in…",27,[[["bignumref"],["ecgroupref"],["ecpointref"],["bignumcontextref"],["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"invert","","Inverts `self`.",27,[[["self"],["ecgroupref"],["bignumcontextref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"to_bytes","","Serializes the point to a binary representation.",27,[[["ecgroupref"],["pointconversionform"],["bignumcontextref"],["self"]],[["result",["vec","errorstack"]],["errorstack"],["vec",["u8"]]]]],[11,"to_owned","","Creates a new point on the specified curve with the same…",27,[[["self"],["ecgroupref"]],[["result",["ecpoint","errorstack"]],["errorstack"],["ecpoint"]]]],[11,"eq","","Determines if this point is equal to another.",27,[[["ecpointref"],["ecgroupref"],["bignumcontextref"],["self"]],[["bool"],["errorstack"],["result",["bool","errorstack"]]]]],[11,"affine_coordinates_gfp","","Place affine coordinates of a curve over a prime field in…",27,[[["ecgroupref"],["bignumcontextref"],["self"],["bignumref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"affine_coordinates_gf2m","","Place affine coordinates of a curve over a binary field in…",27,[[["ecgroupref"],["bignumcontextref"],["self"],["bignumref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"new","","Creates a new point on the specified curve.",28,[[["ecgroupref"]],[["result",["ecpoint","errorstack"]],["errorstack"],["ecpoint"]]]],[11,"from_bytes","","Creates point from a binary representation",28,[[["bignumcontextref"],["ecgroupref"]],[["result",["ecpoint","errorstack"]],["errorstack"],["ecpoint"]]]],[11,"private_key_to_pem","","Serializes the private key to a PEM-encoded ECPrivateKey…",29,[[["self"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"private_key_to_pem_passphrase","","Serializes the private key to a PEM-encoded encrypted…",29,[[["self"],["cipher"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"private_key_to_der","","Serializes the private key into a DER-encoded ECPrivateKey…",29,[[["self"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"private_key","","Return [`EcPoint`] associated with the private key",29,[[["self"]],["bignumref"]]],[11,"public_key","","Returns the public key.",29,[[["self"]],["ecpointref"]]],[11,"group","","Return [`EcGroup`] of the `EcKey`",29,[[["self"]],["ecgroupref"]]],[11,"check_key","","Checks the key for validity.",29,[[["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"from_curve_name","","Constructs an `EcKey` corresponding to a known curve.",30,[[["nid"]],[["errorstack"],["eckey",["params"]],["result",["eckey","errorstack"]]]]],[11,"from_group","","Constructs an `EcKey` corresponding to a curve.",30,[[["ecgroupref"]],[["errorstack"],["eckey",["params"]],["result",["eckey","errorstack"]]]]],[11,"from_public_key","","Constructs an `EcKey` from the specified group with the…",30,[[["ecgroupref"],["ecpointref"]],[["eckey",["public"]],["errorstack"],["result",["eckey","errorstack"]]]]],[11,"from_public_key_affine_coordinates","","Constructs a public key from its affine coordinates.",30,[[["bignumref"],["ecgroupref"]],[["eckey",["public"]],["errorstack"],["result",["eckey","errorstack"]]]]],[11,"generate","","Generates a new public/private key pair on the specified…",30,[[["ecgroupref"]],[["result",["eckey","errorstack"]],["errorstack"],["eckey",["private"]]]]],[11,"from_private_components","","Constructs an public/private key pair given a curve, a…",30,[[["bignumref"],["ecgroupref"],["ecpointref"]],[["result",["eckey","errorstack"]],["errorstack"],["eckey",["private"]]]]],[11,"private_key_from_pem","","Deserializes a private key from a PEM-encoded ECPrivateKey…",30,[[],[["errorstack"],["result",["eckey","errorstack"]],["eckey",["private"]]]]],[11,"private_key_from_pem_passphrase","","Deserializes a private key from a PEM-encoded encrypted…",30,[[],[["errorstack"],["result",["eckey","errorstack"]],["eckey",["private"]]]]],[11,"private_key_from_pem_callback","","Deserializes a private key from a PEM-encoded encrypted…",30,[[["f"]],[["errorstack"],["result",["eckey","errorstack"]],["eckey",["private"]]]]],[11,"private_key_from_der","","Decodes a DER-encoded elliptic curve private key structure.",30,[[],[["errorstack"],["result",["eckey","errorstack"]],["eckey",["private"]]]]],[0,"ecdsa","openssl","Low level Elliptic Curve Digital Signature Algorithm…",null,null],[3,"EcdsaSig","openssl::ecdsa","A low level interface to ECDSA",null,null],[3,"EcdsaSigRef","","Reference to [`EcdsaSig`]",null,null],[11,"sign","","Computes a digital signature of the hash value `data`…",31,[[["eckeyref"]],[["ecdsasig"],["errorstack"],["result",["ecdsasig","errorstack"]]]]],[11,"from_private_components","","Returns a new `EcdsaSig` by setting the `r` and `s` values…",31,[[["bignum"]],[["ecdsasig"],["errorstack"],["result",["ecdsasig","errorstack"]]]]],[11,"verify","","Verifies if the signature is a valid ECDSA signature using…",31,[[["eckeyref"],["self"]],[["bool"],["errorstack"],["result",["bool","errorstack"]]]]],[11,"r","","Returns internal component: `r` of a `EcdsaSig`. (See…",31,[[["self"]],["bignumref"]]],[11,"s","","Returns internal components: `s` of a `EcdsaSig`. (See…",31,[[["self"]],["bignumref"]]],[11,"from_der","","Decodes a DER-encoded ECDSA signature.",31,[[],[["ecdsasig"],["errorstack"],["result",["ecdsasig","errorstack"]]]]],[11,"to_der","","Serializes the ECDSA signature into a DER-encoded…",32,[[["self"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[0,"envelope","openssl","Envelope encryption.",null,null],[3,"Seal","openssl::envelope","Represents an EVP_Seal context.",null,null],[3,"Open","","Represents an EVP_Open context.",null,null],[11,"new","","Creates a new `Seal`.",33,[[["cipher"]],[["result",["seal","errorstack"]],["errorstack"],["seal"]]]],[11,"iv","","Returns the initialization vector, if the cipher uses one.",33,[[["self"]],["option"]]],[11,"encrypted_keys","","Returns the encrypted keys.",33,[[["self"]]]],[11,"update","","Feeds data from `input` through the cipher, writing…",33,[[["self"]],[["errorstack"],["result",["usize","errorstack"]],["usize"]]]],[11,"finalize","","Finishes the encryption process, writing any remaining…",33,[[["self"]],[["errorstack"],["result",["usize","errorstack"]],["usize"]]]],[11,"new","","Creates a new `Open`.",34,[[["cipher"],["option"],["pkeyref"]],[["open"],["errorstack"],["result",["open","errorstack"]]]]],[11,"update","","Feeds data from `input` through the cipher, writing…",34,[[["self"]],[["errorstack"],["result",["usize","errorstack"]],["usize"]]]],[11,"finalize","","Finishes the decryption process, writing any remaining…",34,[[["self"]],[["errorstack"],["result",["usize","errorstack"]],["usize"]]]],[0,"error","openssl","Errors returned by OpenSSL library.",null,null],[3,"ErrorStack","openssl::error","Collection of [`Error`]s from OpenSSL.",null,null],[3,"Error","","An error reported from OpenSSL.",null,null],[11,"get","","Returns the contents of the OpenSSL error stack.",35,[[],["errorstack"]]],[11,"put","","Pushes the errors back onto the OpenSSL error stack.",35,[[["self"]]]],[11,"errors","","Returns the errors in the stack.",35,[[["self"]]]],[11,"get","","Returns the first error on the OpenSSL error stack.",36,[[],[["error"],["option",["error"]]]]],[11,"put","","Pushes the error back onto the OpenSSL error stack.",36,[[["self"]]]],[11,"code","","Returns the raw OpenSSL error code for this error.",36,[[["self"]],["c_ulong"]]],[11,"library","","Returns the name of the library reporting the error, if…",36,[[["self"]],[["option",["str"]],["str"]]]],[11,"function","","Returns the name of the function reporting the error.",36,[[["self"]],[["option",["str"]],["str"]]]],[11,"reason","","Returns the reason for the error.",36,[[["self"]],[["option",["str"]],["str"]]]],[11,"file","","Returns the name of the source file which encountered the…",36,[[["self"]],["str"]]],[11,"line","","Returns the line in the source file which encountered the…",36,[[["self"]],["u32"]]],[11,"data","","Returns additional data describing the error.",36,[[["self"]],[["str"],["option",["str"]]]]],[0,"ex_data","openssl","",null,null],[3,"Index","openssl::ex_data","A slot in a type's \"extra data\" structure.",null,null],[11,"from_raw","","",37,[[["c_int"]],["index"]]],[11,"as_raw","","",37,[[["self"]],["c_int"]]],[0,"fips","openssl","FIPS 140-2 support.",null,null],[5,"enable","openssl::fips","Moves the library into or out of the FIPS 140-2 mode of…",null,[[["bool"]],[["errorstack"],["result",["errorstack"]]]]],[5,"enabled","","Determines if the library is running in the FIPS 140-2…",null,[[],["bool"]]],[0,"hash","openssl","",null,null],[3,"MessageDigest","openssl::hash","",null,null],[3,"Hasher","","Provides message digest (hash) computation.",null,null],[3,"DigestBytes","","The resulting bytes of a digest.",null,null],[5,"hash","","Computes the hash of the `data` with the non-XOF hasher `t`.",null,[[["messagedigest"]],[["errorstack"],["digestbytes"],["result",["digestbytes","errorstack"]]]]],[11,"from_ptr","","",38,[[],["self"]]],[11,"from_nid","","Returns the `MessageDigest` corresponding to an `Nid`.",38,[[["nid"]],[["messagedigest"],["option",["messagedigest"]]]]],[11,"null","","",38,[[],["messagedigest"]]],[11,"md5","","",38,[[],["messagedigest"]]],[11,"sha1","","",38,[[],["messagedigest"]]],[11,"sha224","","",38,[[],["messagedigest"]]],[11,"sha256","","",38,[[],["messagedigest"]]],[11,"sha384","","",38,[[],["messagedigest"]]],[11,"sha512","","",38,[[],["messagedigest"]]],[11,"ripemd160","","",38,[[],["messagedigest"]]],[11,"as_ptr","","",38,[[["self"]]]],[11,"size","","The size of the digest in bytes",38,[[["self"]],["usize"]]],[11,"type_","","The name of the digest",38,[[["self"]],["nid"]]],[11,"new","","Creates a new `Hasher` with the specified hash type.",39,[[["messagedigest"]],[["result",["hasher","errorstack"]],["errorstack"],["hasher"]]]],[11,"update","","Feeds data into the hasher.",39,[[["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"finish","","Returns the hash of the data written and resets the…",39,[[["self"]],[["errorstack"],["digestbytes"],["result",["digestbytes","errorstack"]]]]],[0,"memcmp","openssl","Utilities to safely compare cryptographic values.",null,null],[5,"eq","openssl::memcmp","Returns `true` iff `a` and `b` contain the same bytes.",null,[[],["bool"]]],[0,"nid","openssl","A collection of numerical identifiers for OpenSSL objects.",null,null],[3,"SignatureAlgorithms","openssl::nid","The digest and public-key algorithms associated with a…",null,null],[12,"digest","","The signature's digest.",40,null],[12,"pkey","","The signature's public-key.",40,null],[3,"Nid","","A numerical identifier for an OpenSSL object.",null,null],[11,"from_raw","","Create a `Nid` from an integer representation.",41,[[["c_int"]],["nid"]]],[11,"as_raw","","Return the integer representation of a `Nid`.",41,[[["self"]],["c_int"]]],[11,"signature_algorithms","","Returns the `Nid`s of the digest and public key algorithms…",41,[[["self"]],[["signaturealgorithms"],["option",["signaturealgorithms"]]]]],[11,"long_name","","Return the string representation of a `Nid` (long) This…",41,[[["self"]],[["result",["str","errorstack"]],["str"],["errorstack"]]]],[11,"short_name","","Return the string representation of a `Nid` (short) This…",41,[[["self"]],[["result",["str","errorstack"]],["str"],["errorstack"]]]],[18,"UNDEF","","",41,null],[18,"ITU_T","","",41,null],[18,"CCITT","","",41,null],[18,"ISO","","",41,null],[18,"JOINT_ISO_ITU_T","","",41,null],[18,"JOINT_ISO_CCITT","","",41,null],[18,"MEMBER_BODY","","",41,null],[18,"IDENTIFIED_ORGANIZATION","","",41,null],[18,"HMAC_MD5","","",41,null],[18,"HMAC_SHA1","","",41,null],[18,"CERTICOM_ARC","","",41,null],[18,"INTERNATIONAL_ORGANIZATIONS","","",41,null],[18,"WAP","","",41,null],[18,"WAP_WSG","","",41,null],[18,"SELECTED_ATTRIBUTE_TYPES","","",41,null],[18,"CLEARANCE","","",41,null],[18,"ISO_US","","",41,null],[18,"X9_57","","",41,null],[18,"X9CM","","",41,null],[18,"DSA","","",41,null],[18,"DSAWITHSHA1","","",41,null],[18,"ANSI_X9_62","","",41,null],[18,"X9_62_PRIME_FIELD","","",41,null],[18,"X9_62_CHARACTERISTIC_TWO_FIELD","","",41,null],[18,"X9_62_ID_CHARACTERISTIC_TWO_BASIS","","",41,null],[18,"X9_62_ONBASIS","","",41,null],[18,"X9_62_TPBASIS","","",41,null],[18,"X9_62_PPBASIS","","",41,null],[18,"X9_62_ID_ECPUBLICKEY","","",41,null],[18,"X9_62_C2PNB163V1","","",41,null],[18,"X9_62_C2PNB163V2","","",41,null],[18,"X9_62_C2PNB163V3","","",41,null],[18,"X9_62_C2PNB176V1","","",41,null],[18,"X9_62_C2TNB191V1","","",41,null],[18,"X9_62_C2TNB191V2","","",41,null],[18,"X9_62_C2TNB191V3","","",41,null],[18,"X9_62_C2ONB191V4","","",41,null],[18,"X9_62_C2ONB191V5","","",41,null],[18,"X9_62_C2PNB208W1","","",41,null],[18,"X9_62_C2TNB239V1","","",41,null],[18,"X9_62_C2TNB239V2","","",41,null],[18,"X9_62_C2TNB239V3","","",41,null],[18,"X9_62_C2ONB239V4","","",41,null],[18,"X9_62_C2ONB239V5","","",41,null],[18,"X9_62_C2PNB272W1","","",41,null],[18,"X9_62_C2PNB304W1","","",41,null],[18,"X9_62_C2TNB359V1","","",41,null],[18,"X9_62_C2PNB368W1","","",41,null],[18,"X9_62_C2TNB431R1","","",41,null],[18,"X9_62_PRIME192V1","","",41,null],[18,"X9_62_PRIME192V2","","",41,null],[18,"X9_62_PRIME192V3","","",41,null],[18,"X9_62_PRIME239V1","","",41,null],[18,"X9_62_PRIME239V2","","",41,null],[18,"X9_62_PRIME239V3","","",41,null],[18,"X9_62_PRIME256V1","","",41,null],[18,"ECDSA_WITH_SHA1","","",41,null],[18,"ECDSA_WITH_RECOMMENDED","","",41,null],[18,"ECDSA_WITH_SPECIFIED","","",41,null],[18,"ECDSA_WITH_SHA224","","",41,null],[18,"ECDSA_WITH_SHA256","","",41,null],[18,"ECDSA_WITH_SHA384","","",41,null],[18,"ECDSA_WITH_SHA512","","",41,null],[18,"SECP112R1","","",41,null],[18,"SECP112R2","","",41,null],[18,"SECP128R1","","",41,null],[18,"SECP128R2","","",41,null],[18,"SECP160K1","","",41,null],[18,"SECP160R1","","",41,null],[18,"SECP160R2","","",41,null],[18,"SECP192K1","","",41,null],[18,"SECP224K1","","",41,null],[18,"SECP224R1","","",41,null],[18,"SECP256K1","","",41,null],[18,"SECP384R1","","",41,null],[18,"SECP521R1","","",41,null],[18,"SECT113R1","","",41,null],[18,"SECT113R2","","",41,null],[18,"SECT131R1","","",41,null],[18,"SECT131R2","","",41,null],[18,"SECT163K1","","",41,null],[18,"SECT163R1","","",41,null],[18,"SECT163R2","","",41,null],[18,"SECT193R1","","",41,null],[18,"SECT193R2","","",41,null],[18,"SECT233K1","","",41,null],[18,"SECT233R1","","",41,null],[18,"SECT239K1","","",41,null],[18,"SECT283K1","","",41,null],[18,"SECT283R1","","",41,null],[18,"SECT409K1","","",41,null],[18,"SECT409R1","","",41,null],[18,"SECT571K1","","",41,null],[18,"SECT571R1","","",41,null],[18,"WAP_WSG_IDM_ECID_WTLS1","","",41,null],[18,"WAP_WSG_IDM_ECID_WTLS3","","",41,null],[18,"WAP_WSG_IDM_ECID_WTLS4","","",41,null],[18,"WAP_WSG_IDM_ECID_WTLS5","","",41,null],[18,"WAP_WSG_IDM_ECID_WTLS6","","",41,null],[18,"WAP_WSG_IDM_ECID_WTLS7","","",41,null],[18,"WAP_WSG_IDM_ECID_WTLS8","","",41,null],[18,"WAP_WSG_IDM_ECID_WTLS9","","",41,null],[18,"WAP_WSG_IDM_ECID_WTLS10","","",41,null],[18,"WAP_WSG_IDM_ECID_WTLS11","","",41,null],[18,"WAP_WSG_IDM_ECID_WTLS12","","",41,null],[18,"CAST5_CBC","","",41,null],[18,"CAST5_ECB","","",41,null],[18,"CAST5_CFB64","","",41,null],[18,"CAST5_OFB64","","",41,null],[18,"PBEWITHMD5ANDCAST5_CBC","","",41,null],[18,"ID_PASSWORDBASEDMAC","","",41,null],[18,"ID_DHBASEDMAC","","",41,null],[18,"RSADSI","","",41,null],[18,"PKCS","","",41,null],[18,"PKCS1","","",41,null],[18,"RSAENCRYPTION","","",41,null],[18,"MD2WITHRSAENCRYPTION","","",41,null],[18,"MD4WITHRSAENCRYPTION","","",41,null],[18,"MD5WITHRSAENCRYPTION","","",41,null],[18,"SHA1WITHRSAENCRYPTION","","",41,null],[18,"RSAESOAEP","","",41,null],[18,"MGF1","","",41,null],[18,"RSASSAPSS","","",41,null],[18,"SHA256WITHRSAENCRYPTION","","",41,null],[18,"SHA384WITHRSAENCRYPTION","","",41,null],[18,"SHA512WITHRSAENCRYPTION","","",41,null],[18,"SHA224WITHRSAENCRYPTION","","",41,null],[18,"PKCS3","","",41,null],[18,"DHKEYAGREEMENT","","",41,null],[18,"PKCS5","","",41,null],[18,"PBEWITHMD2ANDDES_CBC","","",41,null],[18,"PBEWITHMD5ANDDES_CBC","","",41,null],[18,"PBEWITHMD2ANDRC2_CBC","","",41,null],[18,"PBEWITHMD5ANDRC2_CBC","","",41,null],[18,"PBEWITHSHA1ANDDES_CBC","","",41,null],[18,"PBEWITHSHA1ANDRC2_CBC","","",41,null],[18,"ID_PBKDF2","","",41,null],[18,"PBES2","","",41,null],[18,"PBMAC1","","",41,null],[18,"PKCS7","","",41,null],[18,"PKCS7_DATA","","",41,null],[18,"PKCS7_SIGNED","","",41,null],[18,"PKCS7_ENVELOPED","","",41,null],[18,"PKCS7_SIGNEDANDENVELOPED","","",41,null],[18,"PKCS7_DIGEST","","",41,null],[18,"PKCS7_ENCRYPTED","","",41,null],[18,"PKCS9","","",41,null],[18,"PKCS9_EMAILADDRESS","","",41,null],[18,"PKCS9_UNSTRUCTUREDNAME","","",41,null],[18,"PKCS9_CONTENTTYPE","","",41,null],[18,"PKCS9_MESSAGEDIGEST","","",41,null],[18,"PKCS9_SIGNINGTIME","","",41,null],[18,"PKCS9_COUNTERSIGNATURE","","",41,null],[18,"PKCS9_CHALLENGEPASSWORD","","",41,null],[18,"PKCS9_UNSTRUCTUREDADDRESS","","",41,null],[18,"PKCS9_EXTCERTATTRIBUTES","","",41,null],[18,"EXT_REQ","","",41,null],[18,"SMIMECAPABILITIES","","",41,null],[18,"SMIME","","",41,null],[18,"ID_SMIME_MOD","","",41,null],[18,"ID_SMIME_CT","","",41,null],[18,"ID_SMIME_AA","","",41,null],[18,"ID_SMIME_ALG","","",41,null],[18,"ID_SMIME_CD","","",41,null],[18,"ID_SMIME_SPQ","","",41,null],[18,"ID_SMIME_CTI","","",41,null],[18,"ID_SMIME_MOD_CMS","","",41,null],[18,"ID_SMIME_MOD_ESS","","",41,null],[18,"ID_SMIME_MOD_OID","","",41,null],[18,"ID_SMIME_MOD_MSG_V3","","",41,null],[18,"ID_SMIME_MOD_ETS_ESIGNATURE_88","","",41,null],[18,"ID_SMIME_MOD_ETS_ESIGNATURE_97","","",41,null],[18,"ID_SMIME_MOD_ETS_ESIGPOLICY_88","","",41,null],[18,"ID_SMIME_MOD_ETS_ESIGPOLICY_97","","",41,null],[18,"ID_SMIME_CT_RECEIPT","","",41,null],[18,"ID_SMIME_CT_AUTHDATA","","",41,null],[18,"ID_SMIME_CT_PUBLISHCERT","","",41,null],[18,"ID_SMIME_CT_TSTINFO","","",41,null],[18,"ID_SMIME_CT_TDTINFO","","",41,null],[18,"ID_SMIME_CT_CONTENTINFO","","",41,null],[18,"ID_SMIME_CT_DVCSREQUESTDATA","","",41,null],[18,"ID_SMIME_CT_DVCSRESPONSEDATA","","",41,null],[18,"ID_SMIME_CT_COMPRESSEDDATA","","",41,null],[18,"ID_CT_ASCIITEXTWITHCRLF","","",41,null],[18,"ID_SMIME_AA_RECEIPTREQUEST","","",41,null],[18,"ID_SMIME_AA_SECURITYLABEL","","",41,null],[18,"ID_SMIME_AA_MLEXPANDHISTORY","","",41,null],[18,"ID_SMIME_AA_CONTENTHINT","","",41,null],[18,"ID_SMIME_AA_MSGSIGDIGEST","","",41,null],[18,"ID_SMIME_AA_ENCAPCONTENTTYPE","","",41,null],[18,"ID_SMIME_AA_CONTENTIDENTIFIER","","",41,null],[18,"ID_SMIME_AA_MACVALUE","","",41,null],[18,"ID_SMIME_AA_EQUIVALENTLABELS","","",41,null],[18,"ID_SMIME_AA_CONTENTREFERENCE","","",41,null],[18,"ID_SMIME_AA_ENCRYPKEYPREF","","",41,null],[18,"ID_SMIME_AA_SIGNINGCERTIFICATE","","",41,null],[18,"ID_SMIME_AA_SMIMEENCRYPTCERTS","","",41,null],[18,"ID_SMIME_AA_TIMESTAMPTOKEN","","",41,null],[18,"ID_SMIME_AA_ETS_SIGPOLICYID","","",41,null],[18,"ID_SMIME_AA_ETS_COMMITMENTTYPE","","",41,null],[18,"ID_SMIME_AA_ETS_SIGNERLOCATION","","",41,null],[18,"ID_SMIME_AA_ETS_SIGNERATTR","","",41,null],[18,"ID_SMIME_AA_ETS_OTHERSIGCERT","","",41,null],[18,"ID_SMIME_AA_ETS_CONTENTTIMESTAMP","","",41,null],[18,"ID_SMIME_AA_ETS_CERTIFICATEREFS","","",41,null],[18,"ID_SMIME_AA_ETS_REVOCATIONREFS","","",41,null],[18,"ID_SMIME_AA_ETS_CERTVALUES","","",41,null],[18,"ID_SMIME_AA_ETS_REVOCATIONVALUES","","",41,null],[18,"ID_SMIME_AA_ETS_ESCTIMESTAMP","","",41,null],[18,"ID_SMIME_AA_ETS_CERTCRLTIMESTAMP","","",41,null],[18,"ID_SMIME_AA_ETS_ARCHIVETIMESTAMP","","",41,null],[18,"ID_SMIME_AA_SIGNATURETYPE","","",41,null],[18,"ID_SMIME_AA_DVCS_DVC","","",41,null],[18,"ID_SMIME_ALG_ESDHWITH3DES","","",41,null],[18,"ID_SMIME_ALG_ESDHWITHRC2","","",41,null],[18,"ID_SMIME_ALG_3DESWRAP","","",41,null],[18,"ID_SMIME_ALG_RC2WRAP","","",41,null],[18,"ID_SMIME_ALG_ESDH","","",41,null],[18,"ID_SMIME_ALG_CMS3DESWRAP","","",41,null],[18,"ID_SMIME_ALG_CMSRC2WRAP","","",41,null],[18,"ID_ALG_PWRI_KEK","","",41,null],[18,"ID_SMIME_CD_LDAP","","",41,null],[18,"ID_SMIME_SPQ_ETS_SQT_URI","","",41,null],[18,"ID_SMIME_SPQ_ETS_SQT_UNOTICE","","",41,null],[18,"ID_SMIME_CTI_ETS_PROOFOFORIGIN","","",41,null],[18,"ID_SMIME_CTI_ETS_PROOFOFRECEIPT","","",41,null],[18,"ID_SMIME_CTI_ETS_PROOFOFDELIVERY","","",41,null],[18,"ID_SMIME_CTI_ETS_PROOFOFSENDER","","",41,null],[18,"ID_SMIME_CTI_ETS_PROOFOFAPPROVAL","","",41,null],[18,"ID_SMIME_CTI_ETS_PROOFOFCREATION","","",41,null],[18,"FRIENDLYNAME","","",41,null],[18,"LOCALKEYID","","",41,null],[18,"MS_CSP_NAME","","",41,null],[18,"LOCALKEYSET","","",41,null],[18,"X509CERTIFICATE","","",41,null],[18,"SDSICERTIFICATE","","",41,null],[18,"X509CRL","","",41,null],[18,"PBE_WITHSHA1AND128BITRC4","","",41,null],[18,"PBE_WITHSHA1AND40BITRC4","","",41,null],[18,"PBE_WITHSHA1AND3_KEY_TRIPLEDES_CBC","","",41,null],[18,"PBE_WITHSHA1AND2_KEY_TRIPLEDES_CBC","","",41,null],[18,"PBE_WITHSHA1AND128BITRC2_CBC","","",41,null],[18,"PBE_WITHSHA1AND40BITRC2_CBC","","",41,null],[18,"KEYBAG","","",41,null],[18,"PKCS8SHROUDEDKEYBAG","","",41,null],[18,"CERTBAG","","",41,null],[18,"CRLBAG","","",41,null],[18,"SECRETBAG","","",41,null],[18,"SAFECONTENTSBAG","","",41,null],[18,"MD2","","",41,null],[18,"MD4","","",41,null],[18,"MD5","","",41,null],[18,"MD5_SHA1","","",41,null],[18,"HMACWITHMD5","","",41,null],[18,"HMACWITHSHA1","","",41,null],[18,"HMACWITHSHA224","","",41,null],[18,"HMACWITHSHA256","","",41,null],[18,"HMACWITHSHA384","","",41,null],[18,"HMACWITHSHA512","","",41,null],[18,"RC2_CBC","","",41,null],[18,"RC2_ECB","","",41,null],[18,"RC2_CFB64","","",41,null],[18,"RC2_OFB64","","",41,null],[18,"RC2_40_CBC","","",41,null],[18,"RC2_64_CBC","","",41,null],[18,"RC4","","",41,null],[18,"RC4_40","","",41,null],[18,"DES_EDE3_CBC","","",41,null],[18,"RC5_CBC","","",41,null],[18,"RC5_ECB","","",41,null],[18,"RC5_CFB64","","",41,null],[18,"RC5_OFB64","","",41,null],[18,"MS_EXT_REQ","","",41,null],[18,"MS_CODE_IND","","",41,null],[18,"MS_CODE_COM","","",41,null],[18,"MS_CTL_SIGN","","",41,null],[18,"MS_SGC","","",41,null],[18,"MS_EFS","","",41,null],[18,"MS_SMARTCARD_LOGIN","","",41,null],[18,"MS_UPN","","",41,null],[18,"IDEA_CBC","","",41,null],[18,"IDEA_ECB","","",41,null],[18,"IDEA_CFB64","","",41,null],[18,"IDEA_OFB64","","",41,null],[18,"BF_CBC","","",41,null],[18,"BF_ECB","","",41,null],[18,"BF_CFB64","","",41,null],[18,"BF_OFB64","","",41,null],[18,"ID_PKIX","","",41,null],[18,"ID_PKIX_MOD","","",41,null],[18,"ID_PE","","",41,null],[18,"ID_QT","","",41,null],[18,"ID_KP","","",41,null],[18,"ID_IT","","",41,null],[18,"ID_PKIP","","",41,null],[18,"ID_ALG","","",41,null],[18,"ID_CMC","","",41,null],[18,"ID_ON","","",41,null],[18,"ID_PDA","","",41,null],[18,"ID_ACA","","",41,null],[18,"ID_QCS","","",41,null],[18,"ID_CCT","","",41,null],[18,"ID_PPL","","",41,null],[18,"ID_AD","","",41,null],[18,"ID_PKIX1_EXPLICIT_88","","",41,null],[18,"ID_PKIX1_IMPLICIT_88","","",41,null],[18,"ID_PKIX1_EXPLICIT_93","","",41,null],[18,"ID_PKIX1_IMPLICIT_93","","",41,null],[18,"ID_MOD_CRMF","","",41,null],[18,"ID_MOD_CMC","","",41,null],[18,"ID_MOD_KEA_PROFILE_88","","",41,null],[18,"ID_MOD_KEA_PROFILE_93","","",41,null],[18,"ID_MOD_CMP","","",41,null],[18,"ID_MOD_QUALIFIED_CERT_88","","",41,null],[18,"ID_MOD_QUALIFIED_CERT_93","","",41,null],[18,"ID_MOD_ATTRIBUTE_CERT","","",41,null],[18,"ID_MOD_TIMESTAMP_PROTOCOL","","",41,null],[18,"ID_MOD_OCSP","","",41,null],[18,"ID_MOD_DVCS","","",41,null],[18,"ID_MOD_CMP2000","","",41,null],[18,"INFO_ACCESS","","",41,null],[18,"BIOMETRICINFO","","",41,null],[18,"QCSTATEMENTS","","",41,null],[18,"AC_AUDITENTITY","","",41,null],[18,"AC_TARGETING","","",41,null],[18,"AACONTROLS","","",41,null],[18,"SBGP_IPADDRBLOCK","","",41,null],[18,"SBGP_AUTONOMOUSSYSNUM","","",41,null],[18,"SBGP_ROUTERIDENTIFIER","","",41,null],[18,"AC_PROXYING","","",41,null],[18,"SINFO_ACCESS","","",41,null],[18,"PROXYCERTINFO","","",41,null],[18,"ID_QT_CPS","","",41,null],[18,"ID_QT_UNOTICE","","",41,null],[18,"TEXTNOTICE","","",41,null],[18,"SERVER_AUTH","","",41,null],[18,"CLIENT_AUTH","","",41,null],[18,"CODE_SIGN","","",41,null],[18,"EMAIL_PROTECT","","",41,null],[18,"IPSECENDSYSTEM","","",41,null],[18,"IPSECTUNNEL","","",41,null],[18,"IPSECUSER","","",41,null],[18,"TIME_STAMP","","",41,null],[18,"OCSP_SIGN","","",41,null],[18,"DVCS","","",41,null],[18,"ID_IT_CAPROTENCCERT","","",41,null],[18,"ID_IT_SIGNKEYPAIRTYPES","","",41,null],[18,"ID_IT_ENCKEYPAIRTYPES","","",41,null],[18,"ID_IT_PREFERREDSYMMALG","","",41,null],[18,"ID_IT_CAKEYUPDATEINFO","","",41,null],[18,"ID_IT_CURRENTCRL","","",41,null],[18,"ID_IT_UNSUPPORTEDOIDS","","",41,null],[18,"ID_IT_SUBSCRIPTIONREQUEST","","",41,null],[18,"ID_IT_SUBSCRIPTIONRESPONSE","","",41,null],[18,"ID_IT_KEYPAIRPARAMREQ","","",41,null],[18,"ID_IT_KEYPAIRPARAMREP","","",41,null],[18,"ID_IT_REVPASSPHRASE","","",41,null],[18,"ID_IT_IMPLICITCONFIRM","","",41,null],[18,"ID_IT_CONFIRMWAITTIME","","",41,null],[18,"ID_IT_ORIGPKIMESSAGE","","",41,null],[18,"ID_IT_SUPPLANGTAGS","","",41,null],[18,"ID_REGCTRL","","",41,null],[18,"ID_REGINFO","","",41,null],[18,"ID_REGCTRL_REGTOKEN","","",41,null],[18,"ID_REGCTRL_AUTHENTICATOR","","",41,null],[18,"ID_REGCTRL_PKIPUBLICATIONINFO","","",41,null],[18,"ID_REGCTRL_PKIARCHIVEOPTIONS","","",41,null],[18,"ID_REGCTRL_OLDCERTID","","",41,null],[18,"ID_REGCTRL_PROTOCOLENCRKEY","","",41,null],[18,"ID_REGINFO_UTF8PAIRS","","",41,null],[18,"ID_REGINFO_CERTREQ","","",41,null],[18,"ID_ALG_DES40","","",41,null],[18,"ID_ALG_NOSIGNATURE","","",41,null],[18,"ID_ALG_DH_SIG_HMAC_SHA1","","",41,null],[18,"ID_ALG_DH_POP","","",41,null],[18,"ID_CMC_STATUSINFO","","",41,null],[18,"ID_CMC_IDENTIFICATION","","",41,null],[18,"ID_CMC_IDENTITYPROOF","","",41,null],[18,"ID_CMC_DATARETURN","","",41,null],[18,"ID_CMC_TRANSACTIONID","","",41,null],[18,"ID_CMC_SENDERNONCE","","",41,null],[18,"ID_CMC_RECIPIENTNONCE","","",41,null],[18,"ID_CMC_ADDEXTENSIONS","","",41,null],[18,"ID_CMC_ENCRYPTEDPOP","","",41,null],[18,"ID_CMC_DECRYPTEDPOP","","",41,null],[18,"ID_CMC_LRAPOPWITNESS","","",41,null],[18,"ID_CMC_GETCERT","","",41,null],[18,"ID_CMC_GETCRL","","",41,null],[18,"ID_CMC_REVOKEREQUEST","","",41,null],[18,"ID_CMC_REGINFO","","",41,null],[18,"ID_CMC_RESPONSEINFO","","",41,null],[18,"ID_CMC_QUERYPENDING","","",41,null],[18,"ID_CMC_POPLINKRANDOM","","",41,null],[18,"ID_CMC_POPLINKWITNESS","","",41,null],[18,"ID_CMC_CONFIRMCERTACCEPTANCE","","",41,null],[18,"ID_ON_PERSONALDATA","","",41,null],[18,"ID_ON_PERMANENTIDENTIFIER","","",41,null],[18,"ID_PDA_DATEOFBIRTH","","",41,null],[18,"ID_PDA_PLACEOFBIRTH","","",41,null],[18,"ID_PDA_GENDER","","",41,null],[18,"ID_PDA_COUNTRYOFCITIZENSHIP","","",41,null],[18,"ID_PDA_COUNTRYOFRESIDENCE","","",41,null],[18,"ID_ACA_AUTHENTICATIONINFO","","",41,null],[18,"ID_ACA_ACCESSIDENTITY","","",41,null],[18,"ID_ACA_CHARGINGIDENTITY","","",41,null],[18,"ID_ACA_GROUP","","",41,null],[18,"ID_ACA_ROLE","","",41,null],[18,"ID_ACA_ENCATTRS","","",41,null],[18,"ID_QCS_PKIXQCSYNTAX_V1","","",41,null],[18,"ID_CCT_CRS","","",41,null],[18,"ID_CCT_PKIDATA","","",41,null],[18,"ID_CCT_PKIRESPONSE","","",41,null],[18,"ID_PPL_ANYLANGUAGE","","",41,null],[18,"ID_PPL_INHERITALL","","",41,null],[18,"INDEPENDENT","","",41,null],[18,"AD_OCSP","","",41,null],[18,"AD_CA_ISSUERS","","",41,null],[18,"AD_TIMESTAMPING","","",41,null],[18,"AD_DVCS","","",41,null],[18,"CAREPOSITORY","","",41,null],[18,"ID_PKIX_OCSP_BASIC","","",41,null],[18,"ID_PKIX_OCSP_NONCE","","",41,null],[18,"ID_PKIX_OCSP_CRLID","","",41,null],[18,"ID_PKIX_OCSP_ACCEPTABLERESPONSES","","",41,null],[18,"ID_PKIX_OCSP_NOCHECK","","",41,null],[18,"ID_PKIX_OCSP_ARCHIVECUTOFF","","",41,null],[18,"ID_PKIX_OCSP_SERVICELOCATOR","","",41,null],[18,"ID_PKIX_OCSP_EXTENDEDSTATUS","","",41,null],[18,"ID_PKIX_OCSP_VALID","","",41,null],[18,"ID_PKIX_OCSP_PATH","","",41,null],[18,"ID_PKIX_OCSP_TRUSTROOT","","",41,null],[18,"ALGORITHM","","",41,null],[18,"MD5WITHRSA","","",41,null],[18,"DES_ECB","","",41,null],[18,"DES_CBC","","",41,null],[18,"DES_OFB64","","",41,null],[18,"DES_CFB64","","",41,null],[18,"RSASIGNATURE","","",41,null],[18,"DSA_2","","",41,null],[18,"DSAWITHSHA","","",41,null],[18,"SHAWITHRSAENCRYPTION","","",41,null],[18,"DES_EDE_ECB","","",41,null],[18,"DES_EDE3_ECB","","",41,null],[18,"DES_EDE_CBC","","",41,null],[18,"DES_EDE_CFB64","","",41,null],[18,"DES_EDE3_CFB64","","",41,null],[18,"DES_EDE_OFB64","","",41,null],[18,"DES_EDE3_OFB64","","",41,null],[18,"DESX_CBC","","",41,null],[18,"SHA","","",41,null],[18,"SHA1","","",41,null],[18,"DSAWITHSHA1_2","","",41,null],[18,"SHA1WITHRSA","","",41,null],[18,"RIPEMD160","","",41,null],[18,"RIPEMD160WITHRSA","","",41,null],[18,"SXNET","","",41,null],[18,"X500","","",41,null],[18,"X509","","",41,null],[18,"COMMONNAME","","",41,null],[18,"SURNAME","","",41,null],[18,"SERIALNUMBER","","",41,null],[18,"COUNTRYNAME","","",41,null],[18,"LOCALITYNAME","","",41,null],[18,"STATEORPROVINCENAME","","",41,null],[18,"STREETADDRESS","","",41,null],[18,"ORGANIZATIONNAME","","",41,null],[18,"ORGANIZATIONALUNITNAME","","",41,null],[18,"TITLE","","",41,null],[18,"DESCRIPTION","","",41,null],[18,"SEARCHGUIDE","","",41,null],[18,"BUSINESSCATEGORY","","",41,null],[18,"POSTALADDRESS","","",41,null],[18,"POSTALCODE","","",41,null],[18,"POSTOFFICEBOX","","",41,null],[18,"PHYSICALDELIVERYOFFICENAME","","",41,null],[18,"TELEPHONENUMBER","","",41,null],[18,"TELEXNUMBER","","",41,null],[18,"TELETEXTERMINALIDENTIFIER","","",41,null],[18,"FACSIMILETELEPHONENUMBER","","",41,null],[18,"X121ADDRESS","","",41,null],[18,"INTERNATIONALISDNNUMBER","","",41,null],[18,"REGISTEREDADDRESS","","",41,null],[18,"DESTINATIONINDICATOR","","",41,null],[18,"PREFERREDDELIVERYMETHOD","","",41,null],[18,"PRESENTATIONADDRESS","","",41,null],[18,"SUPPORTEDAPPLICATIONCONTEXT","","",41,null],[18,"MEMBER","","",41,null],[18,"OWNER","","",41,null],[18,"ROLEOCCUPANT","","",41,null],[18,"SEEALSO","","",41,null],[18,"USERPASSWORD","","",41,null],[18,"USERCERTIFICATE","","",41,null],[18,"CACERTIFICATE","","",41,null],[18,"AUTHORITYREVOCATIONLIST","","",41,null],[18,"CERTIFICATEREVOCATIONLIST","","",41,null],[18,"CROSSCERTIFICATEPAIR","","",41,null],[18,"NAME","","",41,null],[18,"GIVENNAME","","",41,null],[18,"INITIALS","","",41,null],[18,"GENERATIONQUALIFIER","","",41,null],[18,"X500UNIQUEIDENTIFIER","","",41,null],[18,"DNQUALIFIER","","",41,null],[18,"ENHANCEDSEARCHGUIDE","","",41,null],[18,"PROTOCOLINFORMATION","","",41,null],[18,"DISTINGUISHEDNAME","","",41,null],[18,"UNIQUEMEMBER","","",41,null],[18,"HOUSEIDENTIFIER","","",41,null],[18,"SUPPORTEDALGORITHMS","","",41,null],[18,"DELTAREVOCATIONLIST","","",41,null],[18,"DMDNAME","","",41,null],[18,"PSEUDONYM","","",41,null],[18,"ROLE","","",41,null],[18,"X500ALGORITHMS","","",41,null],[18,"RSA","","",41,null],[18,"MDC2WITHRSA","","",41,null],[18,"MDC2","","",41,null],[18,"ID_CE","","",41,null],[18,"SUBJECT_DIRECTORY_ATTRIBUTES","","",41,null],[18,"SUBJECT_KEY_IDENTIFIER","","",41,null],[18,"KEY_USAGE","","",41,null],[18,"PRIVATE_KEY_USAGE_PERIOD","","",41,null],[18,"SUBJECT_ALT_NAME","","",41,null],[18,"ISSUER_ALT_NAME","","",41,null],[18,"BASIC_CONSTRAINTS","","",41,null],[18,"CRL_NUMBER","","",41,null],[18,"CRL_REASON","","",41,null],[18,"INVALIDITY_DATE","","",41,null],[18,"DELTA_CRL","","",41,null],[18,"ISSUING_DISTRIBUTION_POINT","","",41,null],[18,"CERTIFICATE_ISSUER","","",41,null],[18,"NAME_CONSTRAINTS","","",41,null],[18,"CRL_DISTRIBUTION_POINTS","","",41,null],[18,"CERTIFICATE_POLICIES","","",41,null],[18,"ANY_POLICY","","",41,null],[18,"POLICY_MAPPINGS","","",41,null],[18,"AUTHORITY_KEY_IDENTIFIER","","",41,null],[18,"POLICY_CONSTRAINTS","","",41,null],[18,"EXT_KEY_USAGE","","",41,null],[18,"FRESHEST_CRL","","",41,null],[18,"INHIBIT_ANY_POLICY","","",41,null],[18,"TARGET_INFORMATION","","",41,null],[18,"NO_REV_AVAIL","","",41,null],[18,"ANYEXTENDEDKEYUSAGE","","",41,null],[18,"NETSCAPE","","",41,null],[18,"NETSCAPE_CERT_EXTENSION","","",41,null],[18,"NETSCAPE_DATA_TYPE","","",41,null],[18,"NETSCAPE_CERT_TYPE","","",41,null],[18,"NETSCAPE_BASE_URL","","",41,null],[18,"NETSCAPE_REVOCATION_URL","","",41,null],[18,"NETSCAPE_CA_REVOCATION_URL","","",41,null],[18,"NETSCAPE_RENEWAL_URL","","",41,null],[18,"NETSCAPE_CA_POLICY_URL","","",41,null],[18,"NETSCAPE_SSL_SERVER_NAME","","",41,null],[18,"NETSCAPE_COMMENT","","",41,null],[18,"NETSCAPE_CERT_SEQUENCE","","",41,null],[18,"NS_SGC","","",41,null],[18,"ORG","","",41,null],[18,"DOD","","",41,null],[18,"IANA","","",41,null],[18,"DIRECTORY","","",41,null],[18,"MANAGEMENT","","",41,null],[18,"EXPERIMENTAL","","",41,null],[18,"PRIVATE","","",41,null],[18,"SECURITY","","",41,null],[18,"SNMPV2","","",41,null],[18,"MAIL","","",41,null],[18,"ENTERPRISES","","",41,null],[18,"DCOBJECT","","",41,null],[18,"MIME_MHS","","",41,null],[18,"MIME_MHS_HEADINGS","","",41,null],[18,"MIME_MHS_BODIES","","",41,null],[18,"ID_HEX_PARTIAL_MESSAGE","","",41,null],[18,"ID_HEX_MULTIPART_MESSAGE","","",41,null],[18,"ZLIB_COMPRESSION","","",41,null],[18,"AES_128_ECB","","",41,null],[18,"AES_128_CBC","","",41,null],[18,"AES_128_OFB128","","",41,null],[18,"AES_128_CFB128","","",41,null],[18,"ID_AES128_WRAP","","",41,null],[18,"AES_128_GCM","","",41,null],[18,"AES_128_CCM","","",41,null],[18,"ID_AES128_WRAP_PAD","","",41,null],[18,"AES_192_ECB","","",41,null],[18,"AES_192_CBC","","",41,null],[18,"AES_192_OFB128","","",41,null],[18,"AES_192_CFB128","","",41,null],[18,"ID_AES192_WRAP","","",41,null],[18,"AES_192_GCM","","",41,null],[18,"AES_192_CCM","","",41,null],[18,"ID_AES192_WRAP_PAD","","",41,null],[18,"AES_256_ECB","","",41,null],[18,"AES_256_CBC","","",41,null],[18,"AES_256_OFB128","","",41,null],[18,"AES_256_CFB128","","",41,null],[18,"ID_AES256_WRAP","","",41,null],[18,"AES_256_GCM","","",41,null],[18,"AES_256_CCM","","",41,null],[18,"ID_AES256_WRAP_PAD","","",41,null],[18,"AES_128_CFB1","","",41,null],[18,"AES_192_CFB1","","",41,null],[18,"AES_256_CFB1","","",41,null],[18,"AES_128_CFB8","","",41,null],[18,"AES_192_CFB8","","",41,null],[18,"AES_256_CFB8","","",41,null],[18,"AES_128_CTR","","",41,null],[18,"AES_192_CTR","","",41,null],[18,"AES_256_CTR","","",41,null],[18,"AES_128_XTS","","",41,null],[18,"AES_256_XTS","","",41,null],[18,"DES_CFB1","","",41,null],[18,"DES_CFB8","","",41,null],[18,"DES_EDE3_CFB1","","",41,null],[18,"DES_EDE3_CFB8","","",41,null],[18,"SHA256","","",41,null],[18,"SHA384","","",41,null],[18,"SHA512","","",41,null],[18,"SHA224","","",41,null],[18,"DSA_WITH_SHA224","","",41,null],[18,"DSA_WITH_SHA256","","",41,null],[18,"HOLD_INSTRUCTION_CODE","","",41,null],[18,"HOLD_INSTRUCTION_NONE","","",41,null],[18,"HOLD_INSTRUCTION_CALL_ISSUER","","",41,null],[18,"HOLD_INSTRUCTION_REJECT","","",41,null],[18,"DATA","","",41,null],[18,"PSS","","",41,null],[18,"UCL","","",41,null],[18,"PILOT","","",41,null],[18,"PILOTATTRIBUTETYPE","","",41,null],[18,"PILOTATTRIBUTESYNTAX","","",41,null],[18,"PILOTOBJECTCLASS","","",41,null],[18,"PILOTGROUPS","","",41,null],[18,"IA5STRINGSYNTAX","","",41,null],[18,"CASEIGNOREIA5STRINGSYNTAX","","",41,null],[18,"PILOTOBJECT","","",41,null],[18,"PILOTPERSON","","",41,null],[18,"ACCOUNT","","",41,null],[18,"DOCUMENT","","",41,null],[18,"ROOM","","",41,null],[18,"DOCUMENTSERIES","","",41,null],[18,"DOMAIN","","",41,null],[18,"RFC822LOCALPART","","",41,null],[18,"DNSDOMAIN","","",41,null],[18,"DOMAINRELATEDOBJECT","","",41,null],[18,"FRIENDLYCOUNTRY","","",41,null],[18,"SIMPLESECURITYOBJECT","","",41,null],[18,"PILOTORGANIZATION","","",41,null],[18,"PILOTDSA","","",41,null],[18,"QUALITYLABELLEDDATA","","",41,null],[18,"USERID","","",41,null],[18,"TEXTENCODEDORADDRESS","","",41,null],[18,"RFC822MAILBOX","","",41,null],[18,"INFO","","",41,null],[18,"FAVOURITEDRINK","","",41,null],[18,"ROOMNUMBER","","",41,null],[18,"PHOTO","","",41,null],[18,"USERCLASS","","",41,null],[18,"HOST","","",41,null],[18,"MANAGER","","",41,null],[18,"DOCUMENTIDENTIFIER","","",41,null],[18,"DOCUMENTTITLE","","",41,null],[18,"DOCUMENTVERSION","","",41,null],[18,"DOCUMENTAUTHOR","","",41,null],[18,"DOCUMENTLOCATION","","",41,null],[18,"HOMETELEPHONENUMBER","","",41,null],[18,"SECRETARY","","",41,null],[18,"OTHERMAILBOX","","",41,null],[18,"LASTMODIFIEDTIME","","",41,null],[18,"LASTMODIFIEDBY","","",41,null],[18,"DOMAINCOMPONENT","","",41,null],[18,"ARECORD","","",41,null],[18,"PILOTATTRIBUTETYPE27","","",41,null],[18,"MXRECORD","","",41,null],[18,"NSRECORD","","",41,null],[18,"SOARECORD","","",41,null],[18,"CNAMERECORD","","",41,null],[18,"ASSOCIATEDDOMAIN","","",41,null],[18,"ASSOCIATEDNAME","","",41,null],[18,"HOMEPOSTALADDRESS","","",41,null],[18,"PERSONALTITLE","","",41,null],[18,"MOBILETELEPHONENUMBER","","",41,null],[18,"PAGERTELEPHONENUMBER","","",41,null],[18,"FRIENDLYCOUNTRYNAME","","",41,null],[18,"ORGANIZATIONALSTATUS","","",41,null],[18,"JANETMAILBOX","","",41,null],[18,"MAILPREFERENCEOPTION","","",41,null],[18,"BUILDINGNAME","","",41,null],[18,"DSAQUALITY","","",41,null],[18,"SINGLELEVELQUALITY","","",41,null],[18,"SUBTREEMINIMUMQUALITY","","",41,null],[18,"SUBTREEMAXIMUMQUALITY","","",41,null],[18,"PERSONALSIGNATURE","","",41,null],[18,"DITREDIRECT","","",41,null],[18,"AUDIO","","",41,null],[18,"DOCUMENTPUBLISHER","","",41,null],[18,"ID_SET","","",41,null],[18,"SET_CTYPE","","",41,null],[18,"SET_MSGEXT","","",41,null],[18,"SET_ATTR","","",41,null],[18,"SET_POLICY","","",41,null],[18,"SET_CERTEXT","","",41,null],[18,"SET_BRAND","","",41,null],[18,"SETCT_PANDATA","","",41,null],[18,"SETCT_PANTOKEN","","",41,null],[18,"SETCT_PANONLY","","",41,null],[18,"SETCT_OIDATA","","",41,null],[18,"SETCT_PI","","",41,null],[18,"SETCT_PIDATA","","",41,null],[18,"SETCT_PIDATAUNSIGNED","","",41,null],[18,"SETCT_HODINPUT","","",41,null],[18,"SETCT_AUTHRESBAGGAGE","","",41,null],[18,"SETCT_AUTHREVREQBAGGAGE","","",41,null],[18,"SETCT_AUTHREVRESBAGGAGE","","",41,null],[18,"SETCT_CAPTOKENSEQ","","",41,null],[18,"SETCT_PINITRESDATA","","",41,null],[18,"SETCT_PI_TBS","","",41,null],[18,"SETCT_PRESDATA","","",41,null],[18,"SETCT_AUTHREQTBS","","",41,null],[18,"SETCT_AUTHRESTBS","","",41,null],[18,"SETCT_AUTHRESTBSX","","",41,null],[18,"SETCT_AUTHTOKENTBS","","",41,null],[18,"SETCT_CAPTOKENDATA","","",41,null],[18,"SETCT_CAPTOKENTBS","","",41,null],[18,"SETCT_ACQCARDCODEMSG","","",41,null],[18,"SETCT_AUTHREVREQTBS","","",41,null],[18,"SETCT_AUTHREVRESDATA","","",41,null],[18,"SETCT_AUTHREVRESTBS","","",41,null],[18,"SETCT_CAPREQTBS","","",41,null],[18,"SETCT_CAPREQTBSX","","",41,null],[18,"SETCT_CAPRESDATA","","",41,null],[18,"SETCT_CAPREVREQTBS","","",41,null],[18,"SETCT_CAPREVREQTBSX","","",41,null],[18,"SETCT_CAPREVRESDATA","","",41,null],[18,"SETCT_CREDREQTBS","","",41,null],[18,"SETCT_CREDREQTBSX","","",41,null],[18,"SETCT_CREDRESDATA","","",41,null],[18,"SETCT_CREDREVREQTBS","","",41,null],[18,"SETCT_CREDREVREQTBSX","","",41,null],[18,"SETCT_CREDREVRESDATA","","",41,null],[18,"SETCT_PCERTREQDATA","","",41,null],[18,"SETCT_PCERTRESTBS","","",41,null],[18,"SETCT_BATCHADMINREQDATA","","",41,null],[18,"SETCT_BATCHADMINRESDATA","","",41,null],[18,"SETCT_CARDCINITRESTBS","","",41,null],[18,"SETCT_MEAQCINITRESTBS","","",41,null],[18,"SETCT_REGFORMRESTBS","","",41,null],[18,"SETCT_CERTREQDATA","","",41,null],[18,"SETCT_CERTREQTBS","","",41,null],[18,"SETCT_CERTRESDATA","","",41,null],[18,"SETCT_CERTINQREQTBS","","",41,null],[18,"SETCT_ERRORTBS","","",41,null],[18,"SETCT_PIDUALSIGNEDTBE","","",41,null],[18,"SETCT_PIUNSIGNEDTBE","","",41,null],[18,"SETCT_AUTHREQTBE","","",41,null],[18,"SETCT_AUTHRESTBE","","",41,null],[18,"SETCT_AUTHRESTBEX","","",41,null],[18,"SETCT_AUTHTOKENTBE","","",41,null],[18,"SETCT_CAPTOKENTBE","","",41,null],[18,"SETCT_CAPTOKENTBEX","","",41,null],[18,"SETCT_ACQCARDCODEMSGTBE","","",41,null],[18,"SETCT_AUTHREVREQTBE","","",41,null],[18,"SETCT_AUTHREVRESTBE","","",41,null],[18,"SETCT_AUTHREVRESTBEB","","",41,null],[18,"SETCT_CAPREQTBE","","",41,null],[18,"SETCT_CAPREQTBEX","","",41,null],[18,"SETCT_CAPRESTBE","","",41,null],[18,"SETCT_CAPREVREQTBE","","",41,null],[18,"SETCT_CAPREVREQTBEX","","",41,null],[18,"SETCT_CAPREVRESTBE","","",41,null],[18,"SETCT_CREDREQTBE","","",41,null],[18,"SETCT_CREDREQTBEX","","",41,null],[18,"SETCT_CREDRESTBE","","",41,null],[18,"SETCT_CREDREVREQTBE","","",41,null],[18,"SETCT_CREDREVREQTBEX","","",41,null],[18,"SETCT_CREDREVRESTBE","","",41,null],[18,"SETCT_BATCHADMINREQTBE","","",41,null],[18,"SETCT_BATCHADMINRESTBE","","",41,null],[18,"SETCT_REGFORMREQTBE","","",41,null],[18,"SETCT_CERTREQTBE","","",41,null],[18,"SETCT_CERTREQTBEX","","",41,null],[18,"SETCT_CERTRESTBE","","",41,null],[18,"SETCT_CRLNOTIFICATIONTBS","","",41,null],[18,"SETCT_CRLNOTIFICATIONRESTBS","","",41,null],[18,"SETCT_BCIDISTRIBUTIONTBS","","",41,null],[18,"SETEXT_GENCRYPT","","",41,null],[18,"SETEXT_MIAUTH","","",41,null],[18,"SETEXT_PINSECURE","","",41,null],[18,"SETEXT_PINANY","","",41,null],[18,"SETEXT_TRACK2","","",41,null],[18,"SETEXT_CV","","",41,null],[18,"SET_POLICY_ROOT","","",41,null],[18,"SETCEXT_HASHEDROOT","","",41,null],[18,"SETCEXT_CERTTYPE","","",41,null],[18,"SETCEXT_MERCHDATA","","",41,null],[18,"SETCEXT_CCERTREQUIRED","","",41,null],[18,"SETCEXT_TUNNELING","","",41,null],[18,"SETCEXT_SETEXT","","",41,null],[18,"SETCEXT_SETQUALF","","",41,null],[18,"SETCEXT_PGWYCAPABILITIES","","",41,null],[18,"SETCEXT_TOKENIDENTIFIER","","",41,null],[18,"SETCEXT_TRACK2DATA","","",41,null],[18,"SETCEXT_TOKENTYPE","","",41,null],[18,"SETCEXT_ISSUERCAPABILITIES","","",41,null],[18,"SETATTR_CERT","","",41,null],[18,"SETATTR_PGWYCAP","","",41,null],[18,"SETATTR_TOKENTYPE","","",41,null],[18,"SETATTR_ISSCAP","","",41,null],[18,"SET_ROOTKEYTHUMB","","",41,null],[18,"SET_ADDPOLICY","","",41,null],[18,"SETATTR_TOKEN_EMV","","",41,null],[18,"SETATTR_TOKEN_B0PRIME","","",41,null],[18,"SETATTR_ISSCAP_CVM","","",41,null],[18,"SETATTR_ISSCAP_T2","","",41,null],[18,"SETATTR_ISSCAP_SIG","","",41,null],[18,"SETATTR_GENCRYPTGRM","","",41,null],[18,"SETATTR_T2ENC","","",41,null],[18,"SETATTR_T2CLEARTXT","","",41,null],[18,"SETATTR_TOKICCSIG","","",41,null],[18,"SETATTR_SECDEVSIG","","",41,null],[18,"SET_BRAND_IATA_ATA","","",41,null],[18,"SET_BRAND_DINERS","","",41,null],[18,"SET_BRAND_AMERICANEXPRESS","","",41,null],[18,"SET_BRAND_JCB","","",41,null],[18,"SET_BRAND_VISA","","",41,null],[18,"SET_BRAND_MASTERCARD","","",41,null],[18,"SET_BRAND_NOVUS","","",41,null],[18,"DES_CDMF","","",41,null],[18,"RSAOAEPENCRYPTIONSET","","",41,null],[18,"IPSEC3","","",41,null],[18,"IPSEC4","","",41,null],[18,"WHIRLPOOL","","",41,null],[18,"CRYPTOPRO","","",41,null],[18,"CRYPTOCOM","","",41,null],[18,"ID_GOSTR3411_94_WITH_GOSTR3410_2001","","",41,null],[18,"ID_GOSTR3411_94_WITH_GOSTR3410_94","","",41,null],[18,"ID_GOSTR3411_94","","",41,null],[18,"ID_HMACGOSTR3411_94","","",41,null],[18,"ID_GOSTR3410_2001","","",41,null],[18,"ID_GOSTR3410_94","","",41,null],[18,"ID_GOST28147_89","","",41,null],[18,"GOST89_CNT","","",41,null],[18,"ID_GOST28147_89_MAC","","",41,null],[18,"ID_GOSTR3411_94_PRF","","",41,null],[18,"ID_GOSTR3410_2001DH","","",41,null],[18,"ID_GOSTR3410_94DH","","",41,null],[18,"ID_GOST28147_89_CRYPTOPRO_KEYMESHING","","",41,null],[18,"ID_GOST28147_89_NONE_KEYMESHING","","",41,null],[18,"ID_GOSTR3411_94_TESTPARAMSET","","",41,null],[18,"ID_GOSTR3411_94_CRYPTOPROPARAMSET","","",41,null],[18,"ID_GOST28147_89_TESTPARAMSET","","",41,null],[18,"ID_GOST28147_89_CRYPTOPRO_A_PARAMSET","","",41,null],[18,"ID_GOST28147_89_CRYPTOPRO_B_PARAMSET","","",41,null],[18,"ID_GOST28147_89_CRYPTOPRO_C_PARAMSET","","",41,null],[18,"ID_GOST28147_89_CRYPTOPRO_D_PARAMSET","","",41,null],[18,"ID_GOST28147_89_CRYPTOPRO_OSCAR_1_1_PARAMSET","","",41,null],[18,"ID_GOST28147_89_CRYPTOPRO_OSCAR_1_0_PARAMSET","","",41,null],[18,"ID_GOST28147_89_CRYPTOPRO_RIC_1_PARAMSET","","",41,null],[18,"ID_GOSTR3410_94_TESTPARAMSET","","",41,null],[18,"ID_GOSTR3410_94_CRYPTOPRO_A_PARAMSET","","",41,null],[18,"ID_GOSTR3410_94_CRYPTOPRO_B_PARAMSET","","",41,null],[18,"ID_GOSTR3410_94_CRYPTOPRO_C_PARAMSET","","",41,null],[18,"ID_GOSTR3410_94_CRYPTOPRO_D_PARAMSET","","",41,null],[18,"ID_GOSTR3410_94_CRYPTOPRO_XCHA_PARAMSET","","",41,null],[18,"ID_GOSTR3410_94_CRYPTOPRO_XCHB_PARAMSET","","",41,null],[18,"ID_GOSTR3410_94_CRYPTOPRO_XCHC_PARAMSET","","",41,null],[18,"ID_GOSTR3410_2001_TESTPARAMSET","","",41,null],[18,"ID_GOSTR3410_2001_CRYPTOPRO_A_PARAMSET","","",41,null],[18,"ID_GOSTR3410_2001_CRYPTOPRO_B_PARAMSET","","",41,null],[18,"ID_GOSTR3410_2001_CRYPTOPRO_C_PARAMSET","","",41,null],[18,"ID_GOSTR3410_2001_CRYPTOPRO_XCHA_PARAMSET","","",41,null],[18,"ID_GOSTR3410_2001_CRYPTOPRO_XCHB_PARAMSET","","",41,null],[18,"ID_GOSTR3410_94_A","","",41,null],[18,"ID_GOSTR3410_94_ABIS","","",41,null],[18,"ID_GOSTR3410_94_B","","",41,null],[18,"ID_GOSTR3410_94_BBIS","","",41,null],[18,"ID_GOST28147_89_CC","","",41,null],[18,"ID_GOSTR3410_94_CC","","",41,null],[18,"ID_GOSTR3410_2001_CC","","",41,null],[18,"ID_GOSTR3411_94_WITH_GOSTR3410_94_CC","","",41,null],[18,"ID_GOSTR3411_94_WITH_GOSTR3410_2001_CC","","",41,null],[18,"ID_GOSTR3410_2001_PARAMSET_CC","","",41,null],[18,"CAMELLIA_128_CBC","","",41,null],[18,"CAMELLIA_192_CBC","","",41,null],[18,"CAMELLIA_256_CBC","","",41,null],[18,"ID_CAMELLIA128_WRAP","","",41,null],[18,"ID_CAMELLIA192_WRAP","","",41,null],[18,"ID_CAMELLIA256_WRAP","","",41,null],[18,"CAMELLIA_128_ECB","","",41,null],[18,"CAMELLIA_128_OFB128","","",41,null],[18,"CAMELLIA_128_CFB128","","",41,null],[18,"CAMELLIA_192_ECB","","",41,null],[18,"CAMELLIA_192_OFB128","","",41,null],[18,"CAMELLIA_192_CFB128","","",41,null],[18,"CAMELLIA_256_ECB","","",41,null],[18,"CAMELLIA_256_OFB128","","",41,null],[18,"CAMELLIA_256_CFB128","","",41,null],[18,"CAMELLIA_128_CFB1","","",41,null],[18,"CAMELLIA_192_CFB1","","",41,null],[18,"CAMELLIA_256_CFB1","","",41,null],[18,"CAMELLIA_128_CFB8","","",41,null],[18,"CAMELLIA_192_CFB8","","",41,null],[18,"CAMELLIA_256_CFB8","","",41,null],[18,"KISA","","",41,null],[18,"SEED_ECB","","",41,null],[18,"SEED_CBC","","",41,null],[18,"SEED_CFB128","","",41,null],[18,"SEED_OFB128","","",41,null],[18,"HMAC","","",41,null],[18,"CMAC","","",41,null],[18,"RC4_HMAC_MD5","","",41,null],[18,"AES_128_CBC_HMAC_SHA1","","",41,null],[18,"AES_192_CBC_HMAC_SHA1","","",41,null],[18,"AES_256_CBC_HMAC_SHA1","","",41,null],[0,"ocsp","openssl","",null,null],[3,"OcspFlag","openssl::ocsp","",null,null],[3,"OcspResponseStatus","","",null,null],[3,"OcspCertStatus","","",null,null],[3,"OcspRevokedStatus","","",null,null],[3,"OcspStatus","","",null,null],[12,"status","","The overall status of the response.",42,null],[12,"reason","","If `status` is `CERT_STATUS_REVOKED`, the reason for the…",42,null],[12,"revocation_time","","If `status` is `CERT_STATUS_REVOKED`, the time at which…",42,null],[12,"this_update","","The time that this revocation check was performed.",42,null],[12,"next_update","","The time at which this revocation check expires.",42,null],[3,"OcspBasicResponse","","",null,null],[3,"OcspBasicResponseRef","","",null,null],[3,"OcspCertId","","",null,null],[3,"OcspCertIdRef","","",null,null],[3,"OcspResponse","","",null,null],[3,"OcspResponseRef","","",null,null],[3,"OcspRequest","","",null,null],[3,"OcspRequestRef","","",null,null],[3,"OcspOneReq","","",null,null],[3,"OcspOneReqRef","","",null,null],[18,"NO_CERTS","","",43,null],[18,"NO_INTERN","","",43,null],[18,"NO_CHAIN","","",43,null],[18,"NO_VERIFY","","",43,null],[18,"NO_EXPLICIT","","",43,null],[18,"NO_CA_SIGN","","",43,null],[18,"NO_DELEGATED","","",43,null],[18,"NO_CHECKS","","",43,null],[18,"TRUST_OTHER","","",43,null],[18,"RESPID_KEY","","",43,null],[18,"NO_TIME","","",43,null],[11,"empty","","Returns an empty set of flags",43,[[],["ocspflag"]]],[11,"all","","Returns the set containing all flags.",43,[[],["ocspflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",43,[[["self"]],["c_ulong"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",43,[[["c_ulong"]],[["option",["ocspflag"]],["ocspflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",43,[[["c_ulong"]],["ocspflag"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",43,[[["c_ulong"]],["ocspflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",43,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",43,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",43,[[["ocspflag"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",43,[[["ocspflag"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",43,[[["self"],["ocspflag"]]]],[11,"remove","","Removes the specified flags in-place.",43,[[["self"],["ocspflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",43,[[["self"],["ocspflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",43,[[["self"],["ocspflag"],["bool"]]]],[11,"from_raw","","",44,[[["c_int"]],["ocspresponsestatus"]]],[11,"as_raw","","",44,[[["self"]],["c_int"]]],[18,"SUCCESSFUL","","",44,null],[18,"MALFORMED_REQUEST","","",44,null],[18,"INTERNAL_ERROR","","",44,null],[18,"TRY_LATER","","",44,null],[18,"SIG_REQUIRED","","",44,null],[18,"UNAUTHORIZED","","",44,null],[11,"from_raw","","",45,[[["c_int"]],["ocspcertstatus"]]],[11,"as_raw","","",45,[[["self"]],["c_int"]]],[18,"GOOD","","",45,null],[18,"REVOKED","","",45,null],[18,"UNKNOWN","","",45,null],[11,"from_raw","","",46,[[["c_int"]],["ocsprevokedstatus"]]],[11,"as_raw","","",46,[[["self"]],["c_int"]]],[18,"NO_STATUS","","",46,null],[18,"UNSPECIFIED","","",46,null],[18,"KEY_COMPROMISE","","",46,null],[18,"CA_COMPROMISE","","",46,null],[18,"AFFILIATION_CHANGED","","",46,null],[18,"STATUS_SUPERSEDED","","",46,null],[18,"STATUS_CESSATION_OF_OPERATION","","",46,null],[18,"STATUS_CERTIFICATE_HOLD","","",46,null],[18,"REMOVE_FROM_CRL","","",46,null],[11,"check_validity","","Checks validity of the `this_update` and `next_update`…",42,[[["u32"],["self"],["option",["u32"]]],[["errorstack"],["result",["errorstack"]]]]],[11,"verify","","Verifies the validity of the response.",47,[[["ocspflag"],["stackref"],["x509storeref"],["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"find_status","","Looks up the status for the specified certificate ID.",47,[[["self"],["ocspcertidref"]],[["ocspstatus"],["option",["ocspstatus"]]]]],[11,"from_cert","","Constructs a certificate ID for certificate `subject`.",48,[[["messagedigest"],["x509ref"]],[["result",["ocspcertid","errorstack"]],["ocspcertid"],["errorstack"]]]],[11,"create","","Creates an OCSP response from the status and optional body.",49,[[["ocspbasicresponseref"],["ocspresponsestatus"],["option",["ocspbasicresponseref"]]],[["ocspresponse"],["result",["ocspresponse","errorstack"]],["errorstack"]]]],[11,"from_der","","Deserializes a DER-encoded OCSP response.",49,[[],[["result",["ocspresponse","errorstack"]],["ocspresponse"],["errorstack"]]]],[11,"to_der","","Serializes the response to its standard DER encoding.",50,[[["self"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"status","","Returns the status of the response.",50,[[["self"]],["ocspresponsestatus"]]],[11,"basic","","Returns the basic response.",50,[[["self"]],[["errorstack"],["ocspbasicresponse"],["result",["ocspbasicresponse","errorstack"]]]]],[11,"new","","",51,[[],[["result",["ocsprequest","errorstack"]],["ocsprequest"],["errorstack"]]]],[11,"from_der","","Deserializes a DER-encoded OCSP request.",51,[[],[["ocsprequest"],["errorstack"],["result",["ocsprequest","errorstack"]]]]],[11,"to_der","","Serializes the request to its standard DER encoding.",52,[[["self"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"add_id","","",52,[[["ocspcertid"],["self"]],[["result",["ocsponereqref","errorstack"]],["ocsponereqref"],["errorstack"]]]],[0,"pkcs12","openssl","PKCS #12 archives.",null,null],[3,"Pkcs12","openssl::pkcs12","",null,null],[3,"Pkcs12Ref","","",null,null],[3,"ParsedPkcs12","","",null,null],[12,"pkey","","",53,null],[12,"cert","","",53,null],[12,"chain","","",53,null],[3,"Pkcs12Builder","","",null,null],[11,"to_der","","Serializes the `Pkcs12` to its standard DER encoding.",54,[[["self"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"parse","","Extracts the contents of the `Pkcs12`.",54,[[["str"],["self"]],[["result",["parsedpkcs12","errorstack"]],["errorstack"],["parsedpkcs12"]]]],[11,"from_der","","Deserializes a DER-encoded PKCS#12 archive.",55,[[],[["result",["pkcs12","errorstack"]],["errorstack"],["pkcs12"]]]],[11,"builder","","Creates a new builder for a protected pkcs12 certificate.",55,[[],["pkcs12builder"]]],[11,"key_algorithm","","The encryption algorithm that should be used for the key",56,[[["self"],["nid"]],["self"]]],[11,"cert_algorithm","","The encryption algorithm that should be used for the cert",56,[[["self"],["nid"]],["self"]]],[11,"key_iter","","Key iteration count, default is 2048 as of this writing",56,[[["self"],["u32"]],["self"]]],[11,"mac_iter","","MAC iteration count, default is the same as key_iter.",56,[[["self"],["u32"]],["self"]]],[11,"ca","","An additional set of certificates to include in the…",56,[[["self"],["stack",["x509"]],["x509"]],["self"]]],[11,"build","","Builds the PKCS #12 object",56,[[["str"],["x509ref"],["pkeyref"]],[["pkcs12"],["errorstack"],["result",["pkcs12","errorstack"]]]]],[0,"pkcs5","openssl","",null,null],[3,"KeyIvPair","openssl::pkcs5","",null,null],[12,"key","","",57,null],[12,"iv","","",57,null],[5,"bytes_to_key","","Derives a key and an IV from various parameters.",null,[[["cipher"],["option"],["messagedigest"],["i32"]],[["result",["keyivpair","errorstack"]],["errorstack"],["keyivpair"]]]],[5,"pbkdf2_hmac","","Derives a key from a password and salt using the…",null,[[["usize"],["messagedigest"]],[["errorstack"],["result",["errorstack"]]]]],[5,"scrypt","","Derives a key from a password and salt using the scrypt…",null,[[["u64"]],[["errorstack"],["result",["errorstack"]]]]],[0,"pkcs7","openssl","",null,null],[3,"Pkcs7","openssl::pkcs7","A PKCS#7 structure.",null,null],[3,"Pkcs7Ref","","Reference to `Pkcs7`",null,null],[3,"Pkcs7Flags","","",null,null],[18,"TEXT","","",58,null],[18,"NOCERTS","","",58,null],[18,"NOSIGS","","",58,null],[18,"NOCHAIN","","",58,null],[18,"NOINTERN","","",58,null],[18,"NOVERIFY","","",58,null],[18,"DETACHED","","",58,null],[18,"BINARY","","",58,null],[18,"NOATTR","","",58,null],[18,"NOSMIMECAP","","",58,null],[18,"NOOLDMIMETYPE","","",58,null],[18,"CRLFEOL","","",58,null],[18,"STREAM","","",58,null],[18,"NOCRL","","",58,null],[18,"PARTIAL","","",58,null],[18,"REUSE_DIGEST","","",58,null],[11,"empty","","Returns an empty set of flags",58,[[],["pkcs7flags"]]],[11,"all","","Returns the set containing all flags.",58,[[],["pkcs7flags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",58,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",58,[[["c_int"]],[["option",["pkcs7flags"]],["pkcs7flags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",58,[[["c_int"]],["pkcs7flags"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",58,[[["c_int"]],["pkcs7flags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",58,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",58,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",58,[[["self"],["pkcs7flags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",58,[[["self"],["pkcs7flags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",58,[[["self"],["pkcs7flags"]]]],[11,"remove","","Removes the specified flags in-place.",58,[[["self"],["pkcs7flags"]]]],[11,"toggle","","Toggles the specified flags in-place.",58,[[["self"],["pkcs7flags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",58,[[["bool"],["self"],["pkcs7flags"]]]],[11,"from_pem","","Deserializes a PEM-encoded PKCS#7 signature",59,[[],[["pkcs7"],["errorstack"],["result",["pkcs7","errorstack"]]]]],[11,"from_smime","","Parses a message in S/MIME format.",59,[[],[["result",["errorstack"]],["errorstack"]]]],[11,"encrypt","","Creates and returns a PKCS#7 `envelopedData` structure.",59,[[["stackref"],["cipher"],["pkcs7flags"]],[["pkcs7"],["errorstack"],["result",["pkcs7","errorstack"]]]]],[11,"sign","","Creates and returns a PKCS#7 `signedData` structure.",59,[[["pkeyref"],["x509ref"],["stackref"],["pkcs7flags"]],[["pkcs7"],["errorstack"],["result",["pkcs7","errorstack"]]]]],[11,"to_smime","","Converts PKCS#7 structure to S/MIME format",60,[[["self"],["pkcs7flags"]],[["result",["vec","errorstack"]],["errorstack"],["vec",["u8"]]]]],[11,"to_pem","","Serializes the data into a PEM-encoded PKCS#7 structure.",60,[[["self"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"decrypt","","Decrypts data using the provided private key.",60,[[["pkeyref"],["x509ref"],["self"],["pkcs7flags"]],[["result",["vec","errorstack"]],["errorstack"],["vec",["u8"]]]]],[11,"verify","","Verifies the PKCS#7 `signedData` structure contained by…",60,[[["option"],["option",["vec"]],["vec"],["pkcs7flags"],["stackref"],["x509storeref"],["self"]],[["errorstack"],["result",["errorstack"]]]]],[0,"pkey","openssl","Public/private key processing.",null,null],[3,"Id","openssl::pkey","An identifier of a kind of key.",null,null],[3,"PKey","","A public or private key.",null,null],[3,"PKeyRef","","Reference to `PKey`.",null,null],[4,"Params","","A tag type indicating that a key only has parameters.",null,null],[4,"Public","","A tag type indicating that a key only has public components.",null,null],[4,"Private","","A tag type indicating that a key has private components.",null,null],[8,"HasParams","","A trait indicating that a key has parameters.",null,null],[8,"HasPublic","","A trait indicating that a key has public components.",null,null],[8,"HasPrivate","","A trait indicating that a key has private components.",null,null],[11,"from_raw","","Creates a `Id` from an integer representation.",61,[[["c_int"]],["id"]]],[11,"as_raw","","Returns the integer representation of the `Id`.",61,[[["self"]],["c_int"]]],[18,"RSA","","",61,null],[18,"HMAC","","",61,null],[18,"DSA","","",61,null],[18,"DH","","",61,null],[18,"EC","","",61,null],[11,"rsa","","Returns a copy of the internal RSA key.",62,[[["self"]],[["rsa"],["result",["rsa","errorstack"]],["errorstack"]]]],[11,"dsa","","Returns a copy of the internal DSA key.",62,[[["self"]],[["dsa"],["errorstack"],["result",["dsa","errorstack"]]]]],[11,"dh","","Returns a copy of the internal DH key.",62,[[["self"]],[["result",["dh","errorstack"]],["dh"],["errorstack"]]]],[11,"ec_key","","Returns a copy of the internal elliptic curve key.",62,[[["self"]],[["errorstack"],["result",["eckey","errorstack"]],["eckey"]]]],[11,"id","","Returns the `Id` that represents the type of this key.",62,[[["self"]],["id"]]],[11,"size","","Returns the maximum size of a signature in bytes.",62,[[["self"]],["usize"]]],[11,"public_key_to_pem","","Serializes the public key into a PEM-encoded…",62,[[["self"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"public_key_to_der","","Serializes the public key into a DER-encoded…",62,[[["self"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"bits","","Returns the size of the key.",62,[[["self"]],["u32"]]],[11,"public_eq","","Compares the public component of this key with another.",62,[[["self"],["pkeyref"]],["bool"]]],[11,"private_key_to_pem_pkcs8","","Serializes the private key to a PEM-encoded PKCS#8…",62,[[["self"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"private_key_to_pem_pkcs8_passphrase","","Serializes the private key to a PEM-encoded PKCS#8…",62,[[["self"],["cipher"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"private_key_to_der","","Serializes the private key to a DER-encoded key type…",62,[[["self"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"from_rsa","","Creates a new `PKey` containing an RSA key.",63,[[["rsa"]],[["errorstack"],["result",["pkey","errorstack"]],["pkey"]]]],[11,"from_dsa","","Creates a new `PKey` containing a DSA key.",63,[[["dsa"]],[["errorstack"],["result",["pkey","errorstack"]],["pkey"]]]],[11,"from_dh","","Creates a new `PKey` containing a Diffie-Hellman key.",63,[[["dh"]],[["errorstack"],["result",["pkey","errorstack"]],["pkey"]]]],[11,"from_ec_key","","Creates a new `PKey` containing an elliptic curve key.",63,[[["eckey"]],[["errorstack"],["result",["pkey","errorstack"]],["pkey"]]]],[11,"hmac","","Creates a new `PKey` containing an HMAC key.",63,[[],[["pkey",["private"]],["result",["pkey","errorstack"]],["errorstack"]]]],[11,"cmac","","Creates a new `PKey` containing a CMAC key.",63,[[["cipher"]],[["pkey",["private"]],["result",["pkey","errorstack"]],["errorstack"]]]],[11,"private_key_from_pem","","Deserializes a private key from a PEM-encoded key type…",63,[[],[["result",["pkey","errorstack"]],["pkey",["private"]],["errorstack"]]]],[11,"private_key_from_pem_passphrase","","Deserializes a private key from a PEM-encoded encrypted…",63,[[],[["result",["pkey","errorstack"]],["pkey",["private"]],["errorstack"]]]],[11,"private_key_from_pem_callback","","Deserializes a private key from a PEM-encoded encrypted…",63,[[["f"]],[["result",["pkey","errorstack"]],["pkey",["private"]],["errorstack"]]]],[11,"private_key_from_der","","Decodes a DER-encoded private key.",63,[[],[["result",["pkey","errorstack"]],["pkey",["private"]],["errorstack"]]]],[11,"private_key_from_pkcs8","","Deserializes a DER-formatted PKCS#8 unencrypted private key.",63,[[],[["pkey",["private"]],["result",["pkey","errorstack"]],["errorstack"]]]],[11,"private_key_from_pkcs8_callback","","Deserializes a DER-formatted PKCS#8 private key, using a…",63,[[["f"]],[["pkey",["private"]],["result",["pkey","errorstack"]],["errorstack"]]]],[11,"private_key_from_pkcs8_passphrase","","Deserializes a DER-formatted PKCS#8 private key, using the…",63,[[],[["pkey",["private"]],["result",["pkey","errorstack"]],["errorstack"]]]],[11,"public_key_from_pem","","Decodes a PEM-encoded SubjectPublicKeyInfo structure.",63,[[],[["result",["pkey","errorstack"]],["pkey",["public"]],["errorstack"]]]],[11,"public_key_from_der","","Decodes a DER-encoded SubjectPublicKeyInfo structure.",63,[[],[["result",["pkey","errorstack"]],["pkey",["public"]],["errorstack"]]]],[0,"rand","openssl","Utilities for secure random number generation.",null,null],[5,"rand_bytes","openssl::rand","Fill buffer with cryptographically strong pseudo-random…",null,[[],[["errorstack"],["result",["errorstack"]]]]],[0,"rsa","openssl","Rivest–Shamir–Adleman cryptosystem",null,null],[3,"Padding","openssl::rsa","Type of encryption padding to use.",null,null],[3,"Rsa","","An RSA key.",null,null],[3,"RsaRef","","Reference to `RSA`",null,null],[3,"RsaPrivateKeyBuilder","","",null,null],[11,"from_raw","","Creates a `Padding` from an integer representation.",64,[[["c_int"]],["padding"]]],[11,"as_raw","","Returns the integer representation of `Padding`.",64,[[["self"]],["c_int"]]],[18,"NONE","","",64,null],[18,"PKCS1","","",64,null],[18,"PKCS1_OAEP","","",64,null],[18,"PKCS1_PSS","","",64,null],[11,"private_key_to_pem","","Serializes the private key to a PEM-encoded PKCS#1…",65,[[["self"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"private_key_to_pem_passphrase","","Serializes the private key to a PEM-encoded encrypted…",65,[[["self"],["cipher"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"private_key_to_der","","Serializes the private key to a DER-encoded PKCS#1…",65,[[["self"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"private_decrypt","","Decrypts data using the private key, returning the number…",65,[[["padding"],["self"]],[["errorstack"],["result",["usize","errorstack"]],["usize"]]]],[11,"private_encrypt","","Encrypts data using the private key, returning the number…",65,[[["padding"],["self"]],[["errorstack"],["result",["usize","errorstack"]],["usize"]]]],[11,"d","","Returns a reference to the private exponent of the key.",65,[[["self"]],["bignumref"]]],[11,"p","","Returns a reference to the first factor of the exponent of…",65,[[["self"]],[["option",["bignumref"]],["bignumref"]]]],[11,"q","","Returns a reference to the second factor of the exponent…",65,[[["self"]],[["option",["bignumref"]],["bignumref"]]]],[11,"dmp1","","Returns a reference to the first exponent used for CRT…",65,[[["self"]],[["option",["bignumref"]],["bignumref"]]]],[11,"dmq1","","Returns a reference to the second exponent used for CRT…",65,[[["self"]],[["option",["bignumref"]],["bignumref"]]]],[11,"iqmp","","Returns a reference to the coefficient used for CRT…",65,[[["self"]],[["option",["bignumref"]],["bignumref"]]]],[11,"check_key","","Validates RSA parameters for correctness",65,[[["self"]],[["bool"],["errorstack"],["result",["bool","errorstack"]]]]],[11,"public_key_to_pem","","Serializes the public key into a PEM-encoded…",65,[[["self"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"public_key_to_der","","Serializes the public key into a DER-encoded…",65,[[["self"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"public_key_to_pem_pkcs1","","Serializes the public key into a PEM-encoded PKCS#1…",65,[[["self"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"public_key_to_der_pkcs1","","Serializes the public key into a DER-encoded PKCS#1…",65,[[["self"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"size","","Returns the size of the modulus in bytes.",65,[[["self"]],["u32"]]],[11,"public_decrypt","","Decrypts data using the public key, returning the number…",65,[[["padding"],["self"]],[["errorstack"],["result",["usize","errorstack"]],["usize"]]]],[11,"public_encrypt","","Encrypts data using the public key, returning the number…",65,[[["padding"],["self"]],[["errorstack"],["result",["usize","errorstack"]],["usize"]]]],[11,"n","","Returns a reference to the modulus of the key.",65,[[["self"]],["bignumref"]]],[11,"e","","Returns a reference to the public exponent of the key.",65,[[["self"]],["bignumref"]]],[11,"from_public_components","","Creates a new RSA key with only public components.",66,[[["bignum"]],[["result",["rsa","errorstack"]],["errorstack"],["rsa",["public"]]]]],[11,"public_key_from_pem","","Decodes a PEM-encoded SubjectPublicKeyInfo structure…",66,[[],[["errorstack"],["result",["rsa","errorstack"]],["rsa",["public"]]]]],[11,"public_key_from_pem_pkcs1","","Decodes a PEM-encoded PKCS#1 RSAPublicKey structure.",66,[[],[["errorstack"],["result",["rsa","errorstack"]],["rsa",["public"]]]]],[11,"public_key_from_der","","Decodes a DER-encoded SubjectPublicKeyInfo structure…",66,[[],[["errorstack"],["result",["rsa","errorstack"]],["rsa",["public"]]]]],[11,"public_key_from_der_pkcs1","","Decodes a DER-encoded PKCS#1 RSAPublicKey structure.",66,[[],[["errorstack"],["result",["rsa","errorstack"]],["rsa",["public"]]]]],[11,"new","","Creates a new `RsaPrivateKeyBuilder`.",67,[[["bignum"]],[["rsaprivatekeybuilder"],["result",["rsaprivatekeybuilder","errorstack"]],["errorstack"]]]],[11,"set_factors","","Sets the factors of the Rsa key.",67,[[["bignum"]],[["rsaprivatekeybuilder"],["result",["rsaprivatekeybuilder","errorstack"]],["errorstack"]]]],[11,"set_crt_params","","Sets the Chinese Remainder Theorem params of the Rsa key.",67,[[["bignum"]],[["rsaprivatekeybuilder"],["result",["rsaprivatekeybuilder","errorstack"]],["errorstack"]]]],[11,"build","","Returns the Rsa key.",67,[[],[["private"],["rsa",["private"]]]]],[11,"from_private_components","","Creates a new RSA key with private components (public…",66,[[["bignum"]],[["result",["rsa","errorstack"]],["rsa",["private"]],["errorstack"]]]],[11,"generate","","Generates a public/private key pair with the specified size.",66,[[["u32"]],[["result",["rsa","errorstack"]],["rsa",["private"]],["errorstack"]]]],[11,"generate_with_e","","Generates a public/private key pair with the specified…",66,[[["u32"],["bignumref"]],[["result",["rsa","errorstack"]],["rsa",["private"]],["errorstack"]]]],[11,"private_key_from_pem","","Deserializes a private key from a PEM-encoded PKCS#1…",66,[[],[["errorstack"],["rsa",["private"]],["result",["rsa","errorstack"]]]]],[11,"private_key_from_pem_passphrase","","Deserializes a private key from a PEM-encoded encrypted…",66,[[],[["errorstack"],["rsa",["private"]],["result",["rsa","errorstack"]]]]],[11,"private_key_from_pem_callback","","Deserializes a private key from a PEM-encoded encrypted…",66,[[["f"]],[["errorstack"],["rsa",["private"]],["result",["rsa","errorstack"]]]]],[11,"private_key_from_der","","Decodes a DER-encoded PKCS#1 RSAPrivateKey structure.",66,[[],[["errorstack"],["rsa",["private"]],["result",["rsa","errorstack"]]]]],[0,"sha","openssl","The SHA family of hashes.",null,null],[3,"Sha1","openssl::sha","An object which calculates a SHA1 hash of some data.",null,null],[3,"Sha224","","An object which calculates a SHA224 hash of some data.",null,null],[3,"Sha256","","An object which calculates a SHA256 hash of some data.",null,null],[3,"Sha384","","An object which calculates a SHA384 hash of some data.",null,null],[3,"Sha512","","An object which calculates a SHA512 hash of some data.",null,null],[5,"sha1","","Computes the SHA1 hash of some data.",null,[[]]],[5,"sha224","","Computes the SHA224 hash of some data.",null,[[]]],[5,"sha256","","Computes the SHA256 hash of some data.",null,[[]]],[5,"sha384","","Computes the SHA384 hash of some data.",null,[[]]],[5,"sha512","","Computes the SHA512 hash of some data.",null,[[]]],[11,"new","","Creates a new hasher.",68,[[],["sha1"]]],[11,"update","","Feeds some data into the hasher.",68,[[["self"]]]],[11,"finish","","Returns the hash of the data.",68,[[]]],[11,"new","","Creates a new hasher.",69,[[],["sha224"]]],[11,"update","","Feeds some data into the hasher.",69,[[["self"]]]],[11,"finish","","Returns the hash of the data.",69,[[]]],[11,"new","","Creates a new hasher.",70,[[],["sha256"]]],[11,"update","","Feeds some data into the hasher.",70,[[["self"]]]],[11,"finish","","Returns the hash of the data.",70,[[]]],[11,"new","","Creates a new hasher.",71,[[],["sha384"]]],[11,"update","","Feeds some data into the hasher.",71,[[["self"]]]],[11,"finish","","Returns the hash of the data.",71,[[]]],[11,"new","","Creates a new hasher.",72,[[],["sha512"]]],[11,"update","","Feeds some data into the hasher.",72,[[["self"]]]],[11,"finish","","Returns the hash of the data.",72,[[]]],[0,"sign","openssl","Message signatures.",null,null],[3,"RsaPssSaltlen","openssl::sign","Salt lengths that must be used with `set_rsa_pss_saltlen`.",null,null],[3,"Signer","","A type which computes cryptographic signatures of data.",null,null],[3,"Verifier","","",null,null],[11,"custom","","Sets the salt length to the given value.",73,[[["c_int"]],["rsapsssaltlen"]]],[18,"DIGEST_LENGTH","","The salt length is set to the digest length. Corresponds…",73,null],[18,"MAXIMUM_LENGTH","","The salt length is set to the maximum permissible value.…",73,null],[11,"new","","Creates a new `Signer`.",74,[[["messagedigest"],["pkeyref"]],[["signer"],["errorstack"],["result",["signer","errorstack"]]]]],[11,"new_without_digest","","Creates a new `Signer` without a digest.",74,[[["pkeyref"]],[["signer"],["errorstack"],["result",["signer","errorstack"]]]]],[11,"rsa_padding","","Returns the RSA padding mode in use.",74,[[["self"]],[["padding"],["result",["padding","errorstack"]],["errorstack"]]]],[11,"set_rsa_padding","","Sets the RSA padding mode.",74,[[["padding"],["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_rsa_pss_saltlen","","Sets the RSA PSS salt length.",74,[[["self"],["rsapsssaltlen"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_rsa_mgf1_md","","Sets the RSA MGF1 algorithm.",74,[[["messagedigest"],["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"update","","Feeds more data into the `Signer`.",74,[[["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"len","","Computes an upper bound on the signature length.",74,[[["self"]],[["errorstack"],["result",["usize","errorstack"]],["usize"]]]],[11,"sign","","Writes the signature into the provided buffer, returning…",74,[[["self"]],[["errorstack"],["result",["usize","errorstack"]],["usize"]]]],[11,"sign_to_vec","","Returns the signature.",74,[[["self"]],[["result",["vec","errorstack"]],["errorstack"],["vec",["u8"]]]]],[11,"new","","Creates a new `Verifier`.",75,[[["messagedigest"],["pkeyref"]],[["result",["verifier","errorstack"]],["verifier"],["errorstack"]]]],[11,"new_without_digest","","Creates a new `Verifier` without a digest.",75,[[["pkeyref"]],[["result",["verifier","errorstack"]],["verifier"],["errorstack"]]]],[11,"rsa_padding","","Returns the RSA padding mode in use.",75,[[["self"]],[["padding"],["result",["padding","errorstack"]],["errorstack"]]]],[11,"set_rsa_padding","","Sets the RSA padding mode.",75,[[["padding"],["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_rsa_pss_saltlen","","Sets the RSA PSS salt length.",75,[[["self"],["rsapsssaltlen"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_rsa_mgf1_md","","Sets the RSA MGF1 algorithm.",75,[[["messagedigest"],["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"update","","Feeds more data into the `Verifier`.",75,[[["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"verify","","Determines if the data fed into the `Verifier` matches the…",75,[[["self"]],[["bool"],["errorstack"],["result",["bool","errorstack"]]]]],[0,"srtp","openssl","",null,null],[3,"SrtpProtectionProfile","openssl::srtp","",null,null],[3,"SrtpProtectionProfileRef","","Reference to `SrtpProtectionProfile`.",null,null],[3,"SrtpProfileId","","An identifier of an SRTP protection profile.",null,null],[11,"id","","",76,[[["self"]],["srtpprofileid"]]],[11,"name","","",76,[[["self"]],["str"]]],[11,"from_raw","","Creates a `SrtpProfileId` from an integer representation.",77,[[["c_ulong"]],["srtpprofileid"]]],[11,"as_raw","","Returns the integer representation of `SrtpProfileId`.",77,[[["self"]],["c_ulong"]]],[18,"SRTP_AES128_CM_SHA1_80","","",77,null],[18,"SRTP_AES128_CM_SHA1_32","","",77,null],[18,"SRTP_AES128_F8_SHA1_80","","",77,null],[18,"SRTP_AES128_F8_SHA1_32","","",77,null],[18,"SRTP_NULL_SHA1_80","","",77,null],[18,"SRTP_NULL_SHA1_32","","",77,null],[0,"ssl","openssl","SSL/TLS support.",null,null],[3,"ConnectConfiguration","openssl::ssl","A type which allows for configuration of a client-side TLS…",null,null],[3,"SslAcceptor","","A type which wraps server-side streams in a TLS session.",null,null],[3,"SslAcceptorBuilder","","A builder for `SslAcceptor`s.",null,null],[3,"SslConnector","","A type which wraps client-side streams in a TLS session.",null,null],[3,"SslConnectorBuilder","","A builder for `SslConnector`s.",null,null],[3,"Error","","An SSL error.",null,null],[3,"ErrorCode","","An error code returned from SSL functions.",null,null],[3,"SslOptions","","Options controlling the behavior of an `SslContext`.",null,null],[3,"SslMode","","Options controlling the behavior of an `SslContext`.",null,null],[3,"SslMethod","","A type specifying the kind of protocol an `SslContext`…",null,null],[3,"SslVerifyMode","","Options controling the behavior of certificate verification.",null,null],[3,"SslSessionCacheMode","","Options controlling the behavior of session caching.",null,null],[3,"SslFiletype","","An identifier of the format of a certificate or key file.",null,null],[3,"StatusType","","An identifier of a certificate status type.",null,null],[3,"NameType","","An identifier of a session name type.",null,null],[3,"SniError","","An error returned from the SNI callback.",null,null],[3,"SslAlert","","An SSL/TLS alert.",null,null],[3,"AlpnError","","An error returned from an ALPN selection callback.",null,null],[3,"SslVersion","","An SSL/TLS protocol version.",null,null],[3,"SslContextBuilder","","A builder for `SslContext`s.",null,null],[3,"SslContext","","A context object for TLS streams.",null,null],[3,"SslContextRef","","Reference to [`SslContext`]",null,null],[3,"CipherBits","","Information about the state of a cipher.",null,null],[12,"secret","","The number of secret bits used for the cipher.",78,null],[12,"algorithm","","The number of bits processed by the chosen algorithm.",78,null],[3,"SslCipher","","Information about a cipher.",null,null],[3,"SslCipherRef","","Reference to an [`SslCipher`].",null,null],[3,"SslSession","","An encoded SSL session.",null,null],[3,"SslSessionRef","","Reference to [`SslSession`].",null,null],[3,"Ssl","","The state of an SSL/TLS session.",null,null],[3,"SslRef","","Reference to an [`Ssl`].",null,null],[3,"MidHandshakeSslStream","","An SSL stream midway through the handshake process.",null,null],[3,"SslStream","","A TLS session over a stream.",null,null],[3,"SslStreamBuilder","","A partially constructed `SslStream`, useful for unusual…",null,null],[3,"ShutdownState","","The shutdown state of a session.",null,null],[4,"HandshakeError","","An error or intermediate state after a TLS handshake…",null,null],[13,"SetupFailure","","Setup failed.",79,null],[13,"Failure","","The handshake failed.",79,null],[13,"WouldBlock","","The handshake encountered a `WouldBlock` error midway…",79,null],[4,"ShutdownResult","","The result of a shutdown request.",null,null],[13,"Sent","","A close notify message has been sent to the peer.",80,null],[13,"Received","","A close notify response message has been received from the…",80,null],[5,"select_next_proto","","A standard implementation of protocol selection for…",null,[[],["option"]]],[11,"builder","","Creates a new builder for TLS connections.",81,[[["sslmethod"]],[["result",["sslconnectorbuilder","errorstack"]],["errorstack"],["sslconnectorbuilder"]]]],[11,"connect","","Initiates a client-side TLS session on a stream.",81,[[["str"],["s"],["self"]],[["result",["sslstream","handshakeerror"]],["sslstream"],["handshakeerror"]]]],[11,"configure","","Returns a structure allowing for configuration of a single…",81,[[["self"]],[["connectconfiguration"],["result",["connectconfiguration","errorstack"]],["errorstack"]]]],[11,"into_context","","Consumes the `SslConnector`, returning the inner raw…",81,[[],["sslcontext"]]],[11,"context","","Returns a shared reference to the inner raw `SslContext`.",81,[[["self"]],["sslcontextref"]]],[11,"build","","Consumes the builder, returning an `SslConnector`.",82,[[],["sslconnector"]]],[11,"use_server_name_indication","","A builder-style version of `set_use_server_name_indication`.",83,[[["bool"]],["connectconfiguration"]]],[11,"set_use_server_name_indication","","Configures the use of Server Name Indication (SNI) when…",83,[[["self"],["bool"]]]],[11,"verify_hostname","","A builder-style version of `set_verify_hostname`.",83,[[["bool"]],["connectconfiguration"]]],[11,"set_verify_hostname","","Configures the use of hostname verification when connecting.",83,[[["self"],["bool"]]]],[11,"connect","","Initiates a client-side TLS session on a stream.",83,[[["str"],["s"]],[["result",["sslstream","handshakeerror"]],["sslstream"],["handshakeerror"]]]],[11,"mozilla_intermediate_v5","","Creates a new builder configured to connect to non-legacy…",84,[[["sslmethod"]],[["result",["sslacceptorbuilder","errorstack"]],["sslacceptorbuilder"],["errorstack"]]]],[11,"mozilla_intermediate","","Creates a new builder configured to connect to non-legacy…",84,[[["sslmethod"]],[["result",["sslacceptorbuilder","errorstack"]],["sslacceptorbuilder"],["errorstack"]]]],[11,"mozilla_modern","","Creates a new builder configured to connect to modern…",84,[[["sslmethod"]],[["result",["sslacceptorbuilder","errorstack"]],["sslacceptorbuilder"],["errorstack"]]]],[11,"accept","","Initiates a server-side TLS session on a stream.",84,[[["s"],["self"]],[["result",["sslstream","handshakeerror"]],["sslstream"],["handshakeerror"]]]],[11,"into_context","","Consumes the `SslAcceptor`, returning the inner raw…",84,[[],["sslcontext"]]],[11,"context","","Returns a shared reference to the inner raw `SslContext`.",84,[[["self"]],["sslcontextref"]]],[11,"build","","Consumes the builder, returning a `SslAcceptor`.",85,[[],["sslacceptor"]]],[11,"from_raw","","",86,[[["c_int"]],["errorcode"]]],[11,"as_raw","","",86,[[["self"]],["c_int"]]],[18,"ZERO_RETURN","","The SSL session has been closed.",86,null],[18,"WANT_READ","","An attempt to read data from the underlying socket…",86,null],[18,"WANT_WRITE","","An attempt to write data to the underlying socket returned…",86,null],[18,"SYSCALL","","A non-recoverable IO error occurred.",86,null],[18,"SSL","","An error occurred in the SSL library.",86,null],[11,"code","","",87,[[["self"]],["errorcode"]]],[11,"io_error","","",87,[[["self"]],[["option",["error"]],["error"]]]],[11,"into_io_error","","",87,[[],[["error"],["error"],["result",["error","error"]]]]],[11,"ssl_error","","",87,[[["self"]],[["option",["errorstack"]],["errorstack"]]]],[18,"DONT_INSERT_EMPTY_FRAGMENTS","","Disables a countermeasure against an SSLv3/TLSv1.0…",88,null],[18,"ALL","","A \"reasonable default\" set of options which enables…",88,null],[18,"NO_QUERY_MTU","","Do not query the MTU.",88,null],[18,"COOKIE_EXCHANGE","","Enables Cookie Exchange as described in [RFC 4347 Section…",88,null],[18,"NO_TICKET","","Disables the use of session tickets for session resumption.",88,null],[18,"NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","Always start a new session when performing a renegotiation…",88,null],[18,"NO_COMPRESSION","","Disables the use of TLS compression.",88,null],[18,"ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","Allow legacy insecure renegotiation with servers or…",88,null],[18,"SINGLE_ECDH_USE","","Creates a new key for each session when using ECDHE.",88,null],[18,"SINGLE_DH_USE","","Creates a new key for each session when using DHE.",88,null],[18,"CIPHER_SERVER_PREFERENCE","","Use the server's preferences rather than the client's when…",88,null],[18,"TLS_ROLLBACK_BUG","","Disables version rollback attach detection.",88,null],[18,"NO_SSLV2","","Disables the use of SSLv2.",88,null],[18,"NO_SSLV3","","Disables the use of SSLv3.",88,null],[18,"NO_TLSV1","","Disables the use of TLSv1.0.",88,null],[18,"NO_TLSV1_1","","Disables the use of TLSv1.1.",88,null],[18,"NO_TLSV1_2","","Disables the use of TLSv1.2.",88,null],[18,"NO_DTLSV1","","Disables the use of DTLSv1.0",88,null],[18,"NO_DTLSV1_2","","Disables the use of DTLSv1.2.",88,null],[18,"NO_SSL_MASK","","Disables the use of all (D)TLS protocol versions.",88,null],[11,"empty","","Returns an empty set of flags",88,[[],["ssloptions"]]],[11,"all","","Returns the set containing all flags.",88,[[],["ssloptions"]]],[11,"bits","","Returns the raw value of the flags currently stored.",88,[[["self"]],["c_ulong"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",88,[[["c_ulong"]],[["ssloptions"],["option",["ssloptions"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",88,[[["c_ulong"]],["ssloptions"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",88,[[["c_ulong"]],["ssloptions"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",88,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",88,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",88,[[["ssloptions"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",88,[[["ssloptions"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",88,[[["ssloptions"],["self"]]]],[11,"remove","","Removes the specified flags in-place.",88,[[["ssloptions"],["self"]]]],[11,"toggle","","Toggles the specified flags in-place.",88,[[["ssloptions"],["self"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",88,[[["ssloptions"],["self"],["bool"]]]],[18,"ENABLE_PARTIAL_WRITE","","Enables \"short writes\".",89,null],[18,"ACCEPT_MOVING_WRITE_BUFFER","","Disables a check that the data buffer has not moved…",89,null],[18,"AUTO_RETRY","","Enables automatic retries after TLS session events such as…",89,null],[18,"NO_AUTO_CHAIN","","Disables automatic chain building when verifying a peer's…",89,null],[18,"RELEASE_BUFFERS","","Release memory buffers when the session does not need them.",89,null],[18,"SEND_FALLBACK_SCSV","","Sends the fake `TLS_FALLBACK_SCSV` cipher suite in the…",89,null],[11,"empty","","Returns an empty set of flags",89,[[],["sslmode"]]],[11,"all","","Returns the set containing all flags.",89,[[],["sslmode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",89,[[["self"]],["c_long"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",89,[[["c_long"]],[["option",["sslmode"]],["sslmode"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",89,[[["c_long"]],["sslmode"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",89,[[["c_long"]],["sslmode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",89,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",89,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",89,[[["self"],["sslmode"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",89,[[["self"],["sslmode"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",89,[[["self"],["sslmode"]]]],[11,"remove","","Removes the specified flags in-place.",89,[[["self"],["sslmode"]]]],[11,"toggle","","Toggles the specified flags in-place.",89,[[["self"],["sslmode"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",89,[[["self"],["sslmode"],["bool"]]]],[11,"tls","","Support all versions of the TLS protocol.",90,[[],["sslmethod"]]],[11,"dtls","","Support all versions of the DTLS protocol.",90,[[],["sslmethod"]]],[11,"tls_client","","Support all versions of the TLS protocol, explicitly as a…",90,[[],["sslmethod"]]],[11,"tls_server","","Support all versions of the TLS protocol, explicitly as a…",90,[[],["sslmethod"]]],[11,"from_ptr","","Constructs an `SslMethod` from a pointer to the underlying…",90,[[],["sslmethod"]]],[11,"as_ptr","","Returns a pointer to the underlying OpenSSL value.",90,[[["self"]]]],[18,"PEER","","Verifies that the peer's certificate is trusted.",91,null],[18,"NONE","","Disables verification of the peer's certificate.",91,null],[18,"FAIL_IF_NO_PEER_CERT","","On the server side, abort the handshake if the client did…",91,null],[11,"empty","","Returns an empty set of flags",91,[[],["sslverifymode"]]],[11,"all","","Returns the set containing all flags.",91,[[],["sslverifymode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",91,[[["self"]],["i32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",91,[[["i32"]],[["sslverifymode"],["option",["sslverifymode"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",91,[[["i32"]],["sslverifymode"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",91,[[["i32"]],["sslverifymode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",91,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",91,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",91,[[["sslverifymode"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",91,[[["sslverifymode"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",91,[[["self"],["sslverifymode"]]]],[11,"remove","","Removes the specified flags in-place.",91,[[["self"],["sslverifymode"]]]],[11,"toggle","","Toggles the specified flags in-place.",91,[[["self"],["sslverifymode"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",91,[[["self"],["sslverifymode"],["bool"]]]],[18,"OFF","","No session caching for the client or server takes place.",92,null],[18,"CLIENT","","Enable session caching on the client side.",92,null],[18,"SERVER","","Enable session caching on the server side.",92,null],[18,"BOTH","","Enable session caching on both the client and server side.",92,null],[18,"NO_AUTO_CLEAR","","Disable automatic removal of expired sessions from the…",92,null],[18,"NO_INTERNAL_LOOKUP","","Disable use of the internal session cache for session…",92,null],[18,"NO_INTERNAL_STORE","","Disable use of the internal session cache for session…",92,null],[18,"NO_INTERNAL","","Disable use of the internal session cache for storage and…",92,null],[11,"empty","","Returns an empty set of flags",92,[[],["sslsessioncachemode"]]],[11,"all","","Returns the set containing all flags.",92,[[],["sslsessioncachemode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",92,[[["self"]],["c_long"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",92,[[["c_long"]],[["option",["sslsessioncachemode"]],["sslsessioncachemode"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",92,[[["c_long"]],["sslsessioncachemode"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",92,[[["c_long"]],["sslsessioncachemode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",92,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",92,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",92,[[["self"],["sslsessioncachemode"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",92,[[["self"],["sslsessioncachemode"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",92,[[["self"],["sslsessioncachemode"]]]],[11,"remove","","Removes the specified flags in-place.",92,[[["self"],["sslsessioncachemode"]]]],[11,"toggle","","Toggles the specified flags in-place.",92,[[["self"],["sslsessioncachemode"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",92,[[["self"],["sslsessioncachemode"],["bool"]]]],[11,"from_raw","","Constructs an `SslFiletype` from a raw OpenSSL value.",93,[[["c_int"]],["sslfiletype"]]],[11,"as_raw","","Returns the raw OpenSSL value represented by this type.",93,[[["self"]],["c_int"]]],[18,"PEM","","The PEM format.",93,null],[18,"ASN1","","The ASN1 format.",93,null],[11,"from_raw","","Constructs a `StatusType` from a raw OpenSSL value.",94,[[["c_int"]],["statustype"]]],[11,"as_raw","","Returns the raw OpenSSL value represented by this type.",94,[[["self"]],["c_int"]]],[18,"OCSP","","An OSCP status.",94,null],[11,"from_raw","","Constructs a `StatusType` from a raw OpenSSL value.",95,[[["c_int"]],["statustype"]]],[11,"as_raw","","Returns the raw OpenSSL value represented by this type.",95,[[["self"]],["c_int"]]],[18,"HOST_NAME","","A host name.",95,null],[18,"ALERT_FATAL","","Abort the handshake with a fatal alert.",96,null],[18,"ALERT_WARNING","","Send a warning alert to the client and continue the…",96,null],[18,"NOACK","","",96,null],[18,"UNRECOGNIZED_NAME","","Alert 112 - `unrecognized_name`.",97,null],[18,"ILLEGAL_PARAMETER","","",97,null],[18,"DECODE_ERROR","","",97,null],[18,"ALERT_FATAL","","Terminate the handshake with a fatal alert.",98,null],[18,"NOACK","","Do not select a protocol, but continue the handshake.",98,null],[18,"SSL3","","SSLv3",99,null],[18,"TLS1","","TLSv1.0",99,null],[18,"TLS1_1","","TLSv1.1",99,null],[18,"TLS1_2","","TLSv1.2",99,null],[11,"new","","Creates a new `SslContextBuilder`.",100,[[["sslmethod"]],[["result",["sslcontextbuilder","errorstack"]],["errorstack"],["sslcontextbuilder"]]]],[11,"from_ptr","","Creates an `SslContextBuilder` from a pointer to a raw…",100,[[],["sslcontextbuilder"]]],[11,"as_ptr","","Returns a pointer to the raw OpenSSL value.",100,[[["self"]]]],[11,"set_verify","","Configures the certificate verification method for new…",100,[[["self"],["sslverifymode"]]]],[11,"set_verify_callback","","Configures the certificate verification method for new…",100,[[["self"],["sslverifymode"],["f"]]]],[11,"set_servername_callback","","Configures the server name indication (SNI) callback for…",100,[[["self"],["f"]]]],[11,"set_verify_depth","","Sets the certificate verification depth.",100,[[["self"],["u32"]]]],[11,"set_verify_cert_store","","Sets a custom certificate store for verifying peer…",100,[[["x509store"],["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_cert_store","","Replaces the context's certificate store.",100,[[["x509store"],["self"]]]],[11,"set_read_ahead","","Controls read ahead behavior.",100,[[["self"],["bool"]]]],[11,"set_mode","","Sets the mode used by the context, returning the previous…",100,[[["self"],["sslmode"]],["sslmode"]]],[11,"set_tmp_dh","","Sets the parameters to be used during ephemeral…",100,[[["dhref"],["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_tmp_dh_callback","","Sets the callback which will generate parameters to be…",100,[[["self"],["f"]]]],[11,"set_tmp_ecdh","","Sets the parameters to be used during ephemeral elliptic…",100,[[["eckeyref"],["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_default_verify_paths","","Use the default locations of trusted certificates for…",100,[[["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_ca_file","","Loads trusted root certificates from a file.",100,[[["path"],["self"],["asref",["path"]]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_client_ca_list","","Sets the list of CA names sent to the client.",100,[[["stack",["x509name"]],["self"],["x509name"]]]],[11,"add_client_ca","","Add the provided CA certificate to the list sent by the…",100,[[["self"],["x509ref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_session_id_context","","Set the context identifier for sessions.",100,[[["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_certificate_file","","Loads a leaf certificate from a file.",100,[[["path"],["asref",["path"]],["self"],["sslfiletype"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_certificate_chain_file","","Loads a certificate chain from a file.",100,[[["path"],["self"],["asref",["path"]]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_certificate","","Sets the leaf certificate.",100,[[["self"],["x509ref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"add_extra_chain_cert","","Appends a certificate to the certificate chain.",100,[[["self"],["x509"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_private_key_file","","Loads the private key from a file.",100,[[["path"],["asref",["path"]],["self"],["sslfiletype"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_private_key","","Sets the private key.",100,[[["self"],["pkeyref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_cipher_list","","Sets the list of supported ciphers for protocols before…",100,[[["str"],["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_options","","Sets the options used by the context, returning the old set.",100,[[["ssloptions"],["self"]],["ssloptions"]]],[11,"options","","Returns the options used by the context.",100,[[["self"]],["ssloptions"]]],[11,"clear_options","","Clears the options used by the context, returning the old…",100,[[["ssloptions"],["self"]],["ssloptions"]]],[11,"set_min_proto_version","","Sets the minimum supported protocol version.",100,[[["sslversion"],["self"],["option",["sslversion"]]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_max_proto_version","","Sets the maximum supported protocol version.",100,[[["sslversion"],["self"],["option",["sslversion"]]],[["errorstack"],["result",["errorstack"]]]]],[11,"min_proto_version","","Gets the minimum supported protocol version.",100,[[["self"]],[["sslversion"],["option",["sslversion"]]]]],[11,"max_proto_version","","Gets the maximum supported protocol version.",100,[[["self"]],[["sslversion"],["option",["sslversion"]]]]],[11,"set_alpn_protos","","Sets the protocols to sent to the server for Application…",100,[[["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_tlsext_use_srtp","","Enables the DTLS extension \"use_srtp\" as defined in RFC5764.",100,[[["str"],["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_alpn_select_callback","","Sets the callback used by a server to select a protocol…",100,[[["self"],["f"]]]],[11,"check_private_key","","Checks for consistency between the private key and…",100,[[["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"cert_store","","Returns a shared reference to the context's certificate…",100,[[["self"]],["x509storebuilderref"]]],[11,"cert_store_mut","","Returns a mutable reference to the context's certificate…",100,[[["self"]],["x509storebuilderref"]]],[11,"set_status_callback","","Sets the callback dealing with OCSP stapling.",100,[[["self"],["f"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_psk_client_callback","","Sets the callback for providing an identity and pre-shared…",100,[[["self"],["f"]]]],[11,"set_psk_callback","","",100,[[["self"],["f"]]]],[11,"set_psk_server_callback","","Sets the callback for providing an identity and pre-shared…",100,[[["self"],["f"]]]],[11,"set_new_session_callback","","Sets the callback which is called when new sessions are…",100,[[["self"],["f"]]]],[11,"set_remove_session_callback","","Sets the callback which is called when sessions are…",100,[[["self"],["f"]]]],[11,"set_get_session_callback","","Sets the callback which is called when a client proposed…",100,[[["self"],["f"]]]],[11,"set_session_cache_mode","","Sets the session caching mode use for connections made…",100,[[["self"],["sslsessioncachemode"]],["sslsessioncachemode"]]],[11,"set_cookie_generate_cb","","Sets the callback for generating a DTLSv1 cookie",100,[[["self"],["f"]]]],[11,"set_cookie_verify_cb","","Sets the callback for verifying a DTLSv1 cookie",100,[[["self"],["f"]]]],[11,"set_ex_data","","Sets the extra data at the specified index.",100,[[["index",["sslcontext"]],["self"],["sslcontext"],["t"]]]],[11,"set_session_cache_size","","Sets the context's session cache size limit, returning the…",100,[[["self"],["i32"]],["i64"]]],[11,"set_sigalgs_list","","Sets the context's supported signature algorithms.",100,[[["str"],["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"build","","Consumes the builder, returning a new `SslContext`.",100,[[],["sslcontext"]]],[11,"builder","","Creates a new builder object for an `SslContext`.",101,[[["sslmethod"]],[["result",["sslcontextbuilder","errorstack"]],["errorstack"],["sslcontextbuilder"]]]],[11,"new_ex_index","","Returns a new extra data index.",101,[[],[["errorstack"],["result",["index","errorstack"]],["index",["sslcontext"]]]]],[11,"certificate","","Returns the certificate associated with this `SslContext`,…",102,[[["self"]],[["x509ref"],["option",["x509ref"]]]]],[11,"private_key","","Returns the private key associated with this `SslContext`,…",102,[[["self"]],[["option",["pkeyref"]],["pkeyref"]]]],[11,"cert_store","","Returns a shared reference to the certificate store used…",102,[[["self"]],["x509storeref"]]],[11,"extra_chain_certs","","Returns a shared reference to the stack of certificates…",102,[[["self"]],["stackref"]]],[11,"ex_data","","Returns a reference to the extra data at the specified…",102,[[["sslcontext"],["self"],["index",["sslcontext"]]],[["t"],["option"]]]],[11,"add_session","","Adds a session to the context's cache.",102,[[["self"],["sslsessionref"]],["bool"]]],[11,"remove_session","","Removes a session from the context's cache and marks it as…",102,[[["self"],["sslsessionref"]],["bool"]]],[11,"session_cache_size","","Returns the context's session cache size limit.",102,[[["self"]],["i64"]]],[11,"verify_mode","","Returns the verify mode that was set on this context from…",102,[[["self"]],["sslverifymode"]]],[11,"name","","Returns the name of the cipher.",103,[[["self"]],["str"]]],[11,"version","","Returns the SSL/TLS protocol version that first defined…",103,[[["self"]],["str"]]],[11,"bits","","Returns the number of bits used for the cipher.",103,[[["self"]],["cipherbits"]]],[11,"description","","Returns a textual description of the cipher.",103,[[["self"]],["string"]]],[11,"cipher_nid","","Returns the NID corresponding to the cipher.",103,[[["self"]],[["nid"],["option",["nid"]]]]],[11,"from_der","","Deserializes a DER-encoded session structure.",104,[[],[["result",["sslsession","errorstack"]],["sslsession"],["errorstack"]]]],[11,"id","","Returns the SSL session ID.",105,[[["self"]]]],[11,"master_key_len","","Returns the length of the master key.",105,[[["self"]],["usize"]]],[11,"master_key","","Copies the master key into the provided buffer.",105,[[["self"]],["usize"]]],[11,"time","","Returns the time at which the session was established, in…",105,[[["self"]],["i64"]]],[11,"timeout","","Returns the sessions timeout, in seconds.",105,[[["self"]],["i64"]]],[11,"protocol_version","","Returns the session's TLS protocol version.",105,[[["self"]],["sslversion"]]],[11,"to_der","","Serializes the session into a DER-encoded structure.",105,[[["self"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"new_ex_index","","Returns a new extra data index.",106,[[],[["index",["ssl"]],["result",["index","errorstack"]],["errorstack"]]]],[11,"new","","Creates a new `Ssl`.",106,[[["sslcontext"]],[["ssl"],["result",["ssl","errorstack"]],["errorstack"]]]],[11,"connect","","Initiates a client-side TLS handshake.",106,[[["s"]],[["result",["sslstream","handshakeerror"]],["sslstream"],["handshakeerror"]]]],[11,"accept","","Initiates a server-side TLS handshake.",106,[[["s"]],[["result",["sslstream","handshakeerror"]],["sslstream"],["handshakeerror"]]]],[11,"set_verify","","Like [`SslContextBuilder::set_verify`].",107,[[["self"],["sslverifymode"]]]],[11,"verify_mode","","Returns the verify mode that was set using `set_verify`.",107,[[["self"]],["sslverifymode"]]],[11,"set_verify_callback","","Like [`SslContextBuilder::set_verify_callback`].",107,[[["self"],["sslverifymode"],["f"]]]],[11,"set_tmp_dh","","Like [`SslContextBuilder::set_tmp_dh`].",107,[[["dhref"],["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_tmp_dh_callback","","Like [`SslContextBuilder::set_tmp_dh_callback`].",107,[[["self"],["f"]]]],[11,"set_tmp_ecdh","","Like [`SslContextBuilder::set_tmp_ecdh`].",107,[[["eckeyref"],["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_alpn_protos","","Like [`SslContextBuilder::set_alpn_protos`].",107,[[["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"current_cipher","","Returns the current cipher if the session is active.",107,[[["self"]],[["sslcipherref"],["option",["sslcipherref"]]]]],[11,"state_string","","Returns a short string describing the state of the session.",107,[[["self"]],["str"]]],[11,"state_string_long","","Returns a longer string describing the state of the session.",107,[[["self"]],["str"]]],[11,"set_hostname","","Sets the host name to be sent to the server for Server…",107,[[["str"],["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"peer_certificate","","Returns the peer's certificate, if present.",107,[[["self"]],[["option",["x509"]],["x509"]]]],[11,"peer_cert_chain","","Returns the certificate chain of the peer, if present.",107,[[["self"]],[["stackref"],["option",["stackref"]]]]],[11,"verified_chain","","Returns the verified certificate chain of the peer,…",107,[[["self"]],[["stackref"],["option",["stackref"]]]]],[11,"certificate","","Like [`SslContext::certificate`].",107,[[["self"]],[["x509ref"],["option",["x509ref"]]]]],[11,"private_key","","Like [`SslContext::private_key`].",107,[[["self"]],[["option",["pkeyref"]],["pkeyref"]]]],[11,"version","","",107,[[["self"]],["str"]]],[11,"version2","","Returns the protocol version of the session.",107,[[["self"]],[["sslversion"],["option",["sslversion"]]]]],[11,"version_str","","Returns a string describing the protocol version of the…",107,[[["self"]],["str"]]],[11,"selected_alpn_protocol","","Returns the protocol selected via Application Layer…",107,[[["self"]],["option"]]],[11,"set_tlsext_use_srtp","","Enables the DTLS extension \"use_srtp\" as defined in RFC5764.",107,[[["str"],["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"srtp_profiles","","Gets all SRTP profiles that are enabled for handshake via…",107,[[["self"]],[["option",["stackref"]],["stackref"]]]],[11,"selected_srtp_profile","","Gets the SRTP profile selected by handshake.",107,[[["self"]],[["option",["srtpprotectionprofileref"]],["srtpprotectionprofileref"]]]],[11,"pending","","Returns the number of bytes remaining in the currently…",107,[[["self"]],["usize"]]],[11,"servername","","Returns the servername sent by the client via Server Name…",107,[[["self"],["nametype"]],[["str"],["option",["str"]]]]],[11,"servername_raw","","Returns the servername sent by the client via Server Name…",107,[[["self"],["nametype"]],["option"]]],[11,"set_ssl_context","","Changes the context corresponding to the current connection.",107,[[["sslcontextref"],["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"ssl_context","","Returns the context corresponding to the current connection.",107,[[["self"]],["sslcontextref"]]],[11,"param_mut","","Returns a mutable reference to the X509 verification…",107,[[["self"]],["x509verifyparamref"]]],[11,"verify_result","","Returns the certificate verification result.",107,[[["self"]],["x509verifyresult"]]],[11,"session","","Returns a shared reference to the SSL session.",107,[[["self"]],[["option",["sslsessionref"]],["sslsessionref"]]]],[11,"client_random","","Copies the client_random value sent by the client in the…",107,[[["self"]],["usize"]]],[11,"server_random","","Copies the server_random value sent by the server in the…",107,[[["self"]],["usize"]]],[11,"export_keying_material","","Derives keying material for application use in accordance…",107,[[["str"],["option"],["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_session","","Sets the session to be used.",107,[[["self"],["sslsessionref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"session_reused","","Determines if the session provided to `set_session` was…",107,[[["self"]],["bool"]]],[11,"set_status_type","","Sets the status response a client wishes the server to…",107,[[["self"],["statustype"]],[["errorstack"],["result",["errorstack"]]]]],[11,"ocsp_status","","Returns the server's OCSP response, if present.",107,[[["self"]],["option"]]],[11,"set_ocsp_status","","Sets the OCSP response to be returned to the client.",107,[[["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"is_server","","Determines if this `Ssl` is configured for server-side or…",107,[[["self"]],["bool"]]],[11,"set_ex_data","","Sets the extra data at the specified index.",107,[[["index",["ssl"]],["self"],["ssl"],["t"]]]],[11,"ex_data","","Returns a reference to the extra data at the specified…",107,[[["index",["ssl"]],["ssl"],["self"]],[["t"],["option"]]]],[11,"ex_data_mut","","Returns a mutable reference to the extra data at the…",107,[[["index",["ssl"]],["self"],["ssl"]],[["option"],["t"]]]],[11,"finished","","Copies the contents of the last Finished message sent to…",107,[[["self"]],["usize"]]],[11,"peer_finished","","Copies the contents of the last Finished message received…",107,[[["self"]],["usize"]]],[11,"is_init_finished","","Determines if the initial handshake has been completed.",107,[[["self"]],["bool"]]],[11,"get_ref","","Returns a shared reference to the inner stream.",108,[[["self"]],["s"]]],[11,"get_mut","","Returns a mutable reference to the inner stream.",108,[[["self"]],["s"]]],[11,"ssl","","Returns a shared reference to the `Ssl` of the stream.",108,[[["self"]],["sslref"]]],[11,"error","","Returns the underlying error which interrupted this…",108,[[["self"]],["error"]]],[11,"into_error","","Consumes `self`, returning its error.",108,[[],["error"]]],[11,"handshake","","Restarts the handshake process.",108,[[],[["result",["sslstream","handshakeerror"]],["sslstream"],["handshakeerror"]]]],[11,"ssl_read","","Like `read`, but returns an `ssl::Error` rather than an…",109,[[["self"]],[["result",["usize","error"]],["usize"],["error"]]]],[11,"ssl_write","","Like `write`, but returns an `ssl::Error` rather than an…",109,[[["self"]],[["result",["usize","error"]],["usize"],["error"]]]],[11,"shutdown","","Shuts down the session.",109,[[["self"]],[["shutdownresult"],["result",["shutdownresult","error"]],["error"]]]],[11,"get_shutdown","","Returns the session's shutdown state.",109,[[["self"]],["shutdownstate"]]],[11,"set_shutdown","","Sets the session's shutdown state.",109,[[["self"],["shutdownstate"]]]],[11,"get_ref","","Returns a shared reference to the underlying stream.",109,[[["self"]],["s"]]],[11,"get_mut","","Returns a mutable reference to the underlying stream.",109,[[["self"]],["s"]]],[11,"ssl","","Returns a shared reference to the `Ssl` object associated…",109,[[["self"]],["sslref"]]],[11,"new","","Begin creating an `SslStream` atop `stream`",110,[[["ssl"],["s"]],["self"]]],[11,"set_connect_state","","Configure as an outgoing stream from a client.",110,[[["self"]]]],[11,"set_accept_state","","Configure as an incoming stream to a server.",110,[[["self"]]]],[11,"connect","","See `Ssl::connect`",110,[[],[["result",["sslstream","handshakeerror"]],["sslstream"],["handshakeerror"]]]],[11,"accept","","See `Ssl::accept`",110,[[],[["result",["sslstream","handshakeerror"]],["sslstream"],["handshakeerror"]]]],[11,"handshake","","Initiates the handshake.",110,[[],[["result",["sslstream","handshakeerror"]],["sslstream"],["handshakeerror"]]]],[11,"get_ref","","Returns a shared reference to the underlying stream.",110,[[["self"]],["s"]]],[11,"get_mut","","Returns a mutable reference to the underlying stream.",110,[[["self"]],["s"]]],[11,"ssl","","Returns a shared reference to the `Ssl` object associated…",110,[[["self"]],["sslref"]]],[11,"set_dtls_mtu_size","","Set the DTLS MTU size.",110,[[["self"],["usize"]]]],[18,"SENT","","A close notify message has been sent to the peer.",111,null],[18,"RECEIVED","","A close notify message has been received from the peer.",111,null],[11,"empty","","Returns an empty set of flags",111,[[],["shutdownstate"]]],[11,"all","","Returns the set containing all flags.",111,[[],["shutdownstate"]]],[11,"bits","","Returns the raw value of the flags currently stored.",111,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",111,[[["c_int"]],[["option",["shutdownstate"]],["shutdownstate"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",111,[[["c_int"]],["shutdownstate"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",111,[[["c_int"]],["shutdownstate"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",111,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",111,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",111,[[["self"],["shutdownstate"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",111,[[["self"],["shutdownstate"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",111,[[["self"],["shutdownstate"]]]],[11,"remove","","Removes the specified flags in-place.",111,[[["self"],["shutdownstate"]]]],[11,"toggle","","Toggles the specified flags in-place.",111,[[["self"],["shutdownstate"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",111,[[["self"],["shutdownstate"],["bool"]]]],[0,"stack","openssl","",null,null],[3,"Stack","openssl::stack","An owned stack of `T`.",null,null],[3,"IntoIter","","",null,null],[3,"StackRef","","",null,null],[3,"Iter","","An iterator over the stack's contents.",null,null],[3,"IterMut","","A mutable iterator over the stack's contents.",null,null],[8,"Stackable","","Trait implemented by types which can be placed in a stack.",null,null],[16,"StackType","","The C stack type for this element.",112,null],[11,"new","","",113,[[],[["stack"],["errorstack"],["result",["stack","errorstack"]]]]],[11,"len","","Returns the number of items in the stack",114,[[["self"]],["usize"]]],[11,"iter","","",114,[[["self"]],["iter"]]],[11,"iter_mut","","",114,[[["self"]],["itermut"]]],[11,"get","","Returns a reference to the element at the given index in…",114,[[["self"],["usize"]],["option"]]],[11,"get_mut","","Returns a mutable reference to the element at the given…",114,[[["self"],["usize"]],["option"]]],[11,"push","","Pushes a value onto the top of the stack.",114,[[["self"],["t"]],[["errorstack"],["result",["errorstack"]]]]],[11,"pop","","Removes the last element from the stack and returns it.",114,[[["self"]],["option"]]],[0,"string","openssl","",null,null],[3,"OpensslString","openssl::string","",null,null],[3,"OpensslStringRef","","",null,null],[0,"symm","openssl","High level interface to certain symmetric ciphers.",null,null],[3,"Cipher","openssl::symm","Represents a particular cipher algorithm.",null,null],[3,"Crypter","","Represents a symmetric cipher context.",null,null],[4,"Mode","","",null,null],[13,"Encrypt","","",115,null],[13,"Decrypt","","",115,null],[5,"encrypt","","Encrypts data in one go, and returns the encrypted data.",null,[[["cipher"],["option"]],[["result",["vec","errorstack"]],["errorstack"],["vec",["u8"]]]]],[5,"decrypt","","Decrypts data in one go, and returns the decrypted data.",null,[[["cipher"],["option"]],[["result",["vec","errorstack"]],["errorstack"],["vec",["u8"]]]]],[5,"encrypt_aead","","Like `encrypt`, but for AEAD ciphers such as AES GCM.",null,[[["cipher"],["option"]],[["result",["vec","errorstack"]],["errorstack"],["vec",["u8"]]]]],[5,"decrypt_aead","","Like `decrypt`, but for AEAD ciphers such as AES GCM.",null,[[["cipher"],["option"]],[["result",["vec","errorstack"]],["errorstack"],["vec",["u8"]]]]],[11,"from_nid","","Looks up the cipher for a certain nid.",116,[[["nid"]],[["cipher"],["option",["cipher"]]]]],[11,"aes_128_ecb","","",116,[[],["cipher"]]],[11,"aes_128_cbc","","",116,[[],["cipher"]]],[11,"aes_128_xts","","",116,[[],["cipher"]]],[11,"aes_128_ctr","","",116,[[],["cipher"]]],[11,"aes_128_cfb1","","",116,[[],["cipher"]]],[11,"aes_128_cfb128","","",116,[[],["cipher"]]],[11,"aes_128_cfb8","","",116,[[],["cipher"]]],[11,"aes_128_gcm","","",116,[[],["cipher"]]],[11,"aes_128_ccm","","",116,[[],["cipher"]]],[11,"aes_128_ofb","","",116,[[],["cipher"]]],[11,"aes_192_ecb","","",116,[[],["cipher"]]],[11,"aes_192_cbc","","",116,[[],["cipher"]]],[11,"aes_192_ctr","","",116,[[],["cipher"]]],[11,"aes_192_cfb1","","",116,[[],["cipher"]]],[11,"aes_192_cfb128","","",116,[[],["cipher"]]],[11,"aes_192_cfb8","","",116,[[],["cipher"]]],[11,"aes_192_gcm","","",116,[[],["cipher"]]],[11,"aes_192_ccm","","",116,[[],["cipher"]]],[11,"aes_192_ofb","","",116,[[],["cipher"]]],[11,"aes_256_ecb","","",116,[[],["cipher"]]],[11,"aes_256_cbc","","",116,[[],["cipher"]]],[11,"aes_256_xts","","",116,[[],["cipher"]]],[11,"aes_256_ctr","","",116,[[],["cipher"]]],[11,"aes_256_cfb1","","",116,[[],["cipher"]]],[11,"aes_256_cfb128","","",116,[[],["cipher"]]],[11,"aes_256_cfb8","","",116,[[],["cipher"]]],[11,"aes_256_gcm","","",116,[[],["cipher"]]],[11,"aes_256_ccm","","",116,[[],["cipher"]]],[11,"aes_256_ofb","","",116,[[],["cipher"]]],[11,"bf_cbc","","",116,[[],["cipher"]]],[11,"bf_ecb","","",116,[[],["cipher"]]],[11,"bf_cfb64","","",116,[[],["cipher"]]],[11,"bf_ofb","","",116,[[],["cipher"]]],[11,"des_cbc","","",116,[[],["cipher"]]],[11,"des_ecb","","",116,[[],["cipher"]]],[11,"des_ede3","","",116,[[],["cipher"]]],[11,"des_ede3_cbc","","",116,[[],["cipher"]]],[11,"des_ede3_cfb64","","",116,[[],["cipher"]]],[11,"rc4","","",116,[[],["cipher"]]],[11,"chacha20","","Requires OpenSSL 1.1.0 or newer.",116,[[],["cipher"]]],[11,"chacha20_poly1305","","Requires OpenSSL 1.1.0 or newer.",116,[[],["cipher"]]],[11,"from_ptr","","",116,[[],["cipher"]]],[11,"as_ptr","","",116,[[["self"]]]],[11,"key_len","","Returns the length of keys used with this cipher.",116,[[["self"]],["usize"]]],[11,"iv_len","","Returns the length of the IV used with this cipher, or…",116,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"block_size","","Returns the block size of the cipher.",116,[[["self"]],["usize"]]],[11,"new","","Creates a new `Crypter`. The initialisation vector, `iv`,…",117,[[["mode"],["cipher"],["option"]],[["result",["crypter","errorstack"]],["crypter"],["errorstack"]]]],[11,"pad","","Enables or disables padding.",117,[[["self"],["bool"]]]],[11,"set_tag","","Sets the tag used to authenticate ciphertext in AEAD…",117,[[["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_tag_len","","Sets the length of the authentication tag to generate in…",117,[[["self"],["usize"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_data_len","","Feeds total plaintext length to the cipher.",117,[[["self"],["usize"]],[["errorstack"],["result",["errorstack"]]]]],[11,"aad_update","","Feeds Additional Authenticated Data (AAD) through the…",117,[[["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"update","","Feeds data from `input` through the cipher, writing…",117,[[["self"]],[["errorstack"],["result",["usize","errorstack"]],["usize"]]]],[11,"finalize","","Finishes the encryption/decryption process, writing any…",117,[[["self"]],[["errorstack"],["result",["usize","errorstack"]],["usize"]]]],[11,"get_tag","","Retrieves the authentication tag used to authenticate…",117,[[["self"]],[["errorstack"],["result",["errorstack"]]]]],[0,"version","openssl","",null,null],[5,"number","openssl::version","OPENSSL_VERSION_NUMBER is a numeric release version…",null,[[],["i64"]]],[5,"version","","The text variant of the version number and the release…",null,[[],["str"]]],[5,"c_flags","","The compiler flags set for the compilation process in the…",null,[[],["str"]]],[5,"built_on","","The date of the build process in the form \"built on: ...\"…",null,[[],["str"]]],[5,"platform","","The \"Configure\" target of the library build in the form…",null,[[],["str"]]],[5,"dir","","The \"OPENSSLDIR\" setting of the library build in the form…",null,[[],["str"]]],[0,"x509","openssl","The standard defining the format of public key certificates.",null,null],[3,"X509StoreContext","openssl::x509","An `X509` certificate store context.",null,null],[3,"X509StoreContextRef","","Reference to `X509StoreContext`.",null,null],[3,"X509Builder","","A builder used to construct an `X509`.",null,null],[3,"X509","","An `X509` public key certificate.",null,null],[3,"X509Ref","","Reference to `X509`.",null,null],[3,"X509v3Context","","A context object required to construct certain `X509`…",null,null],[3,"X509Extension","","Permit additional fields to be added to an `X509` v3…",null,null],[3,"X509ExtensionRef","","Reference to `X509Extension`.",null,null],[3,"X509NameBuilder","","A builder used to construct an `X509Name`.",null,null],[3,"X509Name","","The names of an `X509` certificate.",null,null],[3,"X509NameRef","","Reference to `X509Name`.",null,null],[3,"X509NameEntries","","A type to destructure and examine an `X509Name`.",null,null],[3,"X509NameEntry","","A name entry associated with a `X509Name`.",null,null],[3,"X509NameEntryRef","","Reference to `X509NameEntry`.",null,null],[3,"X509ReqBuilder","","A builder used to construct an `X509Req`.",null,null],[3,"X509Req","","An `X509` certificate request.",null,null],[3,"X509ReqRef","","Reference to `X509Req`.",null,null],[3,"X509VerifyResult","","The result of peer certificate verification.",null,null],[3,"GeneralName","","An `X509` certificate alternative names.",null,null],[3,"GeneralNameRef","","Reference to `GeneralName`.",null,null],[3,"X509Algorithm","","An `X509` certificate signature algorithm.",null,null],[3,"X509AlgorithmRef","","Reference to `X509Algorithm`.",null,null],[3,"X509Object","","An `X509` or an X509 certificate revocation list.",null,null],[3,"X509ObjectRef","","Reference to `X509Object`",null,null],[0,"verify","","",null,null],[3,"X509CheckFlags","openssl::x509::verify","Flags used to check an `X509` certificate.",null,null],[3,"X509VerifyParam","","Adjust parameters associated with certificate verification.",null,null],[3,"X509VerifyParamRef","","Reference to `X509VerifyParam`.",null,null],[18,"ALWAYS_CHECK_SUBJECT","","",118,null],[18,"NO_WILDCARDS","","",118,null],[18,"NO_PARTIAL_WILDCARDS","","",118,null],[18,"MULTI_LABEL_WILDCARDS","","",118,null],[18,"SINGLE_LABEL_SUBDOMAINS","","",118,null],[18,"NEVER_CHECK_SUBJECT","","Requires OpenSSL 1.1.0 or newer.",118,null],[18,"FLAG_NO_WILDCARDS","","",118,null],[11,"empty","","Returns an empty set of flags",118,[[],["x509checkflags"]]],[11,"all","","Returns the set containing all flags.",118,[[],["x509checkflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",118,[[["self"]],["c_uint"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",118,[[["c_uint"]],[["x509checkflags"],["option",["x509checkflags"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",118,[[["c_uint"]],["x509checkflags"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",118,[[["c_uint"]],["x509checkflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",118,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",118,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",118,[[["x509checkflags"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",118,[[["x509checkflags"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",118,[[["self"],["x509checkflags"]]]],[11,"remove","","Removes the specified flags in-place.",118,[[["self"],["x509checkflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",118,[[["self"],["x509checkflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",118,[[["self"],["x509checkflags"],["bool"]]]],[11,"set_hostflags","","Set the host flags.",119,[[["self"],["x509checkflags"]]]],[11,"set_host","","Set the expected DNS hostname.",119,[[["str"],["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_ip","","Set the expected IPv4 or IPv6 address.",119,[[["self"],["ipaddr"]],[["errorstack"],["result",["errorstack"]]]]],[0,"extension","openssl::x509","Add extensions to an `X509` certificate or certificate…",null,null],[3,"BasicConstraints","openssl::x509::extension","An extension which indicates whether a certificate is a CA…",null,null],[3,"KeyUsage","","An extension consisting of a list of names of the…",null,null],[3,"ExtendedKeyUsage","","An extension consisting of a list of usages indicating…",null,null],[3,"SubjectKeyIdentifier","","An extension that provides a means of identifying…",null,null],[3,"AuthorityKeyIdentifier","","An extension that provides a means of identifying the…",null,null],[3,"SubjectAlternativeName","","An extension that allows additional identities to be bound…",null,null],[11,"new","","Construct a new `BasicConstraints` extension.",120,[[],["basicconstraints"]]],[11,"critical","","Sets the `critical` flag to `true`. The extension will be…",120,[[["self"]],["basicconstraints"]]],[11,"ca","","Sets the `ca` flag to `true`.",120,[[["self"]],["basicconstraints"]]],[11,"pathlen","","Sets the pathlen to an optional non-negative value. The…",120,[[["self"],["u32"]],["basicconstraints"]]],[11,"build","","Return the `BasicConstraints` extension as an…",120,[[["self"]],[["errorstack"],["result",["x509extension","errorstack"]],["x509extension"]]]],[11,"new","","Construct a new `KeyUsage` extension.",121,[[],["keyusage"]]],[11,"critical","","Sets the `critical` flag to `true`. The extension will be…",121,[[["self"]],["keyusage"]]],[11,"digital_signature","","Sets the `digitalSignature` flag to `true`.",121,[[["self"]],["keyusage"]]],[11,"non_repudiation","","Sets the `nonRepudiation` flag to `true`.",121,[[["self"]],["keyusage"]]],[11,"key_encipherment","","Sets the `keyEncipherment` flag to `true`.",121,[[["self"]],["keyusage"]]],[11,"data_encipherment","","Sets the `dataEncipherment` flag to `true`.",121,[[["self"]],["keyusage"]]],[11,"key_agreement","","Sets the `keyAgreement` flag to `true`.",121,[[["self"]],["keyusage"]]],[11,"key_cert_sign","","Sets the `keyCertSign` flag to `true`.",121,[[["self"]],["keyusage"]]],[11,"crl_sign","","Sets the `cRLSign` flag to `true`.",121,[[["self"]],["keyusage"]]],[11,"encipher_only","","Sets the `encipherOnly` flag to `true`.",121,[[["self"]],["keyusage"]]],[11,"decipher_only","","Sets the `decipherOnly` flag to `true`.",121,[[["self"]],["keyusage"]]],[11,"build","","Return the `KeyUsage` extension as an `X509Extension`.",121,[[["self"]],[["errorstack"],["result",["x509extension","errorstack"]],["x509extension"]]]],[11,"new","","Construct a new `ExtendedKeyUsage` extension.",122,[[],["extendedkeyusage"]]],[11,"critical","","Sets the `critical` flag to `true`. The extension will be…",122,[[["self"]],["extendedkeyusage"]]],[11,"server_auth","","Sets the `serverAuth` flag to `true`.",122,[[["self"]],["extendedkeyusage"]]],[11,"client_auth","","Sets the `clientAuth` flag to `true`.",122,[[["self"]],["extendedkeyusage"]]],[11,"code_signing","","Sets the `codeSigning` flag to `true`.",122,[[["self"]],["extendedkeyusage"]]],[11,"time_stamping","","Sets the `timeStamping` flag to `true`.",122,[[["self"]],["extendedkeyusage"]]],[11,"ms_code_ind","","Sets the `msCodeInd` flag to `true`.",122,[[["self"]],["extendedkeyusage"]]],[11,"ms_code_com","","Sets the `msCodeCom` flag to `true`.",122,[[["self"]],["extendedkeyusage"]]],[11,"ms_ctl_sign","","Sets the `msCTLSign` flag to `true`.",122,[[["self"]],["extendedkeyusage"]]],[11,"ms_sgc","","Sets the `msSGC` flag to `true`.",122,[[["self"]],["extendedkeyusage"]]],[11,"ms_efs","","Sets the `msEFS` flag to `true`.",122,[[["self"]],["extendedkeyusage"]]],[11,"ns_sgc","","Sets the `nsSGC` flag to `true`.",122,[[["self"]],["extendedkeyusage"]]],[11,"other","","Sets a flag not already defined.",122,[[["str"],["self"]],["extendedkeyusage"]]],[11,"build","","Return the `ExtendedKeyUsage` extension as an…",122,[[["self"]],[["errorstack"],["result",["x509extension","errorstack"]],["x509extension"]]]],[11,"new","","Construct a new `SubjectKeyIdentifier` extension.",123,[[],["subjectkeyidentifier"]]],[11,"critical","","Sets the `critical` flag to `true`. The extension will be…",123,[[["self"]],["subjectkeyidentifier"]]],[11,"build","","Return a `SubjectKeyIdentifier` extension as an…",123,[[["x509v3context"],["self"]],[["errorstack"],["result",["x509extension","errorstack"]],["x509extension"]]]],[11,"new","","Construct a new `AuthorityKeyIdentifier` extension.",124,[[],["authoritykeyidentifier"]]],[11,"critical","","Sets the `critical` flag to `true`. The extension will be…",124,[[["self"]],["authoritykeyidentifier"]]],[11,"keyid","","Sets the `keyid` flag.",124,[[["self"],["bool"]],["authoritykeyidentifier"]]],[11,"issuer","","Sets the `issuer` flag.",124,[[["self"],["bool"]],["authoritykeyidentifier"]]],[11,"build","","Return a `AuthorityKeyIdentifier` extension as an…",124,[[["x509v3context"],["self"]],[["errorstack"],["result",["x509extension","errorstack"]],["x509extension"]]]],[11,"new","","Construct a new `SubjectAlternativeName` extension.",125,[[],["subjectalternativename"]]],[11,"critical","","Sets the `critical` flag to `true`. The extension will be…",125,[[["self"]],["subjectalternativename"]]],[11,"email","","Sets the `email` flag.",125,[[["str"],["self"]],["subjectalternativename"]]],[11,"uri","","Sets the `uri` flag.",125,[[["str"],["self"]],["subjectalternativename"]]],[11,"dns","","Sets the `dns` flag.",125,[[["str"],["self"]],["subjectalternativename"]]],[11,"rid","","Sets the `rid` flag.",125,[[["str"],["self"]],["subjectalternativename"]]],[11,"ip","","Sets the `ip` flag.",125,[[["str"],["self"]],["subjectalternativename"]]],[11,"dir_name","","Sets the `dirName` flag.",125,[[["str"],["self"]],["subjectalternativename"]]],[11,"other_name","","Sets the `otherName` flag.",125,[[["str"],["self"]],["subjectalternativename"]]],[11,"build","","Return a `SubjectAlternativeName` extension as an…",125,[[["x509v3context"],["self"]],[["errorstack"],["result",["x509extension","errorstack"]],["x509extension"]]]],[0,"store","openssl::x509","Describe a context in which to verify an `X509` certificate.",null,null],[3,"X509StoreBuilder","openssl::x509::store","A builder type used to construct an `X509Store`.",null,null],[3,"X509StoreBuilderRef","","Reference to an `X509StoreBuilder`.",null,null],[3,"X509Store","","A certificate store to hold trusted `X509` certificates.",null,null],[3,"X509StoreRef","","Reference to an `X509Store`.",null,null],[11,"new","","Returns a builder for a certificate store.",126,[[],[["result",["x509storebuilder","errorstack"]],["errorstack"],["x509storebuilder"]]]],[11,"build","","Constructs the `X509Store`.",126,[[],["x509store"]]],[11,"add_cert","","Adds a certificate to the certificate store.",127,[[["self"],["x509"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_default_paths","","Load certificates from their default locations.",127,[[["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"objects","","Get a reference to the cache of certificates in this store.",128,[[["self"]],["stackref"]]],[11,"ssl_idx","openssl::x509","Returns the index which can be used to obtain a reference…",129,[[],[["errorstack"],["result",["index","errorstack"]],["index",["x509storecontext","sslref"]]]]],[11,"new","","Creates a new `X509StoreContext` instance.",129,[[],[["x509storecontext"],["errorstack"],["result",["x509storecontext","errorstack"]]]]],[11,"ex_data","","Returns application data pertaining to an `X509` store…",130,[[["index",["x509storecontext"]],["x509storecontext"],["self"]],[["t"],["option"]]]],[11,"error","","Returns the error code of the context.",130,[[["self"]],["x509verifyresult"]]],[11,"init","","Initializes this context with the given certificate,…",130,[[["x509ref"],["stackref"],["self"],["x509storeref"],["f"]],[["result",["errorstack"]],["errorstack"]]]],[11,"verify_cert","","Verifies the stored certificate.",130,[[["self"]],[["bool"],["errorstack"],["result",["bool","errorstack"]]]]],[11,"set_error","","Set the error code of the context.",130,[[["self"],["x509verifyresult"]]]],[11,"current_cert","","Returns a reference to the certificate which caused the…",130,[[["self"]],[["x509ref"],["option",["x509ref"]]]]],[11,"error_depth","","Returns a non-negative integer representing the depth in…",130,[[["self"]],["u32"]]],[11,"chain","","Returns a reference to a complete valid `X509` certificate…",130,[[["self"]],[["stackref"],["option",["stackref"]]]]],[11,"new","","Creates a new builder.",131,[[],[["x509builder"],["errorstack"],["result",["x509builder","errorstack"]]]]],[11,"set_not_after","","Sets the notAfter constraint on the certificate.",131,[[["self"],["asn1timeref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_not_before","","Sets the notBefore constraint on the certificate.",131,[[["self"],["asn1timeref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_version","","Sets the version of the certificate.",131,[[["self"],["i32"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_serial_number","","Sets the serial number of the certificate.",131,[[["asn1integerref"],["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_issuer_name","","Sets the issuer name of the certificate.",131,[[["self"],["x509nameref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_subject_name","","Sets the subject name of the certificate.",131,[[["self"],["x509nameref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_pubkey","","Sets the public key associated with the certificate.",131,[[["self"],["pkeyref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"x509v3_context","","Returns a context object which is needed to create certain…",131,[[["confref"],["x509ref"],["option",["x509ref"]],["self"],["option",["confref"]]],["x509v3context"]]],[11,"append_extension","","Adds an X509 extension value to the certificate.",131,[[["self"],["x509extension"]],[["errorstack"],["result",["errorstack"]]]]],[11,"append_extension2","","Adds an X509 extension value to the certificate.",131,[[["self"],["x509extensionref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"sign","","Signs the certificate with a private key.",131,[[["messagedigest"],["self"],["pkeyref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"build","","Consumes the builder, returning the certificate.",131,[[],["x509"]]],[11,"subject_name","","Returns this certificate's subject name.",132,[[["self"]],["x509nameref"]]],[11,"issuer_name","","Returns this certificate's issuer name.",132,[[["self"]],["x509nameref"]]],[11,"subject_alt_names","","Returns this certificate's subject alternative name…",132,[[["self"]],[["stack",["generalname"]],["option",["stack"]]]]],[11,"issuer_alt_names","","Returns this certificate's issuer alternative name…",132,[[["self"]],[["stack",["generalname"]],["option",["stack"]]]]],[11,"public_key","","",132,[[["self"]],[["pkey",["public"]],["errorstack"],["result",["pkey","errorstack"]]]]],[11,"digest","","Returns a digest of the DER representation of the…",132,[[["messagedigest"],["self"]],[["errorstack"],["digestbytes"],["result",["digestbytes","errorstack"]]]]],[11,"fingerprint","","",132,[[["messagedigest"],["self"]],[["result",["vec","errorstack"]],["errorstack"],["vec",["u8"]]]]],[11,"not_after","","Returns the certificate's Not After validity period.",132,[[["self"]],["asn1timeref"]]],[11,"not_before","","Returns the certificate's Not Before validity period.",132,[[["self"]],["asn1timeref"]]],[11,"signature","","Returns the certificate's signature",132,[[["self"]],["asn1bitstringref"]]],[11,"signature_algorithm","","Returns the certificate's signature algorithm.",132,[[["self"]],["x509algorithmref"]]],[11,"ocsp_responders","","Returns the list of OCSP responder URLs specified in the…",132,[[["self"]],[["result",["stack","errorstack"]],["stack",["opensslstring"]],["errorstack"]]]],[11,"issued","","Checks that this certificate issued `subject`.",132,[[["x509ref"],["self"]],["x509verifyresult"]]],[11,"verify","","Check if the certificate is signed using the given public…",132,[[["self"],["pkeyref"]],[["bool"],["errorstack"],["result",["bool","errorstack"]]]]],[11,"serial_number","","Returns this certificate's serial number.",132,[[["self"]],["asn1integerref"]]],[11,"to_pem","","Serializes the certificate into a PEM-encoded X509…",132,[[["self"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"to_der","","Serializes the certificate into a DER-encoded X509…",132,[[["self"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"builder","","Returns a new builder.",133,[[],[["x509builder"],["errorstack"],["result",["x509builder","errorstack"]]]]],[11,"from_pem","","Deserializes a PEM-encoded X509 structure.",133,[[],[["result",["x509","errorstack"]],["x509"],["errorstack"]]]],[11,"from_der","","Deserializes a DER-encoded X509 structure.",133,[[],[["result",["x509","errorstack"]],["x509"],["errorstack"]]]],[11,"stack_from_pem","","Deserializes a list of PEM-formatted certificates.",133,[[],[["result",["vec","errorstack"]],["vec",["x509"]],["errorstack"]]]],[11,"as_ptr","","",134,[[["self"]]]],[11,"new","","Constructs an X509 extension value. See `man…",135,[[["x509v3context"],["option",["x509v3context"]],["str"],["option",["confref"]],["confref"]],[["errorstack"],["result",["x509extension","errorstack"]],["x509extension"]]]],[11,"new_nid","","Constructs an X509 extension value. See `man…",135,[[["x509v3context"],["option",["x509v3context"]],["str"],["nid"],["option",["confref"]],["confref"]],[["errorstack"],["result",["x509extension","errorstack"]],["x509extension"]]]],[11,"new","","Creates a new builder.",136,[[],[["result",["x509namebuilder","errorstack"]],["errorstack"],["x509namebuilder"]]]],[11,"append_entry_by_text","","Add a field entry by str.",136,[[["str"],["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"append_entry_by_nid","","Add a field entry by NID.",136,[[["str"],["self"],["nid"]],[["errorstack"],["result",["errorstack"]]]]],[11,"build","","Return an `X509Name`.",136,[[],["x509name"]]],[11,"builder","","Returns a new builder.",137,[[],[["result",["x509namebuilder","errorstack"]],["errorstack"],["x509namebuilder"]]]],[11,"load_client_ca_file","","Loads subject names from a file containing PEM-formatted…",137,[[["path"],["asref",["path"]]],[["stack",["x509name"]],["result",["stack","errorstack"]],["errorstack"]]]],[11,"entries_by_nid","","Returns the name entries by the nid.",138,[[["nid"],["self"]],["x509nameentries"]]],[11,"entries","","Returns an iterator over all `X509NameEntry` values",138,[[["self"]],["x509nameentries"]]],[11,"data","","Returns the field value of an `X509NameEntry`.",139,[[["self"]],["asn1stringref"]]],[11,"object","","Returns the `Asn1Object` value of an `X509NameEntry`. This…",139,[[["self"]],["asn1objectref"]]],[11,"new","","Returns a builder for a certificate request.",140,[[],[["result",["x509reqbuilder","errorstack"]],["x509reqbuilder"],["errorstack"]]]],[11,"set_version","","Set the numerical value of the version field.",140,[[["self"],["i32"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_subject_name","","Set the issuer name.",140,[[["self"],["x509nameref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"set_pubkey","","Set the public key.",140,[[["self"],["pkeyref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"x509v3_context","","Return an `X509v3Context`. This context object can be used…",140,[[["option",["confref"]],["self"],["confref"]],["x509v3context"]]],[11,"add_extensions","","Permits any number of extension fields to be added to the…",140,[[["stackref"],["self"]],[["errorstack"],["result",["errorstack"]]]]],[11,"sign","","Sign the request using a private key.",140,[[["messagedigest"],["self"],["pkeyref"]],[["errorstack"],["result",["errorstack"]]]]],[11,"build","","Returns the `X509Req`.",140,[[],["x509req"]]],[11,"builder","","A builder for `X509Req`.",141,[[],[["result",["x509reqbuilder","errorstack"]],["x509reqbuilder"],["errorstack"]]]],[11,"from_pem","","Deserializes a PEM-encoded PKCS#10 certificate request…",141,[[],[["x509req"],["result",["x509req","errorstack"]],["errorstack"]]]],[11,"from_der","","Deserializes a DER-encoded PKCS#10 certificate request…",141,[[],[["x509req"],["result",["x509req","errorstack"]],["errorstack"]]]],[11,"to_pem","","Serializes the certificate request to a PEM-encoded…",142,[[["self"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"to_der","","Serializes the certificate request to a DER-encoded…",142,[[["self"]],[["result",["vec","errorstack"]],["vec",["u8"]],["errorstack"]]]],[11,"version","","Returns the numerical value of the version field of the…",142,[[["self"]],["i32"]]],[11,"subject_name","","Returns the subject name of the certificate request.",142,[[["self"]],["x509nameref"]]],[11,"public_key","","Returns the public key of the certificate request.",142,[[["self"]],[["pkey",["public"]],["errorstack"],["result",["pkey","errorstack"]]]]],[11,"verify","","Check if the certificate request is signed using the given…",142,[[["self"],["pkeyref"]],[["bool"],["errorstack"],["result",["bool","errorstack"]]]]],[11,"extensions","","Returns the extensions of the certificate request.",142,[[["self"]],[["result",["stack","errorstack"]],["errorstack"],["stack",["x509extension"]]]]],[11,"from_raw","","Creates an `X509VerifyResult` from a raw error number.",143,[[["c_int"]],["x509verifyresult"]]],[11,"as_raw","","Return the integer representation of an `X509VerifyResult`.",143,[[["self"]],["c_int"]]],[11,"error_string","","Return a human readable error string from the verification…",143,[[["self"]],["str"]]],[18,"OK","","Successful peer certifiate verification.",143,null],[18,"APPLICATION_VERIFICATION","","Application verification failure.",143,null],[11,"email","","Returns the contents of this `GeneralName` if it is an…",144,[[["self"]],[["str"],["option",["str"]]]]],[11,"dnsname","","Returns the contents of this `GeneralName` if it is a…",144,[[["self"]],[["str"],["option",["str"]]]]],[11,"uri","","Returns the contents of this `GeneralName` if it is an…",144,[[["self"]],[["str"],["option",["str"]]]]],[11,"ipaddress","","Returns the contents of this `GeneralName` if it is an…",144,[[["self"]],["option"]]],[11,"object","","Returns the ASN.1 OID of this algorithm.",145,[[["self"]],["asn1objectref"]]],[11,"x509","","",146,[[["self"]],[["x509ref"],["option",["x509ref"]]]]],[11,"from","openssl::aes","",147,[[["t"]],["t"]]],[11,"into","","",147,[[],["u"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","openssl::asn1","",148,[[["t"]],["t"]]],[11,"into","","",148,[[],["u"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[],["u"]]],[11,"to_string","","",149,[[["self"]],["string"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[],["u"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[],["u"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[],["u"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","openssl::bn","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[],["u"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","openssl::cms","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","openssl::conf","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[],["u"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"from","openssl::derive","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","openssl::dh","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","openssl::dsa","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","openssl::ec","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","openssl::ecdsa","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","openssl::envelope","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","openssl::error","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"to_string","","",35,[[["self"]],["string"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"to_string","","",36,[[["self"]],["string"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","openssl::ex_data","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","openssl::hash","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[],["u"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,[[["self"],["t"]]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"from","openssl::nid","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","openssl::ocsp","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[],["u"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[],["u"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[],["u"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[],["u"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"from","openssl::pkcs12","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","openssl::pkcs5","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","openssl::pkcs7","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","openssl::pkey","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[],["u"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[],["u"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[],["u"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"from","openssl::rsa","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","openssl::sha","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","openssl::sign","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","openssl::srtp","",163,[[["t"]],["t"]]],[11,"into","","",163,[[],["u"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"try_into","","",163,[[],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"type_id","","",163,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","openssl::ssl","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"to_string","","",87,[[["self"]],["string"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,[[["self"],["t"]]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,[[["self"],["t"]]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,[[["self"],["t"]]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,[[["self"],["t"]]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,[[["self"],["t"]]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,[[["self"],["t"]]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,[[["self"],["t"]]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[],["u"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"try_into","","",164,[[],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"type_id","","",164,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,[[["self"],["t"]]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,[[["self"],["t"]]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,[[["self"],["t"]]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_string","","",79,[[["self"]],["string"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","openssl::stack","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"into_iter","","",113,[[],["i"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[],["u"]]],[11,"into_iter","","",165,[[],["i"]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"try_into","","",165,[[],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"type_id","","",165,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[],["u"]]],[11,"into_iter","","",166,[[],["i"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[],["u"]]],[11,"into_iter","","",167,[[],["i"]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"try_into","","",167,[[],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"type_id","","",167,[[["self"]],["typeid"]]],[11,"from","openssl::string","",168,[[["t"]],["t"]]],[11,"into","","",168,[[],["u"]]],[11,"to_string","","",168,[[["self"]],["string"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[],["u"]]],[11,"to_string","","",169,[[["self"]],["string"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"from","openssl::symm","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,[[["self"],["t"]]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,[[["self"],["t"]]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"from","openssl::x509","",129,[[["t"]],["t"]]],[11,"into","","",129,[[],["u"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[],["u"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[],["u"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,[[["self"],["t"]]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,[[["self"],["t"]]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[],["u"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[],["u"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[],["u"]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[],["u"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[],["u"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[],["u"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[],["u"]]],[11,"into_iter","","",171,[[],["i"]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"try_into","","",171,[[],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"type_id","","",171,[[["self"]],["typeid"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[],["u"]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"try_into","","",172,[[],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"type_id","","",172,[[["self"]],["typeid"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[],["u"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[],["u"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[],["u"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[],["u"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,[[["self"],["t"]]]],[11,"to_string","","",143,[[["self"]],["string"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[],["u"]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[],["u"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[],["u"]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[],["u"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[],["u"]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"try_into","","",175,[[],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"type_id","","",175,[[["self"]],["typeid"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[],["u"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"from","openssl::x509::verify","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,[[["self"],["t"]]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[],["u"]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"try_into","","",176,[[],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"type_id","","",176,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"from","openssl::x509::extension","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[],["u"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[],["u"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[],["u"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"from","openssl::x509::store","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[],["u"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[],["u"]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"try_into","","",177,[[],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"type_id","","",177,[[["self"]],["typeid"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[],["u"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"drop","openssl::asn1","",148,[[["self"]]]],[11,"drop","","",3,[[["self"]]]],[11,"drop","","",150,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","","",151,[[["self"]]]],[11,"drop","","",152,[[["self"]]]],[11,"drop","openssl::bn","",10,[[["self"]]]],[11,"drop","","",12,[[["self"]]]],[11,"drop","openssl::cms","",15,[[["self"]]]],[11,"drop","openssl::conf","",17,[[["self"]]]],[11,"drop","openssl::dh","",20,[[["self"]]]],[11,"drop","openssl::dsa","",22,[[["self"]]]],[11,"drop","openssl::ec","",25,[[["self"]]]],[11,"drop","","",28,[[["self"]]]],[11,"drop","","",30,[[["self"]]]],[11,"drop","openssl::ecdsa","",31,[[["self"]]]],[11,"drop","openssl::envelope","",33,[[["self"]]]],[11,"drop","","",34,[[["self"]]]],[11,"drop","openssl::hash","",39,[[["self"]]]],[11,"drop","openssl::ocsp","",156,[[["self"]]]],[11,"drop","","",48,[[["self"]]]],[11,"drop","","",49,[[["self"]]]],[11,"drop","","",51,[[["self"]]]],[11,"drop","","",158,[[["self"]]]],[11,"drop","openssl::pkcs12","",55,[[["self"]]]],[11,"drop","openssl::pkcs7","",59,[[["self"]]]],[11,"drop","openssl::pkey","",63,[[["self"]]]],[11,"drop","openssl::rsa","",66,[[["self"]]]],[11,"drop","openssl::sign","",74,[[["self"]]]],[11,"drop","","",75,[[["self"]]]],[11,"drop","openssl::srtp","",163,[[["self"]]]],[11,"drop","openssl::ssl","",101,[[["self"]]]],[11,"drop","","",104,[[["self"]]]],[11,"drop","","",106,[[["self"]]]],[11,"drop","","",109,[[["self"]]]],[11,"drop","openssl::stack","",113,[[["self"]]]],[11,"drop","","",165,[[["self"]]]],[11,"drop","openssl::string","",168,[[["self"]]]],[11,"drop","openssl::symm","",117,[[["self"]]]],[11,"drop","openssl::x509::verify","",176,[[["self"]]]],[11,"drop","openssl::x509::store","",126,[[["self"]]]],[11,"drop","","",177,[[["self"]]]],[11,"drop","openssl::x509","",129,[[["self"]]]],[11,"drop","","",133,[[["self"]]]],[11,"drop","","",135,[[["self"]]]],[11,"drop","","",137,[[["self"]]]],[11,"drop","","",172,[[["self"]]]],[11,"drop","","",141,[[["self"]]]],[11,"drop","","",173,[[["self"]]]],[11,"drop","","",174,[[["self"]]]],[11,"drop","","",175,[[["self"]]]],[11,"as_ref","openssl::asn1","",148,[[["self"]],["asn1generalizedtimeref"]]],[11,"as_ref","","",3,[[["self"]],["asn1timeref"]]],[11,"as_ref","","",150,[[["self"]],["asn1stringref"]]],[11,"as_ref","","",5,[[["self"]],["asn1integerref"]]],[11,"as_ref","","",151,[[["self"]],["asn1bitstringref"]]],[11,"as_ref","","",152,[[["self"]],["asn1objectref"]]],[11,"as_ref","openssl::bn","",10,[[["self"]],["bignumcontextref"]]],[11,"as_ref","","",12,[[["self"]],["bignumref"]]],[11,"as_ref","openssl::cms","",15,[[["self"]],["cmscontentinforef"]]],[11,"as_ref","openssl::conf","",17,[[["self"]],["confref"]]],[11,"as_ref","openssl::dh","",20,[[["self"]],["dhref"]]],[11,"as_ref","openssl::dsa","",22,[[["self"]],["dsaref"]]],[11,"as_ref","openssl::ec","",25,[[["self"]],["ecgroupref"]]],[11,"as_ref","","",28,[[["self"]],["ecpointref"]]],[11,"as_ref","","",30,[[["self"]],["eckeyref"]]],[11,"as_ref","openssl::ecdsa","",31,[[["self"]],["ecdsasigref"]]],[11,"as_ref","openssl::hash","",155,[[["self"]]]],[11,"as_ref","openssl::ocsp","",156,[[["self"]],["ocspbasicresponseref"]]],[11,"as_ref","","",48,[[["self"]],["ocspcertidref"]]],[11,"as_ref","","",49,[[["self"]],["ocspresponseref"]]],[11,"as_ref","","",51,[[["self"]],["ocsprequestref"]]],[11,"as_ref","","",158,[[["self"]],["ocsponereqref"]]],[11,"as_ref","openssl::pkcs12","",55,[[["self"]],["pkcs12ref"]]],[11,"as_ref","openssl::pkcs7","",59,[[["self"]],["pkcs7ref"]]],[11,"as_ref","openssl::pkey","",63,[[["self"]],["pkeyref"]]],[11,"as_ref","openssl::rsa","",66,[[["self"]],["rsaref"]]],[11,"as_ref","openssl::srtp","",163,[[["self"]],["srtpprotectionprofileref"]]],[11,"as_ref","openssl::ssl","",101,[[["self"]],["sslcontextref"]]],[11,"as_ref","","",104,[[["self"]],["sslsessionref"]]],[11,"as_ref","","",106,[[["self"]],["sslref"]]],[11,"as_ref","openssl::stack","",113,[[["self"]],["stackref"]]],[11,"as_ref","openssl::string","",168,[[["self"]],["opensslstringref"]]],[11,"as_ref","","",168,[[["self"]],["str"]]],[11,"as_ref","","",168,[[["self"]]]],[11,"as_ref","","",169,[[["self"]],["str"]]],[11,"as_ref","","",169,[[["self"]]]],[11,"as_ref","openssl::x509::verify","",176,[[["self"]],["x509verifyparamref"]]],[11,"as_ref","openssl::x509::store","",126,[[["self"]],["x509storebuilderref"]]],[11,"as_ref","","",177,[[["self"]],["x509storeref"]]],[11,"as_ref","openssl::x509","",129,[[["self"]],["x509storecontextref"]]],[11,"as_ref","","",133,[[["self"]],["x509ref"]]],[11,"as_ref","","",132,[[["self"]],["x509ref"]]],[11,"as_ref","","",135,[[["self"]],["x509extensionref"]]],[11,"as_ref","","",137,[[["self"]],["x509nameref"]]],[11,"as_ref","","",172,[[["self"]],["x509nameentryref"]]],[11,"as_ref","","",141,[[["self"]],["x509reqref"]]],[11,"as_ref","","",173,[[["self"]],["generalnameref"]]],[11,"as_ref","","",174,[[["self"]],["x509algorithmref"]]],[11,"as_ref","","",175,[[["self"]],["x509objectref"]]],[11,"from","openssl::ssl","",87,[[["errorstack"]],["error"]]],[11,"from","","",79,[[["errorstack"]],["handshakeerror"]]],[11,"next_back","openssl::stack","",165,[[["self"]],["option"]]],[11,"next_back","","",166,[[["self"]],["option"]]],[11,"next_back","","",167,[[["self"]],["option"]]],[11,"extend","openssl::cms","",13,[[["self"],["intoiterator"]]]],[11,"extend","openssl::ocsp","",43,[[["self"],["intoiterator"]]]],[11,"extend","openssl::pkcs7","",58,[[["self"],["intoiterator"]]]],[11,"extend","openssl::ssl","",88,[[["self"],["intoiterator"]]]],[11,"extend","","",89,[[["intoiterator"],["self"]]]],[11,"extend","","",91,[[["self"],["intoiterator"]]]],[11,"extend","","",92,[[["self"],["intoiterator"]]]],[11,"extend","","",111,[[["intoiterator"],["self"]]]],[11,"extend","openssl::x509::verify","",118,[[["self"],["intoiterator"]]]],[11,"into_iter","openssl::stack","",113,[[],["intoiter"]]],[11,"next","","",165,[[["self"]],["option"]]],[11,"size_hint","","",165,[[["self"]]]],[11,"next","","",166,[[["self"]],["option"]]],[11,"size_hint","","",166,[[["self"]]]],[11,"next","","",167,[[["self"]],["option"]]],[11,"size_hint","","",167,[[["self"]]]],[11,"next","openssl::x509","",171,[[["self"]],[["x509nameentryref"],["option",["x509nameentryref"]]]]],[11,"clone","openssl::asn1","",1,[[["self"]],["timediff"]]],[11,"clone","openssl::cms","",13,[[["self"]],["cmsoptions"]]],[11,"clone","openssl::dsa","",22,[[["self"]],["dsa"]]],[11,"clone","openssl::ec","",23,[[["self"]],["pointconversionform"]]],[11,"clone","","",24,[[["self"]],["asn1flag"]]],[11,"clone","","",30,[[["self"]],["eckey"]]],[11,"clone","openssl::error","",35,[[["self"]],["errorstack"]]],[11,"clone","","",36,[[["self"]],["error"]]],[11,"clone","openssl::ex_data","",37,[[["self"]],["index"]]],[11,"clone","openssl::hash","",38,[[["self"]],["messagedigest"]]],[11,"clone","","",39,[[["self"]],["hasher"]]],[11,"clone","","",155,[[["self"]],["digestbytes"]]],[11,"clone","openssl::nid","",41,[[["self"]],["nid"]]],[11,"clone","openssl::ocsp","",43,[[["self"]],["ocspflag"]]],[11,"clone","","",44,[[["self"]],["ocspresponsestatus"]]],[11,"clone","","",45,[[["self"]],["ocspcertstatus"]]],[11,"clone","","",46,[[["self"]],["ocsprevokedstatus"]]],[11,"clone","openssl::pkcs5","",57,[[["self"]],["keyivpair"]]],[11,"clone","openssl::pkcs7","",58,[[["self"]],["pkcs7flags"]]],[11,"clone","openssl::pkey","",61,[[["self"]],["id"]]],[11,"clone","","",63,[[["self"]],["pkey"]]],[11,"clone","openssl::rsa","",64,[[["self"]],["padding"]]],[11,"clone","","",66,[[["self"]],["rsa"]]],[11,"clone","openssl::sha","",68,[[["self"]],["sha1"]]],[11,"clone","","",69,[[["self"]],["sha224"]]],[11,"clone","","",70,[[["self"]],["sha256"]]],[11,"clone","","",71,[[["self"]],["sha384"]]],[11,"clone","","",72,[[["self"]],["sha512"]]],[11,"clone","openssl::srtp","",77,[[["self"]],["srtpprofileid"]]],[11,"clone","openssl::ssl","",81,[[["self"]],["sslconnector"]]],[11,"clone","","",84,[[["self"]],["sslacceptor"]]],[11,"clone","","",86,[[["self"]],["errorcode"]]],[11,"clone","","",88,[[["self"]],["ssloptions"]]],[11,"clone","","",89,[[["self"]],["sslmode"]]],[11,"clone","","",90,[[["self"]],["sslmethod"]]],[11,"clone","","",91,[[["self"]],["sslverifymode"]]],[11,"clone","","",92,[[["self"]],["sslsessioncachemode"]]],[11,"clone","","",93,[[["self"]],["sslfiletype"]]],[11,"clone","","",94,[[["self"]],["statustype"]]],[11,"clone","","",95,[[["self"]],["nametype"]]],[11,"clone","","",96,[[["self"]],["snierror"]]],[11,"clone","","",97,[[["self"]],["sslalert"]]],[11,"clone","","",98,[[["self"]],["alpnerror"]]],[11,"clone","","",99,[[["self"]],["sslversion"]]],[11,"clone","","",101,[[["self"]],["self"]]],[11,"clone","","",104,[[["self"]],["sslsession"]]],[11,"clone","","",80,[[["self"]],["shutdownresult"]]],[11,"clone","","",111,[[["self"]],["shutdownstate"]]],[11,"clone","openssl::symm","",115,[[["self"]],["mode"]]],[11,"clone","","",116,[[["self"]],["cipher"]]],[11,"clone","openssl::x509::verify","",118,[[["self"]],["x509checkflags"]]],[11,"clone","openssl::x509","",133,[[["self"]],["x509"]]],[11,"clone","","",143,[[["self"]],["x509verifyresult"]]],[11,"cmp","openssl::bn","",11,[[["bignumref"],["self"]],["ordering"]]],[11,"cmp","","",12,[[["self"],["bignum"]],["ordering"]]],[11,"cmp","openssl::cms","",13,[[["cmsoptions"],["self"]],["ordering"]]],[11,"cmp","openssl::ocsp","",43,[[["ocspflag"],["self"]],["ordering"]]],[11,"cmp","openssl::pkcs7","",58,[[["self"],["pkcs7flags"]],["ordering"]]],[11,"cmp","openssl::ssl","",88,[[["ssloptions"],["self"]],["ordering"]]],[11,"cmp","","",89,[[["sslmode"],["self"]],["ordering"]]],[11,"cmp","","",91,[[["sslverifymode"],["self"]],["ordering"]]],[11,"cmp","","",92,[[["self"],["sslsessioncachemode"]],["ordering"]]],[11,"cmp","","",111,[[["self"],["shutdownstate"]],["ordering"]]],[11,"cmp","openssl::x509::verify","",118,[[["x509checkflags"],["self"]],["ordering"]]],[11,"eq","openssl::asn1","",1,[[["self"],["timediff"]],["bool"]]],[11,"ne","","",1,[[["self"],["timediff"]],["bool"]]],[11,"eq","","",2,[[["self"],["asn1timeref"]],["bool"]]],[11,"eq","","",2,[[["self"],["asn1time"]],["bool"]]],[11,"eq","","",3,[[["self"],["asn1time"]],["bool"]]],[11,"eq","","",3,[[["self"],["asn1timeref"]],["bool"]]],[11,"eq","","",3,[[["self"],["asn1timeref"]],["bool"]]],[11,"eq","openssl::bn","",11,[[["bignumref"],["self"]],["bool"]]],[11,"eq","","",11,[[["self"],["bignum"]],["bool"]]],[11,"eq","","",12,[[["self"],["bignum"]],["bool"]]],[11,"eq","","",12,[[["bignumref"],["self"]],["bool"]]],[11,"eq","openssl::cms","",13,[[["cmsoptions"],["self"]],["bool"]]],[11,"ne","","",13,[[["cmsoptions"],["self"]],["bool"]]],[11,"eq","openssl::hash","",38,[[["self"],["messagedigest"]],["bool"]]],[11,"ne","","",38,[[["self"],["messagedigest"]],["bool"]]],[11,"eq","openssl::nid","",41,[[["nid"],["self"]],["bool"]]],[11,"ne","","",41,[[["nid"],["self"]],["bool"]]],[11,"eq","openssl::ocsp","",43,[[["ocspflag"],["self"]],["bool"]]],[11,"ne","","",43,[[["ocspflag"],["self"]],["bool"]]],[11,"eq","","",44,[[["ocspresponsestatus"],["self"]],["bool"]]],[11,"ne","","",44,[[["ocspresponsestatus"],["self"]],["bool"]]],[11,"eq","","",45,[[["ocspcertstatus"],["self"]],["bool"]]],[11,"ne","","",45,[[["ocspcertstatus"],["self"]],["bool"]]],[11,"eq","","",46,[[["self"],["ocsprevokedstatus"]],["bool"]]],[11,"ne","","",46,[[["self"],["ocsprevokedstatus"]],["bool"]]],[11,"eq","openssl::pkcs5","",57,[[["self"],["keyivpair"]],["bool"]]],[11,"ne","","",57,[[["self"],["keyivpair"]],["bool"]]],[11,"eq","openssl::pkcs7","",58,[[["self"],["pkcs7flags"]],["bool"]]],[11,"ne","","",58,[[["self"],["pkcs7flags"]],["bool"]]],[11,"eq","openssl::pkey","",61,[[["self"],["id"]],["bool"]]],[11,"ne","","",61,[[["self"],["id"]],["bool"]]],[11,"eq","openssl::rsa","",64,[[["self"],["padding"]],["bool"]]],[11,"ne","","",64,[[["self"],["padding"]],["bool"]]],[11,"eq","openssl::srtp","",77,[[["self"],["srtpprofileid"]],["bool"]]],[11,"ne","","",77,[[["self"],["srtpprofileid"]],["bool"]]],[11,"eq","openssl::ssl","",86,[[["self"],["errorcode"]],["bool"]]],[11,"ne","","",86,[[["self"],["errorcode"]],["bool"]]],[11,"eq","","",88,[[["ssloptions"],["self"]],["bool"]]],[11,"ne","","",88,[[["ssloptions"],["self"]],["bool"]]],[11,"eq","","",89,[[["sslmode"],["self"]],["bool"]]],[11,"ne","","",89,[[["sslmode"],["self"]],["bool"]]],[11,"eq","","",91,[[["sslverifymode"],["self"]],["bool"]]],[11,"ne","","",91,[[["sslverifymode"],["self"]],["bool"]]],[11,"eq","","",92,[[["self"],["sslsessioncachemode"]],["bool"]]],[11,"ne","","",92,[[["self"],["sslsessioncachemode"]],["bool"]]],[11,"eq","","",96,[[["snierror"],["self"]],["bool"]]],[11,"ne","","",96,[[["snierror"],["self"]],["bool"]]],[11,"eq","","",97,[[["sslalert"],["self"]],["bool"]]],[11,"ne","","",97,[[["sslalert"],["self"]],["bool"]]],[11,"eq","","",98,[[["alpnerror"],["self"]],["bool"]]],[11,"ne","","",98,[[["alpnerror"],["self"]],["bool"]]],[11,"eq","","",99,[[["self"],["sslversion"]],["bool"]]],[11,"ne","","",99,[[["self"],["sslversion"]],["bool"]]],[11,"eq","","",80,[[["self"],["shutdownresult"]],["bool"]]],[11,"eq","","",111,[[["self"],["shutdownstate"]],["bool"]]],[11,"ne","","",111,[[["self"],["shutdownstate"]],["bool"]]],[11,"eq","openssl::symm","",116,[[["self"],["cipher"]],["bool"]]],[11,"ne","","",116,[[["self"],["cipher"]],["bool"]]],[11,"eq","openssl::x509::verify","",118,[[["x509checkflags"],["self"]],["bool"]]],[11,"ne","","",118,[[["x509checkflags"],["self"]],["bool"]]],[11,"eq","openssl::x509","",143,[[["x509verifyresult"],["self"]],["bool"]]],[11,"ne","","",143,[[["x509verifyresult"],["self"]],["bool"]]],[11,"partial_cmp","openssl::asn1","",2,[[["self"],["asn1timeref"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",2,[[["self"],["asn1time"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",3,[[["self"],["asn1time"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",3,[[["self"],["asn1timeref"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",3,[[["self"],["asn1timeref"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","openssl::bn","",11,[[["bignumref"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",11,[[["self"],["bignum"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",12,[[["self"],["bignum"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",12,[[["bignumref"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","openssl::cms","",13,[[["cmsoptions"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",13,[[["cmsoptions"],["self"]],["bool"]]],[11,"le","","",13,[[["cmsoptions"],["self"]],["bool"]]],[11,"gt","","",13,[[["cmsoptions"],["self"]],["bool"]]],[11,"ge","","",13,[[["cmsoptions"],["self"]],["bool"]]],[11,"partial_cmp","openssl::ocsp","",43,[[["ocspflag"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",43,[[["ocspflag"],["self"]],["bool"]]],[11,"le","","",43,[[["ocspflag"],["self"]],["bool"]]],[11,"gt","","",43,[[["ocspflag"],["self"]],["bool"]]],[11,"ge","","",43,[[["ocspflag"],["self"]],["bool"]]],[11,"partial_cmp","openssl::pkcs7","",58,[[["self"],["pkcs7flags"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",58,[[["self"],["pkcs7flags"]],["bool"]]],[11,"le","","",58,[[["self"],["pkcs7flags"]],["bool"]]],[11,"gt","","",58,[[["self"],["pkcs7flags"]],["bool"]]],[11,"ge","","",58,[[["self"],["pkcs7flags"]],["bool"]]],[11,"partial_cmp","openssl::ssl","",88,[[["ssloptions"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",88,[[["ssloptions"],["self"]],["bool"]]],[11,"le","","",88,[[["ssloptions"],["self"]],["bool"]]],[11,"gt","","",88,[[["ssloptions"],["self"]],["bool"]]],[11,"ge","","",88,[[["ssloptions"],["self"]],["bool"]]],[11,"partial_cmp","","",89,[[["sslmode"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",89,[[["sslmode"],["self"]],["bool"]]],[11,"le","","",89,[[["sslmode"],["self"]],["bool"]]],[11,"gt","","",89,[[["sslmode"],["self"]],["bool"]]],[11,"ge","","",89,[[["sslmode"],["self"]],["bool"]]],[11,"partial_cmp","","",91,[[["sslverifymode"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",91,[[["sslverifymode"],["self"]],["bool"]]],[11,"le","","",91,[[["sslverifymode"],["self"]],["bool"]]],[11,"gt","","",91,[[["sslverifymode"],["self"]],["bool"]]],[11,"ge","","",91,[[["sslverifymode"],["self"]],["bool"]]],[11,"partial_cmp","","",92,[[["self"],["sslsessioncachemode"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",92,[[["self"],["sslsessioncachemode"]],["bool"]]],[11,"le","","",92,[[["self"],["sslsessioncachemode"]],["bool"]]],[11,"gt","","",92,[[["self"],["sslsessioncachemode"]],["bool"]]],[11,"ge","","",92,[[["self"],["sslsessioncachemode"]],["bool"]]],[11,"partial_cmp","","",111,[[["self"],["shutdownstate"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",111,[[["self"],["shutdownstate"]],["bool"]]],[11,"le","","",111,[[["self"],["shutdownstate"]],["bool"]]],[11,"gt","","",111,[[["self"],["shutdownstate"]],["bool"]]],[11,"ge","","",111,[[["self"],["shutdownstate"]],["bool"]]],[11,"partial_cmp","openssl::x509::verify","",118,[[["x509checkflags"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",118,[[["x509checkflags"],["self"]],["bool"]]],[11,"le","","",118,[[["x509checkflags"],["self"]],["bool"]]],[11,"gt","","",118,[[["x509checkflags"],["self"]],["bool"]]],[11,"ge","","",118,[[["x509checkflags"],["self"]],["bool"]]],[11,"to_owned","openssl::dsa","",21,[[["self"]],["dsa"]]],[11,"to_owned","openssl::ec","",29,[[["self"]],["eckey"]]],[11,"to_owned","openssl::pkey","",62,[[["self"]],["pkey"]]],[11,"to_owned","openssl::rsa","",65,[[["self"]],["rsa"]]],[11,"to_owned","openssl::ssl","",105,[[["self"]],["sslsession"]]],[11,"to_owned","openssl::x509","",132,[[["self"]],["x509"]]],[11,"deref","openssl::asn1","",148,[[["self"]],["asn1generalizedtimeref"]]],[11,"deref","","",3,[[["self"]],["asn1timeref"]]],[11,"deref","","",150,[[["self"]],["asn1stringref"]]],[11,"deref","","",5,[[["self"]],["asn1integerref"]]],[11,"deref","","",151,[[["self"]],["asn1bitstringref"]]],[11,"deref","","",152,[[["self"]],["asn1objectref"]]],[11,"deref","openssl::bn","",10,[[["self"]],["bignumcontextref"]]],[11,"deref","","",12,[[["self"]],["bignumref"]]],[11,"deref","openssl::cms","",15,[[["self"]],["cmscontentinforef"]]],[11,"deref","openssl::conf","",17,[[["self"]],["confref"]]],[11,"deref","openssl::dh","",20,[[["self"]],["dhref"]]],[11,"deref","openssl::dsa","",22,[[["self"]],["dsaref"]]],[11,"deref","openssl::ec","",25,[[["self"]],["ecgroupref"]]],[11,"deref","","",28,[[["self"]],["ecpointref"]]],[11,"deref","","",30,[[["self"]],["eckeyref"]]],[11,"deref","openssl::ecdsa","",31,[[["self"]],["ecdsasigref"]]],[11,"deref","openssl::hash","",155,[[["self"]]]],[11,"deref","openssl::ocsp","",156,[[["self"]],["ocspbasicresponseref"]]],[11,"deref","","",48,[[["self"]],["ocspcertidref"]]],[11,"deref","","",49,[[["self"]],["ocspresponseref"]]],[11,"deref","","",51,[[["self"]],["ocsprequestref"]]],[11,"deref","","",158,[[["self"]],["ocsponereqref"]]],[11,"deref","openssl::pkcs12","",55,[[["self"]],["pkcs12ref"]]],[11,"deref","openssl::pkcs7","",59,[[["self"]],["pkcs7ref"]]],[11,"deref","openssl::pkey","",63,[[["self"]],["pkeyref"]]],[11,"deref","openssl::rsa","",66,[[["self"]],["rsaref"]]],[11,"deref","openssl::srtp","",163,[[["self"]],["srtpprotectionprofileref"]]],[11,"deref","openssl::ssl","",82,[[["self"]],["sslcontextbuilder"]]],[11,"deref","","",83,[[["self"]],["sslref"]]],[11,"deref","","",85,[[["self"]],["sslcontextbuilder"]]],[11,"deref","","",101,[[["self"]],["sslcontextref"]]],[11,"deref","","",164,[[["self"]],["sslcipherref"]]],[11,"deref","","",104,[[["self"]],["sslsessionref"]]],[11,"deref","","",106,[[["self"]],["sslref"]]],[11,"deref","openssl::stack","",113,[[["self"]],["stackref"]]],[11,"deref","openssl::string","",168,[[["self"]],["opensslstringref"]]],[11,"deref","","",169,[[["self"]],["str"]]],[11,"deref","openssl::x509::verify","",176,[[["self"]],["x509verifyparamref"]]],[11,"deref","openssl::x509::store","",126,[[["self"]],["x509storebuilderref"]]],[11,"deref","","",177,[[["self"]],["x509storeref"]]],[11,"deref","openssl::x509","",129,[[["self"]],["x509storecontextref"]]],[11,"deref","","",133,[[["self"]],["x509ref"]]],[11,"deref","","",135,[[["self"]],["x509extensionref"]]],[11,"deref","","",137,[[["self"]],["x509nameref"]]],[11,"deref","","",172,[[["self"]],["x509nameentryref"]]],[11,"deref","","",141,[[["self"]],["x509reqref"]]],[11,"deref","","",173,[[["self"]],["generalnameref"]]],[11,"deref","","",174,[[["self"]],["x509algorithmref"]]],[11,"deref","","",175,[[["self"]],["x509objectref"]]],[11,"deref_mut","openssl::asn1","",148,[[["self"]],["asn1generalizedtimeref"]]],[11,"deref_mut","","",3,[[["self"]],["asn1timeref"]]],[11,"deref_mut","","",150,[[["self"]],["asn1stringref"]]],[11,"deref_mut","","",5,[[["self"]],["asn1integerref"]]],[11,"deref_mut","","",151,[[["self"]],["asn1bitstringref"]]],[11,"deref_mut","","",152,[[["self"]],["asn1objectref"]]],[11,"deref_mut","openssl::bn","",10,[[["self"]],["bignumcontextref"]]],[11,"deref_mut","","",12,[[["self"]],["bignumref"]]],[11,"deref_mut","openssl::cms","",15,[[["self"]],["cmscontentinforef"]]],[11,"deref_mut","openssl::conf","",17,[[["self"]],["confref"]]],[11,"deref_mut","openssl::dh","",20,[[["self"]],["dhref"]]],[11,"deref_mut","openssl::dsa","",22,[[["self"]],["dsaref"]]],[11,"deref_mut","openssl::ec","",25,[[["self"]],["ecgroupref"]]],[11,"deref_mut","","",28,[[["self"]],["ecpointref"]]],[11,"deref_mut","","",30,[[["self"]],["eckeyref"]]],[11,"deref_mut","openssl::ecdsa","",31,[[["self"]],["ecdsasigref"]]],[11,"deref_mut","openssl::hash","",155,[[["self"]]]],[11,"deref_mut","openssl::ocsp","",156,[[["self"]],["ocspbasicresponseref"]]],[11,"deref_mut","","",48,[[["self"]],["ocspcertidref"]]],[11,"deref_mut","","",49,[[["self"]],["ocspresponseref"]]],[11,"deref_mut","","",51,[[["self"]],["ocsprequestref"]]],[11,"deref_mut","","",158,[[["self"]],["ocsponereqref"]]],[11,"deref_mut","openssl::pkcs12","",55,[[["self"]],["pkcs12ref"]]],[11,"deref_mut","openssl::pkcs7","",59,[[["self"]],["pkcs7ref"]]],[11,"deref_mut","openssl::pkey","",63,[[["self"]],["pkeyref"]]],[11,"deref_mut","openssl::rsa","",66,[[["self"]],["rsaref"]]],[11,"deref_mut","openssl::srtp","",163,[[["self"]],["srtpprotectionprofileref"]]],[11,"deref_mut","openssl::ssl","",82,[[["self"]],["sslcontextbuilder"]]],[11,"deref_mut","","",83,[[["self"]],["sslref"]]],[11,"deref_mut","","",85,[[["self"]],["sslcontextbuilder"]]],[11,"deref_mut","","",101,[[["self"]],["sslcontextref"]]],[11,"deref_mut","","",164,[[["self"]],["sslcipherref"]]],[11,"deref_mut","","",104,[[["self"]],["sslsessionref"]]],[11,"deref_mut","","",106,[[["self"]],["sslref"]]],[11,"deref_mut","openssl::stack","",113,[[["self"]],["stackref"]]],[11,"deref_mut","openssl::string","",168,[[["self"]],["opensslstringref"]]],[11,"deref_mut","openssl::x509::verify","",176,[[["self"]],["x509verifyparamref"]]],[11,"deref_mut","openssl::x509::store","",126,[[["self"]],["x509storebuilderref"]]],[11,"deref_mut","","",177,[[["self"]],["x509storeref"]]],[11,"deref_mut","openssl::x509","",129,[[["self"]],["x509storecontextref"]]],[11,"deref_mut","","",133,[[["self"]],["x509ref"]]],[11,"deref_mut","","",135,[[["self"]],["x509extensionref"]]],[11,"deref_mut","","",137,[[["self"]],["x509nameref"]]],[11,"deref_mut","","",172,[[["self"]],["x509nameentryref"]]],[11,"deref_mut","","",141,[[["self"]],["x509reqref"]]],[11,"deref_mut","","",173,[[["self"]],["generalnameref"]]],[11,"deref_mut","","",174,[[["self"]],["x509algorithmref"]]],[11,"deref_mut","","",175,[[["self"]],["x509objectref"]]],[11,"fmt","openssl::aes","",147,[[["formatter"],["self"]],["result"]]],[11,"fmt","openssl::asn1","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","openssl::bn","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","openssl::cms","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::dsa","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","openssl::ec","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","openssl::error","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","openssl::hash","",155,[[["formatter"],["self"]],["result"]]],[11,"fmt","openssl::nid","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","openssl::ocsp","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","openssl::pkcs5","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","openssl::pkcs7","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::pkey","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","openssl::rsa","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","openssl::srtp","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","openssl::ssl","",86,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",87,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",97,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",98,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",99,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",101,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",106,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",107,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",108,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",109,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::string","",168,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",169,[[["formatter"],["self"]],["result"]]],[11,"fmt","openssl::x509::verify","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::x509","",143,[[["formatter"],["self"]],["result"]]],[11,"fmt","openssl::asn1","",149,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","openssl::bn","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","openssl::error","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","openssl::ssl","",87,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","openssl::string","",168,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",169,[[["formatter"],["self"]],["result"]]],[11,"fmt","openssl::x509","",143,[[["formatter"],["self"]],["result"]]],[11,"sub","openssl::cms","Returns the set difference of the two sets of flags.",13,[[["cmsoptions"]],["cmsoptions"]]],[11,"sub","openssl::ocsp","Returns the set difference of the two sets of flags.",43,[[["ocspflag"]],["ocspflag"]]],[11,"sub","openssl::pkcs7","Returns the set difference of the two sets of flags.",58,[[["pkcs7flags"]],["pkcs7flags"]]],[11,"sub","openssl::ssl","Returns the set difference of the two sets of flags.",88,[[["ssloptions"]],["ssloptions"]]],[11,"sub","","Returns the set difference of the two sets of flags.",89,[[["sslmode"]],["sslmode"]]],[11,"sub","","Returns the set difference of the two sets of flags.",91,[[["sslverifymode"]],["sslverifymode"]]],[11,"sub","","Returns the set difference of the two sets of flags.",92,[[["sslsessioncachemode"]],["sslsessioncachemode"]]],[11,"sub","","Returns the set difference of the two sets of flags.",111,[[["shutdownstate"]],["shutdownstate"]]],[11,"sub","openssl::x509::verify","Returns the set difference of the two sets of flags.",118,[[["x509checkflags"]],["x509checkflags"]]],[11,"neg","openssl::bn","",12,[[],["bignum"]]],[11,"sub_assign","openssl::cms","Disables all flags enabled in the set.",13,[[["self"],["cmsoptions"]]]],[11,"sub_assign","openssl::ocsp","Disables all flags enabled in the set.",43,[[["self"],["ocspflag"]]]],[11,"sub_assign","openssl::pkcs7","Disables all flags enabled in the set.",58,[[["self"],["pkcs7flags"]]]],[11,"sub_assign","openssl::ssl","Disables all flags enabled in the set.",88,[[["ssloptions"],["self"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",89,[[["self"],["sslmode"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",91,[[["self"],["sslverifymode"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",92,[[["self"],["sslsessioncachemode"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",111,[[["self"],["shutdownstate"]]]],[11,"sub_assign","openssl::x509::verify","Disables all flags enabled in the set.",118,[[["self"],["x509checkflags"]]]],[11,"not","openssl::cms","Returns the complement of this set of flags.",13,[[],["cmsoptions"]]],[11,"not","openssl::ocsp","Returns the complement of this set of flags.",43,[[],["ocspflag"]]],[11,"not","openssl::pkcs7","Returns the complement of this set of flags.",58,[[],["pkcs7flags"]]],[11,"not","openssl::ssl","Returns the complement of this set of flags.",88,[[],["ssloptions"]]],[11,"not","","Returns the complement of this set of flags.",89,[[],["sslmode"]]],[11,"not","","Returns the complement of this set of flags.",91,[[],["sslverifymode"]]],[11,"not","","Returns the complement of this set of flags.",92,[[],["sslsessioncachemode"]]],[11,"not","","Returns the complement of this set of flags.",111,[[],["shutdownstate"]]],[11,"not","openssl::x509::verify","Returns the complement of this set of flags.",118,[[],["x509checkflags"]]],[11,"bitand","openssl::cms","Returns the intersection between the two sets of flags.",13,[[["cmsoptions"]],["cmsoptions"]]],[11,"bitand","openssl::ocsp","Returns the intersection between the two sets of flags.",43,[[["ocspflag"]],["ocspflag"]]],[11,"bitand","openssl::pkcs7","Returns the intersection between the two sets of flags.",58,[[["pkcs7flags"]],["pkcs7flags"]]],[11,"bitand","openssl::ssl","Returns the intersection between the two sets of flags.",88,[[["ssloptions"]],["ssloptions"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",89,[[["sslmode"]],["sslmode"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",91,[[["sslverifymode"]],["sslverifymode"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",92,[[["sslsessioncachemode"]],["sslsessioncachemode"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",111,[[["shutdownstate"]],["shutdownstate"]]],[11,"bitand","openssl::x509::verify","Returns the intersection between the two sets of flags.",118,[[["x509checkflags"]],["x509checkflags"]]],[11,"bitor","openssl::cms","Returns the union of the two sets of flags.",13,[[["cmsoptions"]],["cmsoptions"]]],[11,"bitor","openssl::ocsp","Returns the union of the two sets of flags.",43,[[["ocspflag"]],["ocspflag"]]],[11,"bitor","openssl::pkcs7","Returns the union of the two sets of flags.",58,[[["pkcs7flags"]],["pkcs7flags"]]],[11,"bitor","openssl::ssl","Returns the union of the two sets of flags.",88,[[["ssloptions"]],["ssloptions"]]],[11,"bitor","","Returns the union of the two sets of flags.",89,[[["sslmode"]],["sslmode"]]],[11,"bitor","","Returns the union of the two sets of flags.",91,[[["sslverifymode"]],["sslverifymode"]]],[11,"bitor","","Returns the union of the two sets of flags.",92,[[["sslsessioncachemode"]],["sslsessioncachemode"]]],[11,"bitor","","Returns the union of the two sets of flags.",111,[[["shutdownstate"]],["shutdownstate"]]],[11,"bitor","openssl::x509::verify","Returns the union of the two sets of flags.",118,[[["x509checkflags"]],["x509checkflags"]]],[11,"bitxor","openssl::cms","Returns the left flags, but with all the right flags…",13,[[["cmsoptions"]],["cmsoptions"]]],[11,"bitxor","openssl::ocsp","Returns the left flags, but with all the right flags…",43,[[["ocspflag"]],["ocspflag"]]],[11,"bitxor","openssl::pkcs7","Returns the left flags, but with all the right flags…",58,[[["pkcs7flags"]],["pkcs7flags"]]],[11,"bitxor","openssl::ssl","Returns the left flags, but with all the right flags…",88,[[["ssloptions"]],["ssloptions"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",89,[[["sslmode"]],["sslmode"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",91,[[["sslverifymode"]],["sslverifymode"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",92,[[["sslsessioncachemode"]],["sslsessioncachemode"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",111,[[["shutdownstate"]],["shutdownstate"]]],[11,"bitxor","openssl::x509::verify","Returns the left flags, but with all the right flags…",118,[[["x509checkflags"]],["x509checkflags"]]],[11,"bitand_assign","openssl::cms","Disables all flags disabled in the set.",13,[[["self"],["cmsoptions"]]]],[11,"bitand_assign","openssl::ocsp","Disables all flags disabled in the set.",43,[[["self"],["ocspflag"]]]],[11,"bitand_assign","openssl::pkcs7","Disables all flags disabled in the set.",58,[[["self"],["pkcs7flags"]]]],[11,"bitand_assign","openssl::ssl","Disables all flags disabled in the set.",88,[[["ssloptions"],["self"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",89,[[["self"],["sslmode"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",91,[[["self"],["sslverifymode"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",92,[[["self"],["sslsessioncachemode"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",111,[[["self"],["shutdownstate"]]]],[11,"bitand_assign","openssl::x509::verify","Disables all flags disabled in the set.",118,[[["self"],["x509checkflags"]]]],[11,"bitor_assign","openssl::cms","Adds the set of flags.",13,[[["self"],["cmsoptions"]]]],[11,"bitor_assign","openssl::ocsp","Adds the set of flags.",43,[[["self"],["ocspflag"]]]],[11,"bitor_assign","openssl::pkcs7","Adds the set of flags.",58,[[["self"],["pkcs7flags"]]]],[11,"bitor_assign","openssl::ssl","Adds the set of flags.",88,[[["ssloptions"],["self"]]]],[11,"bitor_assign","","Adds the set of flags.",89,[[["self"],["sslmode"]]]],[11,"bitor_assign","","Adds the set of flags.",91,[[["self"],["sslverifymode"]]]],[11,"bitor_assign","","Adds the set of flags.",92,[[["self"],["sslsessioncachemode"]]]],[11,"bitor_assign","","Adds the set of flags.",111,[[["self"],["shutdownstate"]]]],[11,"bitor_assign","openssl::x509::verify","Adds the set of flags.",118,[[["self"],["x509checkflags"]]]],[11,"bitxor_assign","openssl::cms","Toggles the set of flags.",13,[[["self"],["cmsoptions"]]]],[11,"bitxor_assign","openssl::ocsp","Toggles the set of flags.",43,[[["self"],["ocspflag"]]]],[11,"bitxor_assign","openssl::pkcs7","Toggles the set of flags.",58,[[["self"],["pkcs7flags"]]]],[11,"bitxor_assign","openssl::ssl","Toggles the set of flags.",88,[[["ssloptions"],["self"]]]],[11,"bitxor_assign","","Toggles the set of flags.",89,[[["self"],["sslmode"]]]],[11,"bitxor_assign","","Toggles the set of flags.",91,[[["self"],["sslverifymode"]]]],[11,"bitxor_assign","","Toggles the set of flags.",92,[[["self"],["sslsessioncachemode"]]]],[11,"bitxor_assign","","Toggles the set of flags.",111,[[["self"],["shutdownstate"]]]],[11,"bitxor_assign","openssl::x509::verify","Toggles the set of flags.",118,[[["self"],["x509checkflags"]]]],[11,"index","openssl::stack","",114,[[["self"],["usize"]]]],[11,"index_mut","","",114,[[["self"],["usize"]]]],[11,"hash","openssl::asn1","",1,[[["self"],["__h"]]]],[11,"hash","openssl::cms","",13,[[["self"],["__h"]]]],[11,"hash","openssl::nid","",41,[[["self"],["__h"]]]],[11,"hash","openssl::ocsp","",43,[[["self"],["__h"]]]],[11,"hash","openssl::pkcs5","",57,[[["self"],["__h"]]]],[11,"hash","openssl::pkcs7","",58,[[["self"],["__h"]]]],[11,"hash","openssl::ssl","",88,[[["self"],["__h"]]]],[11,"hash","","",89,[[["self"],["__h"]]]],[11,"hash","","",91,[[["self"],["__h"]]]],[11,"hash","","",92,[[["self"],["__h"]]]],[11,"hash","","",111,[[["self"],["__h"]]]],[11,"hash","openssl::x509::verify","",118,[[["self"],["__h"]]]],[11,"from_iter","openssl::cms","",13,[[["intoiterator"]],["cmsoptions"]]],[11,"from_iter","openssl::ocsp","",43,[[["intoiterator"]],["ocspflag"]]],[11,"from_iter","openssl::pkcs7","",58,[[["intoiterator"]],["pkcs7flags"]]],[11,"from_iter","openssl::ssl","",88,[[["intoiterator"]],["ssloptions"]]],[11,"from_iter","","",89,[[["intoiterator"]],["sslmode"]]],[11,"from_iter","","",91,[[["intoiterator"]],["sslverifymode"]]],[11,"from_iter","","",92,[[["intoiterator"]],["sslsessioncachemode"]]],[11,"from_iter","","",111,[[["intoiterator"]],["shutdownstate"]]],[11,"from_iter","openssl::x509::verify","",118,[[["intoiterator"]],["x509checkflags"]]],[11,"fmt","openssl::cms","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::ocsp","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::pkcs7","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::ssl","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::x509::verify","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::cms","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::ocsp","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::pkcs7","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::ssl","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::x509::verify","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::cms","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::ocsp","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::pkcs7","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::ssl","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::x509::verify","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::cms","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::ocsp","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::pkcs7","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::ssl","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","openssl::x509::verify","",118,[[["self"],["formatter"]],["result"]]],[11,"borrow","openssl::asn1","",148,[[["self"]],["asn1generalizedtimeref"]]],[11,"borrow","","",3,[[["self"]],["asn1timeref"]]],[11,"borrow","","",150,[[["self"]],["asn1stringref"]]],[11,"borrow","","",5,[[["self"]],["asn1integerref"]]],[11,"borrow","","",151,[[["self"]],["asn1bitstringref"]]],[11,"borrow","","",152,[[["self"]],["asn1objectref"]]],[11,"borrow","openssl::bn","",10,[[["self"]],["bignumcontextref"]]],[11,"borrow","","",12,[[["self"]],["bignumref"]]],[11,"borrow","openssl::cms","",15,[[["self"]],["cmscontentinforef"]]],[11,"borrow","openssl::conf","",17,[[["self"]],["confref"]]],[11,"borrow","openssl::dh","",20,[[["self"]],["dhref"]]],[11,"borrow","openssl::dsa","",22,[[["self"]],["dsaref"]]],[11,"borrow","openssl::ec","",25,[[["self"]],["ecgroupref"]]],[11,"borrow","","",28,[[["self"]],["ecpointref"]]],[11,"borrow","","",30,[[["self"]],["eckeyref"]]],[11,"borrow","openssl::ecdsa","",31,[[["self"]],["ecdsasigref"]]],[11,"borrow","openssl::ocsp","",156,[[["self"]],["ocspbasicresponseref"]]],[11,"borrow","","",48,[[["self"]],["ocspcertidref"]]],[11,"borrow","","",49,[[["self"]],["ocspresponseref"]]],[11,"borrow","","",51,[[["self"]],["ocsprequestref"]]],[11,"borrow","","",158,[[["self"]],["ocsponereqref"]]],[11,"borrow","openssl::pkcs12","",55,[[["self"]],["pkcs12ref"]]],[11,"borrow","openssl::pkcs7","",59,[[["self"]],["pkcs7ref"]]],[11,"borrow","openssl::pkey","",63,[[["self"]],["pkeyref"]]],[11,"borrow","openssl::rsa","",66,[[["self"]],["rsaref"]]],[11,"borrow","openssl::srtp","",163,[[["self"]],["srtpprotectionprofileref"]]],[11,"borrow","openssl::ssl","",101,[[["self"]],["sslcontextref"]]],[11,"borrow","","",104,[[["self"]],["sslsessionref"]]],[11,"borrow","","",106,[[["self"]],["sslref"]]],[11,"borrow","openssl::stack","",113,[[["self"]],["stackref"]]],[11,"borrow","openssl::string","",168,[[["self"]],["opensslstringref"]]],[11,"borrow","openssl::x509::verify","",176,[[["self"]],["x509verifyparamref"]]],[11,"borrow","openssl::x509::store","",126,[[["self"]],["x509storebuilderref"]]],[11,"borrow","","",177,[[["self"]],["x509storeref"]]],[11,"borrow","openssl::x509","",129,[[["self"]],["x509storecontextref"]]],[11,"borrow","","",133,[[["self"]],["x509ref"]]],[11,"borrow","","",135,[[["self"]],["x509extensionref"]]],[11,"borrow","","",137,[[["self"]],["x509nameref"]]],[11,"borrow","","",172,[[["self"]],["x509nameentryref"]]],[11,"borrow","","",141,[[["self"]],["x509reqref"]]],[11,"borrow","","",173,[[["self"]],["generalnameref"]]],[11,"borrow","","",174,[[["self"]],["x509algorithmref"]]],[11,"borrow","","",175,[[["self"]],["x509objectref"]]],[11,"source","openssl::ssl","",87,[[["self"]],[["error"],["option",["error"]]]]],[11,"source","","",79,[[["self"]],[["option",["stderror"]],["stderror"]]]],[11,"read","","",109,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"write","openssl::hash","",39,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",39,[[["self"]],["result"]]],[11,"write","openssl::sign","",74,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",74,[[["self"]],["result"]]],[11,"write","","",75,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",75,[[["self"]],["result"]]],[11,"write","openssl::ssl","",109,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",109,[[["self"]],["result"]]],[11,"from_ptr","openssl::asn1","",148,[[],["asn1generalizedtime"]]],[11,"as_ptr","","",148,[[["self"]]]],[11,"from_ptr","","",3,[[],["asn1time"]]],[11,"as_ptr","","",3,[[["self"]]]],[11,"from_ptr","","",150,[[],["asn1string"]]],[11,"as_ptr","","",150,[[["self"]]]],[11,"from_ptr","","",5,[[],["asn1integer"]]],[11,"as_ptr","","",5,[[["self"]]]],[11,"from_ptr","","",151,[[],["asn1bitstring"]]],[11,"as_ptr","","",151,[[["self"]]]],[11,"from_ptr","","",152,[[],["asn1object"]]],[11,"as_ptr","","",152,[[["self"]]]],[11,"from_ptr","openssl::bn","",10,[[],["bignumcontext"]]],[11,"as_ptr","","",10,[[["self"]]]],[11,"from_ptr","","",12,[[],["bignum"]]],[11,"as_ptr","","",12,[[["self"]]]],[11,"from_ptr","openssl::cms","",15,[[],["cmscontentinfo"]]],[11,"as_ptr","","",15,[[["self"]]]],[11,"from_ptr","openssl::conf","",17,[[],["conf"]]],[11,"as_ptr","","",17,[[["self"]]]],[11,"from_ptr","openssl::dh","",20,[[],["dh"]]],[11,"as_ptr","","",20,[[["self"]]]],[11,"from_ptr","openssl::dsa","",22,[[],["dsa"]]],[11,"as_ptr","","",22,[[["self"]]]],[11,"from_ptr","openssl::ec","",25,[[],["ecgroup"]]],[11,"as_ptr","","",25,[[["self"]]]],[11,"from_ptr","","",28,[[],["ecpoint"]]],[11,"as_ptr","","",28,[[["self"]]]],[11,"from_ptr","","",30,[[],["eckey"]]],[11,"as_ptr","","",30,[[["self"]]]],[11,"from_ptr","openssl::ecdsa","",31,[[],["ecdsasig"]]],[11,"as_ptr","","",31,[[["self"]]]],[11,"from_ptr","openssl::ocsp","",156,[[],["ocspbasicresponse"]]],[11,"as_ptr","","",156,[[["self"]]]],[11,"from_ptr","","",48,[[],["ocspcertid"]]],[11,"as_ptr","","",48,[[["self"]]]],[11,"from_ptr","","",49,[[],["ocspresponse"]]],[11,"as_ptr","","",49,[[["self"]]]],[11,"from_ptr","","",51,[[],["ocsprequest"]]],[11,"as_ptr","","",51,[[["self"]]]],[11,"from_ptr","","",158,[[],["ocsponereq"]]],[11,"as_ptr","","",158,[[["self"]]]],[11,"from_ptr","openssl::pkcs12","",55,[[],["pkcs12"]]],[11,"as_ptr","","",55,[[["self"]]]],[11,"from_ptr","openssl::pkcs7","",59,[[],["pkcs7"]]],[11,"as_ptr","","",59,[[["self"]]]],[11,"from_ptr","openssl::pkey","",63,[[],["pkey"]]],[11,"as_ptr","","",63,[[["self"]]]],[11,"from_ptr","openssl::rsa","",66,[[],["rsa"]]],[11,"as_ptr","","",66,[[["self"]]]],[11,"from_ptr","openssl::srtp","",163,[[],["srtpprotectionprofile"]]],[11,"as_ptr","","",163,[[["self"]]]],[11,"from_ptr","openssl::ssl","",101,[[],["sslcontext"]]],[11,"as_ptr","","",101,[[["self"]]]],[11,"from_ptr","","",164,[[],["sslcipher"]]],[11,"as_ptr","","",164,[[["self"]]]],[11,"from_ptr","","",104,[[],["sslsession"]]],[11,"as_ptr","","",104,[[["self"]]]],[11,"from_ptr","","",106,[[],["ssl"]]],[11,"as_ptr","","",106,[[["self"]]]],[11,"from_ptr","openssl::stack","",113,[[],["stack"]]],[11,"as_ptr","","",113,[[["self"]]]],[11,"from_ptr","openssl::string","",168,[[],["opensslstring"]]],[11,"as_ptr","","",168,[[["self"]]]],[11,"from_ptr","openssl::x509::verify","",176,[[],["x509verifyparam"]]],[11,"as_ptr","","",176,[[["self"]]]],[11,"from_ptr","openssl::x509::store","",126,[[],["x509storebuilder"]]],[11,"as_ptr","","",126,[[["self"]]]],[11,"from_ptr","","",177,[[],["x509store"]]],[11,"as_ptr","","",177,[[["self"]]]],[11,"from_ptr","openssl::x509","",129,[[],["x509storecontext"]]],[11,"as_ptr","","",129,[[["self"]]]],[11,"from_ptr","","",133,[[],["x509"]]],[11,"as_ptr","","",133,[[["self"]]]],[11,"from_ptr","","",135,[[],["x509extension"]]],[11,"as_ptr","","",135,[[["self"]]]],[11,"from_ptr","","",137,[[],["x509name"]]],[11,"as_ptr","","",137,[[["self"]]]],[11,"from_ptr","","",172,[[],["x509nameentry"]]],[11,"as_ptr","","",172,[[["self"]]]],[11,"from_ptr","","",141,[[],["x509req"]]],[11,"as_ptr","","",141,[[["self"]]]],[11,"from_ptr","","",173,[[],["generalname"]]],[11,"as_ptr","","",173,[[["self"]]]],[11,"from_ptr","","",174,[[],["x509algorithm"]]],[11,"as_ptr","","",174,[[["self"]]]],[11,"from_ptr","","",175,[[],["x509object"]]],[11,"as_ptr","","",175,[[["self"]]]]],"p":[[3,"AesKey"],[3,"TimeDiff"],[3,"Asn1TimeRef"],[3,"Asn1Time"],[3,"Asn1StringRef"],[3,"Asn1Integer"],[3,"Asn1IntegerRef"],[3,"Asn1BitStringRef"],[3,"Asn1ObjectRef"],[3,"MsbOption"],[3,"BigNumContext"],[3,"BigNumRef"],[3,"BigNum"],[3,"CMSOptions"],[3,"CmsContentInfoRef"],[3,"CmsContentInfo"],[3,"ConfMethod"],[3,"Conf"],[3,"Deriver"],[3,"DhRef"],[3,"Dh"],[3,"DsaRef"],[3,"Dsa"],[3,"PointConversionForm"],[3,"Asn1Flag"],[3,"EcGroup"],[3,"EcGroupRef"],[3,"EcPointRef"],[3,"EcPoint"],[3,"EcKeyRef"],[3,"EcKey"],[3,"EcdsaSig"],[3,"EcdsaSigRef"],[3,"Seal"],[3,"Open"],[3,"ErrorStack"],[3,"Error"],[3,"Index"],[3,"MessageDigest"],[3,"Hasher"],[3,"SignatureAlgorithms"],[3,"Nid"],[3,"OcspStatus"],[3,"OcspFlag"],[3,"OcspResponseStatus"],[3,"OcspCertStatus"],[3,"OcspRevokedStatus"],[3,"OcspBasicResponseRef"],[3,"OcspCertId"],[3,"OcspResponse"],[3,"OcspResponseRef"],[3,"OcspRequest"],[3,"OcspRequestRef"],[3,"ParsedPkcs12"],[3,"Pkcs12Ref"],[3,"Pkcs12"],[3,"Pkcs12Builder"],[3,"KeyIvPair"],[3,"Pkcs7Flags"],[3,"Pkcs7"],[3,"Pkcs7Ref"],[3,"Id"],[3,"PKeyRef"],[3,"PKey"],[3,"Padding"],[3,"RsaRef"],[3,"Rsa"],[3,"RsaPrivateKeyBuilder"],[3,"Sha1"],[3,"Sha224"],[3,"Sha256"],[3,"Sha384"],[3,"Sha512"],[3,"RsaPssSaltlen"],[3,"Signer"],[3,"Verifier"],[3,"SrtpProtectionProfileRef"],[3,"SrtpProfileId"],[3,"CipherBits"],[4,"HandshakeError"],[4,"ShutdownResult"],[3,"SslConnector"],[3,"SslConnectorBuilder"],[3,"ConnectConfiguration"],[3,"SslAcceptor"],[3,"SslAcceptorBuilder"],[3,"ErrorCode"],[3,"Error"],[3,"SslOptions"],[3,"SslMode"],[3,"SslMethod"],[3,"SslVerifyMode"],[3,"SslSessionCacheMode"],[3,"SslFiletype"],[3,"StatusType"],[3,"NameType"],[3,"SniError"],[3,"SslAlert"],[3,"AlpnError"],[3,"SslVersion"],[3,"SslContextBuilder"],[3,"SslContext"],[3,"SslContextRef"],[3,"SslCipherRef"],[3,"SslSession"],[3,"SslSessionRef"],[3,"Ssl"],[3,"SslRef"],[3,"MidHandshakeSslStream"],[3,"SslStream"],[3,"SslStreamBuilder"],[3,"ShutdownState"],[8,"Stackable"],[3,"Stack"],[3,"StackRef"],[4,"Mode"],[3,"Cipher"],[3,"Crypter"],[3,"X509CheckFlags"],[3,"X509VerifyParamRef"],[3,"BasicConstraints"],[3,"KeyUsage"],[3,"ExtendedKeyUsage"],[3,"SubjectKeyIdentifier"],[3,"AuthorityKeyIdentifier"],[3,"SubjectAlternativeName"],[3,"X509StoreBuilder"],[3,"X509StoreBuilderRef"],[3,"X509StoreRef"],[3,"X509StoreContext"],[3,"X509StoreContextRef"],[3,"X509Builder"],[3,"X509Ref"],[3,"X509"],[3,"X509v3Context"],[3,"X509Extension"],[3,"X509NameBuilder"],[3,"X509Name"],[3,"X509NameRef"],[3,"X509NameEntryRef"],[3,"X509ReqBuilder"],[3,"X509Req"],[3,"X509ReqRef"],[3,"X509VerifyResult"],[3,"GeneralNameRef"],[3,"X509AlgorithmRef"],[3,"X509ObjectRef"],[3,"KeyError"],[3,"Asn1GeneralizedTime"],[3,"Asn1GeneralizedTimeRef"],[3,"Asn1String"],[3,"Asn1BitString"],[3,"Asn1Object"],[3,"BigNumContextRef"],[3,"ConfRef"],[3,"DigestBytes"],[3,"OcspBasicResponse"],[3,"OcspCertIdRef"],[3,"OcspOneReq"],[3,"OcspOneReqRef"],[4,"Params"],[4,"Public"],[4,"Private"],[3,"SrtpProtectionProfile"],[3,"SslCipher"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"OpensslString"],[3,"OpensslStringRef"],[3,"X509ExtensionRef"],[3,"X509NameEntries"],[3,"X509NameEntry"],[3,"GeneralName"],[3,"X509Algorithm"],[3,"X509Object"],[3,"X509VerifyParam"],[3,"X509Store"]]};
searchIndex["openssl_probe"] = {"doc":"","i":[[3,"ProbeResult","openssl_probe","",null,null],[12,"cert_file","","",0,null],[12,"cert_dir","","",0,null],[5,"find_certs_dirs","","Probe the system for the directory in which CA…",null,[[],[["pathbuf"],["vec",["pathbuf"]]]]],[5,"init_ssl_cert_env_vars","","",null,[[]]],[5,"probe","","",null,[[],["proberesult"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]]],"p":[[3,"ProbeResult"]]};
searchIndex["openssl_sys"] = {"doc":"","i":[[3,"AES_KEY","openssl_sys","",null,null],[3,"ASN1_ENCODING","","",null,null],[12,"enc","","",0,null],[12,"len","","",0,null],[12,"modified","","",0,null],[3,"ERR_STRING_DATA","","",null,null],[12,"error","","",1,null],[12,"string","","",1,null],[3,"X509V3_CTX","","",null,null],[3,"SHA_CTX","","",null,null],[12,"h0","","",2,null],[12,"h1","","",2,null],[12,"h2","","",2,null],[12,"h3","","",2,null],[12,"h4","","",2,null],[12,"Nl","","",2,null],[12,"Nh","","",2,null],[12,"data","","",2,null],[12,"num","","",2,null],[3,"SHA256_CTX","","",null,null],[12,"h","","",3,null],[12,"Nl","","",3,null],[12,"Nh","","",3,null],[12,"data","","",3,null],[12,"num","","",3,null],[12,"md_len","","",3,null],[3,"SHA512_CTX","","",null,null],[12,"h","","",4,null],[12,"Nl","","",4,null],[12,"Nh","","",4,null],[12,"num","","",4,null],[12,"md_len","","",4,null],[3,"SRTP_PROTECTION_PROFILE","","",null,null],[12,"name","","",5,null],[12,"id","","",5,null],[3,"X509_VAL","","",null,null],[12,"notBefore","","",6,null],[12,"notAfter","","",6,null],[3,"GENERAL_NAME","","",null,null],[12,"type_","","",7,null],[12,"d","","",7,null],[4,"stack_st_ASN1_OBJECT","","",null,null],[4,"BIO_METHOD","","",null,null],[4,"CMS_ContentInfo","","",null,null],[4,"stack_st_void","","",null,null],[4,"point_conversion_form_t","","",null,null],[13,"POINT_CONVERSION_COMPRESSED","","",8,null],[13,"POINT_CONVERSION_UNCOMPRESSED","","",8,null],[13,"POINT_CONVERSION_HYBRID","","",8,null],[4,"EC_METHOD","","",null,null],[4,"EC_GROUP","","",null,null],[4,"EC_POINT","","",null,null],[4,"ECDSA_SIG","","",null,null],[4,"OCSP_CERTID","","",null,null],[4,"OCSP_ONEREQ","","",null,null],[4,"OCSP_REQUEST","","",null,null],[4,"OCSP_BASICRESP","","",null,null],[4,"ASN1_INTEGER","","",null,null],[4,"ASN1_GENERALIZEDTIME","","",null,null],[4,"ASN1_STRING","","",null,null],[4,"ASN1_BIT_STRING","","",null,null],[4,"ASN1_TIME","","",null,null],[4,"ASN1_TYPE","","",null,null],[4,"ASN1_OBJECT","","",null,null],[4,"ASN1_OCTET_STRING","","",null,null],[4,"bio_st","","",null,null],[4,"BIO","","",null,null],[4,"BIGNUM","","",null,null],[4,"BN_BLINDING","","",null,null],[4,"BN_MONT_CTX","","",null,null],[4,"BN_CTX","","",null,null],[4,"BN_GENCB","","",null,null],[4,"EVP_CIPHER","","",null,null],[4,"EVP_CIPHER_CTX","","",null,null],[4,"EVP_MD","","",null,null],[4,"EVP_MD_CTX","","",null,null],[4,"EVP_PKEY","","",null,null],[4,"PKCS8_PRIV_KEY_INFO","","",null,null],[4,"EVP_PKEY_ASN1_METHOD","","",null,null],[4,"EVP_PKEY_CTX","","",null,null],[4,"HMAC_CTX","","",null,null],[4,"DH","","",null,null],[4,"DH_METHOD","","",null,null],[4,"DSA","","",null,null],[4,"DSA_METHOD","","",null,null],[4,"RSA","","",null,null],[4,"RSA_METHOD","","",null,null],[4,"EC_KEY","","",null,null],[4,"X509","","",null,null],[4,"X509_ALGOR","","",null,null],[4,"X509_CRL","","",null,null],[4,"stack_st_X509_CRL","","",null,null],[4,"X509_NAME","","",null,null],[4,"X509_STORE","","",null,null],[4,"X509_STORE_CTX","","",null,null],[4,"X509_VERIFY_PARAM","","",null,null],[4,"CONF","","",null,null],[4,"OPENSSL_INIT_SETTINGS","","",null,null],[4,"ENGINE","","",null,null],[4,"SSL","","",null,null],[4,"SSL_CTX","","",null,null],[4,"COMP_METHOD","","",null,null],[4,"CRYPTO_EX_DATA","","",null,null],[4,"OCSP_RESPONSE","","",null,null],[4,"PKCS12","","",null,null],[4,"PKCS7_SIGNED","","",null,null],[4,"PKCS7_ENVELOPE","","",null,null],[4,"PKCS7_SIGN_ENVELOPE","","",null,null],[4,"PKCS7_DIGEST","","",null,null],[4,"PKCS7_ENCRYPT","","",null,null],[4,"PKCS7","","",null,null],[4,"stack_st_OPENSSL_STRING","","",null,null],[4,"SSL_METHOD","","",null,null],[4,"SSL_CIPHER","","",null,null],[4,"SSL_SESSION","","",null,null],[4,"stack_st_SSL_CIPHER","","",null,null],[4,"stack_st_SRTP_PROTECTION_PROFILE","","",null,null],[4,"OPENSSL_STACK","","",null,null],[4,"X509_NAME_ENTRY","","",null,null],[4,"stack_st_X509_NAME","","",null,null],[4,"X509_EXTENSION","","",null,null],[4,"stack_st_X509_EXTENSION","","",null,null],[4,"stack_st_X509_ATTRIBUTE","","",null,null],[4,"X509_REQ_INFO","","",null,null],[4,"X509_REQ","","",null,null],[4,"X509_CINF","","",null,null],[4,"stack_st_X509","","",null,null],[4,"X509_OBJECT","","",null,null],[4,"stack_st_X509_OBJECT","","",null,null],[4,"X509_LOOKUP","","",null,null],[4,"stack_st_X509_LOOKUP","","",null,null],[4,"CONF_METHOD","","",null,null],[4,"stack_st_GENERAL_NAME","","",null,null],[5,"BIO_set_retry_read","","",null,[[]]],[5,"BIO_set_retry_write","","",null,[[]]],[5,"BIO_clear_retry_flags","","",null,[[]]],[5,"BIO_get_mem_data","","",null,[[],["c_long"]]],[5,"ERR_PACK","","",null,[[["c_int"]],["c_ulong"]]],[5,"ERR_GET_LIB","","",null,[[["c_ulong"]],["c_int"]]],[5,"ERR_GET_FUNC","","",null,[[["c_ulong"]],["c_int"]]],[5,"ERR_GET_REASON","","",null,[[["c_ulong"]],["c_int"]]],[5,"EVP_get_digestbynid","","",null,[[["c_int"]]]],[5,"EVP_PKEY_CTX_set_rsa_padding","","",null,[[["c_int"]],["c_int"]]],[5,"EVP_PKEY_CTX_get_rsa_padding","","",null,[[],["c_int"]]],[5,"EVP_PKEY_CTX_set_rsa_pss_saltlen","","",null,[[["c_int"]],["c_int"]]],[5,"EVP_PKEY_CTX_set_rsa_mgf1_md","","",null,[[],["c_int"]]],[5,"SSL_CTX_set_mode","","",null,[[["c_long"]],["c_long"]]],[5,"SSL_CTX_set_tmp_dh","","",null,[[],["c_long"]]],[5,"SSL_CTX_set_tmp_ecdh","","",null,[[],["c_long"]]],[5,"SSL_set_tmp_dh","","",null,[[],["c_long"]]],[5,"SSL_set_tmp_ecdh","","",null,[[],["c_long"]]],[5,"SSL_CTX_add_extra_chain_cert","","",null,[[],["c_long"]]],[5,"SSL_CTX_get_extra_chain_certs","","",null,[[],["c_long"]]],[5,"SSL_CTX_set0_verify_cert_store","","",null,[[],["c_long"]]],[5,"SSL_CTX_set1_sigalgs_list","","",null,[[],["c_long"]]],[5,"SSL_CTX_set_min_proto_version","","",null,[[["c_int"]],["c_int"]]],[5,"SSL_CTX_set_max_proto_version","","",null,[[["c_int"]],["c_int"]]],[5,"SSL_CTX_get_min_proto_version","","",null,[[],["c_int"]]],[5,"SSL_CTX_get_max_proto_version","","",null,[[],["c_int"]]],[5,"SSL_set_min_proto_version","","",null,[[["c_int"]],["c_int"]]],[5,"SSL_set_max_proto_version","","",null,[[["c_int"]],["c_int"]]],[5,"SSL_get_min_proto_version","","",null,[[],["c_int"]]],[5,"SSL_get_max_proto_version","","",null,[[],["c_int"]]],[5,"SSL_get_ex_new_index","","",null,[[["option",["crypto_ex_dup"]],["crypto_ex_free"],["option",["crypto_ex_free"]],["crypto_ex_new"],["option",["crypto_ex_new"]],["c_long"],["crypto_ex_dup"]],["c_int"]]],[5,"SSL_CTX_get_ex_new_index","","",null,[[["option",["crypto_ex_dup"]],["crypto_ex_free"],["option",["crypto_ex_free"]],["crypto_ex_new"],["option",["crypto_ex_new"]],["c_long"],["crypto_ex_dup"]],["c_int"]]],[5,"SSL_CTX_sess_set_cache_size","","",null,[[["c_long"]],["c_long"]]],[5,"SSL_CTX_sess_get_cache_size","","",null,[[],["c_long"]]],[5,"SSL_CTX_set_session_cache_mode","","",null,[[["c_long"]],["c_long"]]],[5,"SSL_CTX_set_read_ahead","","",null,[[["c_long"]],["c_long"]]],[5,"SSL_set_tlsext_host_name","","",null,[[],["c_long"]]],[5,"SSL_set_tlsext_status_type","","",null,[[["c_int"]],["c_long"]]],[5,"SSL_get_tlsext_status_ocsp_resp","","",null,[[],["c_long"]]],[5,"SSL_set_tlsext_status_ocsp_resp","","",null,[[["c_long"]],["c_long"]]],[5,"SSL_CTX_set_tlsext_servername_callback","","",null,[[["option"]],["c_long"]]],[5,"SSL_CTX_set_tlsext_servername_arg","","",null,[[],["c_long"]]],[5,"SSL_CTX_set_tlsext_status_cb","","",null,[[["option"]],["c_long"]]],[5,"SSL_CTX_set_tlsext_status_arg","","",null,[[],["c_long"]]],[5,"init","","",null,[[]]],[5,"AES_set_encrypt_key","","",null,null],[5,"AES_set_decrypt_key","","",null,null],[5,"AES_ige_encrypt","","",null,null],[5,"AES_wrap_key","","",null,null],[5,"AES_unwrap_key","","",null,null],[5,"ASN1_OBJECT_free","","",null,null],[5,"ASN1_STRING_type_new","","",null,null],[5,"ASN1_STRING_get0_data","","",null,null],[5,"ASN1_BIT_STRING_free","","",null,null],[5,"ASN1_STRING_free","","",null,null],[5,"ASN1_STRING_length","","",null,null],[5,"ASN1_GENERALIZEDTIME_free","","",null,null],[5,"ASN1_GENERALIZEDTIME_print","","",null,null],[5,"ASN1_TIME_new","","",null,null],[5,"ASN1_TIME_diff","","",null,null],[5,"ASN1_TIME_free","","",null,null],[5,"ASN1_TIME_print","","",null,null],[5,"ASN1_TIME_set","","",null,null],[5,"ASN1_INTEGER_free","","",null,null],[5,"ASN1_INTEGER_get","","",null,null],[5,"ASN1_INTEGER_set","","",null,null],[5,"BN_to_ASN1_INTEGER","","",null,null],[5,"ASN1_INTEGER_to_BN","","",null,null],[5,"ASN1_TIME_set_string","","",null,null],[5,"ASN1_STRING_to_UTF8","","",null,null],[5,"BIO_set_flags","","",null,null],[5,"BIO_clear_flags","","",null,null],[5,"BIO_s_file","","",null,null],[5,"BIO_new","","",null,null],[5,"BIO_new_fp","","",null,null],[5,"BIO_set_data","","",null,null],[5,"BIO_get_data","","",null,null],[5,"BIO_set_init","","",null,null],[5,"BIO_write","","",null,null],[5,"BIO_read","","",null,null],[5,"BIO_ctrl","","",null,null],[5,"BIO_free_all","","",null,null],[5,"BIO_s_mem","","",null,null],[5,"BIO_new_mem_buf","","",null,null],[5,"BIO_new_socket","","",null,null],[5,"BIO_meth_new","","",null,null],[5,"BIO_meth_free","","",null,null],[5,"BIO_meth_set_write","","",null,null],[5,"BIO_meth_set_read","","",null,null],[5,"BIO_meth_set_puts","","",null,null],[5,"BIO_meth_set_ctrl","","",null,null],[5,"BIO_meth_set_create","","",null,null],[5,"BIO_meth_set_destroy","","",null,null],[5,"BN_CTX_new","","",null,null],[5,"BN_CTX_free","","",null,null],[5,"BN_rand","","",null,null],[5,"BN_pseudo_rand","","",null,null],[5,"BN_rand_range","","",null,null],[5,"BN_pseudo_rand_range","","",null,null],[5,"BN_new","","",null,null],[5,"BN_num_bits","","",null,null],[5,"BN_clear_free","","",null,null],[5,"BN_bin2bn","","",null,null],[5,"BN_bn2bin","","",null,null],[5,"BN_sub","","",null,null],[5,"BN_add","","",null,null],[5,"BN_mul","","",null,null],[5,"BN_sqr","","",null,null],[5,"BN_set_negative","","",null,null],[5,"BN_is_negative","","",null,null],[5,"BN_div","","",null,null],[5,"BN_nnmod","","",null,null],[5,"BN_mod_add","","",null,null],[5,"BN_mod_sub","","",null,null],[5,"BN_mod_mul","","",null,null],[5,"BN_mod_sqr","","",null,null],[5,"BN_mod_word","","",null,null],[5,"BN_div_word","","",null,null],[5,"BN_mul_word","","",null,null],[5,"BN_add_word","","",null,null],[5,"BN_sub_word","","",null,null],[5,"BN_set_word","","",null,null],[5,"BN_cmp","","",null,null],[5,"BN_free","","",null,null],[5,"BN_is_bit_set","","",null,null],[5,"BN_lshift","","",null,null],[5,"BN_lshift1","","",null,null],[5,"BN_exp","","",null,null],[5,"BN_mod_exp","","",null,null],[5,"BN_mask_bits","","",null,null],[5,"BN_rshift","","",null,null],[5,"BN_rshift1","","",null,null],[5,"BN_bn2hex","","",null,null],[5,"BN_bn2dec","","",null,null],[5,"BN_hex2bn","","",null,null],[5,"BN_dec2bn","","",null,null],[5,"BN_gcd","","",null,null],[5,"BN_mod_inverse","","",null,null],[5,"BN_clear","","",null,null],[5,"BN_dup","","",null,null],[5,"BN_ucmp","","",null,null],[5,"BN_set_bit","","",null,null],[5,"BN_clear_bit","","",null,null],[5,"BN_generate_prime_ex","","",null,null],[5,"BN_is_prime_ex","","",null,null],[5,"BN_is_prime_fasttest_ex","","",null,null],[5,"BN_get_rfc2409_prime_768","","",null,null],[5,"BN_get_rfc2409_prime_1024","","",null,null],[5,"BN_get_rfc3526_prime_1536","","",null,null],[5,"BN_get_rfc3526_prime_2048","","",null,null],[5,"BN_get_rfc3526_prime_3072","","",null,null],[5,"BN_get_rfc3526_prime_4096","","",null,null],[5,"BN_get_rfc3526_prime_6144","","",null,null],[5,"BN_get_rfc3526_prime_8192","","",null,null],[5,"CMS_ContentInfo_free","","",null,null],[5,"i2d_CMS_ContentInfo","","",null,null],[5,"d2i_CMS_ContentInfo","","",null,null],[5,"SMIME_read_CMS","","",null,null],[5,"CMS_sign","","",null,null],[5,"CMS_encrypt","","",null,null],[5,"CMS_decrypt","","",null,null],[5,"NCONF_new","","",null,null],[5,"NCONF_default","","",null,null],[5,"NCONF_free","","",null,null],[5,"OpenSSL_version_num","","",null,null],[5,"OpenSSL_version","","",null,null],[5,"CRYPTO_get_ex_new_index","","",null,null],[5,"CRYPTO_malloc","","",null,null],[5,"CRYPTO_free","","",null,null],[5,"FIPS_mode","","",null,null],[5,"FIPS_mode_set","","",null,null],[5,"CRYPTO_memcmp","","",null,null],[5,"DH_new","","",null,null],[5,"DH_free","","",null,null],[5,"d2i_DHparams","","",null,null],[5,"i2d_DHparams","","",null,null],[5,"DH_get_1024_160","","",null,null],[5,"DH_get_2048_224","","",null,null],[5,"DH_get_2048_256","","",null,null],[5,"DH_set0_pqg","","",null,null],[5,"DSA_new","","",null,null],[5,"DSA_free","","",null,null],[5,"DSA_up_ref","","",null,null],[5,"DSA_size","","",null,null],[5,"DSA_sign","","",null,null],[5,"DSA_verify","","",null,null],[5,"d2i_DSAPublicKey","","",null,null],[5,"d2i_DSAPrivateKey","","",null,null],[5,"DSA_generate_parameters_ex","","",null,null],[5,"DSA_generate_key","","",null,null],[5,"i2d_DSAPublicKey","","",null,null],[5,"i2d_DSAPrivateKey","","",null,null],[5,"DSA_get0_pqg","","",null,null],[5,"DSA_set0_pqg","","",null,null],[5,"DSA_get0_key","","",null,null],[5,"DSA_set0_key","","",null,null],[5,"EC_GF2m_simple_method","","",null,null],[5,"EC_GROUP_new","","",null,null],[5,"EC_GROUP_free","","",null,null],[5,"EC_GROUP_get_order","","",null,null],[5,"EC_GROUP_get_cofactor","","",null,null],[5,"EC_GROUP_get0_generator","","",null,null],[5,"EC_GROUP_get_curve_name","","",null,null],[5,"EC_GROUP_set_asn1_flag","","",null,null],[5,"EC_GROUP_get_curve_GFp","","",null,null],[5,"EC_GROUP_get_curve_GF2m","","",null,null],[5,"EC_GROUP_get_degree","","",null,null],[5,"EC_GROUP_order_bits","","",null,null],[5,"EC_GROUP_new_curve_GFp","","",null,null],[5,"EC_GROUP_new_curve_GF2m","","",null,null],[5,"EC_GROUP_new_by_curve_name","","",null,null],[5,"EC_POINT_new","","",null,null],[5,"EC_POINT_free","","",null,null],[5,"EC_POINT_dup","","",null,null],[5,"EC_POINT_get_affine_coordinates_GFp","","",null,null],[5,"EC_POINT_get_affine_coordinates_GF2m","","",null,null],[5,"EC_POINT_point2oct","","",null,null],[5,"EC_POINT_oct2point","","",null,null],[5,"EC_POINT_add","","",null,null],[5,"EC_POINT_invert","","",null,null],[5,"EC_POINT_cmp","","",null,null],[5,"EC_POINT_mul","","",null,null],[5,"EC_KEY_new","","",null,null],[5,"EC_KEY_new_by_curve_name","","",null,null],[5,"EC_KEY_free","","",null,null],[5,"EC_KEY_dup","","",null,null],[5,"EC_KEY_up_ref","","",null,null],[5,"EC_KEY_get0_group","","",null,null],[5,"EC_KEY_set_group","","",null,null],[5,"EC_KEY_get0_private_key","","",null,null],[5,"EC_KEY_set_private_key","","",null,null],[5,"EC_KEY_get0_public_key","","",null,null],[5,"EC_KEY_set_public_key","","",null,null],[5,"EC_KEY_generate_key","","",null,null],[5,"EC_KEY_check_key","","",null,null],[5,"EC_KEY_set_public_key_affine_coordinates","","",null,null],[5,"ECDSA_SIG_new","","",null,null],[5,"ECDSA_SIG_free","","",null,null],[5,"ECDSA_SIG_get0","","",null,null],[5,"ECDSA_SIG_set0","","",null,null],[5,"ECDSA_do_sign","","",null,null],[5,"ECDSA_do_verify","","",null,null],[5,"d2i_ECDSA_SIG","","",null,null],[5,"i2d_ECDSA_SIG","","",null,null],[5,"ERR_put_error","","",null,null],[5,"ERR_set_error_data","","",null,null],[5,"ERR_get_error","","",null,null],[5,"ERR_get_error_line_data","","",null,null],[5,"ERR_peek_last_error","","",null,null],[5,"ERR_clear_error","","",null,null],[5,"ERR_lib_error_string","","",null,null],[5,"ERR_func_error_string","","",null,null],[5,"ERR_reason_error_string","","",null,null],[5,"ERR_load_strings","","",null,null],[5,"ERR_get_next_error_library","","",null,null],[5,"EVP_MD_size","","",null,null],[5,"EVP_MD_type","","",null,null],[5,"EVP_CIPHER_key_length","","",null,null],[5,"EVP_CIPHER_block_size","","",null,null],[5,"EVP_CIPHER_iv_length","","",null,null],[5,"EVP_MD_CTX_new","","",null,null],[5,"EVP_MD_CTX_free","","",null,null],[5,"EVP_DigestInit_ex","","",null,null],[5,"EVP_DigestUpdate","","",null,null],[5,"EVP_DigestFinal_ex","","",null,null],[5,"EVP_DigestInit","","",null,null],[5,"EVP_DigestFinal","","",null,null],[5,"EVP_BytesToKey","","",null,null],[5,"EVP_CipherInit","","",null,null],[5,"EVP_CipherInit_ex","","",null,null],[5,"EVP_CipherUpdate","","",null,null],[5,"EVP_CipherFinal","","",null,null],[5,"EVP_DigestSignInit","","",null,null],[5,"EVP_DigestSignFinal","","",null,null],[5,"EVP_DigestVerifyInit","","",null,null],[5,"EVP_SealInit","","",null,null],[5,"EVP_SealFinal","","",null,null],[5,"EVP_EncryptInit_ex","","",null,null],[5,"EVP_EncryptUpdate","","",null,null],[5,"EVP_EncryptFinal_ex","","",null,null],[5,"EVP_OpenInit","","",null,null],[5,"EVP_OpenFinal","","",null,null],[5,"EVP_DecryptInit_ex","","",null,null],[5,"EVP_DecryptUpdate","","",null,null],[5,"EVP_DecryptFinal_ex","","",null,null],[5,"EVP_PKEY_size","","",null,null],[5,"EVP_DigestVerifyFinal","","",null,null],[5,"EVP_CIPHER_CTX_new","","",null,null],[5,"EVP_CIPHER_CTX_free","","",null,null],[5,"EVP_MD_CTX_copy_ex","","",null,null],[5,"EVP_CIPHER_CTX_set_key_length","","",null,null],[5,"EVP_CIPHER_CTX_set_padding","","",null,null],[5,"EVP_CIPHER_CTX_ctrl","","",null,null],[5,"EVP_md_null","","",null,null],[5,"EVP_md5","","",null,null],[5,"EVP_sha1","","",null,null],[5,"EVP_sha224","","",null,null],[5,"EVP_sha256","","",null,null],[5,"EVP_sha384","","",null,null],[5,"EVP_sha512","","",null,null],[5,"EVP_ripemd160","","",null,null],[5,"EVP_des_ecb","","",null,null],[5,"EVP_des_ede3","","",null,null],[5,"EVP_des_ede3_cbc","","",null,null],[5,"EVP_des_ede3_cfb64","","",null,null],[5,"EVP_des_cbc","","",null,null],[5,"EVP_rc4","","",null,null],[5,"EVP_bf_ecb","","",null,null],[5,"EVP_bf_cbc","","",null,null],[5,"EVP_bf_cfb64","","",null,null],[5,"EVP_bf_ofb","","",null,null],[5,"EVP_aes_128_ecb","","",null,null],[5,"EVP_aes_128_cbc","","",null,null],[5,"EVP_aes_128_cfb1","","",null,null],[5,"EVP_aes_128_cfb8","","",null,null],[5,"EVP_aes_128_cfb128","","",null,null],[5,"EVP_aes_128_ctr","","",null,null],[5,"EVP_aes_128_ccm","","",null,null],[5,"EVP_aes_128_gcm","","",null,null],[5,"EVP_aes_128_xts","","",null,null],[5,"EVP_aes_128_ofb","","",null,null],[5,"EVP_aes_128_ocb","","",null,null],[5,"EVP_aes_192_ecb","","",null,null],[5,"EVP_aes_192_cbc","","",null,null],[5,"EVP_aes_192_cfb1","","",null,null],[5,"EVP_aes_192_cfb8","","",null,null],[5,"EVP_aes_192_cfb128","","",null,null],[5,"EVP_aes_192_ctr","","",null,null],[5,"EVP_aes_192_ccm","","",null,null],[5,"EVP_aes_192_gcm","","",null,null],[5,"EVP_aes_192_ofb","","",null,null],[5,"EVP_aes_192_ocb","","",null,null],[5,"EVP_aes_256_ecb","","",null,null],[5,"EVP_aes_256_cbc","","",null,null],[5,"EVP_aes_256_cfb1","","",null,null],[5,"EVP_aes_256_cfb8","","",null,null],[5,"EVP_aes_256_cfb128","","",null,null],[5,"EVP_aes_256_ctr","","",null,null],[5,"EVP_aes_256_ccm","","",null,null],[5,"EVP_aes_256_gcm","","",null,null],[5,"EVP_aes_256_xts","","",null,null],[5,"EVP_aes_256_ofb","","",null,null],[5,"EVP_aes_256_ocb","","",null,null],[5,"EVP_chacha20","","",null,null],[5,"EVP_chacha20_poly1305","","",null,null],[5,"EVP_get_digestbyname","","",null,null],[5,"EVP_get_cipherbyname","","",null,null],[5,"EVP_PKEY_id","","",null,null],[5,"EVP_PKEY_bits","","",null,null],[5,"EVP_PKEY_assign","","",null,null],[5,"EVP_PKEY_set1_RSA","","",null,null],[5,"EVP_PKEY_get1_RSA","","",null,null],[5,"EVP_PKEY_get1_DSA","","",null,null],[5,"EVP_PKEY_get1_DH","","",null,null],[5,"EVP_PKEY_get1_EC_KEY","","",null,null],[5,"EVP_PKEY_new","","",null,null],[5,"EVP_PKEY_free","","",null,null],[5,"EVP_PKEY_up_ref","","",null,null],[5,"d2i_AutoPrivateKey","","",null,null],[5,"EVP_PKEY_cmp","","",null,null],[5,"EVP_PKEY_copy_parameters","","",null,null],[5,"PKCS5_PBKDF2_HMAC_SHA1","","",null,null],[5,"PKCS5_PBKDF2_HMAC","","",null,null],[5,"EVP_PBE_scrypt","","",null,null],[5,"EVP_PKEY_CTX_new","","",null,null],[5,"EVP_PKEY_CTX_new_id","","",null,null],[5,"EVP_PKEY_CTX_free","","",null,null],[5,"EVP_PKEY_CTX_ctrl","","",null,null],[5,"EVP_PKEY_new_mac_key","","",null,null],[5,"EVP_PKEY_derive_init","","",null,null],[5,"EVP_PKEY_derive_set_peer","","",null,null],[5,"EVP_PKEY_derive","","",null,null],[5,"EVP_PKEY_keygen_init","","",null,null],[5,"EVP_PKEY_keygen","","",null,null],[5,"EVP_PKCS82PKEY","","",null,null],[5,"EVP_EncodeBlock","","",null,null],[5,"EVP_DecodeBlock","","",null,null],[5,"HMAC_CTX_new","","",null,null],[5,"HMAC_CTX_free","","",null,null],[5,"HMAC_Init_ex","","",null,null],[5,"HMAC_Update","","",null,null],[5,"HMAC_Final","","",null,null],[5,"HMAC_CTX_copy","","",null,null],[5,"OBJ_nid2ln","","",null,null],[5,"OBJ_nid2sn","","",null,null],[5,"OBJ_obj2nid","","",null,null],[5,"OBJ_obj2txt","","",null,null],[5,"OBJ_find_sigid_algs","","",null,null],[5,"OCSP_cert_to_id","","",null,null],[5,"OCSP_request_add0_id","","",null,null],[5,"OCSP_resp_find_status","","",null,null],[5,"OCSP_check_validity","","",null,null],[5,"OCSP_response_status","","",null,null],[5,"OCSP_response_get1_basic","","",null,null],[5,"OCSP_response_create","","",null,null],[5,"OCSP_BASICRESP_new","","",null,null],[5,"OCSP_BASICRESP_free","","",null,null],[5,"OCSP_RESPONSE_new","","",null,null],[5,"OCSP_RESPONSE_free","","",null,null],[5,"i2d_OCSP_RESPONSE","","",null,null],[5,"d2i_OCSP_RESPONSE","","",null,null],[5,"OCSP_ONEREQ_free","","",null,null],[5,"OCSP_CERTID_free","","",null,null],[5,"OCSP_REQUEST_new","","",null,null],[5,"OCSP_REQUEST_free","","",null,null],[5,"i2d_OCSP_REQUEST","","",null,null],[5,"d2i_OCSP_REQUEST","","",null,null],[5,"OCSP_basic_verify","","",null,null],[5,"PEM_read_bio_X509","","",null,null],[5,"PEM_write_bio_X509","","",null,null],[5,"PEM_read_bio_X509_REQ","","",null,null],[5,"PEM_write_bio_X509_REQ","","",null,null],[5,"PEM_read_bio_RSAPrivateKey","","",null,null],[5,"PEM_write_bio_RSAPrivateKey","","",null,null],[5,"PEM_read_bio_RSAPublicKey","","",null,null],[5,"PEM_write_bio_RSAPublicKey","","",null,null],[5,"PEM_read_bio_RSA_PUBKEY","","",null,null],[5,"PEM_write_bio_RSA_PUBKEY","","",null,null],[5,"PEM_read_bio_DSAPrivateKey","","",null,null],[5,"PEM_write_bio_DSAPrivateKey","","",null,null],[5,"PEM_read_bio_DSA_PUBKEY","","",null,null],[5,"PEM_write_bio_DSA_PUBKEY","","",null,null],[5,"PEM_read_bio_ECPrivateKey","","",null,null],[5,"PEM_write_bio_ECPrivateKey","","",null,null],[5,"PEM_read_bio_DHparams","","",null,null],[5,"PEM_write_bio_DHparams","","",null,null],[5,"PEM_read_bio_PrivateKey","","",null,null],[5,"PEM_write_bio_PrivateKey","","",null,null],[5,"PEM_read_bio_PUBKEY","","",null,null],[5,"PEM_write_bio_PUBKEY","","",null,null],[5,"PEM_write_bio_PKCS8PrivateKey","","",null,null],[5,"d2i_PKCS8PrivateKey_bio","","",null,null],[5,"d2i_PKCS8_PRIV_KEY_INFO","","",null,null],[5,"PKCS8_PRIV_KEY_INFO_free","","",null,null],[5,"PEM_read_bio_PKCS7","","",null,null],[5,"PEM_write_bio_PKCS7","","",null,null],[5,"PEM_read_bio_CMS","","",null,null],[5,"PEM_write_bio_CMS","","",null,null],[5,"PKCS12_free","","",null,null],[5,"i2d_PKCS12","","",null,null],[5,"d2i_PKCS12","","",null,null],[5,"PKCS12_parse","","",null,null],[5,"PKCS12_create","","",null,null],[5,"i2d_PKCS12_bio","","",null,null],[5,"PKCS7_encrypt","","",null,null],[5,"PKCS7_verify","","",null,null],[5,"PKCS7_sign","","",null,null],[5,"PKCS7_decrypt","","",null,null],[5,"PKCS7_free","","",null,null],[5,"SMIME_write_PKCS7","","",null,null],[5,"SMIME_read_PKCS7","","",null,null],[5,"RAND_bytes","","",null,null],[5,"RAND_status","","",null,null],[5,"RSA_new","","",null,null],[5,"RSA_size","","",null,null],[5,"RSA_set0_key","","",null,null],[5,"RSA_set0_factors","","",null,null],[5,"RSA_set0_crt_params","","",null,null],[5,"RSA_get0_key","","",null,null],[5,"RSA_get0_factors","","",null,null],[5,"RSA_get0_crt_params","","",null,null],[5,"RSA_generate_key_ex","","",null,null],[5,"RSA_public_encrypt","","",null,null],[5,"RSA_private_encrypt","","",null,null],[5,"RSA_public_decrypt","","",null,null],[5,"RSA_private_decrypt","","",null,null],[5,"RSA_check_key","","",null,null],[5,"RSA_free","","",null,null],[5,"RSA_up_ref","","",null,null],[5,"i2d_RSAPublicKey","","",null,null],[5,"d2i_RSAPublicKey","","",null,null],[5,"i2d_RSAPrivateKey","","",null,null],[5,"d2i_RSAPrivateKey","","",null,null],[5,"RSA_sign","","",null,null],[5,"RSA_verify","","",null,null],[5,"RSA_padding_check_PKCS1_type_2","","",null,null],[5,"SHA1_Init","","",null,null],[5,"SHA1_Update","","",null,null],[5,"SHA1_Final","","",null,null],[5,"SHA1","","",null,null],[5,"SHA224_Init","","",null,null],[5,"SHA224_Update","","",null,null],[5,"SHA224_Final","","",null,null],[5,"SHA224","","",null,null],[5,"SHA256_Init","","",null,null],[5,"SHA256_Update","","",null,null],[5,"SHA256_Final","","",null,null],[5,"SHA256","","",null,null],[5,"SHA384_Init","","",null,null],[5,"SHA384_Update","","",null,null],[5,"SHA384_Final","","",null,null],[5,"SHA384","","",null,null],[5,"SHA512_Init","","",null,null],[5,"SHA512_Update","","",null,null],[5,"SHA512_Final","","",null,null],[5,"SHA512","","",null,null],[5,"SSL_CTX_set_tlsext_use_srtp","","",null,null],[5,"SSL_set_tlsext_use_srtp","","",null,null],[5,"SSL_get_srtp_profiles","","",null,null],[5,"SSL_get_selected_srtp_profile","","",null,null],[5,"SSL_CTX_get_options","","",null,null],[5,"SSL_CTX_set_options","","",null,null],[5,"SSL_CTX_clear_options","","",null,null],[5,"SSL_CTX_sess_set_new_cb","","",null,null],[5,"SSL_CTX_sess_set_remove_cb","","",null,null],[5,"SSL_CTX_sess_set_get_cb","","",null,null],[5,"SSL_CTX_set_cookie_generate_cb","","",null,null],[5,"SSL_CTX_set_cookie_verify_cb","","",null,null],[5,"SSL_CTX_set_next_protos_advertised_cb","","",null,null],[5,"SSL_CTX_set_next_proto_select_cb","","",null,null],[5,"SSL_get0_next_proto_negotiated","","",null,null],[5,"SSL_select_next_proto","","",null,null],[5,"SSL_CTX_set_alpn_protos","","",null,null],[5,"SSL_set_alpn_protos","","",null,null],[5,"SSL_CTX_set_alpn_select_cb","","",null,null],[5,"SSL_get0_alpn_selected","","",null,null],[5,"SSL_CTX_set_psk_client_callback","","",null,null],[5,"SSL_CTX_set_psk_server_callback","","",null,null],[5,"SSL_extension_supported","","",null,null],[5,"SSL_get_finished","","",null,null],[5,"SSL_get_peer_finished","","",null,null],[5,"SSL_CTX_get_verify_mode","","",null,null],[5,"SSL_get_verify_mode","","",null,null],[5,"SSL_is_init_finished","","",null,null],[5,"SSL_CTX_set_cipher_list","","",null,null],[5,"SSL_CTX_new","","",null,null],[5,"SSL_CTX_free","","",null,null],[5,"SSL_CTX_up_ref","","",null,null],[5,"SSL_CTX_get_cert_store","","",null,null],[5,"SSL_CTX_set_cert_store","","",null,null],[5,"SSL_get_current_cipher","","",null,null],[5,"SSL_CIPHER_get_bits","","",null,null],[5,"SSL_CIPHER_get_version","","",null,null],[5,"SSL_CIPHER_get_name","","",null,null],[5,"SSL_pending","","",null,null],[5,"SSL_set_bio","","",null,null],[5,"SSL_get_rbio","","",null,null],[5,"SSL_get_wbio","","",null,null],[5,"SSL_set_verify","","",null,null],[5,"SSL_CTX_use_PrivateKey","","",null,null],[5,"SSL_CTX_use_certificate","","",null,null],[5,"SSL_CTX_use_PrivateKey_file","","",null,null],[5,"SSL_CTX_use_certificate_file","","",null,null],[5,"SSL_CTX_use_certificate_chain_file","","",null,null],[5,"SSL_load_client_CA_file","","",null,null],[5,"SSL_state_string","","",null,null],[5,"SSL_state_string_long","","",null,null],[5,"SSL_SESSION_get_time","","",null,null],[5,"SSL_SESSION_get_timeout","","",null,null],[5,"SSL_SESSION_get_protocol_version","","",null,null],[5,"SSL_SESSION_get_id","","",null,null],[5,"SSL_SESSION_up_ref","","",null,null],[5,"SSL_SESSION_free","","",null,null],[5,"i2d_SSL_SESSION","","",null,null],[5,"SSL_set_session","","",null,null],[5,"SSL_CTX_add_session","","",null,null],[5,"SSL_CTX_remove_session","","",null,null],[5,"d2i_SSL_SESSION","","",null,null],[5,"SSL_get_peer_certificate","","",null,null],[5,"SSL_get_peer_cert_chain","","",null,null],[5,"SSL_CTX_set_verify","","",null,null],[5,"SSL_CTX_set_verify_depth","","",null,null],[5,"SSL_CTX_check_private_key","","",null,null],[5,"SSL_CTX_set_session_id_context","","",null,null],[5,"SSL_new","","",null,null],[5,"SSL_get0_param","","",null,null],[5,"SSL_free","","",null,null],[5,"SSL_accept","","",null,null],[5,"SSL_connect","","",null,null],[5,"SSL_read","","",null,null],[5,"SSL_write","","",null,null],[5,"SSL_ctrl","","",null,null],[5,"SSL_CTX_ctrl","","",null,null],[5,"SSL_CTX_callback_ctrl","","",null,null],[5,"TLS_method","","",null,null],[5,"DTLS_method","","",null,null],[5,"TLS_server_method","","",null,null],[5,"TLS_client_method","","",null,null],[5,"SSL_get_error","","",null,null],[5,"SSL_get_version","","",null,null],[5,"SSL_do_handshake","","",null,null],[5,"SSL_shutdown","","",null,null],[5,"SSL_CTX_set_client_CA_list","","",null,null],[5,"SSL_CTX_add_client_CA","","",null,null],[5,"SSL_CTX_set_default_verify_paths","","",null,null],[5,"SSL_CTX_load_verify_locations","","",null,null],[5,"SSL_get_ssl_method","","",null,null],[5,"SSL_set_connect_state","","",null,null],[5,"SSL_set_accept_state","","",null,null],[5,"SSL_CIPHER_description","","",null,null],[5,"SSL_get_certificate","","",null,null],[5,"SSL_get_privatekey","","",null,null],[5,"SSL_CTX_get0_certificate","","",null,null],[5,"SSL_CTX_get0_privatekey","","",null,null],[5,"SSL_set_shutdown","","",null,null],[5,"SSL_get_shutdown","","",null,null],[5,"SSL_version","","",null,null],[5,"SSL_get_session","","",null,null],[5,"SSL_get_SSL_CTX","","",null,null],[5,"SSL_set_SSL_CTX","","",null,null],[5,"SSL_get_verify_result","","",null,null],[5,"SSL_get0_verified_chain","","",null,null],[5,"SSL_get_client_random","","",null,null],[5,"SSL_get_server_random","","",null,null],[5,"SSL_SESSION_get_master_key","","",null,null],[5,"SSL_set_ex_data","","",null,null],[5,"SSL_get_ex_data","","",null,null],[5,"SSL_CTX_set_ex_data","","",null,null],[5,"SSL_CTX_get_ex_data","","",null,null],[5,"SSL_get_ex_data_X509_STORE_CTX_idx","","",null,null],[5,"SSL_CTX_set_tmp_dh_callback","","",null,null],[5,"SSL_set_tmp_dh_callback","","",null,null],[5,"SSL_get_current_compression","","",null,null],[5,"SSL_COMP_get_name","","",null,null],[5,"SSL_CIPHER_get_cipher_nid","","",null,null],[5,"SSL_CIPHER_get_digest_nid","","",null,null],[5,"SSL_session_reused","","",null,null],[5,"SSL_is_server","","",null,null],[5,"OPENSSL_init_ssl","","",null,null],[5,"OPENSSL_sk_num","","",null,null],[5,"OPENSSL_sk_value","","",null,null],[5,"OPENSSL_sk_new_null","","",null,null],[5,"OPENSSL_sk_free","","",null,null],[5,"OPENSSL_sk_pop_free","","",null,null],[5,"OPENSSL_sk_push","","",null,null],[5,"OPENSSL_sk_pop","","",null,null],[5,"SSL_get_servername","","",null,null],[5,"SSL_export_keying_material","","",null,null],[5,"X509_verify_cert_error_string","","",null,null],[5,"X509_sign","","",null,null],[5,"X509_digest","","",null,null],[5,"X509_REQ_sign","","",null,null],[5,"i2d_X509_bio","","",null,null],[5,"i2d_X509_REQ_bio","","",null,null],[5,"i2d_PrivateKey_bio","","",null,null],[5,"i2d_PUBKEY_bio","","",null,null],[5,"i2d_PUBKEY","","",null,null],[5,"d2i_PUBKEY","","",null,null],[5,"d2i_RSA_PUBKEY","","",null,null],[5,"i2d_RSA_PUBKEY","","",null,null],[5,"d2i_DSA_PUBKEY","","",null,null],[5,"i2d_DSA_PUBKEY","","",null,null],[5,"i2d_PrivateKey","","",null,null],[5,"d2i_ECPrivateKey","","",null,null],[5,"i2d_ECPrivateKey","","",null,null],[5,"X509_ALGOR_get0","","",null,null],[5,"X509_gmtime_adj","","",null,null],[5,"X509_to_X509_REQ","","",null,null],[5,"X509_ALGOR_free","","",null,null],[5,"X509_REQ_new","","",null,null],[5,"X509_REQ_free","","",null,null],[5,"d2i_X509_REQ","","",null,null],[5,"i2d_X509_REQ","","",null,null],[5,"X509_get0_signature","","",null,null],[5,"X509_get_signature_nid","","",null,null],[5,"X509_EXTENSION_free","","",null,null],[5,"X509_NAME_ENTRY_free","","",null,null],[5,"X509_NAME_new","","",null,null],[5,"X509_NAME_free","","",null,null],[5,"X509_new","","",null,null],[5,"X509_free","","",null,null],[5,"i2d_X509","","",null,null],[5,"d2i_X509","","",null,null],[5,"X509_get_pubkey","","",null,null],[5,"X509_set_version","","",null,null],[5,"X509_set_serialNumber","","",null,null],[5,"X509_get_serialNumber","","",null,null],[5,"X509_set_issuer_name","","",null,null],[5,"X509_get_issuer_name","","",null,null],[5,"X509_set_subject_name","","",null,null],[5,"X509_get_subject_name","","",null,null],[5,"X509_set1_notBefore","","",null,null],[5,"X509_set1_notAfter","","",null,null],[5,"X509_REQ_get_version","","",null,null],[5,"X509_REQ_set_version","","",null,null],[5,"X509_REQ_get_subject_name","","",null,null],[5,"X509_REQ_set_subject_name","","",null,null],[5,"X509_REQ_set_pubkey","","",null,null],[5,"X509_REQ_get_pubkey","","",null,null],[5,"X509_REQ_get_extensions","","",null,null],[5,"X509_REQ_add_extensions","","",null,null],[5,"X509_set_pubkey","","",null,null],[5,"X509_REQ_verify","","",null,null],[5,"X509_getm_notBefore","","",null,null],[5,"X509_getm_notAfter","","",null,null],[5,"X509_up_ref","","",null,null],[5,"X509_get0_extensions","","",null,null],[5,"X509_NAME_entry_count","","",null,null],[5,"X509_NAME_get_index_by_NID","","",null,null],[5,"X509_NAME_get_entry","","",null,null],[5,"X509_NAME_add_entry_by_NID","","",null,null],[5,"X509_NAME_ENTRY_get_object","","",null,null],[5,"X509_NAME_ENTRY_get_data","","",null,null],[5,"X509_NAME_add_entry_by_txt","","",null,null],[5,"X509_add_ext","","",null,null],[5,"X509_get_ext_d2i","","",null,null],[5,"X509_verify_cert","","",null,null],[5,"X509_STORE_get0_objects","","",null,null],[5,"X509_OBJECT_get0_X509","","",null,null],[5,"X509_OBJECT_free","","",null,null],[5,"X509_STORE_new","","",null,null],[5,"X509_STORE_free","","",null,null],[5,"X509_STORE_CTX_new","","",null,null],[5,"X509_STORE_CTX_free","","",null,null],[5,"X509_STORE_CTX_init","","",null,null],[5,"X509_STORE_CTX_cleanup","","",null,null],[5,"X509_STORE_add_cert","","",null,null],[5,"X509_STORE_set_default_paths","","",null,null],[5,"X509_STORE_CTX_get_ex_data","","",null,null],[5,"X509_STORE_CTX_get_error","","",null,null],[5,"X509_STORE_CTX_set_error","","",null,null],[5,"X509_STORE_CTX_get_error_depth","","",null,null],[5,"X509_STORE_CTX_get_current_cert","","",null,null],[5,"X509_STORE_CTX_get0_chain","","",null,null],[5,"X509_VERIFY_PARAM_free","","",null,null],[5,"X509_VERIFY_PARAM_set1_host","","",null,null],[5,"X509_VERIFY_PARAM_set_hostflags","","",null,null],[5,"X509_VERIFY_PARAM_set1_ip","","",null,null],[5,"GENERAL_NAME_free","","",null,null],[5,"X509V3_EXT_nconf_nid","","",null,null],[5,"X509V3_EXT_nconf","","",null,null],[5,"X509_check_issued","","",null,null],[5,"X509_verify","","",null,null],[5,"X509V3_set_nconf","","",null,null],[5,"X509V3_set_ctx","","",null,null],[5,"X509_get1_ocsp","","",null,null],[6,"bio_info_cb","","",null,null],[6,"BN_ULONG","","",null,null],[6,"CRYPTO_EX_new","","",null,null],[6,"CRYPTO_EX_dup","","",null,null],[6,"CRYPTO_EX_free","","",null,null],[6,"pem_password_cb","","",null,null],[6,"SHA_LONG","","",null,null],[6,"SHA_LONG64","","",null,null],[6,"tls_session_ticket_ext_cb_fn","","",null,null],[6,"tls_session_secret_cb_fn","","",null,null],[6,"GEN_SESSION_CB","","",null,null],[6,"PasswordCallback","","",null,null],[17,"AES_ENCRYPT","","",null,null],[17,"AES_DECRYPT","","",null,null],[17,"AES_MAXNR","","",null,null],[17,"AES_BLOCK_SIZE","","",null,null],[17,"V_ASN1_UTCTIME","","",null,null],[17,"V_ASN1_GENERALIZEDTIME","","",null,null],[17,"MBSTRING_FLAG","","",null,null],[17,"MBSTRING_UTF8","","",null,null],[17,"MBSTRING_ASC","","",null,null],[17,"MBSTRING_BMP","","",null,null],[17,"MBSTRING_UNIV","","",null,null],[17,"BIO_TYPE_NONE","","",null,null],[17,"BIO_CTRL_EOF","","",null,null],[17,"BIO_CTRL_INFO","","",null,null],[17,"BIO_CTRL_FLUSH","","",null,null],[17,"BIO_CTRL_DGRAM_QUERY_MTU","","",null,null],[17,"BIO_C_SET_BUF_MEM_EOF_RETURN","","",null,null],[17,"BIO_FLAGS_READ","","",null,null],[17,"BIO_FLAGS_WRITE","","",null,null],[17,"BIO_FLAGS_IO_SPECIAL","","",null,null],[17,"BIO_FLAGS_RWS","","",null,null],[17,"BIO_FLAGS_SHOULD_RETRY","","",null,null],[17,"CMS_TEXT","","",null,null],[17,"CMS_NOCERTS","","",null,null],[17,"CMS_NO_CONTENT_VERIFY","","",null,null],[17,"CMS_NO_ATTR_VERIFY","","",null,null],[17,"CMS_NOSIGS","","",null,null],[17,"CMS_NOINTERN","","",null,null],[17,"CMS_NO_SIGNER_CERT_VERIFY","","",null,null],[17,"CMS_NOVERIFY","","",null,null],[17,"CMS_DETACHED","","",null,null],[17,"CMS_BINARY","","",null,null],[17,"CMS_NOATTR","","",null,null],[17,"CMS_NOSMIMECAP","","",null,null],[17,"CMS_NOOLDMIMETYPE","","",null,null],[17,"CMS_CRLFEOL","","",null,null],[17,"CMS_STREAM","","",null,null],[17,"CMS_NOCRL","","",null,null],[17,"CMS_PARTIAL","","",null,null],[17,"CMS_REUSE_DIGEST","","",null,null],[17,"CMS_USE_KEYID","","",null,null],[17,"CMS_DEBUG_DECRYPT","","",null,null],[17,"CMS_KEY_PARAM","","",null,null],[17,"CMS_ASCIICRLF","","",null,null],[17,"CRYPTO_EX_INDEX_SSL","","",null,null],[17,"CRYPTO_EX_INDEX_SSL_CTX","","",null,null],[17,"OPENSSL_VERSION","","",null,null],[17,"OPENSSL_CFLAGS","","",null,null],[17,"OPENSSL_BUILT_ON","","",null,null],[17,"OPENSSL_PLATFORM","","",null,null],[17,"OPENSSL_DIR","","",null,null],[17,"CRYPTO_LOCK","","",null,null],[17,"DTLS1_COOKIE_LENGTH","","",null,null],[17,"OPENSSL_EC_NAMED_CURVE","","",null,null],[17,"ERR_TXT_MALLOCED","","",null,null],[17,"ERR_TXT_STRING","","",null,null],[17,"ERR_LIB_PEM","","",null,null],[17,"EVP_MAX_MD_SIZE","","",null,null],[17,"PKCS5_SALT_LEN","","",null,null],[17,"PKCS12_DEFAULT_ITER","","",null,null],[17,"EVP_PKEY_RSA","","",null,null],[17,"EVP_PKEY_DSA","","",null,null],[17,"EVP_PKEY_DH","","",null,null],[17,"EVP_PKEY_EC","","",null,null],[17,"EVP_PKEY_HMAC","","",null,null],[17,"EVP_PKEY_CMAC","","",null,null],[17,"EVP_CTRL_GCM_SET_IVLEN","","",null,null],[17,"EVP_CTRL_GCM_GET_TAG","","",null,null],[17,"EVP_CTRL_GCM_SET_TAG","","",null,null],[17,"EVP_PKEY_OP_KEYGEN","","",null,null],[17,"EVP_PKEY_OP_SIGN","","",null,null],[17,"EVP_PKEY_OP_VERIFY","","",null,null],[17,"EVP_PKEY_OP_VERIFYRECOVER","","",null,null],[17,"EVP_PKEY_OP_SIGNCTX","","",null,null],[17,"EVP_PKEY_OP_VERIFYCTX","","",null,null],[17,"EVP_PKEY_OP_ENCRYPT","","",null,null],[17,"EVP_PKEY_OP_DECRYPT","","",null,null],[17,"EVP_PKEY_OP_TYPE_SIG","","",null,null],[17,"EVP_PKEY_OP_TYPE_CRYPT","","",null,null],[17,"EVP_PKEY_CTRL_SET_MAC_KEY","","",null,null],[17,"EVP_PKEY_CTRL_CIPHER","","",null,null],[17,"EVP_PKEY_ALG_CTRL","","",null,null],[17,"NID_undef","","",null,null],[17,"NID_itu_t","","",null,null],[17,"NID_ccitt","","",null,null],[17,"NID_iso","","",null,null],[17,"NID_joint_iso_itu_t","","",null,null],[17,"NID_joint_iso_ccitt","","",null,null],[17,"NID_member_body","","",null,null],[17,"NID_identified_organization","","",null,null],[17,"NID_hmac_md5","","",null,null],[17,"NID_hmac_sha1","","",null,null],[17,"NID_certicom_arc","","",null,null],[17,"NID_international_organizations","","",null,null],[17,"NID_wap","","",null,null],[17,"NID_wap_wsg","","",null,null],[17,"NID_selected_attribute_types","","",null,null],[17,"NID_clearance","","",null,null],[17,"NID_ISO_US","","",null,null],[17,"NID_X9_57","","",null,null],[17,"NID_X9cm","","",null,null],[17,"NID_dsa","","",null,null],[17,"NID_dsaWithSHA1","","",null,null],[17,"NID_ansi_X9_62","","",null,null],[17,"NID_X9_62_prime_field","","",null,null],[17,"NID_X9_62_characteristic_two_field","","",null,null],[17,"NID_X9_62_id_characteristic_two_basis","","",null,null],[17,"NID_X9_62_onBasis","","",null,null],[17,"NID_X9_62_tpBasis","","",null,null],[17,"NID_X9_62_ppBasis","","",null,null],[17,"NID_X9_62_id_ecPublicKey","","",null,null],[17,"NID_X9_62_c2pnb163v1","","",null,null],[17,"NID_X9_62_c2pnb163v2","","",null,null],[17,"NID_X9_62_c2pnb163v3","","",null,null],[17,"NID_X9_62_c2pnb176v1","","",null,null],[17,"NID_X9_62_c2tnb191v1","","",null,null],[17,"NID_X9_62_c2tnb191v2","","",null,null],[17,"NID_X9_62_c2tnb191v3","","",null,null],[17,"NID_X9_62_c2onb191v4","","",null,null],[17,"NID_X9_62_c2onb191v5","","",null,null],[17,"NID_X9_62_c2pnb208w1","","",null,null],[17,"NID_X9_62_c2tnb239v1","","",null,null],[17,"NID_X9_62_c2tnb239v2","","",null,null],[17,"NID_X9_62_c2tnb239v3","","",null,null],[17,"NID_X9_62_c2onb239v4","","",null,null],[17,"NID_X9_62_c2onb239v5","","",null,null],[17,"NID_X9_62_c2pnb272w1","","",null,null],[17,"NID_X9_62_c2pnb304w1","","",null,null],[17,"NID_X9_62_c2tnb359v1","","",null,null],[17,"NID_X9_62_c2pnb368w1","","",null,null],[17,"NID_X9_62_c2tnb431r1","","",null,null],[17,"NID_X9_62_prime192v1","","",null,null],[17,"NID_X9_62_prime192v2","","",null,null],[17,"NID_X9_62_prime192v3","","",null,null],[17,"NID_X9_62_prime239v1","","",null,null],[17,"NID_X9_62_prime239v2","","",null,null],[17,"NID_X9_62_prime239v3","","",null,null],[17,"NID_X9_62_prime256v1","","",null,null],[17,"NID_ecdsa_with_SHA1","","",null,null],[17,"NID_ecdsa_with_Recommended","","",null,null],[17,"NID_ecdsa_with_Specified","","",null,null],[17,"NID_ecdsa_with_SHA224","","",null,null],[17,"NID_ecdsa_with_SHA256","","",null,null],[17,"NID_ecdsa_with_SHA384","","",null,null],[17,"NID_ecdsa_with_SHA512","","",null,null],[17,"NID_secp112r1","","",null,null],[17,"NID_secp112r2","","",null,null],[17,"NID_secp128r1","","",null,null],[17,"NID_secp128r2","","",null,null],[17,"NID_secp160k1","","",null,null],[17,"NID_secp160r1","","",null,null],[17,"NID_secp160r2","","",null,null],[17,"NID_secp192k1","","",null,null],[17,"NID_secp224k1","","",null,null],[17,"NID_secp224r1","","",null,null],[17,"NID_secp256k1","","",null,null],[17,"NID_secp384r1","","",null,null],[17,"NID_secp521r1","","",null,null],[17,"NID_sect113r1","","",null,null],[17,"NID_sect113r2","","",null,null],[17,"NID_sect131r1","","",null,null],[17,"NID_sect131r2","","",null,null],[17,"NID_sect163k1","","",null,null],[17,"NID_sect163r1","","",null,null],[17,"NID_sect163r2","","",null,null],[17,"NID_sect193r1","","",null,null],[17,"NID_sect193r2","","",null,null],[17,"NID_sect233k1","","",null,null],[17,"NID_sect233r1","","",null,null],[17,"NID_sect239k1","","",null,null],[17,"NID_sect283k1","","",null,null],[17,"NID_sect283r1","","",null,null],[17,"NID_sect409k1","","",null,null],[17,"NID_sect409r1","","",null,null],[17,"NID_sect571k1","","",null,null],[17,"NID_sect571r1","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls1","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls3","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls4","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls5","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls6","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls7","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls8","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls9","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls10","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls11","","",null,null],[17,"NID_wap_wsg_idm_ecid_wtls12","","",null,null],[17,"NID_cast5_cbc","","",null,null],[17,"NID_cast5_ecb","","",null,null],[17,"NID_cast5_cfb64","","",null,null],[17,"NID_cast5_ofb64","","",null,null],[17,"NID_pbeWithMD5AndCast5_CBC","","",null,null],[17,"NID_id_PasswordBasedMAC","","",null,null],[17,"NID_id_DHBasedMac","","",null,null],[17,"NID_rsadsi","","",null,null],[17,"NID_pkcs","","",null,null],[17,"NID_pkcs1","","",null,null],[17,"NID_rsaEncryption","","",null,null],[17,"NID_md2WithRSAEncryption","","",null,null],[17,"NID_md4WithRSAEncryption","","",null,null],[17,"NID_md5WithRSAEncryption","","",null,null],[17,"NID_sha1WithRSAEncryption","","",null,null],[17,"NID_rsaesOaep","","",null,null],[17,"NID_mgf1","","",null,null],[17,"NID_rsassaPss","","",null,null],[17,"NID_sha256WithRSAEncryption","","",null,null],[17,"NID_sha384WithRSAEncryption","","",null,null],[17,"NID_sha512WithRSAEncryption","","",null,null],[17,"NID_sha224WithRSAEncryption","","",null,null],[17,"NID_pkcs3","","",null,null],[17,"NID_dhKeyAgreement","","",null,null],[17,"NID_pkcs5","","",null,null],[17,"NID_pbeWithMD2AndDES_CBC","","",null,null],[17,"NID_pbeWithMD5AndDES_CBC","","",null,null],[17,"NID_pbeWithMD2AndRC2_CBC","","",null,null],[17,"NID_pbeWithMD5AndRC2_CBC","","",null,null],[17,"NID_pbeWithSHA1AndDES_CBC","","",null,null],[17,"NID_pbeWithSHA1AndRC2_CBC","","",null,null],[17,"NID_id_pbkdf2","","",null,null],[17,"NID_pbes2","","",null,null],[17,"NID_pbmac1","","",null,null],[17,"NID_pkcs7","","",null,null],[17,"NID_pkcs7_data","","",null,null],[17,"NID_pkcs7_signed","","",null,null],[17,"NID_pkcs7_enveloped","","",null,null],[17,"NID_pkcs7_signedAndEnveloped","","",null,null],[17,"NID_pkcs7_digest","","",null,null],[17,"NID_pkcs7_encrypted","","",null,null],[17,"NID_pkcs9","","",null,null],[17,"NID_pkcs9_emailAddress","","",null,null],[17,"NID_pkcs9_unstructuredName","","",null,null],[17,"NID_pkcs9_contentType","","",null,null],[17,"NID_pkcs9_messageDigest","","",null,null],[17,"NID_pkcs9_signingTime","","",null,null],[17,"NID_pkcs9_countersignature","","",null,null],[17,"NID_pkcs9_challengePassword","","",null,null],[17,"NID_pkcs9_unstructuredAddress","","",null,null],[17,"NID_pkcs9_extCertAttributes","","",null,null],[17,"NID_ext_req","","",null,null],[17,"NID_SMIMECapabilities","","",null,null],[17,"NID_SMIME","","",null,null],[17,"NID_id_smime_mod","","",null,null],[17,"NID_id_smime_ct","","",null,null],[17,"NID_id_smime_aa","","",null,null],[17,"NID_id_smime_alg","","",null,null],[17,"NID_id_smime_cd","","",null,null],[17,"NID_id_smime_spq","","",null,null],[17,"NID_id_smime_cti","","",null,null],[17,"NID_id_smime_mod_cms","","",null,null],[17,"NID_id_smime_mod_ess","","",null,null],[17,"NID_id_smime_mod_oid","","",null,null],[17,"NID_id_smime_mod_msg_v3","","",null,null],[17,"NID_id_smime_mod_ets_eSignature_88","","",null,null],[17,"NID_id_smime_mod_ets_eSignature_97","","",null,null],[17,"NID_id_smime_mod_ets_eSigPolicy_88","","",null,null],[17,"NID_id_smime_mod_ets_eSigPolicy_97","","",null,null],[17,"NID_id_smime_ct_receipt","","",null,null],[17,"NID_id_smime_ct_authData","","",null,null],[17,"NID_id_smime_ct_publishCert","","",null,null],[17,"NID_id_smime_ct_TSTInfo","","",null,null],[17,"NID_id_smime_ct_TDTInfo","","",null,null],[17,"NID_id_smime_ct_contentInfo","","",null,null],[17,"NID_id_smime_ct_DVCSRequestData","","",null,null],[17,"NID_id_smime_ct_DVCSResponseData","","",null,null],[17,"NID_id_smime_ct_compressedData","","",null,null],[17,"NID_id_ct_asciiTextWithCRLF","","",null,null],[17,"NID_id_smime_aa_receiptRequest","","",null,null],[17,"NID_id_smime_aa_securityLabel","","",null,null],[17,"NID_id_smime_aa_mlExpandHistory","","",null,null],[17,"NID_id_smime_aa_contentHint","","",null,null],[17,"NID_id_smime_aa_msgSigDigest","","",null,null],[17,"NID_id_smime_aa_encapContentType","","",null,null],[17,"NID_id_smime_aa_contentIdentifier","","",null,null],[17,"NID_id_smime_aa_macValue","","",null,null],[17,"NID_id_smime_aa_equivalentLabels","","",null,null],[17,"NID_id_smime_aa_contentReference","","",null,null],[17,"NID_id_smime_aa_encrypKeyPref","","",null,null],[17,"NID_id_smime_aa_signingCertificate","","",null,null],[17,"NID_id_smime_aa_smimeEncryptCerts","","",null,null],[17,"NID_id_smime_aa_timeStampToken","","",null,null],[17,"NID_id_smime_aa_ets_sigPolicyId","","",null,null],[17,"NID_id_smime_aa_ets_commitmentType","","",null,null],[17,"NID_id_smime_aa_ets_signerLocation","","",null,null],[17,"NID_id_smime_aa_ets_signerAttr","","",null,null],[17,"NID_id_smime_aa_ets_otherSigCert","","",null,null],[17,"NID_id_smime_aa_ets_contentTimestamp","","",null,null],[17,"NID_id_smime_aa_ets_CertificateRefs","","",null,null],[17,"NID_id_smime_aa_ets_RevocationRefs","","",null,null],[17,"NID_id_smime_aa_ets_certValues","","",null,null],[17,"NID_id_smime_aa_ets_revocationValues","","",null,null],[17,"NID_id_smime_aa_ets_escTimeStamp","","",null,null],[17,"NID_id_smime_aa_ets_certCRLTimestamp","","",null,null],[17,"NID_id_smime_aa_ets_archiveTimeStamp","","",null,null],[17,"NID_id_smime_aa_signatureType","","",null,null],[17,"NID_id_smime_aa_dvcs_dvc","","",null,null],[17,"NID_id_smime_alg_ESDHwith3DES","","",null,null],[17,"NID_id_smime_alg_ESDHwithRC2","","",null,null],[17,"NID_id_smime_alg_3DESwrap","","",null,null],[17,"NID_id_smime_alg_RC2wrap","","",null,null],[17,"NID_id_smime_alg_ESDH","","",null,null],[17,"NID_id_smime_alg_CMS3DESwrap","","",null,null],[17,"NID_id_smime_alg_CMSRC2wrap","","",null,null],[17,"NID_id_alg_PWRI_KEK","","",null,null],[17,"NID_id_smime_cd_ldap","","",null,null],[17,"NID_id_smime_spq_ets_sqt_uri","","",null,null],[17,"NID_id_smime_spq_ets_sqt_unotice","","",null,null],[17,"NID_id_smime_cti_ets_proofOfOrigin","","",null,null],[17,"NID_id_smime_cti_ets_proofOfReceipt","","",null,null],[17,"NID_id_smime_cti_ets_proofOfDelivery","","",null,null],[17,"NID_id_smime_cti_ets_proofOfSender","","",null,null],[17,"NID_id_smime_cti_ets_proofOfApproval","","",null,null],[17,"NID_id_smime_cti_ets_proofOfCreation","","",null,null],[17,"NID_friendlyName","","",null,null],[17,"NID_localKeyID","","",null,null],[17,"NID_ms_csp_name","","",null,null],[17,"NID_LocalKeySet","","",null,null],[17,"NID_x509Certificate","","",null,null],[17,"NID_sdsiCertificate","","",null,null],[17,"NID_x509Crl","","",null,null],[17,"NID_pbe_WithSHA1And128BitRC4","","",null,null],[17,"NID_pbe_WithSHA1And40BitRC4","","",null,null],[17,"NID_pbe_WithSHA1And3_Key_TripleDES_CBC","","",null,null],[17,"NID_pbe_WithSHA1And2_Key_TripleDES_CBC","","",null,null],[17,"NID_pbe_WithSHA1And128BitRC2_CBC","","",null,null],[17,"NID_pbe_WithSHA1And40BitRC2_CBC","","",null,null],[17,"NID_keyBag","","",null,null],[17,"NID_pkcs8ShroudedKeyBag","","",null,null],[17,"NID_certBag","","",null,null],[17,"NID_crlBag","","",null,null],[17,"NID_secretBag","","",null,null],[17,"NID_safeContentsBag","","",null,null],[17,"NID_md2","","",null,null],[17,"NID_md4","","",null,null],[17,"NID_md5","","",null,null],[17,"NID_md5_sha1","","",null,null],[17,"NID_hmacWithMD5","","",null,null],[17,"NID_hmacWithSHA1","","",null,null],[17,"NID_hmacWithSHA224","","",null,null],[17,"NID_hmacWithSHA256","","",null,null],[17,"NID_hmacWithSHA384","","",null,null],[17,"NID_hmacWithSHA512","","",null,null],[17,"NID_rc2_cbc","","",null,null],[17,"NID_rc2_ecb","","",null,null],[17,"NID_rc2_cfb64","","",null,null],[17,"NID_rc2_ofb64","","",null,null],[17,"NID_rc2_40_cbc","","",null,null],[17,"NID_rc2_64_cbc","","",null,null],[17,"NID_rc4","","",null,null],[17,"NID_rc4_40","","",null,null],[17,"NID_des_ede3_cbc","","",null,null],[17,"NID_rc5_cbc","","",null,null],[17,"NID_rc5_ecb","","",null,null],[17,"NID_rc5_cfb64","","",null,null],[17,"NID_rc5_ofb64","","",null,null],[17,"NID_ms_ext_req","","",null,null],[17,"NID_ms_code_ind","","",null,null],[17,"NID_ms_code_com","","",null,null],[17,"NID_ms_ctl_sign","","",null,null],[17,"NID_ms_sgc","","",null,null],[17,"NID_ms_efs","","",null,null],[17,"NID_ms_smartcard_login","","",null,null],[17,"NID_ms_upn","","",null,null],[17,"NID_idea_cbc","","",null,null],[17,"NID_idea_ecb","","",null,null],[17,"NID_idea_cfb64","","",null,null],[17,"NID_idea_ofb64","","",null,null],[17,"NID_bf_cbc","","",null,null],[17,"NID_bf_ecb","","",null,null],[17,"NID_bf_cfb64","","",null,null],[17,"NID_bf_ofb64","","",null,null],[17,"NID_id_pkix","","",null,null],[17,"NID_id_pkix_mod","","",null,null],[17,"NID_id_pe","","",null,null],[17,"NID_id_qt","","",null,null],[17,"NID_id_kp","","",null,null],[17,"NID_id_it","","",null,null],[17,"NID_id_pkip","","",null,null],[17,"NID_id_alg","","",null,null],[17,"NID_id_cmc","","",null,null],[17,"NID_id_on","","",null,null],[17,"NID_id_pda","","",null,null],[17,"NID_id_aca","","",null,null],[17,"NID_id_qcs","","",null,null],[17,"NID_id_cct","","",null,null],[17,"NID_id_ppl","","",null,null],[17,"NID_id_ad","","",null,null],[17,"NID_id_pkix1_explicit_88","","",null,null],[17,"NID_id_pkix1_implicit_88","","",null,null],[17,"NID_id_pkix1_explicit_93","","",null,null],[17,"NID_id_pkix1_implicit_93","","",null,null],[17,"NID_id_mod_crmf","","",null,null],[17,"NID_id_mod_cmc","","",null,null],[17,"NID_id_mod_kea_profile_88","","",null,null],[17,"NID_id_mod_kea_profile_93","","",null,null],[17,"NID_id_mod_cmp","","",null,null],[17,"NID_id_mod_qualified_cert_88","","",null,null],[17,"NID_id_mod_qualified_cert_93","","",null,null],[17,"NID_id_mod_attribute_cert","","",null,null],[17,"NID_id_mod_timestamp_protocol","","",null,null],[17,"NID_id_mod_ocsp","","",null,null],[17,"NID_id_mod_dvcs","","",null,null],[17,"NID_id_mod_cmp2000","","",null,null],[17,"NID_info_access","","",null,null],[17,"NID_biometricInfo","","",null,null],[17,"NID_qcStatements","","",null,null],[17,"NID_ac_auditEntity","","",null,null],[17,"NID_ac_targeting","","",null,null],[17,"NID_aaControls","","",null,null],[17,"NID_sbgp_ipAddrBlock","","",null,null],[17,"NID_sbgp_autonomousSysNum","","",null,null],[17,"NID_sbgp_routerIdentifier","","",null,null],[17,"NID_ac_proxying","","",null,null],[17,"NID_sinfo_access","","",null,null],[17,"NID_proxyCertInfo","","",null,null],[17,"NID_id_qt_cps","","",null,null],[17,"NID_id_qt_unotice","","",null,null],[17,"NID_textNotice","","",null,null],[17,"NID_server_auth","","",null,null],[17,"NID_client_auth","","",null,null],[17,"NID_code_sign","","",null,null],[17,"NID_email_protect","","",null,null],[17,"NID_ipsecEndSystem","","",null,null],[17,"NID_ipsecTunnel","","",null,null],[17,"NID_ipsecUser","","",null,null],[17,"NID_time_stamp","","",null,null],[17,"NID_OCSP_sign","","",null,null],[17,"NID_dvcs","","",null,null],[17,"NID_id_it_caProtEncCert","","",null,null],[17,"NID_id_it_signKeyPairTypes","","",null,null],[17,"NID_id_it_encKeyPairTypes","","",null,null],[17,"NID_id_it_preferredSymmAlg","","",null,null],[17,"NID_id_it_caKeyUpdateInfo","","",null,null],[17,"NID_id_it_currentCRL","","",null,null],[17,"NID_id_it_unsupportedOIDs","","",null,null],[17,"NID_id_it_subscriptionRequest","","",null,null],[17,"NID_id_it_subscriptionResponse","","",null,null],[17,"NID_id_it_keyPairParamReq","","",null,null],[17,"NID_id_it_keyPairParamRep","","",null,null],[17,"NID_id_it_revPassphrase","","",null,null],[17,"NID_id_it_implicitConfirm","","",null,null],[17,"NID_id_it_confirmWaitTime","","",null,null],[17,"NID_id_it_origPKIMessage","","",null,null],[17,"NID_id_it_suppLangTags","","",null,null],[17,"NID_id_regCtrl","","",null,null],[17,"NID_id_regInfo","","",null,null],[17,"NID_id_regCtrl_regToken","","",null,null],[17,"NID_id_regCtrl_authenticator","","",null,null],[17,"NID_id_regCtrl_pkiPublicationInfo","","",null,null],[17,"NID_id_regCtrl_pkiArchiveOptions","","",null,null],[17,"NID_id_regCtrl_oldCertID","","",null,null],[17,"NID_id_regCtrl_protocolEncrKey","","",null,null],[17,"NID_id_regInfo_utf8Pairs","","",null,null],[17,"NID_id_regInfo_certReq","","",null,null],[17,"NID_id_alg_des40","","",null,null],[17,"NID_id_alg_noSignature","","",null,null],[17,"NID_id_alg_dh_sig_hmac_sha1","","",null,null],[17,"NID_id_alg_dh_pop","","",null,null],[17,"NID_id_cmc_statusInfo","","",null,null],[17,"NID_id_cmc_identification","","",null,null],[17,"NID_id_cmc_identityProof","","",null,null],[17,"NID_id_cmc_dataReturn","","",null,null],[17,"NID_id_cmc_transactionId","","",null,null],[17,"NID_id_cmc_senderNonce","","",null,null],[17,"NID_id_cmc_recipientNonce","","",null,null],[17,"NID_id_cmc_addExtensions","","",null,null],[17,"NID_id_cmc_encryptedPOP","","",null,null],[17,"NID_id_cmc_decryptedPOP","","",null,null],[17,"NID_id_cmc_lraPOPWitness","","",null,null],[17,"NID_id_cmc_getCert","","",null,null],[17,"NID_id_cmc_getCRL","","",null,null],[17,"NID_id_cmc_revokeRequest","","",null,null],[17,"NID_id_cmc_regInfo","","",null,null],[17,"NID_id_cmc_responseInfo","","",null,null],[17,"NID_id_cmc_queryPending","","",null,null],[17,"NID_id_cmc_popLinkRandom","","",null,null],[17,"NID_id_cmc_popLinkWitness","","",null,null],[17,"NID_id_cmc_confirmCertAcceptance","","",null,null],[17,"NID_id_on_personalData","","",null,null],[17,"NID_id_on_permanentIdentifier","","",null,null],[17,"NID_id_pda_dateOfBirth","","",null,null],[17,"NID_id_pda_placeOfBirth","","",null,null],[17,"NID_id_pda_gender","","",null,null],[17,"NID_id_pda_countryOfCitizenship","","",null,null],[17,"NID_id_pda_countryOfResidence","","",null,null],[17,"NID_id_aca_authenticationInfo","","",null,null],[17,"NID_id_aca_accessIdentity","","",null,null],[17,"NID_id_aca_chargingIdentity","","",null,null],[17,"NID_id_aca_group","","",null,null],[17,"NID_id_aca_role","","",null,null],[17,"NID_id_aca_encAttrs","","",null,null],[17,"NID_id_qcs_pkixQCSyntax_v1","","",null,null],[17,"NID_id_cct_crs","","",null,null],[17,"NID_id_cct_PKIData","","",null,null],[17,"NID_id_cct_PKIResponse","","",null,null],[17,"NID_id_ppl_anyLanguage","","",null,null],[17,"NID_id_ppl_inheritAll","","",null,null],[17,"NID_Independent","","",null,null],[17,"NID_ad_OCSP","","",null,null],[17,"NID_ad_ca_issuers","","",null,null],[17,"NID_ad_timeStamping","","",null,null],[17,"NID_ad_dvcs","","",null,null],[17,"NID_caRepository","","",null,null],[17,"NID_id_pkix_OCSP_basic","","",null,null],[17,"NID_id_pkix_OCSP_Nonce","","",null,null],[17,"NID_id_pkix_OCSP_CrlID","","",null,null],[17,"NID_id_pkix_OCSP_acceptableResponses","","",null,null],[17,"NID_id_pkix_OCSP_noCheck","","",null,null],[17,"NID_id_pkix_OCSP_archiveCutoff","","",null,null],[17,"NID_id_pkix_OCSP_serviceLocator","","",null,null],[17,"NID_id_pkix_OCSP_extendedStatus","","",null,null],[17,"NID_id_pkix_OCSP_valid","","",null,null],[17,"NID_id_pkix_OCSP_path","","",null,null],[17,"NID_id_pkix_OCSP_trustRoot","","",null,null],[17,"NID_algorithm","","",null,null],[17,"NID_md5WithRSA","","",null,null],[17,"NID_des_ecb","","",null,null],[17,"NID_des_cbc","","",null,null],[17,"NID_des_ofb64","","",null,null],[17,"NID_des_cfb64","","",null,null],[17,"NID_rsaSignature","","",null,null],[17,"NID_dsa_2","","",null,null],[17,"NID_dsaWithSHA","","",null,null],[17,"NID_shaWithRSAEncryption","","",null,null],[17,"NID_des_ede_ecb","","",null,null],[17,"NID_des_ede3_ecb","","",null,null],[17,"NID_des_ede_cbc","","",null,null],[17,"NID_des_ede_cfb64","","",null,null],[17,"NID_des_ede3_cfb64","","",null,null],[17,"NID_des_ede_ofb64","","",null,null],[17,"NID_des_ede3_ofb64","","",null,null],[17,"NID_desx_cbc","","",null,null],[17,"NID_sha","","",null,null],[17,"NID_sha1","","",null,null],[17,"NID_dsaWithSHA1_2","","",null,null],[17,"NID_sha1WithRSA","","",null,null],[17,"NID_ripemd160","","",null,null],[17,"NID_ripemd160WithRSA","","",null,null],[17,"NID_sxnet","","",null,null],[17,"NID_X500","","",null,null],[17,"NID_X509","","",null,null],[17,"NID_commonName","","",null,null],[17,"NID_surname","","",null,null],[17,"NID_serialNumber","","",null,null],[17,"NID_countryName","","",null,null],[17,"NID_localityName","","",null,null],[17,"NID_stateOrProvinceName","","",null,null],[17,"NID_streetAddress","","",null,null],[17,"NID_organizationName","","",null,null],[17,"NID_organizationalUnitName","","",null,null],[17,"NID_title","","",null,null],[17,"NID_description","","",null,null],[17,"NID_searchGuide","","",null,null],[17,"NID_businessCategory","","",null,null],[17,"NID_postalAddress","","",null,null],[17,"NID_postalCode","","",null,null],[17,"NID_postOfficeBox","","",null,null],[17,"NID_physicalDeliveryOfficeName","","",null,null],[17,"NID_telephoneNumber","","",null,null],[17,"NID_telexNumber","","",null,null],[17,"NID_teletexTerminalIdentifier","","",null,null],[17,"NID_facsimileTelephoneNumber","","",null,null],[17,"NID_x121Address","","",null,null],[17,"NID_internationaliSDNNumber","","",null,null],[17,"NID_registeredAddress","","",null,null],[17,"NID_destinationIndicator","","",null,null],[17,"NID_preferredDeliveryMethod","","",null,null],[17,"NID_presentationAddress","","",null,null],[17,"NID_supportedApplicationContext","","",null,null],[17,"NID_member","","",null,null],[17,"NID_owner","","",null,null],[17,"NID_roleOccupant","","",null,null],[17,"NID_seeAlso","","",null,null],[17,"NID_userPassword","","",null,null],[17,"NID_userCertificate","","",null,null],[17,"NID_cACertificate","","",null,null],[17,"NID_authorityRevocationList","","",null,null],[17,"NID_certificateRevocationList","","",null,null],[17,"NID_crossCertificatePair","","",null,null],[17,"NID_name","","",null,null],[17,"NID_givenName","","",null,null],[17,"NID_initials","","",null,null],[17,"NID_generationQualifier","","",null,null],[17,"NID_x500UniqueIdentifier","","",null,null],[17,"NID_dnQualifier","","",null,null],[17,"NID_enhancedSearchGuide","","",null,null],[17,"NID_protocolInformation","","",null,null],[17,"NID_distinguishedName","","",null,null],[17,"NID_uniqueMember","","",null,null],[17,"NID_houseIdentifier","","",null,null],[17,"NID_supportedAlgorithms","","",null,null],[17,"NID_deltaRevocationList","","",null,null],[17,"NID_dmdName","","",null,null],[17,"NID_pseudonym","","",null,null],[17,"NID_role","","",null,null],[17,"NID_X500algorithms","","",null,null],[17,"NID_rsa","","",null,null],[17,"NID_mdc2WithRSA","","",null,null],[17,"NID_mdc2","","",null,null],[17,"NID_id_ce","","",null,null],[17,"NID_subject_directory_attributes","","",null,null],[17,"NID_subject_key_identifier","","",null,null],[17,"NID_key_usage","","",null,null],[17,"NID_private_key_usage_period","","",null,null],[17,"NID_subject_alt_name","","",null,null],[17,"NID_issuer_alt_name","","",null,null],[17,"NID_basic_constraints","","",null,null],[17,"NID_crl_number","","",null,null],[17,"NID_crl_reason","","",null,null],[17,"NID_invalidity_date","","",null,null],[17,"NID_delta_crl","","",null,null],[17,"NID_issuing_distribution_point","","",null,null],[17,"NID_certificate_issuer","","",null,null],[17,"NID_name_constraints","","",null,null],[17,"NID_crl_distribution_points","","",null,null],[17,"NID_certificate_policies","","",null,null],[17,"NID_any_policy","","",null,null],[17,"NID_policy_mappings","","",null,null],[17,"NID_authority_key_identifier","","",null,null],[17,"NID_policy_constraints","","",null,null],[17,"NID_ext_key_usage","","",null,null],[17,"NID_freshest_crl","","",null,null],[17,"NID_inhibit_any_policy","","",null,null],[17,"NID_target_information","","",null,null],[17,"NID_no_rev_avail","","",null,null],[17,"NID_anyExtendedKeyUsage","","",null,null],[17,"NID_netscape","","",null,null],[17,"NID_netscape_cert_extension","","",null,null],[17,"NID_netscape_data_type","","",null,null],[17,"NID_netscape_cert_type","","",null,null],[17,"NID_netscape_base_url","","",null,null],[17,"NID_netscape_revocation_url","","",null,null],[17,"NID_netscape_ca_revocation_url","","",null,null],[17,"NID_netscape_renewal_url","","",null,null],[17,"NID_netscape_ca_policy_url","","",null,null],[17,"NID_netscape_ssl_server_name","","",null,null],[17,"NID_netscape_comment","","",null,null],[17,"NID_netscape_cert_sequence","","",null,null],[17,"NID_ns_sgc","","",null,null],[17,"NID_org","","",null,null],[17,"NID_dod","","",null,null],[17,"NID_iana","","",null,null],[17,"NID_Directory","","",null,null],[17,"NID_Management","","",null,null],[17,"NID_Experimental","","",null,null],[17,"NID_Private","","",null,null],[17,"NID_Security","","",null,null],[17,"NID_SNMPv2","","",null,null],[17,"NID_Mail","","",null,null],[17,"NID_Enterprises","","",null,null],[17,"NID_dcObject","","",null,null],[17,"NID_mime_mhs","","",null,null],[17,"NID_mime_mhs_headings","","",null,null],[17,"NID_mime_mhs_bodies","","",null,null],[17,"NID_id_hex_partial_message","","",null,null],[17,"NID_id_hex_multipart_message","","",null,null],[17,"NID_zlib_compression","","",null,null],[17,"NID_aes_128_ecb","","",null,null],[17,"NID_aes_128_cbc","","",null,null],[17,"NID_aes_128_ofb128","","",null,null],[17,"NID_aes_128_cfb128","","",null,null],[17,"NID_id_aes128_wrap","","",null,null],[17,"NID_aes_128_gcm","","",null,null],[17,"NID_aes_128_ccm","","",null,null],[17,"NID_id_aes128_wrap_pad","","",null,null],[17,"NID_aes_192_ecb","","",null,null],[17,"NID_aes_192_cbc","","",null,null],[17,"NID_aes_192_ofb128","","",null,null],[17,"NID_aes_192_cfb128","","",null,null],[17,"NID_id_aes192_wrap","","",null,null],[17,"NID_aes_192_gcm","","",null,null],[17,"NID_aes_192_ccm","","",null,null],[17,"NID_id_aes192_wrap_pad","","",null,null],[17,"NID_aes_256_ecb","","",null,null],[17,"NID_aes_256_cbc","","",null,null],[17,"NID_aes_256_ofb128","","",null,null],[17,"NID_aes_256_cfb128","","",null,null],[17,"NID_id_aes256_wrap","","",null,null],[17,"NID_aes_256_gcm","","",null,null],[17,"NID_aes_256_ccm","","",null,null],[17,"NID_id_aes256_wrap_pad","","",null,null],[17,"NID_aes_128_cfb1","","",null,null],[17,"NID_aes_192_cfb1","","",null,null],[17,"NID_aes_256_cfb1","","",null,null],[17,"NID_aes_128_cfb8","","",null,null],[17,"NID_aes_192_cfb8","","",null,null],[17,"NID_aes_256_cfb8","","",null,null],[17,"NID_aes_128_ctr","","",null,null],[17,"NID_aes_192_ctr","","",null,null],[17,"NID_aes_256_ctr","","",null,null],[17,"NID_aes_128_xts","","",null,null],[17,"NID_aes_256_xts","","",null,null],[17,"NID_des_cfb1","","",null,null],[17,"NID_des_cfb8","","",null,null],[17,"NID_des_ede3_cfb1","","",null,null],[17,"NID_des_ede3_cfb8","","",null,null],[17,"NID_sha256","","",null,null],[17,"NID_sha384","","",null,null],[17,"NID_sha512","","",null,null],[17,"NID_sha224","","",null,null],[17,"NID_dsa_with_SHA224","","",null,null],[17,"NID_dsa_with_SHA256","","",null,null],[17,"NID_hold_instruction_code","","",null,null],[17,"NID_hold_instruction_none","","",null,null],[17,"NID_hold_instruction_call_issuer","","",null,null],[17,"NID_hold_instruction_reject","","",null,null],[17,"NID_data","","",null,null],[17,"NID_pss","","",null,null],[17,"NID_ucl","","",null,null],[17,"NID_pilot","","",null,null],[17,"NID_pilotAttributeType","","",null,null],[17,"NID_pilotAttributeSyntax","","",null,null],[17,"NID_pilotObjectClass","","",null,null],[17,"NID_pilotGroups","","",null,null],[17,"NID_iA5StringSyntax","","",null,null],[17,"NID_caseIgnoreIA5StringSyntax","","",null,null],[17,"NID_pilotObject","","",null,null],[17,"NID_pilotPerson","","",null,null],[17,"NID_account","","",null,null],[17,"NID_document","","",null,null],[17,"NID_room","","",null,null],[17,"NID_documentSeries","","",null,null],[17,"NID_Domain","","",null,null],[17,"NID_rFC822localPart","","",null,null],[17,"NID_dNSDomain","","",null,null],[17,"NID_domainRelatedObject","","",null,null],[17,"NID_friendlyCountry","","",null,null],[17,"NID_simpleSecurityObject","","",null,null],[17,"NID_pilotOrganization","","",null,null],[17,"NID_pilotDSA","","",null,null],[17,"NID_qualityLabelledData","","",null,null],[17,"NID_userId","","",null,null],[17,"NID_textEncodedORAddress","","",null,null],[17,"NID_rfc822Mailbox","","",null,null],[17,"NID_info","","",null,null],[17,"NID_favouriteDrink","","",null,null],[17,"NID_roomNumber","","",null,null],[17,"NID_photo","","",null,null],[17,"NID_userClass","","",null,null],[17,"NID_host","","",null,null],[17,"NID_manager","","",null,null],[17,"NID_documentIdentifier","","",null,null],[17,"NID_documentTitle","","",null,null],[17,"NID_documentVersion","","",null,null],[17,"NID_documentAuthor","","",null,null],[17,"NID_documentLocation","","",null,null],[17,"NID_homeTelephoneNumber","","",null,null],[17,"NID_secretary","","",null,null],[17,"NID_otherMailbox","","",null,null],[17,"NID_lastModifiedTime","","",null,null],[17,"NID_lastModifiedBy","","",null,null],[17,"NID_domainComponent","","",null,null],[17,"NID_aRecord","","",null,null],[17,"NID_pilotAttributeType27","","",null,null],[17,"NID_mXRecord","","",null,null],[17,"NID_nSRecord","","",null,null],[17,"NID_sOARecord","","",null,null],[17,"NID_cNAMERecord","","",null,null],[17,"NID_associatedDomain","","",null,null],[17,"NID_associatedName","","",null,null],[17,"NID_homePostalAddress","","",null,null],[17,"NID_personalTitle","","",null,null],[17,"NID_mobileTelephoneNumber","","",null,null],[17,"NID_pagerTelephoneNumber","","",null,null],[17,"NID_friendlyCountryName","","",null,null],[17,"NID_organizationalStatus","","",null,null],[17,"NID_janetMailbox","","",null,null],[17,"NID_mailPreferenceOption","","",null,null],[17,"NID_buildingName","","",null,null],[17,"NID_dSAQuality","","",null,null],[17,"NID_singleLevelQuality","","",null,null],[17,"NID_subtreeMinimumQuality","","",null,null],[17,"NID_subtreeMaximumQuality","","",null,null],[17,"NID_personalSignature","","",null,null],[17,"NID_dITRedirect","","",null,null],[17,"NID_audio","","",null,null],[17,"NID_documentPublisher","","",null,null],[17,"NID_id_set","","",null,null],[17,"NID_set_ctype","","",null,null],[17,"NID_set_msgExt","","",null,null],[17,"NID_set_attr","","",null,null],[17,"NID_set_policy","","",null,null],[17,"NID_set_certExt","","",null,null],[17,"NID_set_brand","","",null,null],[17,"NID_setct_PANData","","",null,null],[17,"NID_setct_PANToken","","",null,null],[17,"NID_setct_PANOnly","","",null,null],[17,"NID_setct_OIData","","",null,null],[17,"NID_setct_PI","","",null,null],[17,"NID_setct_PIData","","",null,null],[17,"NID_setct_PIDataUnsigned","","",null,null],[17,"NID_setct_HODInput","","",null,null],[17,"NID_setct_AuthResBaggage","","",null,null],[17,"NID_setct_AuthRevReqBaggage","","",null,null],[17,"NID_setct_AuthRevResBaggage","","",null,null],[17,"NID_setct_CapTokenSeq","","",null,null],[17,"NID_setct_PInitResData","","",null,null],[17,"NID_setct_PI_TBS","","",null,null],[17,"NID_setct_PResData","","",null,null],[17,"NID_setct_AuthReqTBS","","",null,null],[17,"NID_setct_AuthResTBS","","",null,null],[17,"NID_setct_AuthResTBSX","","",null,null],[17,"NID_setct_AuthTokenTBS","","",null,null],[17,"NID_setct_CapTokenData","","",null,null],[17,"NID_setct_CapTokenTBS","","",null,null],[17,"NID_setct_AcqCardCodeMsg","","",null,null],[17,"NID_setct_AuthRevReqTBS","","",null,null],[17,"NID_setct_AuthRevResData","","",null,null],[17,"NID_setct_AuthRevResTBS","","",null,null],[17,"NID_setct_CapReqTBS","","",null,null],[17,"NID_setct_CapReqTBSX","","",null,null],[17,"NID_setct_CapResData","","",null,null],[17,"NID_setct_CapRevReqTBS","","",null,null],[17,"NID_setct_CapRevReqTBSX","","",null,null],[17,"NID_setct_CapRevResData","","",null,null],[17,"NID_setct_CredReqTBS","","",null,null],[17,"NID_setct_CredReqTBSX","","",null,null],[17,"NID_setct_CredResData","","",null,null],[17,"NID_setct_CredRevReqTBS","","",null,null],[17,"NID_setct_CredRevReqTBSX","","",null,null],[17,"NID_setct_CredRevResData","","",null,null],[17,"NID_setct_PCertReqData","","",null,null],[17,"NID_setct_PCertResTBS","","",null,null],[17,"NID_setct_BatchAdminReqData","","",null,null],[17,"NID_setct_BatchAdminResData","","",null,null],[17,"NID_setct_CardCInitResTBS","","",null,null],[17,"NID_setct_MeAqCInitResTBS","","",null,null],[17,"NID_setct_RegFormResTBS","","",null,null],[17,"NID_setct_CertReqData","","",null,null],[17,"NID_setct_CertReqTBS","","",null,null],[17,"NID_setct_CertResData","","",null,null],[17,"NID_setct_CertInqReqTBS","","",null,null],[17,"NID_setct_ErrorTBS","","",null,null],[17,"NID_setct_PIDualSignedTBE","","",null,null],[17,"NID_setct_PIUnsignedTBE","","",null,null],[17,"NID_setct_AuthReqTBE","","",null,null],[17,"NID_setct_AuthResTBE","","",null,null],[17,"NID_setct_AuthResTBEX","","",null,null],[17,"NID_setct_AuthTokenTBE","","",null,null],[17,"NID_setct_CapTokenTBE","","",null,null],[17,"NID_setct_CapTokenTBEX","","",null,null],[17,"NID_setct_AcqCardCodeMsgTBE","","",null,null],[17,"NID_setct_AuthRevReqTBE","","",null,null],[17,"NID_setct_AuthRevResTBE","","",null,null],[17,"NID_setct_AuthRevResTBEB","","",null,null],[17,"NID_setct_CapReqTBE","","",null,null],[17,"NID_setct_CapReqTBEX","","",null,null],[17,"NID_setct_CapResTBE","","",null,null],[17,"NID_setct_CapRevReqTBE","","",null,null],[17,"NID_setct_CapRevReqTBEX","","",null,null],[17,"NID_setct_CapRevResTBE","","",null,null],[17,"NID_setct_CredReqTBE","","",null,null],[17,"NID_setct_CredReqTBEX","","",null,null],[17,"NID_setct_CredResTBE","","",null,null],[17,"NID_setct_CredRevReqTBE","","",null,null],[17,"NID_setct_CredRevReqTBEX","","",null,null],[17,"NID_setct_CredRevResTBE","","",null,null],[17,"NID_setct_BatchAdminReqTBE","","",null,null],[17,"NID_setct_BatchAdminResTBE","","",null,null],[17,"NID_setct_RegFormReqTBE","","",null,null],[17,"NID_setct_CertReqTBE","","",null,null],[17,"NID_setct_CertReqTBEX","","",null,null],[17,"NID_setct_CertResTBE","","",null,null],[17,"NID_setct_CRLNotificationTBS","","",null,null],[17,"NID_setct_CRLNotificationResTBS","","",null,null],[17,"NID_setct_BCIDistributionTBS","","",null,null],[17,"NID_setext_genCrypt","","",null,null],[17,"NID_setext_miAuth","","",null,null],[17,"NID_setext_pinSecure","","",null,null],[17,"NID_setext_pinAny","","",null,null],[17,"NID_setext_track2","","",null,null],[17,"NID_setext_cv","","",null,null],[17,"NID_set_policy_root","","",null,null],[17,"NID_setCext_hashedRoot","","",null,null],[17,"NID_setCext_certType","","",null,null],[17,"NID_setCext_merchData","","",null,null],[17,"NID_setCext_cCertRequired","","",null,null],[17,"NID_setCext_tunneling","","",null,null],[17,"NID_setCext_setExt","","",null,null],[17,"NID_setCext_setQualf","","",null,null],[17,"NID_setCext_PGWYcapabilities","","",null,null],[17,"NID_setCext_TokenIdentifier","","",null,null],[17,"NID_setCext_Track2Data","","",null,null],[17,"NID_setCext_TokenType","","",null,null],[17,"NID_setCext_IssuerCapabilities","","",null,null],[17,"NID_setAttr_Cert","","",null,null],[17,"NID_setAttr_PGWYcap","","",null,null],[17,"NID_setAttr_TokenType","","",null,null],[17,"NID_setAttr_IssCap","","",null,null],[17,"NID_set_rootKeyThumb","","",null,null],[17,"NID_set_addPolicy","","",null,null],[17,"NID_setAttr_Token_EMV","","",null,null],[17,"NID_setAttr_Token_B0Prime","","",null,null],[17,"NID_setAttr_IssCap_CVM","","",null,null],[17,"NID_setAttr_IssCap_T2","","",null,null],[17,"NID_setAttr_IssCap_Sig","","",null,null],[17,"NID_setAttr_GenCryptgrm","","",null,null],[17,"NID_setAttr_T2Enc","","",null,null],[17,"NID_setAttr_T2cleartxt","","",null,null],[17,"NID_setAttr_TokICCsig","","",null,null],[17,"NID_setAttr_SecDevSig","","",null,null],[17,"NID_set_brand_IATA_ATA","","",null,null],[17,"NID_set_brand_Diners","","",null,null],[17,"NID_set_brand_AmericanExpress","","",null,null],[17,"NID_set_brand_JCB","","",null,null],[17,"NID_set_brand_Visa","","",null,null],[17,"NID_set_brand_MasterCard","","",null,null],[17,"NID_set_brand_Novus","","",null,null],[17,"NID_des_cdmf","","",null,null],[17,"NID_rsaOAEPEncryptionSET","","",null,null],[17,"NID_ipsec3","","",null,null],[17,"NID_ipsec4","","",null,null],[17,"NID_whirlpool","","",null,null],[17,"NID_cryptopro","","",null,null],[17,"NID_cryptocom","","",null,null],[17,"NID_id_GostR3411_94_with_GostR3410_2001","","",null,null],[17,"NID_id_GostR3411_94_with_GostR3410_94","","",null,null],[17,"NID_id_GostR3411_94","","",null,null],[17,"NID_id_HMACGostR3411_94","","",null,null],[17,"NID_id_GostR3410_2001","","",null,null],[17,"NID_id_GostR3410_94","","",null,null],[17,"NID_id_Gost28147_89","","",null,null],[17,"NID_gost89_cnt","","",null,null],[17,"NID_id_Gost28147_89_MAC","","",null,null],[17,"NID_id_GostR3411_94_prf","","",null,null],[17,"NID_id_GostR3410_2001DH","","",null,null],[17,"NID_id_GostR3410_94DH","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_KeyMeshing","","",null,null],[17,"NID_id_Gost28147_89_None_KeyMeshing","","",null,null],[17,"NID_id_GostR3411_94_TestParamSet","","",null,null],[17,"NID_id_GostR3411_94_CryptoProParamSet","","",null,null],[17,"NID_id_Gost28147_89_TestParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_A_ParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_B_ParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_C_ParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_D_ParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet","","",null,null],[17,"NID_id_Gost28147_89_CryptoPro_RIC_1_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_TestParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_A_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_B_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_C_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_D_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_XchA_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_XchB_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_CryptoPro_XchC_ParamSet","","",null,null],[17,"NID_id_GostR3410_2001_TestParamSet","","",null,null],[17,"NID_id_GostR3410_2001_CryptoPro_A_ParamSet","","",null,null],[17,"NID_id_GostR3410_2001_CryptoPro_B_ParamSet","","",null,null],[17,"NID_id_GostR3410_2001_CryptoPro_C_ParamSet","","",null,null],[17,"NID_id_GostR3410_2001_CryptoPro_XchA_ParamSet","","",null,null],[17,"NID_id_GostR3410_2001_CryptoPro_XchB_ParamSet","","",null,null],[17,"NID_id_GostR3410_94_a","","",null,null],[17,"NID_id_GostR3410_94_aBis","","",null,null],[17,"NID_id_GostR3410_94_b","","",null,null],[17,"NID_id_GostR3410_94_bBis","","",null,null],[17,"NID_id_Gost28147_89_cc","","",null,null],[17,"NID_id_GostR3410_94_cc","","",null,null],[17,"NID_id_GostR3410_2001_cc","","",null,null],[17,"NID_id_GostR3411_94_with_GostR3410_94_cc","","",null,null],[17,"NID_id_GostR3411_94_with_GostR3410_2001_cc","","",null,null],[17,"NID_id_GostR3410_2001_ParamSet_cc","","",null,null],[17,"NID_camellia_128_cbc","","",null,null],[17,"NID_camellia_192_cbc","","",null,null],[17,"NID_camellia_256_cbc","","",null,null],[17,"NID_id_camellia128_wrap","","",null,null],[17,"NID_id_camellia192_wrap","","",null,null],[17,"NID_id_camellia256_wrap","","",null,null],[17,"NID_camellia_128_ecb","","",null,null],[17,"NID_camellia_128_ofb128","","",null,null],[17,"NID_camellia_128_cfb128","","",null,null],[17,"NID_camellia_192_ecb","","",null,null],[17,"NID_camellia_192_ofb128","","",null,null],[17,"NID_camellia_192_cfb128","","",null,null],[17,"NID_camellia_256_ecb","","",null,null],[17,"NID_camellia_256_ofb128","","",null,null],[17,"NID_camellia_256_cfb128","","",null,null],[17,"NID_camellia_128_cfb1","","",null,null],[17,"NID_camellia_192_cfb1","","",null,null],[17,"NID_camellia_256_cfb1","","",null,null],[17,"NID_camellia_128_cfb8","","",null,null],[17,"NID_camellia_192_cfb8","","",null,null],[17,"NID_camellia_256_cfb8","","",null,null],[17,"NID_kisa","","",null,null],[17,"NID_seed_ecb","","",null,null],[17,"NID_seed_cbc","","",null,null],[17,"NID_seed_cfb128","","",null,null],[17,"NID_seed_ofb128","","",null,null],[17,"NID_hmac","","",null,null],[17,"NID_cmac","","",null,null],[17,"NID_rc4_hmac_md5","","",null,null],[17,"NID_aes_128_cbc_hmac_sha1","","",null,null],[17,"NID_aes_192_cbc_hmac_sha1","","",null,null],[17,"NID_aes_256_cbc_hmac_sha1","","",null,null],[17,"OCSP_REVOKED_STATUS_NOSTATUS","","",null,null],[17,"OCSP_REVOKED_STATUS_UNSPECIFIED","","",null,null],[17,"OCSP_REVOKED_STATUS_KEYCOMPROMISE","","",null,null],[17,"OCSP_REVOKED_STATUS_CACOMPROMISE","","",null,null],[17,"OCSP_REVOKED_STATUS_AFFILIATIONCHANGED","","",null,null],[17,"OCSP_REVOKED_STATUS_SUPERSEDED","","",null,null],[17,"OCSP_REVOKED_STATUS_CESSATIONOFOPERATION","","",null,null],[17,"OCSP_REVOKED_STATUS_CERTIFICATEHOLD","","",null,null],[17,"OCSP_REVOKED_STATUS_REMOVEFROMCRL","","",null,null],[17,"OCSP_NOCERTS","","",null,null],[17,"OCSP_NOINTERN","","",null,null],[17,"OCSP_NOSIGS","","",null,null],[17,"OCSP_NOCHAIN","","",null,null],[17,"OCSP_NOVERIFY","","",null,null],[17,"OCSP_NOEXPLICIT","","",null,null],[17,"OCSP_NOCASIGN","","",null,null],[17,"OCSP_NODELEGATED","","",null,null],[17,"OCSP_NOCHECKS","","",null,null],[17,"OCSP_TRUSTOTHER","","",null,null],[17,"OCSP_RESPID_KEY","","",null,null],[17,"OCSP_NOTIME","","",null,null],[17,"OCSP_RESPONSE_STATUS_SUCCESSFUL","","",null,null],[17,"OCSP_RESPONSE_STATUS_MALFORMEDREQUEST","","",null,null],[17,"OCSP_RESPONSE_STATUS_INTERNALERROR","","",null,null],[17,"OCSP_RESPONSE_STATUS_TRYLATER","","",null,null],[17,"OCSP_RESPONSE_STATUS_SIGREQUIRED","","",null,null],[17,"OCSP_RESPONSE_STATUS_UNAUTHORIZED","","",null,null],[17,"V_OCSP_CERTSTATUS_GOOD","","",null,null],[17,"V_OCSP_CERTSTATUS_REVOKED","","",null,null],[17,"V_OCSP_CERTSTATUS_UNKNOWN","","",null,null],[17,"PEM_R_NO_START_LINE","","",null,null],[17,"PKCS7_TEXT","","",null,null],[17,"PKCS7_NOCERTS","","",null,null],[17,"PKCS7_NOSIGS","","",null,null],[17,"PKCS7_NOCHAIN","","",null,null],[17,"PKCS7_NOINTERN","","",null,null],[17,"PKCS7_NOVERIFY","","",null,null],[17,"PKCS7_DETACHED","","",null,null],[17,"PKCS7_BINARY","","",null,null],[17,"PKCS7_NOATTR","","",null,null],[17,"PKCS7_NOSMIMECAP","","",null,null],[17,"PKCS7_NOOLDMIMETYPE","","",null,null],[17,"PKCS7_CRLFEOL","","",null,null],[17,"PKCS7_STREAM","","",null,null],[17,"PKCS7_NOCRL","","",null,null],[17,"PKCS7_PARTIAL","","",null,null],[17,"PKCS7_REUSE_DIGEST","","",null,null],[17,"RSA_F4","","",null,null],[17,"EVP_PKEY_CTRL_RSA_PADDING","","",null,null],[17,"EVP_PKEY_CTRL_RSA_PSS_SALTLEN","","",null,null],[17,"EVP_PKEY_CTRL_RSA_MGF1_MD","","",null,null],[17,"EVP_PKEY_CTRL_GET_RSA_PADDING","","",null,null],[17,"RSA_PKCS1_PADDING","","",null,null],[17,"RSA_SSLV23_PADDING","","",null,null],[17,"RSA_NO_PADDING","","",null,null],[17,"RSA_PKCS1_OAEP_PADDING","","",null,null],[17,"RSA_X931_PADDING","","",null,null],[17,"RSA_PKCS1_PSS_PADDING","","",null,null],[17,"SHA_LBLOCK","","",null,null],[17,"SRTP_AES128_CM_SHA1_80","","",null,null],[17,"SRTP_AES128_CM_SHA1_32","","",null,null],[17,"SRTP_AES128_F8_SHA1_80","","",null,null],[17,"SRTP_AES128_F8_SHA1_32","","",null,null],[17,"SRTP_NULL_SHA1_80","","",null,null],[17,"SRTP_NULL_SHA1_32","","",null,null],[17,"SSL_SENT_SHUTDOWN","","",null,null],[17,"SSL_RECEIVED_SHUTDOWN","","",null,null],[17,"SSL_FILETYPE_PEM","","",null,null],[17,"SSL_FILETYPE_ASN1","","",null,null],[17,"SSL_OP_LEGACY_SERVER_CONNECT","","",null,null],[17,"SSL_OP_TLSEXT_PADDING","","",null,null],[17,"SSL_OP_SAFARI_ECDHE_ECDSA_BUG","","",null,null],[17,"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS","","",null,null],[17,"SSL_OP_NO_QUERY_MTU","","",null,null],[17,"SSL_OP_COOKIE_EXCHANGE","","",null,null],[17,"SSL_OP_NO_TICKET","","",null,null],[17,"SSL_OP_CISCO_ANYCONNECT","","",null,null],[17,"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","",null,null],[17,"SSL_OP_NO_COMPRESSION","","",null,null],[17,"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","",null,null],[17,"SSL_OP_CIPHER_SERVER_PREFERENCE","","",null,null],[17,"SSL_OP_TLS_ROLLBACK_BUG","","",null,null],[17,"SSL_OP_NO_SSLv3","","",null,null],[17,"SSL_OP_NO_TLSv1_1","","",null,null],[17,"SSL_OP_NO_TLSv1_2","","",null,null],[17,"SSL_OP_NO_TLSv1","","",null,null],[17,"SSL_OP_NO_DTLSv1","","",null,null],[17,"SSL_OP_NO_DTLSv1_2","","",null,null],[17,"SSL_OP_NO_RENEGOTIATION","","",null,null],[17,"SSL_OP_NO_SSL_MASK","","",null,null],[17,"SSL_OP_CRYPTOPRO_TLSEXT_BUG","","",null,null],[17,"SSL_OP_ALL","","",null,null],[17,"SSL_OP_MICROSOFT_SESS_ID_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_CHALLENGE_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER","","",null,null],[17,"SSL_OP_SSLEAY_080_CLIENT_DH_BUG","","",null,null],[17,"SSL_OP_TLS_D5_BUG","","",null,null],[17,"SSL_OP_TLS_BLOCK_PADDING_BUG","","",null,null],[17,"SSL_OP_SINGLE_ECDH_USE","","",null,null],[17,"SSL_OP_SINGLE_DH_USE","","",null,null],[17,"SSL_OP_NO_SSLv2","","",null,null],[17,"SSL_MODE_ENABLE_PARTIAL_WRITE","","",null,null],[17,"SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER","","",null,null],[17,"SSL_MODE_AUTO_RETRY","","",null,null],[17,"SSL_MODE_NO_AUTO_CHAIN","","",null,null],[17,"SSL_MODE_RELEASE_BUFFERS","","",null,null],[17,"SSL_MODE_SEND_CLIENTHELLO_TIME","","",null,null],[17,"SSL_MODE_SEND_SERVERHELLO_TIME","","",null,null],[17,"SSL_MODE_SEND_FALLBACK_SCSV","","",null,null],[17,"SSL_SESS_CACHE_OFF","","",null,null],[17,"SSL_SESS_CACHE_CLIENT","","",null,null],[17,"SSL_SESS_CACHE_SERVER","","",null,null],[17,"SSL_SESS_CACHE_BOTH","","",null,null],[17,"SSL_SESS_CACHE_NO_AUTO_CLEAR","","",null,null],[17,"SSL_SESS_CACHE_NO_INTERNAL_LOOKUP","","",null,null],[17,"SSL_SESS_CACHE_NO_INTERNAL_STORE","","",null,null],[17,"SSL_SESS_CACHE_NO_INTERNAL","","",null,null],[17,"OPENSSL_NPN_UNSUPPORTED","","",null,null],[17,"OPENSSL_NPN_NEGOTIATED","","",null,null],[17,"OPENSSL_NPN_NO_OVERLAP","","",null,null],[17,"SSL_AD_ILLEGAL_PARAMETER","","",null,null],[17,"SSL_AD_DECODE_ERROR","","",null,null],[17,"SSL_AD_UNRECOGNIZED_NAME","","",null,null],[17,"SSL_ERROR_NONE","","",null,null],[17,"SSL_ERROR_SSL","","",null,null],[17,"SSL_ERROR_SYSCALL","","",null,null],[17,"SSL_ERROR_WANT_ACCEPT","","",null,null],[17,"SSL_ERROR_WANT_CONNECT","","",null,null],[17,"SSL_ERROR_WANT_READ","","",null,null],[17,"SSL_ERROR_WANT_WRITE","","",null,null],[17,"SSL_ERROR_WANT_X509_LOOKUP","","",null,null],[17,"SSL_ERROR_ZERO_RETURN","","",null,null],[17,"SSL_VERIFY_NONE","","",null,null],[17,"SSL_VERIFY_PEER","","",null,null],[17,"SSL_VERIFY_FAIL_IF_NO_PEER_CERT","","",null,null],[17,"SSL_CTRL_SET_TMP_DH","","",null,null],[17,"SSL_CTRL_SET_TMP_ECDH","","",null,null],[17,"SSL_CTRL_EXTRA_CHAIN_CERT","","",null,null],[17,"SSL_CTRL_MODE","","",null,null],[17,"SSL_CTRL_SET_READ_AHEAD","","",null,null],[17,"SSL_CTRL_SET_SESS_CACHE_SIZE","","",null,null],[17,"SSL_CTRL_GET_SESS_CACHE_SIZE","","",null,null],[17,"SSL_CTRL_SET_SESS_CACHE_MODE","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_SERVERNAME_CB","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_SERVERNAME_ARG","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_HOSTNAME","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB_ARG","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_STATUS_REQ_TYPE","","",null,null],[17,"SSL_CTRL_GET_TLSEXT_STATUS_REQ_OCSP_RESP","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_STATUS_REQ_OCSP_RESP","","",null,null],[17,"SSL_CTRL_GET_EXTRA_CHAIN_CERTS","","",null,null],[17,"SSL_CTRL_SET_SIGALGS_LIST","","",null,null],[17,"SSL_CTRL_SET_VERIFY_CERT_STORE","","",null,null],[17,"SSL_CTRL_SET_MIN_PROTO_VERSION","","",null,null],[17,"SSL_CTRL_SET_MAX_PROTO_VERSION","","",null,null],[17,"SSL_CTRL_GET_MIN_PROTO_VERSION","","",null,null],[17,"SSL_CTRL_GET_MAX_PROTO_VERSION","","",null,null],[17,"OPENSSL_INIT_LOAD_SSL_STRINGS","","",null,null],[17,"SSL3_VERSION","","",null,null],[17,"SSL3_AD_ILLEGAL_PARAMETER","","",null,null],[17,"TLS1_VERSION","","",null,null],[17,"TLS1_1_VERSION","","",null,null],[17,"TLS1_2_VERSION","","",null,null],[17,"TLS1_AD_DECODE_ERROR","","",null,null],[17,"TLS1_AD_UNRECOGNIZED_NAME","","",null,null],[17,"TLSEXT_NAMETYPE_host_name","","",null,null],[17,"TLSEXT_STATUSTYPE_ocsp","","",null,null],[17,"SSL_TLSEXT_ERR_OK","","",null,null],[17,"SSL_TLSEXT_ERR_ALERT_WARNING","","",null,null],[17,"SSL_TLSEXT_ERR_ALERT_FATAL","","",null,null],[17,"SSL_TLSEXT_ERR_NOACK","","",null,null],[17,"X509_FILETYPE_PEM","","",null,null],[17,"X509_FILETYPE_ASN1","","",null,null],[17,"X509_FILETYPE_DEFAULT","","",null,null],[17,"X509_V_OK","","",null,null],[17,"X509_V_ERR_UNSPECIFIED","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_CRL","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY","","",null,null],[17,"X509_V_ERR_CERT_SIGNATURE_FAILURE","","",null,null],[17,"X509_V_ERR_CRL_SIGNATURE_FAILURE","","",null,null],[17,"X509_V_ERR_CERT_NOT_YET_VALID","","",null,null],[17,"X509_V_ERR_CERT_HAS_EXPIRED","","",null,null],[17,"X509_V_ERR_CRL_NOT_YET_VALID","","",null,null],[17,"X509_V_ERR_CRL_HAS_EXPIRED","","",null,null],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD","","",null,null],[17,"X509_V_ERR_OUT_OF_MEM","","",null,null],[17,"X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT","","",null,null],[17,"X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY","","",null,null],[17,"X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE","","",null,null],[17,"X509_V_ERR_CERT_CHAIN_TOO_LONG","","",null,null],[17,"X509_V_ERR_CERT_REVOKED","","",null,null],[17,"X509_V_ERR_INVALID_CA","","",null,null],[17,"X509_V_ERR_PATH_LENGTH_EXCEEDED","","",null,null],[17,"X509_V_ERR_INVALID_PURPOSE","","",null,null],[17,"X509_V_ERR_CERT_UNTRUSTED","","",null,null],[17,"X509_V_ERR_CERT_REJECTED","","",null,null],[17,"X509_V_ERR_SUBJECT_ISSUER_MISMATCH","","",null,null],[17,"X509_V_ERR_AKID_SKID_MISMATCH","","",null,null],[17,"X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_CERTSIGN","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER","","",null,null],[17,"X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_CRL_SIGN","","",null,null],[17,"X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION","","",null,null],[17,"X509_V_ERR_INVALID_NON_CA","","",null,null],[17,"X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE","","",null,null],[17,"X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED","","",null,null],[17,"X509_V_ERR_INVALID_EXTENSION","","",null,null],[17,"X509_V_ERR_INVALID_POLICY_EXTENSION","","",null,null],[17,"X509_V_ERR_NO_EXPLICIT_POLICY","","",null,null],[17,"X509_V_ERR_DIFFERENT_CRL_SCOPE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE","","",null,null],[17,"X509_V_ERR_UNNESTED_RESOURCE","","",null,null],[17,"X509_V_ERR_PERMITTED_VIOLATION","","",null,null],[17,"X509_V_ERR_EXCLUDED_VIOLATION","","",null,null],[17,"X509_V_ERR_SUBTREE_MINMAX","","",null,null],[17,"X509_V_ERR_APPLICATION_VERIFICATION","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_NAME_SYNTAX","","",null,null],[17,"X509_V_ERR_CRL_PATH_VALIDATION_ERROR","","",null,null],[17,"X509_V_ERR_SUITE_B_INVALID_VERSION","","",null,null],[17,"X509_V_ERR_SUITE_B_INVALID_ALGORITHM","","",null,null],[17,"X509_V_ERR_SUITE_B_INVALID_CURVE","","",null,null],[17,"X509_V_ERR_SUITE_B_INVALID_SIGNATURE_ALGORITHM","","",null,null],[17,"X509_V_ERR_SUITE_B_LOS_NOT_ALLOWED","","",null,null],[17,"X509_V_ERR_SUITE_B_CANNOT_SIGN_P_384_WITH_P_256","","",null,null],[17,"X509_V_ERR_HOSTNAME_MISMATCH","","",null,null],[17,"X509_V_ERR_EMAIL_MISMATCH","","",null,null],[17,"X509_V_ERR_IP_ADDRESS_MISMATCH","","",null,null],[17,"X509_V_ERR_DANE_NO_MATCH","","",null,null],[17,"X509_V_ERR_EE_KEY_TOO_SMALL","","",null,null],[17,"X509_V_ERR_CA_KEY_TOO_SMALL","","",null,null],[17,"X509_V_ERR_CA_MD_TOO_WEAK","","",null,null],[17,"X509_V_ERR_INVALID_CALL","","",null,null],[17,"X509_V_ERR_STORE_LOOKUP","","",null,null],[17,"X509_V_ERR_NO_VALID_SCTS","","",null,null],[17,"GEN_OTHERNAME","","",null,null],[17,"GEN_EMAIL","","",null,null],[17,"GEN_DNS","","",null,null],[17,"GEN_X400","","",null,null],[17,"GEN_DIRNAME","","",null,null],[17,"GEN_EDIPARTY","","",null,null],[17,"GEN_URI","","",null,null],[17,"GEN_IPADD","","",null,null],[17,"GEN_RID","","",null,null],[17,"X509_CHECK_FLAG_ALWAYS_CHECK_SUBJECT","","",null,null],[17,"X509_CHECK_FLAG_NO_WILDCARDS","","",null,null],[17,"X509_CHECK_FLAG_NO_PARTIAL_WILDCARDS","","",null,null],[17,"X509_CHECK_FLAG_MULTI_LABEL_WILDCARDS","","",null,null],[17,"X509_CHECK_FLAG_SINGLE_LABEL_SUBDOMAINS","","",null,null],[17,"X509_CHECK_FLAG_NEVER_CHECK_SUBJECT","","",null,null],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"clone","","",8,[[["self"]],["point_conversion_form_t"]]],[11,"clone","","",2,[[["self"]],["sha_ctx"]]],[11,"clone","","",3,[[["self"]],["sha256_ctx"]]],[11,"clone","","",4,[[["self"]],["sha512_ctx"]]]],"p":[[3,"ASN1_ENCODING"],[3,"ERR_STRING_DATA"],[3,"SHA_CTX"],[3,"SHA256_CTX"],[3,"SHA512_CTX"],[3,"SRTP_PROTECTION_PROFILE"],[3,"X509_VAL"],[3,"GENERAL_NAME"],[4,"point_conversion_form_t"],[3,"AES_KEY"],[3,"X509V3_CTX"],[4,"stack_st_ASN1_OBJECT"],[4,"BIO_METHOD"],[4,"CMS_ContentInfo"],[4,"stack_st_void"],[4,"EC_METHOD"],[4,"EC_GROUP"],[4,"EC_POINT"],[4,"ECDSA_SIG"],[4,"OCSP_CERTID"],[4,"OCSP_ONEREQ"],[4,"OCSP_REQUEST"],[4,"OCSP_BASICRESP"],[4,"ASN1_INTEGER"],[4,"ASN1_GENERALIZEDTIME"],[4,"ASN1_STRING"],[4,"ASN1_BIT_STRING"],[4,"ASN1_TIME"],[4,"ASN1_TYPE"],[4,"ASN1_OBJECT"],[4,"ASN1_OCTET_STRING"],[4,"bio_st"],[4,"BIO"],[4,"BIGNUM"],[4,"BN_BLINDING"],[4,"BN_MONT_CTX"],[4,"BN_CTX"],[4,"BN_GENCB"],[4,"EVP_CIPHER"],[4,"EVP_CIPHER_CTX"],[4,"EVP_MD"],[4,"EVP_MD_CTX"],[4,"EVP_PKEY"],[4,"PKCS8_PRIV_KEY_INFO"],[4,"EVP_PKEY_ASN1_METHOD"],[4,"EVP_PKEY_CTX"],[4,"HMAC_CTX"],[4,"DH"],[4,"DH_METHOD"],[4,"DSA"],[4,"DSA_METHOD"],[4,"RSA"],[4,"RSA_METHOD"],[4,"EC_KEY"],[4,"X509"],[4,"X509_ALGOR"],[4,"X509_CRL"],[4,"stack_st_X509_CRL"],[4,"X509_NAME"],[4,"X509_STORE"],[4,"X509_STORE_CTX"],[4,"X509_VERIFY_PARAM"],[4,"CONF"],[4,"OPENSSL_INIT_SETTINGS"],[4,"ENGINE"],[4,"SSL"],[4,"SSL_CTX"],[4,"COMP_METHOD"],[4,"CRYPTO_EX_DATA"],[4,"OCSP_RESPONSE"],[4,"PKCS12"],[4,"PKCS7_SIGNED"],[4,"PKCS7_ENVELOPE"],[4,"PKCS7_SIGN_ENVELOPE"],[4,"PKCS7_DIGEST"],[4,"PKCS7_ENCRYPT"],[4,"PKCS7"],[4,"stack_st_OPENSSL_STRING"],[4,"SSL_METHOD"],[4,"SSL_CIPHER"],[4,"SSL_SESSION"],[4,"stack_st_SSL_CIPHER"],[4,"stack_st_SRTP_PROTECTION_PROFILE"],[4,"OPENSSL_STACK"],[4,"X509_NAME_ENTRY"],[4,"stack_st_X509_NAME"],[4,"X509_EXTENSION"],[4,"stack_st_X509_EXTENSION"],[4,"stack_st_X509_ATTRIBUTE"],[4,"X509_REQ_INFO"],[4,"X509_REQ"],[4,"X509_CINF"],[4,"stack_st_X509"],[4,"X509_OBJECT"],[4,"stack_st_X509_OBJECT"],[4,"X509_LOOKUP"],[4,"stack_st_X509_LOOKUP"],[4,"CONF_METHOD"],[4,"stack_st_GENERAL_NAME"]]};
searchIndex["percent_encoding"] = {"doc":"URLs use special chacters to indicate the parts of the…","i":[[3,"AsciiSet","percent_encoding","Represents a set of characters or bytes in the ASCII range.",null,null],[3,"PercentEncode","","The return type of [`percent_encode`] and…",null,null],[3,"PercentDecode","","The return type of [`percent_decode`].",null,null],[5,"percent_encode_byte","","Return the percent-encoding of the given byte.",null,[[["u8"]],["str"]]],[5,"percent_encode","","Percent-encode the given bytes with the given set.",null,[[["asciiset"]],["percentencode"]]],[5,"utf8_percent_encode","","Percent-encode the UTF-8 encoding of the given string.",null,[[["str"],["asciiset"]],["percentencode"]]],[5,"percent_decode_str","","Percent-decode the given string.",null,[[["str"]],["percentdecode"]]],[5,"percent_decode","","Percent-decode the given bytes.",null,[[],["percentdecode"]]],[17,"CONTROLS","","The set of 0x00 to 0x1F (C0 controls), and 0x7F (DEL).",null,null],[17,"NON_ALPHANUMERIC","","Everything that is not an ASCII letter or digit.",null,null],[11,"add","","",0,[[["self"],["u8"]],["self"]]],[11,"remove","","",0,[[["self"],["u8"]],["self"]]],[11,"decode_utf8","","Decode the result of percent-decoding as UTF-8.",1,[[],[["result",["cow","utf8error"]],["cow",["str"]],["utf8error"]]]],[11,"decode_utf8_lossy","","Decode the result of percent-decoding as UTF-8, lossily.",1,[[],[["str"],["cow",["str"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"next","","",2,[[["self"]],[["str"],["option",["str"]]]]],[11,"size_hint","","",2,[[["self"]]]],[11,"next","","",1,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"size_hint","","",1,[[["self"]]]],[11,"clone","","",2,[[["self"]],["percentencode"]]],[11,"clone","","",1,[[["self"]],["percentdecode"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]]],"p":[[3,"AsciiSet"],[3,"PercentDecode"],[3,"PercentEncode"]]};
searchIndex["petgraph"] = {"doc":"`petgraph` is a graph data structure library.","i":[[4,"Direction","petgraph","Edge direction.",null,null],[13,"Outgoing","","An `Outgoing` edge is an outward edge from the current node.",0,null],[13,"Incoming","","An `Incoming` edge is an inbound edge to the current node.",0,null],[4,"Directed","","Marker type for a directed graph.",null,null],[4,"Undirected","","Marker type for an undirected graph.",null,null],[0,"visit","","Graph traits and graph traversals.",null,null],[3,"NodeFiltered","petgraph::visit","A node-filtering graph adaptor.",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[3,"NodeFilteredNeighbors","","A filtered neighbors iterator.",null,null],[3,"NodeFilteredNodes","","A filtered node references iterator.",null,null],[3,"NodeFilteredEdgeReferences","","A filtered edges iterator.",null,null],[3,"NodeFilteredEdges","","A filtered edges iterator.",null,null],[3,"EdgeFiltered","","An edge-filtering graph adaptor.",null,null],[12,"0","","",2,null],[12,"1","","",2,null],[3,"EdgeFilteredNeighbors","","A filtered neighbors iterator.",null,null],[3,"EdgeFilteredEdges","","A filtered edges iterator.",null,null],[3,"EdgeFilteredNeighborsDirected","","A filtered neighbors-directed iterator.",null,null],[3,"Reversed","","An edge-reversing graph adaptor.",null,null],[12,"0","","",3,null],[3,"ReversedEdges","","A reversed edges iterator.",null,null],[3,"ReversedEdgeReference","","A reversed edge reference",null,null],[3,"ReversedEdgeReferences","","A reversed edge references iterator.",null,null],[3,"Time","","Strictly monotonically increasing event time for a depth…",null,null],[12,"0","","",4,null],[3,"Dfs","","Visit nodes of a graph in a depth-first-search (DFS)…",null,null],[12,"stack","","The stack of nodes to visit",5,null],[12,"discovered","","The map of discovered nodes",5,null],[3,"DfsPostOrder","","Visit nodes in a depth-first-search (DFS) emitting nodes…",null,null],[12,"stack","","The stack of nodes to visit",6,null],[12,"discovered","","The map of discovered nodes",6,null],[12,"finished","","The map of finished nodes",6,null],[3,"Bfs","","A breadth first search (BFS) of a graph.",null,null],[12,"stack","","The queue of nodes to visit",7,null],[12,"discovered","","The map of discovered nodes",7,null],[3,"Topo","","A topological order traversal for a graph.",null,null],[3,"WalkerIter","","A walker and its context wrapped into an iterator.",null,null],[4,"DfsEvent","","A depth first search (DFS) visitor event.",null,null],[13,"Discover","","",8,null],[13,"TreeEdge","","An edge of the tree formed by the traversal.",8,null],[13,"BackEdge","","An edge to an already visited node.",8,null],[13,"CrossForwardEdge","","A cross or forward edge.",8,null],[13,"Finish","","All edges from a node have been reported.",8,null],[4,"Control","","Control flow for `depth_first_search` callbacks.",null,null],[13,"Continue","","Continue the DFS traversal as normal.",9,null],[13,"Prune","","Prune the current node from the DFS traversal. No more…",9,null],[13,"Break","","Stop the DFS traversal and return the provided value.",9,null],[5,"depth_first_search","","A recursive depth first search.",null,[[["i"],["f"],["g"]],["c"]]],[11,"breaking","","",9,[[],["control"]]],[11,"break_value","","Get the value in `Control::Break(_)`, if present.",9,[[],["option"]]],[11,"new","","Create a new Dfs, using the graph's visitor map, and put…",5,[[["n"],["g"]],["self"]]],[11,"from_parts","","Create a `Dfs` from a vector and a visit map",5,[[["vec"],["vm"]],["self"]]],[11,"reset","","Clear the visit state",5,[[["self"],["g"]]]],[11,"empty","","Create a new Dfs using the graph's visitor map, and no…",5,[[["g"]],["self"]]],[11,"move_to","","Keep the discovered map, but clear the visit stack and…",5,[[["self"],["n"]]]],[11,"next","","Return the next node in the dfs, or None if the traversal…",5,[[["self"],["g"]],["option"]]],[11,"new","","Create a new `DfsPostOrder` using the graph's visitor map,…",6,[[["n"],["g"]],["self"]]],[11,"empty","","Create a new `DfsPostOrder` using the graph's visitor map,…",6,[[["g"]],["self"]]],[11,"reset","","Clear the visit state",6,[[["self"],["g"]]]],[11,"move_to","","Keep the discovered and finished map, but clear the visit…",6,[[["self"],["n"]]]],[11,"next","","Return the next node in the traversal, or `None` if the…",6,[[["self"],["g"]],["option"]]],[11,"new","","Create a new Bfs, using the graph's visitor map, and put…",7,[[["n"],["g"]],["self"]]],[11,"next","","Return the next node in the bfs, or None if the traversal…",7,[[["self"],["g"]],["option"]]],[11,"new","","Create a new `Topo`, using the graph's visitor map, and…",10,[[["g"]],["self"]]],[11,"reset","","Clear visited state, and put all initial nodes in the to…",10,[[["self"],["g"]]]],[11,"next","","Return the next node in the current topological order…",10,[[["self"],["g"]],["option"]]],[11,"context","","",11,[[["self"]],["c"]]],[11,"inner_ref","","",11,[[["self"]],["w"]]],[11,"inner_mut","","",11,[[["self"]],["w"]]],[11,"from_fn","","Create an `NodeFiltered` adaptor from the closure `filter`.",1,[[["f"],["g"]],["self"]]],[11,"from_fn","","Create an `EdgeFiltered` adaptor from the closure `filter`.",2,[[["f"],["g"]],["self"]]],[11,"as_unreversed","","Return the original, unreversed edge reference.",12,[[["self"]],["r"]]],[11,"into_unreversed","","Consume `self` and return the original, unreversed edge…",12,[[],["r"]]],[8,"FilterNode","","A graph filter for nodes.",null,null],[10,"include_node","","Return true to have the node be part of the graph",13,[[["self"],["n"]],["bool"]]],[8,"FilterEdge","","A graph filter for edges",null,null],[10,"include_edge","","Return true to have the edge be part of the graph",14,[[["edge"],["self"]],["bool"]]],[8,"ControlFlow","","Control flow for callbacks.",null,null],[10,"continuing","","",15,[[],["self"]]],[10,"should_break","","",15,[[["self"]],["bool"]]],[10,"should_prune","","",15,[[["self"]],["bool"]]],[8,"Walker","","A walker is a traversal state, but where part of the…",null,null],[16,"Item","","",16,null],[10,"walk_next","","Advance to the next item",16,[[["self"],["context"]],["option"]]],[11,"iter","","Create an iterator out of the walker and given `context`.",16,[[["context"]],["walkeriter"]]],[8,"GraphBase","","Base graph trait: defines the associated node identifier…",null,null],[16,"EdgeId","","edge identifier",17,null],[16,"NodeId","","node identifier",17,null],[8,"GraphRef","","A copyable reference to a graph.",null,null],[8,"IntoNeighbors","","Access to the neighbors of each node",null,null],[16,"Neighbors","","",18,null],[10,"neighbors","","Return an iterator of the neighbors of node `a`.",18,[[]]],[8,"IntoNeighborsDirected","","Access to the neighbors of each node, through incoming or…",null,null],[16,"NeighborsDirected","","",19,null],[10,"neighbors_directed","","",19,[[["direction"]]]],[8,"IntoEdges","","Access to the edges of each node.",null,null],[16,"Edges","","",20,null],[10,"edges","","",20,[[]]],[8,"IntoEdgesDirected","","Access to all edges of each node, in the specified…",null,null],[16,"EdgesDirected","","",21,null],[10,"edges_directed","","",21,[[["direction"]]]],[8,"IntoNodeIdentifiers","","Access to the sequence of the graph’s `NodeId`s.",null,null],[16,"NodeIdentifiers","","",22,null],[10,"node_identifiers","","",22,[[]]],[8,"Data","","Define associated data for nodes and edges",null,null],[16,"NodeWeight","","",23,null],[16,"EdgeWeight","","",23,null],[8,"EdgeRef","","An edge reference.",null,null],[16,"NodeId","","",24,null],[16,"EdgeId","","",24,null],[16,"Weight","","",24,null],[10,"source","","The source node of the edge.",24,[[["self"]]]],[10,"target","","The target node of the edge.",24,[[["self"]]]],[10,"weight","","A reference to the weight of the edge.",24,[[["self"]]]],[10,"id","","The edge’s identifier.",24,[[["self"]]]],[8,"NodeRef","","A node reference.",null,null],[16,"NodeId","","",25,null],[16,"Weight","","",25,null],[10,"id","","",25,[[["self"]]]],[10,"weight","","",25,[[["self"]]]],[8,"IntoNodeReferences","","Access to the sequence of the graph’s nodes",null,null],[16,"NodeRef","","",26,null],[16,"NodeReferences","","",26,null],[10,"node_references","","",26,[[]]],[8,"IntoEdgeReferences","","Access to the sequence of the graph’s edges",null,null],[16,"EdgeRef","","",27,null],[16,"EdgeReferences","","",27,null],[10,"edge_references","","",27,[[]]],[8,"GraphProp","","Edge kind property (directed or undirected edges)",null,null],[16,"EdgeType","","The kind edges in the graph.",28,null],[11,"is_directed","","",28,[[["self"]],["bool"]]],[8,"NodeIndexable","","The graph’s `NodeId`s map to indices",null,null],[10,"node_bound","","Return an upper bound of the node indices in the graph…",29,[[["self"]],["usize"]]],[10,"to_index","","Convert `a` to an integer index.",29,[[["self"]],["usize"]]],[10,"from_index","","Convert `i` to a node index",29,[[["self"],["usize"]]]],[8,"NodeCount","","A graph with a known node count.",null,null],[10,"node_count","","",30,[[["self"]],["usize"]]],[8,"NodeCompactIndexable","","The graph’s `NodeId`s map to indices, in a range without…",null,null],[8,"VisitMap","","A mapping for storing the visited status for NodeId `N`.",null,null],[10,"visit","","Mark `a` as visited.",31,[[["self"],["n"]],["bool"]]],[10,"is_visited","","Return whether `a` has been visited before.",31,[[["self"],["n"]],["bool"]]],[8,"Visitable","","A graph that can create a map that tracks the visited…",null,null],[16,"Map","","The associated map type",32,null],[10,"visit_map","","Create a new visitor map",32,[[["self"]]]],[10,"reset_map","","Reset the visitor map (and resize to new size of graph if…",32,[[["self"]]]],[8,"GetAdjacencyMatrix","","Create or access the adjacency matrix of a graph.",null,null],[16,"AdjMatrix","","The associated adjacency matrix type",33,null],[10,"adjacency_matrix","","Create the adjacency matrix",33,[[["self"]]]],[10,"is_adjacent","","Return true if there is an edge from `a` to `b`, false…",33,[[["self"]],["bool"]]],[0,"data","petgraph","Graph traits for associated data and graph construction.",null,null],[3,"FilterElements","petgraph::data","An iterator that filters graph elements.",null,null],[4,"Element","","A graph element.",null,null],[13,"Node","","A graph node.",34,null],[12,"weight","petgraph::data::Element","",35,null],[13,"Edge","petgraph::data","A graph edge.",34,null],[12,"source","petgraph::data::Element","",36,null],[12,"target","","",36,null],[12,"weight","","",36,null],[8,"DataMap","petgraph::data","Access node and edge weights (associated data).",null,null],[10,"node_weight","","",37,[[["self"]],["option"]]],[10,"edge_weight","","",37,[[["self"]],["option"]]],[8,"DataMapMut","","Access node and edge weights mutably.",null,null],[10,"node_weight_mut","","",38,[[["self"]],["option"]]],[10,"edge_weight_mut","","",38,[[["self"]],["option"]]],[8,"Build","","A graph that can be extended with further nodes and edges",null,null],[10,"add_node","","",39,[[["self"]]]],[11,"add_edge","","Add a new edge. If parallel edges (duplicate) are not…",39,[[["self"]],["option"]]],[10,"update_edge","","Add or update the edge from `a` to `b`. Return the id of…",39,[[["self"]]]],[8,"Create","","A graph that can be created",null,null],[10,"with_capacity","","",40,[[["usize"]],["self"]]],[8,"FromElements","","Create a graph from an iterator of elements.",null,null],[11,"from_elements","","",41,[[["i"]],["self"]]],[8,"ElementIterator","","Iterator adaptors for iterators of `Element`.",null,null],[11,"filter_elements","","Create an iterator adaptor that filters graph elements.",42,[[["f"]],["filterelements"]]],[0,"algo","petgraph","Graph algorithms.",null,null],[3,"DfsSpace","petgraph::algo","Workspace for a graph traversal.",null,null],[3,"MinSpanningTree","","An iterator producing a minimum spanning forest of a graph.",null,null],[3,"Cycle","","An algorithm error: a cycle was found in the graph.",null,null],[3,"NegativeCycle","","An algorithm error: a cycle of negative weights was found…",null,null],[5,"astar","","[Generic] A* shortest path algorithm.",null,[[["g"],["f"],["h"],["isgoal"]],["option"]]],[5,"dijkstra","","[Generic] Dijkstra's shortest path algorithm.",null,[[["f"],["option"],["g"]],["hashmap"]]],[5,"is_isomorphic","","[Graph] Return `true` if the graphs `g0` and `g1` are…",null,[[["graph"]],["bool"]]],[5,"is_isomorphic_matching","","[Graph] Return `true` if the graphs `g0` and `g1` are…",null,[[["g"],["graph"],["f"]],["bool"]]],[5,"all_simple_paths","","Returns iterator that produces all simple paths from…",null,[[["usize"],["option",["usize"]],["g"]]]],[5,"connected_components","","[Generic] Return the number of connected components of the…",null,[[["g"]],["usize"]]],[5,"is_cyclic_undirected","","[Generic] Return `true` if the input graph contains a cycle.",null,[[["g"]],["bool"]]],[5,"toposort","","[Generic] Perform a topological sort of a directed graph.",null,[[["dfsspace"],["option",["dfsspace"]],["g"]],[["vec"],["cycle"],["result",["vec","cycle"]]]]],[5,"is_cyclic_directed","","[Generic] Return `true` if the input directed graph…",null,[[["g"]],["bool"]]],[5,"has_path_connecting","","[Generic] Check if there exists a path starting at `from`…",null,[[["option",["dfsspace"]],["dfsspace"],["g"]],["bool"]]],[5,"scc","","Renamed to `kosaraju_scc`.",null,[[["g"]],[["vec"],["vec",["vec"]]]]],[5,"kosaraju_scc","","[Generic] Compute the strongly connected components using…",null,[[["g"]],[["vec"],["vec",["vec"]]]]],[5,"tarjan_scc","","[Generic] Compute the strongly connected components using…",null,[[["g"]],[["vec"],["vec",["vec"]]]]],[5,"condensation","","[Graph] Condense every strongly connected component into a…",null,[[["graph"],["bool"]],[["vec"],["graph",["vec"]]]]],[5,"min_spanning_tree","","[Generic] Compute a minimum spanning tree of a graph.",null,[[["g"]],["minspanningtree"]]],[5,"bellman_ford","","[Generic] Compute shortest paths from node `source` to all…",null,[[["g"]],[["negativecycle"],["result",["negativecycle"]]]]],[5,"is_bipartite_undirected","","Return `true` if the graph is bipartite. A graph is…",null,[[["n"],["g"]],["bool"]]],[0,"dominators","","Compute dominators of a control-flow graph.",null,null],[3,"Dominators","petgraph::algo::dominators","The dominance relation for some graph and root.",null,null],[3,"DominatorsIter","","Iterator for a node's dominators.",null,null],[5,"simple_fast","","This is an implementation of the engineered [\"Simple, Fast…",null,[[["g"]],["dominators"]]],[11,"root","","Get the root node used to construct these dominance…",43,[[["self"]],["n"]]],[11,"immediate_dominator","","Get the immediate dominator of the given node.",43,[[["self"],["n"]],["option"]]],[11,"strict_dominators","","Iterate over the given node's strict dominators.",43,[[["self"],["n"]],[["option",["dominatorsiter"]],["dominatorsiter"]]]],[11,"dominators","","Iterate over all of the given node's dominators (including…",43,[[["self"],["n"]],[["option",["dominatorsiter"]],["dominatorsiter"]]]],[8,"Measure","petgraph::algo","Associated data that can be used for measures (such as…",null,null],[8,"FloatMeasure","","A floating-point measure.",null,null],[10,"zero","","",44,[[],["self"]]],[10,"infinite","","",44,[[],["self"]]],[11,"new","","",45,[[["g"]],["self"]]],[11,"node_id","","Return a node id that participates in the cycle",46,[[["self"]],["n"]]],[0,"csr","petgraph","Compressed Sparse Row (CSR) is a sparse adjacency matrix…",null,null],[3,"Csr","petgraph::csr","Compressed Sparse Row ([`CSR`]) is a sparse adjacency…",null,null],[3,"EdgesNotSorted","","Csr creation error: edges were not in sorted order.",null,null],[3,"Edges","","",null,null],[3,"EdgeReference","","",null,null],[3,"EdgeReferences","","",null,null],[3,"Neighbors","","",null,null],[3,"NodeIdentifiers","","",null,null],[6,"NodeIndex","","Csr node index type, a plain integer.",null,null],[6,"EdgeIndex","","Csr edge index type, a plain integer.",null,null],[11,"new","","Create an empty `Csr`.",47,[[],["self"]]],[11,"with_nodes","","Create a new [`Csr`] with `n` nodes. `N` must implement…",47,[[["usize"]],["self"]]],[11,"from_sorted_edges","","Create a new `Csr` from a sorted sequence of edges",47,[[],[["result",["edgesnotsorted"]],["edgesnotsorted"]]]],[11,"node_count","","",47,[[["self"]],["usize"]]],[11,"edge_count","","",47,[[["self"]],["usize"]]],[11,"is_directed","","",47,[[["self"]],["bool"]]],[11,"clear_edges","","Remove all edges",47,[[["self"]]]],[11,"add_node","","Adds a new node with the given weight, returning the…",47,[[["self"],["n"]],["nodeindex"]]],[11,"add_edge","","Return `true` if the edge was added",47,[[["self"],["nodeindex"],["e"]],["bool"]]],[11,"contains_edge","","Computes in O(log |V|) time.",47,[[["self"],["nodeindex"]],["bool"]]],[11,"out_degree","","Computes in O(1) time.",47,[[["self"],["nodeindex"]],["usize"]]],[11,"neighbors_slice","","Computes in O(1) time.",47,[[["self"],["nodeindex"]]]],[11,"edges_slice","","Computes in O(1) time.",47,[[["self"],["nodeindex"]]]],[11,"edges","","Return an iterator of all edges of `a`.",47,[[["self"],["nodeindex"]],["edges"]]],[11,"weight","","Access the edge’s weight.",48,[[["self"]],["e"]]],[0,"dot","petgraph","Simple graphviz dot file format output.",null,null],[3,"Dot","petgraph::dot","`Dot` implements output to graphviz .dot format for a graph.",null,null],[4,"Config","","`Dot` configuration.",null,null],[13,"NodeIndexLabel","","Use indices for node labels.",49,null],[13,"EdgeIndexLabel","","Use indices for edge labels.",49,null],[13,"EdgeNoLabel","","Use no edge labels.",49,null],[13,"NodeNoLabel","","Use no node labels.",49,null],[13,"GraphContentOnly","","Do not print the graph/digraph string.",49,null],[11,"new","","Create a `Dot` formatting wrapper with default…",50,[[["g"]],["self"]]],[11,"with_config","","Create a `Dot` formatting wrapper with custom configuration.",50,[[["g"]],["self"]]],[11,"with_attr_getters","","",50,[[["fn"],["fn"],["g"]],["self"]]],[0,"unionfind","petgraph","`UnionFind<K>` is a disjoint-set data structure.",null,null],[3,"UnionFind","petgraph::unionfind","`UnionFind<K>` is a disjoint-set data structure. It tracks…",null,null],[11,"new","","Create a new `UnionFind` of `n` disjoint sets.",51,[[["usize"]],["self"]]],[11,"find","","Return the representative for `x`.",51,[[["self"],["k"]],["k"]]],[11,"find_mut","","Return the representative for `x`.",51,[[["self"],["k"]],["k"]]],[11,"equiv","","Returns `true` if the given elements belong to the same…",51,[[["self"],["k"]],["bool"]]],[11,"union","","Unify the two sets containing `x` and `y`.",51,[[["self"],["k"]],["bool"]]],[11,"into_labeling","","Return a vector mapping each element to its representative.",51,[[],["vec"]]],[0,"prelude","petgraph","Commonly used items.",null,null],[0,"graph","","`Graph<N, E, Ty, Ix>` is a graph datastructure using an…",null,null],[3,"Edge","petgraph::graph","The graph's edge type.",null,null],[12,"weight","","Associated edge data.",52,null],[3,"EdgeIndex","","Edge identifier.",null,null],[3,"EdgeIndices","","Iterator over the edge indices of a graph.",null,null],[3,"EdgeReference","","Reference to a `Graph` edge.",null,null],[3,"EdgeReferences","","Iterator over all edges of a graph.",null,null],[3,"EdgeWeightsMut","","Iterator yielding mutable access to all edge weights.",null,null],[3,"Edges","","Iterator over the edges of from or to a node",null,null],[3,"EdgesConnecting","","Iterator over the multiple directed edges connecting a…",null,null],[3,"Externals","","An iterator over either the nodes without edges to them or…",null,null],[3,"Frozen","","`Frozen` is a graph wrapper.",null,null],[3,"Graph","","`Graph<N, E, Ty, Ix>` is a graph datastructure using an…",null,null],[3,"Neighbors","","Iterator over the neighbors of a node.",null,null],[3,"Node","","The graph's node type.",null,null],[12,"weight","","Associated node data.",53,null],[3,"NodeIndex","","Node identifier.",null,null],[3,"NodeIndices","","Iterator over the node indices of a graph.",null,null],[3,"NodeReferences","","Iterator over all nodes of a graph.",null,null],[3,"NodeWeightsMut","","Iterator yielding mutable access to all node weights.",null,null],[3,"WalkNeighbors","","A “walker” object that can be used to step through the…",null,null],[5,"edge_index","","Short version of `EdgeIndex::new`",null,[[["usize"]],[["indextype"],["edgeindex"]]]],[5,"node_index","","Short version of `NodeIndex::new`",null,[[["usize"]],[["nodeindex"],["indextype"]]]],[6,"DefaultIx","","The default integer type for graph indices. `u32` is the…",null,null],[6,"DiGraph","","A `Graph` with directed edges.",null,null],[6,"UnGraph","","A `Graph` with undirected edges.",null,null],[8,"GraphIndex","","A  `GraphIndex` is a node or edge index.",null,null],[8,"IndexType","","Trait for the unsigned integer type used for node and edge…",null,null],[10,"new","","",54,[[["usize"]],["self"]]],[10,"index","","",54,[[["self"]],["usize"]]],[10,"max","","",54,[[],["self"]]],[8,"EdgeType","petgraph","A graph's edge type determines whether it has directed…",null,null],[10,"is_directed","","",55,[[],["bool"]]],[8,"IntoWeightedEdge","","Convert an element like `(i, j)` or `(i, j, w)` into a…",null,null],[16,"NodeId","","",56,null],[10,"into_weighted_edge","","",56,[[]]],[11,"opposite","","Return the opposite `Direction`.",0,[[],["direction"]]],[11,"index","","Return `0` for `Outgoing` and `1` for `Incoming`.",0,[[],["usize"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"equivalent","","",0,[[["k"],["self"]],["bool"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","petgraph::visit","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"into_iter","","",59,[[],["i"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"into_iter","","",60,[[],["i"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"into_iter","","",61,[[],["i"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"into_iter","","",62,[[],["i"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"into_iter","","",63,[[],["i"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"into_iter","","",64,[[],["i"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"into_iter","","",65,[[],["i"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"into_iter","","",66,[[],["i"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"into_iter","","",67,[[],["i"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"equivalent","","",4,[[["k"],["self"]],["bool"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"into_iter","","",11,[[],["i"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","petgraph::data","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"into_iter","","",68,[[],["i"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"equivalent","","",34,[[["k"],["self"]],["bool"]]],[11,"from","petgraph::algo","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"into_iter","","",69,[[],["i"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","petgraph::algo::dominators","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"into_iter","","",71,[[],["i"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","petgraph::csr","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"into_iter","","",73,[[],["i"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"into_iter","","",74,[[],["i"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"into_iter","","",75,[[],["i"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"into_iter","","",76,[[],["i"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","petgraph::dot","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_string","","",50,[[["self"]],["string"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"equivalent","","",49,[[["k"],["self"]],["bool"]]],[11,"from","petgraph::graph","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"equivalent","","",77,[[["k"],["self"]],["bool"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"equivalent","","",78,[[["k"],["self"]],["bool"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"into_iter","","",80,[[],["i"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"into_iter","","",81,[[],["i"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"into_iter","","",82,[[],["i"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"into_iter","","",83,[[],["i"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"into_iter","","",84,[[],["i"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"into_iter","","",85,[[],["i"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"into_iter","","",87,[[],["i"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"into_iter","","",88,[[],["i"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,[[["self"],["t"]]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"into_iter","","",90,[[],["i"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"into_iter","","",91,[[],["i"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"from","petgraph::unionfind","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"continuing","petgraph::visit","",9,[[],["self"]]],[11,"should_break","","",9,[[["self"]],["bool"]]],[11,"should_prune","","",9,[[["self"]],["bool"]]],[11,"walk_next","","",5,[[["self"],["g"]],["option"]]],[11,"walk_next","","",6,[[["self"],["g"]],["option"]]],[11,"walk_next","","",7,[[["self"],["g"]],["option"]]],[11,"walk_next","","",10,[[["self"],["g"]],["option"]]],[11,"source","","",12,[[["self"]]]],[11,"target","","",12,[[["self"]]]],[11,"weight","","",12,[[["self"]]]],[11,"id","","",12,[[["self"]]]],[11,"source","petgraph::csr","",48,[[["self"]]]],[11,"target","","",48,[[["self"]]]],[11,"weight","","",48,[[["self"]],["e"]]],[11,"id","","",48,[[["self"]]]],[11,"source","petgraph::graph","",89,[[["self"]]]],[11,"target","","",89,[[["self"]]]],[11,"weight","","",89,[[["self"]],["e"]]],[11,"id","","",89,[[["self"]]]],[11,"add_node","","",79,[[["self"]]]],[11,"add_edge","","",79,[[["self"]],["option"]]],[11,"update_edge","","",79,[[["self"]]]],[11,"with_capacity","","",79,[[["usize"]],["self"]]],[11,"from_elements","","",79,[[["i"]],["self"]]],[11,"index","","",77,[[["self"]],["usize"]]],[11,"is_node_index","","",77,[[],["bool"]]],[11,"index","","",78,[[["self"]],["usize"]]],[11,"is_node_index","","",78,[[],["bool"]]],[11,"is_directed","petgraph","",57,[[],["bool"]]],[11,"is_directed","","",58,[[],["bool"]]],[11,"neighbors","petgraph::visit","",3,[[]]],[11,"neighbors_directed","","",3,[[["direction"]]]],[11,"edges","","",3,[[]]],[11,"edges_directed","","",3,[[["direction"]]]],[11,"node_identifiers","","",3,[[]]],[11,"node_references","","",3,[[]]],[11,"edge_references","","",3,[[]]],[11,"node_bound","petgraph::graph","",79,[[["self"]],["usize"]]],[11,"to_index","","",79,[[["nodeindex"],["self"]],["usize"]]],[11,"from_index","","",79,[[["self"],["usize"]]]],[11,"node_bound","petgraph::visit","",1,[[["self"]],["usize"]]],[11,"to_index","","",1,[[["self"]],["usize"]]],[11,"from_index","","",1,[[["self"],["usize"]]]],[11,"node_bound","","",2,[[["self"]],["usize"]]],[11,"to_index","","",2,[[["self"]],["usize"]]],[11,"from_index","","",2,[[["self"],["usize"]]]],[11,"node_bound","","",3,[[["self"]],["usize"]]],[11,"to_index","","",3,[[["self"]],["usize"]]],[11,"from_index","","",3,[[["self"],["usize"]]]],[11,"node_bound","petgraph::csr","",47,[[["self"]],["usize"]]],[11,"to_index","","",47,[[["self"]],["usize"]]],[11,"from_index","","",47,[[["self"],["usize"]]]],[11,"node_bound","petgraph::graph","",92,[[["self"]],["usize"]]],[11,"to_index","","",92,[[["self"]],["usize"]]],[11,"from_index","","",92,[[["self"],["usize"]]]],[11,"node_count","","",79,[[["self"]],["usize"]]],[11,"node_count","petgraph::visit","",2,[[["self"]],["usize"]]],[11,"node_count","","",3,[[["self"]],["usize"]]],[11,"node_count","petgraph::csr","",47,[[["self"]],["usize"]]],[11,"node_count","petgraph::graph","",92,[[["self"]],["usize"]]],[11,"visit_map","","",79,[[["self"]],["fixedbitset"]]],[11,"reset_map","","",79,[[["self"]]]],[11,"visit_map","petgraph::visit","",1,[[["self"]]]],[11,"reset_map","","",1,[[["self"]]]],[11,"visit_map","","",2,[[["self"]]]],[11,"reset_map","","",2,[[["self"]]]],[11,"visit_map","","",3,[[["self"]]]],[11,"reset_map","","",3,[[["self"]]]],[11,"visit_map","petgraph::csr","",47,[[["self"]],["fixedbitset"]]],[11,"reset_map","","",47,[[["self"]]]],[11,"visit_map","petgraph::graph","",92,[[["self"]]]],[11,"reset_map","","",92,[[["self"]]]],[11,"adjacency_matrix","","",92,[[["self"]]]],[11,"is_adjacent","","",92,[[["self"]],["bool"]]],[11,"adjacency_matrix","","",79,[[["self"]],["fixedbitset"]]],[11,"is_adjacent","","",79,[[["nodeindex"],["fixedbitset"],["self"]],["bool"]]],[11,"node_weight","petgraph::visit","",1,[[["self"]],["option"]]],[11,"edge_weight","","",1,[[["self"]],["option"]]],[11,"node_weight","","",3,[[["self"]],["option"]]],[11,"edge_weight","","",3,[[["self"]],["option"]]],[11,"node_weight","petgraph::graph","",79,[[["self"]],["option"]]],[11,"edge_weight","","",79,[[["self"]],["option"]]],[11,"node_weight","","",92,[[["self"]],["option"]]],[11,"edge_weight","","",92,[[["self"]],["option"]]],[11,"node_weight_mut","petgraph::visit","",3,[[["self"]],["option"]]],[11,"edge_weight_mut","","",3,[[["self"]],["option"]]],[11,"node_weight_mut","petgraph::graph","",79,[[["self"]],["option"]]],[11,"edge_weight_mut","","",79,[[["self"]],["option"]]],[11,"node_weight_mut","","",92,[[["self"]],["option"]]],[11,"edge_weight_mut","","",92,[[["self"]],["option"]]],[11,"from","","",77,[[["ix"]],["self"]]],[11,"from","","",78,[[["ix"]],["self"]]],[11,"next_back","","",87,[[["self"]],["option"]]],[11,"next_back","","",88,[[["self"]],["option"]]],[11,"next_back","","",90,[[["self"]],["option"]]],[11,"next_back","","",91,[[["self"]],["option"]]],[11,"next","petgraph::visit","",11,[[["self"]],["option"]]],[11,"next","","",59,[[["self"]],["option"]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"next","","",61,[[["self"]],["option"]]],[11,"next","","",62,[[["self"]],["option"]]],[11,"next","","",63,[[["self"]],["option"]]],[11,"next","","",64,[[["self"]],["option"]]],[11,"next","","",65,[[["self"]],["option"]]],[11,"next","","",66,[[["self"]],["option"]]],[11,"next","","",67,[[["self"]],["option"]]],[11,"next","petgraph::data","",68,[[["self"]],["option"]]],[11,"next","petgraph::algo::dominators","",71,[[["self"]],["option"]]],[11,"next","petgraph::algo","",69,[[["self"]],["option"]]],[11,"next","petgraph::csr","",73,[[["self"]],["option"]]],[11,"next","","",74,[[["self"]],["option"]]],[11,"next","","",75,[[["self"]],["option"]]],[11,"size_hint","","",75,[[["self"]]]],[11,"next","","",76,[[["self"]],["option"]]],[11,"size_hint","","",76,[[["self"]]]],[11,"next","petgraph::graph","",80,[[["self"]],[["option",["nodeindex"]],["nodeindex"]]]],[11,"next","","",81,[[["self"]],[["option",["nodeindex"]],["nodeindex"]]]],[11,"next","","",82,[[["self"]],["option"]]],[11,"next","","",83,[[["self"]],[["option",["edgereference"]],["edgereference"]]]],[11,"next","","",84,[[["self"]],[["option"],["n"]]]],[11,"size_hint","","",84,[[["self"]]]],[11,"next","","",85,[[["self"]],[["option"],["e"]]]],[11,"size_hint","","",85,[[["self"]]]],[11,"next","","",87,[[["self"]],["option"]]],[11,"size_hint","","",87,[[["self"]]]],[11,"next","","",88,[[["self"]],["option"]]],[11,"size_hint","","",88,[[["self"]]]],[11,"next","","",90,[[["self"]],["option"]]],[11,"size_hint","","",90,[[["self"]]]],[11,"next","","",91,[[["self"]],["option"]]],[11,"size_hint","","",91,[[["self"]]]],[11,"clone","petgraph::visit","",4,[[["self"]],["time"]]],[11,"clone","","",8,[[["self"]],["dfsevent"]]],[11,"clone","","",9,[[["self"]],["control"]]],[11,"clone","","",5,[[["self"]],["dfs"]]],[11,"clone","","",6,[[["self"]],["dfspostorder"]]],[11,"clone","","",7,[[["self"]],["bfs"]]],[11,"clone","","",10,[[["self"]],["topo"]]],[11,"clone","","",11,[[["self"]],["walkeriter"]]],[11,"clone","","",1,[[["self"]],["nodefiltered"]]],[11,"clone","","",2,[[["self"]],["edgefiltered"]]],[11,"clone","","",3,[[["self"]],["reversed"]]],[11,"clone","","",12,[[["self"]],["reversededgereference"]]],[11,"clone","petgraph::data","",34,[[["self"]],["element"]]],[11,"clone","petgraph::algo::dominators","",43,[[["self"]],["dominators"]]],[11,"clone","petgraph::algo","",45,[[["self"]],["dfsspace"]]],[11,"clone","","",46,[[["self"]],["cycle"]]],[11,"clone","","",70,[[["self"]],["negativecycle"]]],[11,"clone","petgraph::csr","",47,[[["self"]],["self"]]],[11,"clone","","",72,[[["self"]],["edgesnotsorted"]]],[11,"clone","","",73,[[["self"]],["edges"]]],[11,"clone","","",48,[[["self"]],["self"]]],[11,"clone","","",75,[[["self"]],["neighbors"]]],[11,"clone","petgraph::graph","",77,[[["self"]],["nodeindex"]]],[11,"clone","","",78,[[["self"]],["edgeindex"]]],[11,"clone","","",53,[[["self"]],["self"]]],[11,"clone","","",52,[[["self"]],["self"]]],[11,"clone","","",79,[[["self"]],["self"]]],[11,"clone_from","","",79,[[["self"],["self"]]]],[11,"clone","","",81,[[["self"]],["self"]]],[11,"clone","","",82,[[["self"]],["self"]]],[11,"clone","","",86,[[["self"]],["self"]]],[11,"clone","","",87,[[["self"]],["nodeindices"]]],[11,"clone","","",88,[[["self"]],["edgeindices"]]],[11,"clone","","",89,[[["self"]],["self"]]],[11,"clone","petgraph::unionfind","",51,[[["self"]],["unionfind"]]],[11,"clone","petgraph","",0,[[["self"]],["self"]]],[11,"clone","","",57,[[["self"]],["self"]]],[11,"clone","","",58,[[["self"]],["self"]]],[11,"default","petgraph::visit","",4,[[],["time"]]],[11,"default","","",9,[[],["self"]]],[11,"default","","",5,[[],["self"]]],[11,"default","","",6,[[],["self"]]],[11,"default","","",7,[[],["self"]]],[11,"default","","",10,[[],["self"]]],[11,"default","petgraph::algo","",45,[[],["self"]]],[11,"default","petgraph::csr","",47,[[],["self"]]],[11,"default","petgraph::graph","",77,[[],["nodeindex"]]],[11,"default","","",78,[[],["edgeindex"]]],[11,"default","","",79,[[],["self"]]],[11,"cmp","petgraph::visit","",4,[[["time"],["self"]],["ordering"]]],[11,"cmp","petgraph::graph","",77,[[["nodeindex"],["self"]],["ordering"]]],[11,"cmp","","",78,[[["self"],["edgeindex"]],["ordering"]]],[11,"cmp","petgraph","",0,[[["self"],["direction"]],["ordering"]]],[11,"eq","petgraph::visit","",4,[[["time"],["self"]],["bool"]]],[11,"ne","","",4,[[["time"],["self"]],["bool"]]],[11,"eq","petgraph::data","",34,[[["self"],["element"]],["bool"]]],[11,"ne","","",34,[[["self"],["element"]],["bool"]]],[11,"eq","petgraph::algo","",46,[[["cycle"],["self"]],["bool"]]],[11,"ne","","",46,[[["cycle"],["self"]],["bool"]]],[11,"eq","","",70,[[["self"],["negativecycle"]],["bool"]]],[11,"ne","","",70,[[["self"],["negativecycle"]],["bool"]]],[11,"eq","petgraph::dot","",49,[[["config"],["self"]],["bool"]]],[11,"ne","","",49,[[["config"],["self"]],["bool"]]],[11,"eq","petgraph::graph","",77,[[["nodeindex"],["self"]],["bool"]]],[11,"ne","","",77,[[["nodeindex"],["self"]],["bool"]]],[11,"eq","","",78,[[["self"],["edgeindex"]],["bool"]]],[11,"ne","","",78,[[["self"],["edgeindex"]],["bool"]]],[11,"eq","","",89,[[["self"]],["bool"]]],[11,"eq","petgraph","",0,[[["self"],["direction"]],["bool"]]],[11,"partial_cmp","petgraph::visit","",4,[[["time"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",4,[[["time"],["self"]],["bool"]]],[11,"le","","",4,[[["time"],["self"]],["bool"]]],[11,"gt","","",4,[[["time"],["self"]],["bool"]]],[11,"ge","","",4,[[["time"],["self"]],["bool"]]],[11,"partial_cmp","petgraph::graph","",77,[[["nodeindex"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",77,[[["nodeindex"],["self"]],["bool"]]],[11,"le","","",77,[[["nodeindex"],["self"]],["bool"]]],[11,"gt","","",77,[[["nodeindex"],["self"]],["bool"]]],[11,"ge","","",77,[[["nodeindex"],["self"]],["bool"]]],[11,"partial_cmp","","",78,[[["self"],["edgeindex"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",78,[[["self"],["edgeindex"]],["bool"]]],[11,"le","","",78,[[["self"],["edgeindex"]],["bool"]]],[11,"gt","","",78,[[["self"],["edgeindex"]],["bool"]]],[11,"ge","","",78,[[["self"],["edgeindex"]],["bool"]]],[11,"partial_cmp","petgraph","",0,[[["self"],["direction"]],[["option",["ordering"]],["ordering"]]]],[11,"deref","petgraph::graph","",92,[[["self"]],["g"]]],[11,"fmt","petgraph::visit","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","petgraph::data","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","petgraph::algo::dominators","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","petgraph::algo","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","petgraph::csr","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","petgraph::dot","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","petgraph::graph","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",87,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",88,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","petgraph::unionfind","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","petgraph","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","petgraph::dot","",50,[[["formatter"],["self"]],["result"]]],[11,"index","petgraph::csr","",47,[[["self"],["nodeindex"]],["n"]]],[11,"index","petgraph::graph","",79,[[["nodeindex"],["self"]],["n"]]],[11,"index","","",79,[[["self"],["edgeindex"]],["e"]]],[11,"index","","",92,[[["i"],["self"]]]],[11,"index_mut","petgraph::csr","",47,[[["self"],["nodeindex"]],["n"]]],[11,"index_mut","petgraph::graph","",79,[[["self"],["nodeindex"]],["n"]]],[11,"index_mut","","",79,[[["self"],["edgeindex"]],["e"]]],[11,"index_mut","","",92,[[["self"],["i"]]]],[11,"hash","petgraph::visit","",4,[[["self"],["__h"]]]],[11,"hash","petgraph::graph","",77,[[["self"],["__h"]]]],[11,"hash","","",78,[[["self"],["__h"]]]],[11,"hash","petgraph","",0,[[["self"],["__h"]]]],[11,"iter","petgraph::visit","Create an iterator out of the walker and given `context`.",16,[[["context"]],["walkeriter"]]],[11,"new","petgraph::graph","Create a new `Frozen` from a mutable reference to a graph.",92,[[["g"]],["self"]]],[11,"index_twice_mut","","Index the `Graph` by two indices, any combination of node…",92,[[["u"],["self"],["t"]]]],[11,"new","","",77,[[["usize"]],["self"]]],[11,"index","","",77,[[],["usize"]]],[11,"end","","",77,[[],["self"]]],[11,"new","","",78,[[["usize"]],["self"]]],[11,"index","","",78,[[],["usize"]]],[11,"end","","An invalid `EdgeIndex` used to denote absence of an edge,…",78,[[],["self"]]],[11,"next_edge","","Accessor for data structure internals: the first edge in…",53,[[["direction"],["self"]],["edgeindex"]]],[11,"next_edge","","Accessor for data structure internals: the next edge for…",52,[[["direction"],["self"]],["edgeindex"]]],[11,"source","","Return the source node index.",52,[[["self"]],["nodeindex"]]],[11,"target","","Return the target node index.",52,[[["self"]],["nodeindex"]]],[11,"new","","Create a new `Graph` with directed edges.",79,[[],["self"]]],[11,"new_undirected","","Create a new `Graph` with undirected edges.",79,[[],["self"]]],[11,"with_capacity","","Create a new `Graph` with estimated capacity.",79,[[["usize"]],["self"]]],[11,"node_count","","Return the number of nodes (vertices) in the graph.",79,[[["self"]],["usize"]]],[11,"edge_count","","Return the number of edges in the graph.",79,[[["self"]],["usize"]]],[11,"is_directed","","Whether the graph has directed edges or not.",79,[[["self"]],["bool"]]],[11,"add_node","","Add a node (also called vertex) with associated data…",79,[[["self"],["n"]],["nodeindex"]]],[11,"node_weight","","Access the weight for node `a`.",79,[[["nodeindex"],["self"]],[["n"],["option"]]]],[11,"node_weight_mut","","Access the weight for node `a`, mutably.",79,[[["self"],["nodeindex"]],[["option"],["n"]]]],[11,"add_edge","","Add an edge from `a` to `b` to the graph, with its…",79,[[["self"],["nodeindex"],["e"]],["edgeindex"]]],[11,"update_edge","","Add or update an edge from `a` to `b`. If the edge already…",79,[[["self"],["nodeindex"],["e"]],["edgeindex"]]],[11,"edge_weight","","Access the weight for edge `e`.",79,[[["self"],["edgeindex"]],[["option"],["e"]]]],[11,"edge_weight_mut","","Access the weight for edge `e`, mutably.",79,[[["self"],["edgeindex"]],[["option"],["e"]]]],[11,"edge_endpoints","","Access the source and target nodes for `e`.",79,[[["self"],["edgeindex"]],["option"]]],[11,"remove_node","","Remove `a` from the graph if it exists, and return its…",79,[[["self"],["nodeindex"]],["option"]]],[11,"remove_edge","","Remove an edge and return its edge weight, or `None` if it…",79,[[["self"],["edgeindex"]],["option"]]],[11,"neighbors","","Return an iterator of all nodes with an edge starting from…",79,[[["nodeindex"],["self"]],["neighbors"]]],[11,"neighbors_directed","","Return an iterator of all neighbors that have an edge…",79,[[["direction"],["nodeindex"],["self"]],["neighbors"]]],[11,"neighbors_undirected","","Return an iterator of all neighbors that have an edge…",79,[[["nodeindex"],["self"]],["neighbors"]]],[11,"edges","","Return an iterator of all edges of `a`.",79,[[["nodeindex"],["self"]],["edges"]]],[11,"edges_directed","","Return an iterator of all edges of `a`, in the specified…",79,[[["direction"],["nodeindex"],["self"]],["edges"]]],[11,"edges_connecting","","Return an iterator over all the edges connecting `a` and…",79,[[["nodeindex"],["self"]],["edgesconnecting"]]],[11,"contains_edge","","Lookup if there is an edge from `a` to `b`.",79,[[["nodeindex"],["self"]],["bool"]]],[11,"find_edge","","Lookup an edge from `a` to `b`.",79,[[["nodeindex"],["self"]],[["option",["edgeindex"]],["edgeindex"]]]],[11,"find_edge_undirected","","Lookup an edge between `a` and `b`, in either direction.",79,[[["nodeindex"],["self"]],["option"]]],[11,"externals","","Return an iterator over either the nodes without edges to…",79,[[["direction"],["self"]],["externals"]]],[11,"node_indices","","Return an iterator over the node indices of the graph.",79,[[["self"]],["nodeindices"]]],[11,"node_weights_mut","","Return an iterator yielding mutable access to all node…",79,[[["self"]],["nodeweightsmut"]]],[11,"edge_indices","","Return an iterator over the edge indices of the graph",79,[[["self"]],["edgeindices"]]],[11,"edge_references","","Create an iterator over all edges, in indexed order.",79,[[["self"]],["edgereferences"]]],[11,"edge_weights_mut","","Return an iterator yielding mutable access to all edge…",79,[[["self"]],["edgeweightsmut"]]],[11,"raw_nodes","","Access the internal node array.",79,[[["self"]]]],[11,"raw_edges","","Access the internal edge array.",79,[[["self"]]]],[11,"into_nodes_edges","","Convert the graph into a vector of Nodes and a vector of…",79,[[]]],[11,"first_edge","","Accessor for data structure internals: the first edge in…",79,[[["direction"],["nodeindex"],["self"]],[["option",["edgeindex"]],["edgeindex"]]]],[11,"next_edge","","Accessor for data structure internals: the next edge for…",79,[[["direction"],["self"],["edgeindex"]],[["option",["edgeindex"]],["edgeindex"]]]],[11,"index_twice_mut","","Index the `Graph` by two indices, any combination of node…",79,[[["u"],["self"],["t"]]]],[11,"reverse","","Reverse the direction of all edges",79,[[["self"]]]],[11,"clear","","Remove all nodes and edges",79,[[["self"]]]],[11,"clear_edges","","Remove all edges",79,[[["self"]]]],[11,"capacity","","Return the current node and edge capacity of the graph.",79,[[["self"]]]],[11,"reserve_nodes","","Reserves capacity for at least `additional` more nodes to…",79,[[["self"],["usize"]]]],[11,"reserve_edges","","Reserves capacity for at least `additional` more edges to…",79,[[["self"],["usize"]]]],[11,"reserve_exact_nodes","","Reserves the minimum capacity for exactly `additional`…",79,[[["self"],["usize"]]]],[11,"reserve_exact_edges","","Reserves the minimum capacity for exactly `additional`…",79,[[["self"],["usize"]]]],[11,"shrink_to_fit_nodes","","Shrinks the capacity of the underlying nodes collection as…",79,[[["self"]]]],[11,"shrink_to_fit_edges","","Shrinks the capacity of the underlying edges collection as…",79,[[["self"]]]],[11,"shrink_to_fit","","Shrinks the capacity of the graph as much as possible.",79,[[["self"]]]],[11,"retain_nodes","","Keep all nodes that return `true` from the `visit`…",79,[[["self"],["f"]]]],[11,"retain_edges","","Keep all edges that return `true` from the `visit`…",79,[[["self"],["f"]]]],[11,"from_edges","","Create a new `Graph` from an iterable of edges.",79,[[["i"]],["self"]]],[11,"extend_with_edges","","Extend the graph from an iterable of edges.",79,[[["self"],["i"]]]],[11,"map","","Create a new `Graph` by mapping node and edge weights to…",79,[[["g"],["self"],["f"]],["graph"]]],[11,"filter_map","","Create a new `Graph` by mapping nodes and edges. A node or…",79,[[["g"],["self"],["f"]],["graph"]]],[11,"into_edge_type","","Convert the graph into either undirected or directed. No…",79,[[],["graph"]]],[11,"detach","","Return a “walker” object that can be used to step through…",81,[[["self"]],["walkneighbors"]]],[11,"next","","Step to the next edge and its endpoint node in the walk…",86,[[["self"],["graph"]],["option"]]],[11,"next_node","","",86,[[["self"],["graph"]],[["option",["nodeindex"]],["nodeindex"]]]],[11,"next_edge","","",86,[[["self"],["graph"]],[["option",["edgeindex"]],["edgeindex"]]]],[11,"weight","","Access the edge’s weight.",89,[[["self"]],["e"]]]],"p":[[4,"Direction"],[3,"NodeFiltered"],[3,"EdgeFiltered"],[3,"Reversed"],[3,"Time"],[3,"Dfs"],[3,"DfsPostOrder"],[3,"Bfs"],[4,"DfsEvent"],[4,"Control"],[3,"Topo"],[3,"WalkerIter"],[3,"ReversedEdgeReference"],[8,"FilterNode"],[8,"FilterEdge"],[8,"ControlFlow"],[8,"Walker"],[8,"GraphBase"],[8,"IntoNeighbors"],[8,"IntoNeighborsDirected"],[8,"IntoEdges"],[8,"IntoEdgesDirected"],[8,"IntoNodeIdentifiers"],[8,"Data"],[8,"EdgeRef"],[8,"NodeRef"],[8,"IntoNodeReferences"],[8,"IntoEdgeReferences"],[8,"GraphProp"],[8,"NodeIndexable"],[8,"NodeCount"],[8,"VisitMap"],[8,"Visitable"],[8,"GetAdjacencyMatrix"],[4,"Element"],[13,"Node"],[13,"Edge"],[8,"DataMap"],[8,"DataMapMut"],[8,"Build"],[8,"Create"],[8,"FromElements"],[8,"ElementIterator"],[3,"Dominators"],[8,"FloatMeasure"],[3,"DfsSpace"],[3,"Cycle"],[3,"Csr"],[3,"EdgeReference"],[4,"Config"],[3,"Dot"],[3,"UnionFind"],[3,"Edge"],[3,"Node"],[8,"IndexType"],[8,"EdgeType"],[8,"IntoWeightedEdge"],[4,"Directed"],[4,"Undirected"],[3,"NodeFilteredNeighbors"],[3,"NodeFilteredNodes"],[3,"NodeFilteredEdgeReferences"],[3,"NodeFilteredEdges"],[3,"EdgeFilteredNeighbors"],[3,"EdgeFilteredEdges"],[3,"EdgeFilteredNeighborsDirected"],[3,"ReversedEdges"],[3,"ReversedEdgeReferences"],[3,"FilterElements"],[3,"MinSpanningTree"],[3,"NegativeCycle"],[3,"DominatorsIter"],[3,"EdgesNotSorted"],[3,"Edges"],[3,"EdgeReferences"],[3,"Neighbors"],[3,"NodeIdentifiers"],[3,"NodeIndex"],[3,"EdgeIndex"],[3,"Graph"],[3,"Externals"],[3,"Neighbors"],[3,"Edges"],[3,"EdgesConnecting"],[3,"NodeWeightsMut"],[3,"EdgeWeightsMut"],[3,"WalkNeighbors"],[3,"NodeIndices"],[3,"EdgeIndices"],[3,"EdgeReference"],[3,"NodeReferences"],[3,"EdgeReferences"],[3,"Frozen"]]};
searchIndex["ppv_lite86"] = {"doc":"","i":[[0,"x86_64","ppv_lite86","",null,null],[3,"YesS3","ppv_lite86::x86_64","",null,null],[3,"NoS3","","",null,null],[3,"YesS4","","",null,null],[3,"NoS4","","",null,null],[3,"YesA1","","",null,null],[3,"NoA1","","",null,null],[3,"YesA2","","",null,null],[3,"NoA2","","",null,null],[3,"YesNI","","",null,null],[3,"NoNI","","",null,null],[3,"SseMachine","","",null,null],[3,"Avx2Machine","","",null,null],[19,"vec128_storage","","Generic wrapper for unparameterized storage of any of the…",null,null],[19,"vec256_storage","","",null,null],[19,"vec512_storage","","",null,null],[6,"SSE2","","",null,null],[6,"SSSE3","","",null,null],[6,"SSE41","","",null,null],[6,"AVX","","AVX but not AVX2: only 128-bit integer operations, but use…",null,null],[6,"AVX2","","",null,null],[11,"new128","","",0,[[],["self"]]],[11,"split128","","",0,[[]]],[11,"new128","","",1,[[],["self"]]],[11,"split128","","",1,[[]]],[8,"AndNot","ppv_lite86","",null,null],[16,"Output","","",2,null],[10,"andnot","","",2,[[]]],[8,"BSwap","","",null,null],[10,"bswap","","",3,[[],["self"]]],[8,"ArithOps","","Ops that depend on word size",null,null],[8,"BitOps0","","Ops that are independent of word size and endian",null,null],[8,"BitOps32","","",null,null],[8,"BitOps64","","",null,null],[8,"BitOps128","","",null,null],[8,"RotateEachWord32","","",null,null],[10,"rotate_each_word_right7","","",4,[[],["self"]]],[10,"rotate_each_word_right8","","",4,[[],["self"]]],[10,"rotate_each_word_right11","","",4,[[],["self"]]],[10,"rotate_each_word_right12","","",4,[[],["self"]]],[10,"rotate_each_word_right16","","",4,[[],["self"]]],[10,"rotate_each_word_right20","","",4,[[],["self"]]],[10,"rotate_each_word_right24","","",4,[[],["self"]]],[10,"rotate_each_word_right25","","",4,[[],["self"]]],[8,"RotateEachWord64","","",null,null],[10,"rotate_each_word_right32","","",5,[[],["self"]]],[8,"RotateEachWord128","","",null,null],[8,"UnsafeFrom","","",null,null],[10,"unsafe_from","","",6,[[["t"]],["self"]]],[8,"Vec2","","A vector composed of two elements, which may be words or…",null,null],[10,"extract","","",7,[[["u32"]],["w"]]],[10,"insert","","",7,[[["w"],["u32"]],["self"]]],[8,"Vec4","","A vector composed of four elements, which may be words or…",null,null],[10,"extract","","",8,[[["u32"]],["w"]]],[10,"insert","","",8,[[["w"],["u32"]],["self"]]],[8,"Words4","","A vector composed of four words; depending on their size,…",null,null],[10,"shuffle1230","","",9,[[],["self"]]],[10,"shuffle2301","","",9,[[],["self"]]],[10,"shuffle3012","","",9,[[],["self"]]],[8,"LaneWords4","","A vector composed one or more lanes each composed of four…",null,null],[10,"shuffle_lane_words1230","","",10,[[],["self"]]],[10,"shuffle_lane_words2301","","",10,[[],["self"]]],[10,"shuffle_lane_words3012","","",10,[[],["self"]]],[8,"Swap64","","Exchange neigboring ranges of bits of the specified size",null,null],[10,"swap1","","",11,[[],["self"]]],[10,"swap2","","",11,[[],["self"]]],[10,"swap4","","",11,[[],["self"]]],[10,"swap8","","",11,[[],["self"]]],[10,"swap16","","",11,[[],["self"]]],[10,"swap32","","",11,[[],["self"]]],[10,"swap64","","",11,[[],["self"]]],[8,"u32x4","","",null,null],[8,"u64x2","","",null,null],[8,"u128x1","","",null,null],[8,"u32x4x2","","",null,null],[8,"u64x2x2","","",null,null],[8,"u64x4","","",null,null],[8,"u128x2","","",null,null],[8,"u32x4x4","","",null,null],[8,"u64x2x4","","",null,null],[8,"u128x4","","",null,null],[8,"MultiLane","","A vector composed of multiple 128-bit lanes.",null,null],[10,"to_lanes","","Split a multi-lane vector into single-lane vectors.",12,[[],["lanes"]]],[10,"from_lanes","","Build a multi-lane vector from individual lanes.",12,[[["lanes"]],["self"]]],[8,"VZip","","Combine single vectors into a multi-lane vector.",null,null],[10,"vzip","","",13,[[],["v"]]],[8,"Machine","","",null,null],[16,"u32x4","","",14,null],[16,"u64x2","","",14,null],[16,"u128x1","","",14,null],[16,"u32x4x2","","",14,null],[16,"u64x2x2","","",14,null],[16,"u64x4","","",14,null],[16,"u128x2","","",14,null],[16,"u32x4x4","","",14,null],[16,"u64x2x4","","",14,null],[16,"u128x4","","",14,null],[11,"unpack","","",14,[[["s"]],["store"]]],[11,"vec","","",14,[[["a"]],["v"]]],[11,"read_le","","",14,[[],["v"]]],[11,"read_be","","",14,[[],["v"]]],[10,"instance","","",14,[[],["self"]]],[8,"Store","","",null,null],[10,"unpack","","",15,[[["s"]],["self"]]],[8,"StoreBytes","","",null,null],[10,"unsafe_read_le","","",16,[[],["self"]]],[10,"unsafe_read_be","","",16,[[],["self"]]],[10,"write_le","","",16,[[]]],[10,"write_be","","",16,[[]]],[14,"dispatch","","Generate the full set of optimized implementations to take…",null,null],[14,"dispatch_light128","","Generate only the basic implementations necessary to be…",null,null],[14,"dispatch_light256","","Generate only the basic implementations necessary to be…",null,null],[11,"from","ppv_lite86::x86_64","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"instance","","",27,[[],["self"]]],[11,"instance","","",28,[[],["self"]]],[11,"unpack","","",29,[[["vec128_storage"]],["self"]]],[11,"eq","","",29,[[["self"]],["bool"]]],[11,"eq","","",0,[[["self"]],["bool"]]],[11,"eq","","",1,[[["self"]],["bool"]]],[11,"into","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"clone","","",17,[[["self"]],["yess3"]]],[11,"clone","","",18,[[["self"]],["nos3"]]],[11,"clone","","",19,[[["self"]],["yess4"]]],[11,"clone","","",20,[[["self"]],["nos4"]]],[11,"clone","","",21,[[["self"]],["yesa1"]]],[11,"clone","","",22,[[["self"]],["noa1"]]],[11,"clone","","",23,[[["self"]],["yesa2"]]],[11,"clone","","",24,[[["self"]],["noa2"]]],[11,"clone","","",25,[[["self"]],["yesni"]]],[11,"clone","","",26,[[["self"]],["noni"]]],[11,"clone","","",27,[[["self"]],["ssemachine"]]],[11,"clone","","",28,[[["self"]],["avx2machine"]]],[11,"clone","","",29,[[["self"]],["vec128_storage"]]],[11,"clone","","",0,[[["self"]],["vec256_storage"]]],[11,"clone","","",1,[[["self"]],["vec512_storage"]]],[11,"default","","",29,[[],["self"]]],[11,"default","","",0,[[],["self"]]],[11,"default","","",1,[[],["self"]]],[11,"unpack","ppv_lite86","",14,[[["s"]],["store"]]],[11,"vec","","",14,[[["a"]],["v"]]],[11,"read_le","","",14,[[],["v"]]],[11,"read_be","","",14,[[],["v"]]]],"p":[[19,"vec256_storage"],[19,"vec512_storage"],[8,"AndNot"],[8,"BSwap"],[8,"RotateEachWord32"],[8,"RotateEachWord64"],[8,"UnsafeFrom"],[8,"Vec2"],[8,"Vec4"],[8,"Words4"],[8,"LaneWords4"],[8,"Swap64"],[8,"MultiLane"],[8,"VZip"],[8,"Machine"],[8,"Store"],[8,"StoreBytes"],[3,"YesS3"],[3,"NoS3"],[3,"YesS4"],[3,"NoS4"],[3,"YesA1"],[3,"NoA1"],[3,"YesA2"],[3,"NoA2"],[3,"YesNI"],[3,"NoNI"],[3,"SseMachine"],[3,"Avx2Machine"],[19,"vec128_storage"]]};
searchIndex["proc_macro2"] = {"doc":"A wrapper around the procedural macro API of the…","i":[[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a…",null,null],[3,"LexError","","Error returned from `TokenStream::from_str`.",null,null],[3,"Span","","A region of source code, along with macro expansion…",null,null],[3,"Group","","A delimited token stream.",null,null],[3,"Punct","","An `Punct` is an single punctuation character like `+`,…",null,null],[3,"Ident","","A word of Rust code, which may be a keyword or legal…",null,null],[3,"Literal","","A literal string (`\"hello\"`), byte string (`b\"hello\"`),…",null,null],[4,"TokenTree","","A single token or a delimited sequence of token trees…",null,null],[13,"Group","","A token stream surrounded by bracket delimiters.",0,null],[13,"Ident","","An identifier.",0,null],[13,"Punct","","A single punctuation character (`+`, `,`, `$`, etc.).",0,null],[13,"Literal","","A literal character (`'a'`), string (`\"hello\"`), number…",0,null],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",null,null],[13,"Parenthesis","","`( ... )`",1,null],[13,"Brace","","`{ ... }`",1,null],[13,"Bracket","","`[ ... ]`",1,null],[13,"None","","`Ø ... Ø`",1,null],[4,"Spacing","","Whether an `Punct` is followed immediately by another…",null,null],[13,"Alone","","E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,null],[13,"Joint","","E.g. `+` is `Joint` in `+=` or `'#`.",2,null],[0,"token_stream","","Public implementation details for the `TokenStream` type,…",null,null],[3,"IntoIter","proc_macro2::token_stream","An iterator over `TokenStream`'s `TokenTree`s.",null,null],[11,"new","proc_macro2","Returns an empty `TokenStream` containing no token trees.",3,[[],["tokenstream"]]],[11,"empty","","",3,[[],["tokenstream"]]],[11,"is_empty","","Checks if this `TokenStream` is empty.",3,[[["self"]],["bool"]]],[11,"call_site","","The span of the invocation of the current procedural macro.",4,[[],["span"]]],[11,"unwrap","","Convert `proc_macro2::Span` to `proc_macro::Span`.",4,[[],["span"]]],[11,"span","","Returns the span of this tree, delegating to the `span`…",0,[[["self"]],["span"]]],[11,"set_span","","Configures the span for only this token.",0,[[["span"],["self"]]]],[11,"new","","Creates a new `Group` with the given delimiter and token…",5,[[["tokenstream"],["delimiter"]],["group"]]],[11,"delimiter","","Returns the delimiter of this `Group`",5,[[["self"]],["delimiter"]]],[11,"stream","","Returns the `TokenStream` of tokens that are delimited in…",5,[[["self"]],["tokenstream"]]],[11,"span","","Returns the span for the delimiters of this token stream,…",5,[[["self"]],["span"]]],[11,"set_span","","Configures the span for this `Group`'s delimiters, but not…",5,[[["span"],["self"]]]],[11,"new","","Creates a new `Punct` from the given character and spacing.",6,[[["spacing"],["char"]],["punct"]]],[11,"as_char","","Returns the value of this punctuation character as `char`.",6,[[["self"]],["char"]]],[11,"spacing","","Returns the spacing of this punctuation character,…",6,[[["self"]],["spacing"]]],[11,"span","","Returns the span for this punctuation character.",6,[[["self"]],["span"]]],[11,"set_span","","Configure the span for this punctuation character.",6,[[["span"],["self"]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",7,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",7,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",7,[[["span"],["self"]]]],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u8"]],["literal"]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u16"]],["literal"]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u32"]],["literal"]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u64"]],["literal"]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["usize"]],["literal"]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i8"]],["literal"]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i16"]],["literal"]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i32"]],["literal"]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i64"]],["literal"]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["isize"]],["literal"]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u128"]],["literal"]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i128"]],["literal"]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u8"]],["literal"]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u16"]],["literal"]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u32"]],["literal"]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u64"]],["literal"]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["usize"]],["literal"]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i8"]],["literal"]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i16"]],["literal"]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i32"]],["literal"]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i64"]],["literal"]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["isize"]],["literal"]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u128"]],["literal"]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i128"]],["literal"]]],[11,"f64_unsuffixed","","",8,[[["f64"]],["literal"]]],[11,"f64_suffixed","","",8,[[["f64"]],["literal"]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[["f32"]],["literal"]]],[11,"f32_suffixed","","",8,[[["f32"]],["literal"]]],[11,"string","","",8,[[["str"]],["literal"]]],[11,"character","","",8,[[["char"]],["literal"]]],[11,"byte_string","","",8,[[],["literal"]]],[11,"span","","",8,[[["self"]],["span"]]],[11,"set_span","","",8,[[["span"],["self"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","proc_macro2::token_stream","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","proc_macro2","",4,[[["span"]],["span"]]],[11,"from","","",3,[[["tokenstream"]],["tokenstream"]]],[11,"from","","",0,[[["group"]],["tokentree"]]],[11,"from","","",0,[[["ident"]],["tokentree"]]],[11,"from","","",0,[[["punct"]],["tokentree"]]],[11,"from","","",0,[[["literal"]],["tokentree"]]],[11,"extend","","",3,[[["self"],["intoiterator"]]]],[11,"extend","","",3,[[["self"],["intoiterator"]]]],[11,"into_iter","","",3,[[],["intoiter"]]],[11,"next","proc_macro2::token_stream","",10,[[["self"]],[["option",["tokentree"]],["tokentree"]]]],[11,"clone","proc_macro2","",3,[[["self"]],["tokenstream"]]],[11,"clone","","",4,[[["self"]],["span"]]],[11,"clone","","",0,[[["self"]],["tokentree"]]],[11,"clone","","",5,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["delimiter"]]],[11,"clone","","",6,[[["self"]],["punct"]]],[11,"clone","","",2,[[["self"]],["spacing"]]],[11,"clone","","",7,[[["self"]],["ident"]]],[11,"clone","","",8,[[["self"]],["literal"]]],[11,"clone","proc_macro2::token_stream","",10,[[["self"]],["intoiter"]]],[11,"default","proc_macro2","",3,[[],["self"]]],[11,"cmp","","",7,[[["ident"],["self"]],["ordering"]]],[11,"eq","","",1,[[["delimiter"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["spacing"]],["bool"]]],[11,"eq","","",7,[[["ident"],["self"]],["bool"]]],[11,"eq","","",7,[[["t"],["self"]],["bool"]]],[11,"partial_cmp","","",7,[[["ident"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","proc_macro2::token_stream","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","proc_macro2","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"hash","","",7,[[["self"],["h"]]]],[11,"from_iter","","",3,[[["intoiterator"]],["self"]]],[11,"from_iter","","",3,[[["intoiterator"]],["self"]]],[11,"from_str","","",3,[[["str"]],[["tokenstream"],["result",["tokenstream","lexerror"]],["lexerror"]]]]],"p":[[4,"TokenTree"],[4,"Delimiter"],[4,"Spacing"],[3,"TokenStream"],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"LexError"],[3,"IntoIter"]]};
searchIndex["proc_macro_error"] = {"doc":"proc-macro-error","i":[[23,"proc_macro_error","proc_macro_error","",null,null],[3,"Diagnostic","","Represents a single diagnostic message",null,null],[4,"Level","","Represents a diagnostic level",null,null],[13,"Error","","",0,null],[13,"Warning","","",0,null],[5,"abort_if_dirty","","Abort macro execution and display all the emitted errors,…",null,[[]]],[0,"dummy","","Facility to emit dummy implementations (or whatever) in…",null,null],[5,"set_dummy","proc_macro_error::dummy","Sets dummy token stream which will be appended to…",null,[[["tokenstream"]],[["option",["tokenstream"]],["tokenstream"]]]],[5,"append_dummy","","Same as [`set_dummy`] but, instead of resetting, appends…",null,[[["tokenstream"]]]],[11,"new","proc_macro_error","Create a new diagnostic message that points to…",1,[[["level"],["string"]],["self"]]],[11,"spanned","","Create a new diagnostic message that points to the `span`",1,[[["string"],["span"],["level"]],["self"]]],[11,"span_error","","Add another error message to self such that it will be…",1,[[["span"],["string"]],["self"]]],[11,"span_help","","Attach a \"help\" note to your main message, the note will…",1,[[["span"],["string"]],["self"]]],[11,"help","","Attach a \"help\" note to your main message.",1,[[["string"]],["self"]]],[11,"span_note","","Attach a note to your main message, the note will have…",1,[[["span"],["string"]],["self"]]],[11,"note","","Attach a note to your main message",1,[[["string"]],["self"]]],[11,"message","","The message of main warning/error (no notes attached)",1,[[["self"]],["str"]]],[11,"abort","","Abort the proc-macro's execution and display the diagnostic.",1,[[]]],[11,"emit","","Display the diagnostic while not aborting macro execution.",1,[[]]],[8,"ResultExt","","This traits expands `Result<T, Into<Diagnostic>>` with…",null,null],[16,"Ok","","",2,null],[10,"unwrap_or_abort","","Behaves like `Result::unwrap`: if self is `Ok` yield the…",2,[[]]],[10,"expect_or_abort","","Behaves like `Result::expect`: if self is `Ok` yield the…",2,[[["str"]]]],[8,"OptionExt","","This traits expands `Option` with some handy shortcuts.",null,null],[16,"Some","","",3,null],[10,"expect_or_abort","","Behaves like `Option::expect`: if self is `Some` yield the…",3,[[["str"]]]],[14,"diagnostic","","Build `Diagnostic` instance from provided arguments.",null,null],[14,"abort","","Abort proc-macro execution right now and display the error.",null,null],[14,"abort_call_site","","Shortcut for `abort!(Span::call_site(), msg...)`. This…",null,null],[14,"emit_error","","Emit an error while not aborting the proc-macro right away.",null,null],[14,"emit_call_site_error","","Shortcut for `emit_error!(Span::call_site(), ...)`. This…",null,null],[14,"emit_warning","","Emit a warning. Warnings are not errors and compilation…",null,null],[14,"emit_call_site_warning","","Shortcut for `emit_warning!(Span::call_site(), ...)`.",null,null],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"span","","",1,[[["self"]],["span"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["error"]],["self"]]],[11,"eq","","",0,[[["level"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"to_tokens","","",1,[[["tokenstream"],["self"]]]]],"p":[[4,"Level"],[3,"Diagnostic"],[8,"ResultExt"],[8,"OptionExt"]]};
searchIndex["proc_macro_error_attr"] = {"doc":"This is `#[proc_macro_error]` attribute to be used with…","i":[[23,"proc_macro_error","proc_macro_error_attr","",null,null]],"p":[]};
searchIndex["proptest"] = {"doc":"Proptest Reference Documentation","i":[[0,"arbitrary","proptest","Defines the `Arbitrary` trait and related free functions…",null,null],[5,"any","proptest::arbitrary","Generates a [`Strategy`] producing [`Arbitrary`][trait…",null,[[],[["arbitrary"],["strategyfor"]]]],[5,"any_with","","Generates a [`Strategy`] producing [`Arbitrary`] values of…",null,[[["paramsfor"],["arbitrary"]],[["arbitrary"],["strategyfor"]]]],[5,"arbitrary","","Generates a [`Strategy`] producing [`Arbitrary`] values of…",null,[[],["s"]]],[5,"arbitrary_with","","Generates a [`Strategy`] producing [`Arbitrary`] values of…",null,[[["p"]],["s"]]],[0,"functor","","Provides higher order `Arbitrary` traits. This is mainly…",null,null],[8,"ArbitraryF1","proptest::arbitrary::functor","`ArbitraryF1` lets you lift a [`Strategy`] to unary type…",null,null],[16,"Parameters","","The type of parameters that [`lift1_with`] accepts for…",0,null],[11,"lift1","","Lifts a given [`Strategy`] to a new [`Strategy`] for the…",0,[[["as"]],["boxedstrategy"]]],[10,"lift1_with","","Lifts a given [`Strategy`] to a new [`Strategy`] for the…",0,[[["as"]],["boxedstrategy"]]],[8,"ArbitraryF2","","`ArbitraryF2` lets you lift [`Strategy`] to binary type…",null,null],[16,"Parameters","","The type of parameters that [`lift2_with`] accepts for…",1,null],[11,"lift2","","Lifts two given strategies to a new [`Strategy`] for the…",1,[[["bs"],["as"]],["boxedstrategy"]]],[10,"lift2_with","","Lifts two given strategies to a new [`Strategy`] for the…",1,[[["bs"],["as"]],["boxedstrategy"]]],[6,"StrategyFor","proptest::arbitrary","`StrategyFor` allows you to mention the type of…",null,null],[6,"ParamsFor","","`ParamsFor` allows you to mention the type of…",null,null],[6,"SMapped","","A static map from a strategy of `I` to `O`.",null,null],[6,"Mapped","","A normal map from a strategy of `I` to `O`.",null,null],[8,"Arbitrary","","Arbitrary determines a canonical [`Strategy`] for the…",null,null],[16,"Parameters","","The type of parameters that [`arbitrary_with`] accepts for…",2,null],[11,"arbitrary","","Generates a [`Strategy`] for producing arbitrary values of…",2,[[]]],[10,"arbitrary_with","","Generates a [`Strategy`] for producing arbitrary values of…",2,[[]]],[16,"Strategy","","The type of [`Strategy`] used to generate values of type…",2,null],[0,"array","proptest","Support for strategies producing fixed-length arrays.",null,null],[3,"UniformArrayStrategy","proptest::array","A `Strategy` which generates fixed-size arrays containing…",null,null],[3,"ArrayValueTree","","A `ValueTree` operating over a fixed-size array.",null,null],[5,"uniform1","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["strategy"],["uniformarraystrategy"]]]],[5,"uniform2","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["uniformarraystrategy"],["strategy"]]]],[5,"uniform3","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["strategy"],["uniformarraystrategy"]]]],[5,"uniform4","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["strategy"],["uniformarraystrategy"]]]],[5,"uniform5","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["strategy"],["uniformarraystrategy"]]]],[5,"uniform6","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["strategy"],["uniformarraystrategy"]]]],[5,"uniform7","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["strategy"],["uniformarraystrategy"]]]],[5,"uniform8","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["uniformarraystrategy"],["strategy"]]]],[5,"uniform9","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["strategy"],["uniformarraystrategy"]]]],[5,"uniform10","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["strategy"],["uniformarraystrategy"]]]],[5,"uniform11","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["uniformarraystrategy"],["strategy"]]]],[5,"uniform12","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["strategy"],["uniformarraystrategy"]]]],[5,"uniform13","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["strategy"],["uniformarraystrategy"]]]],[5,"uniform14","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["strategy"],["uniformarraystrategy"]]]],[5,"uniform15","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["strategy"],["uniformarraystrategy"]]]],[5,"uniform16","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["uniformarraystrategy"],["strategy"]]]],[5,"uniform17","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["strategy"],["uniformarraystrategy"]]]],[5,"uniform18","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["strategy"],["uniformarraystrategy"]]]],[5,"uniform19","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["uniformarraystrategy"],["strategy"]]]],[5,"uniform20","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["strategy"],["uniformarraystrategy"]]]],[5,"uniform21","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["strategy"],["uniformarraystrategy"]]]],[5,"uniform22","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["strategy"],["uniformarraystrategy"]]]],[5,"uniform23","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["uniformarraystrategy"],["strategy"]]]],[5,"uniform24","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["strategy"],["uniformarraystrategy"]]]],[5,"uniform25","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["strategy"],["uniformarraystrategy"]]]],[5,"uniform26","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["strategy"],["uniformarraystrategy"]]]],[5,"uniform27","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["strategy"],["uniformarraystrategy"]]]],[5,"uniform28","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["strategy"],["uniformarraystrategy"]]]],[5,"uniform29","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["strategy"],["uniformarraystrategy"]]]],[5,"uniform30","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["uniformarraystrategy"],["strategy"]]]],[5,"uniform31","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["uniformarraystrategy"],["strategy"]]]],[5,"uniform32","","Create a strategy to generate fixed-length arrays.",null,[[["strategy"]],[["strategy"],["uniformarraystrategy"]]]],[11,"new","","Directly create a `UniformArrayStrategy`.",3,[[["s"]],["self"]]],[0,"bits","proptest","Strategies for working with bit sets.",null,null],[3,"BitSetStrategy","proptest::bits","Generates values as a set of bits between the two bounds.",null,null],[3,"SampledBitSetStrategy","","Generates bit sets with a particular number of bits set.",null,null],[3,"BitSetValueTree","","Value tree produced by `BitSetStrategy` and…",null,null],[0,"u8","","",null,null],[5,"between","proptest::bits::u8","Generates values where bits between the given bounds may…",null,[[["usize"]],[["bitsetstrategy",["u8"]],["u8"]]]],[5,"masked","","Generates values where any bits set in `mask` (and no…",null,[[["u8"]],[["bitsetstrategy",["u8"]],["u8"]]]],[5,"sampled","","Create a strategy which generates values where bits within…",null,[[],[["u8"],["sampledbitsetstrategy",["u8"]]]]],[17,"ANY","","Generates integers where all bits may be set.",null,null],[0,"u16","proptest::bits","",null,null],[5,"between","proptest::bits::u16","Generates values where bits between the given bounds may…",null,[[["usize"]],[["u16"],["bitsetstrategy",["u16"]]]]],[5,"masked","","Generates values where any bits set in `mask` (and no…",null,[[["u16"]],[["u16"],["bitsetstrategy",["u16"]]]]],[5,"sampled","","Create a strategy which generates values where bits within…",null,[[],[["sampledbitsetstrategy",["u16"]],["u16"]]]],[17,"ANY","","Generates integers where all bits may be set.",null,null],[0,"u32","proptest::bits","",null,null],[5,"between","proptest::bits::u32","Generates values where bits between the given bounds may…",null,[[["usize"]],[["bitsetstrategy",["u32"]],["u32"]]]],[5,"masked","","Generates values where any bits set in `mask` (and no…",null,[[["u32"]],[["bitsetstrategy",["u32"]],["u32"]]]],[5,"sampled","","Create a strategy which generates values where bits within…",null,[[],[["sampledbitsetstrategy",["u32"]],["u32"]]]],[17,"ANY","","Generates integers where all bits may be set.",null,null],[0,"u64","proptest::bits","",null,null],[5,"between","proptest::bits::u64","Generates values where bits between the given bounds may…",null,[[["usize"]],[["bitsetstrategy",["u64"]],["u64"]]]],[5,"masked","","Generates values where any bits set in `mask` (and no…",null,[[["u64"]],[["bitsetstrategy",["u64"]],["u64"]]]],[5,"sampled","","Create a strategy which generates values where bits within…",null,[[],[["sampledbitsetstrategy",["u64"]],["u64"]]]],[17,"ANY","","Generates integers where all bits may be set.",null,null],[0,"i8","proptest::bits","",null,null],[5,"between","proptest::bits::i8","Generates values where bits between the given bounds may…",null,[[["usize"]],[["i8"],["bitsetstrategy",["i8"]]]]],[5,"masked","","Generates values where any bits set in `mask` (and no…",null,[[["i8"]],[["i8"],["bitsetstrategy",["i8"]]]]],[5,"sampled","","Create a strategy which generates values where bits within…",null,[[],[["i8"],["sampledbitsetstrategy",["i8"]]]]],[17,"ANY","","Generates integers where all bits may be set.",null,null],[0,"i16","proptest::bits","",null,null],[5,"between","proptest::bits::i16","Generates values where bits between the given bounds may…",null,[[["usize"]],[["i16"],["bitsetstrategy",["i16"]]]]],[5,"masked","","Generates values where any bits set in `mask` (and no…",null,[[["i16"]],[["i16"],["bitsetstrategy",["i16"]]]]],[5,"sampled","","Create a strategy which generates values where bits within…",null,[[],[["sampledbitsetstrategy",["i16"]],["i16"]]]],[17,"ANY","","Generates integers where all bits may be set.",null,null],[0,"i32","proptest::bits","",null,null],[5,"between","proptest::bits::i32","Generates values where bits between the given bounds may…",null,[[["usize"]],[["bitsetstrategy",["i32"]],["i32"]]]],[5,"masked","","Generates values where any bits set in `mask` (and no…",null,[[["i32"]],[["bitsetstrategy",["i32"]],["i32"]]]],[5,"sampled","","Create a strategy which generates values where bits within…",null,[[],[["sampledbitsetstrategy",["i32"]],["i32"]]]],[17,"ANY","","Generates integers where all bits may be set.",null,null],[0,"i64","proptest::bits","",null,null],[5,"between","proptest::bits::i64","Generates values where bits between the given bounds may…",null,[[["usize"]],[["bitsetstrategy",["i64"]],["i64"]]]],[5,"masked","","Generates values where any bits set in `mask` (and no…",null,[[["i64"]],[["bitsetstrategy",["i64"]],["i64"]]]],[5,"sampled","","Create a strategy which generates values where bits within…",null,[[],[["i64"],["sampledbitsetstrategy",["i64"]]]]],[17,"ANY","","Generates integers where all bits may be set.",null,null],[0,"usize","proptest::bits","",null,null],[5,"between","proptest::bits::usize","Generates values where bits between the given bounds may…",null,[[["usize"]],[["usize"],["bitsetstrategy",["usize"]]]]],[5,"masked","","Generates values where any bits set in `mask` (and no…",null,[[["usize"]],[["usize"],["bitsetstrategy",["usize"]]]]],[5,"sampled","","Create a strategy which generates values where bits within…",null,[[],[["sampledbitsetstrategy",["usize"]],["usize"]]]],[0,"isize","proptest::bits","",null,null],[5,"between","proptest::bits::isize","Generates values where bits between the given bounds may…",null,[[["usize"]],[["bitsetstrategy",["isize"]],["isize"]]]],[5,"masked","","Generates values where any bits set in `mask` (and no…",null,[[["isize"]],[["bitsetstrategy",["isize"]],["isize"]]]],[5,"sampled","","Create a strategy which generates values where bits within…",null,[[],[["isize"],["sampledbitsetstrategy",["isize"]]]]],[0,"bitset","proptest::bits","",null,null],[5,"between","proptest::bits::bitset","Generates values where bits between the given bounds may…",null,[[["usize"]],[["bitset"],["bitsetstrategy",["bitset"]]]]],[5,"masked","","Generates values where any bits set in `mask` (and no…",null,[[["bitset"]],[["bitset"],["bitsetstrategy",["bitset"]]]]],[5,"sampled","","Create a strategy which generates values where bits within…",null,[[],[["bitset"],["sampledbitsetstrategy",["bitset"]]]]],[0,"bool_vec","proptest::bits","",null,null],[5,"between","proptest::bits::bool_vec","Generates values where bits between the given bounds may…",null,[[["usize"]],[["bitsetstrategy",["vec"]],["vec",["bool"]]]]],[5,"masked","","Generates values where any bits set in `mask` (and no…",null,[[["vec",["bool"]],["bool"]],[["bitsetstrategy",["vec"]],["vec",["bool"]]]]],[5,"sampled","","Create a strategy which generates values where bits within…",null,[[],[["vec",["bool"]],["sampledbitsetstrategy",["vec"]]]]],[8,"BitSetLike","proptest::bits","Trait for types which can be handled with `BitSetStrategy`.",null,null],[10,"new_bitset","","Create a new value of `Self` with space for up to `max`…",4,[[["usize"]],["self"]]],[10,"len","","Return an upper bound on the greatest bit set plus one.",4,[[["self"]],["usize"]]],[10,"test","","Test whether the given bit is set.",4,[[["self"],["usize"]],["bool"]]],[10,"set","","Set the given bit.",4,[[["self"],["usize"]]]],[10,"clear","","Clear the given bit.",4,[[["self"],["usize"]]]],[11,"count","","Return the number of bits set.",4,[[["self"]],["usize"]]],[11,"new","","Create a strategy which generates values where bits…",5,[[["usize"]],["self"]]],[11,"masked","","Create a strategy which generates values where any bits…",5,[[["t"]],["self"]]],[11,"new","","Create a strategy which generates values where bits within…",6,[[],["self"]]],[0,"bool","proptest","Strategies for generating `bool` values.",null,null],[3,"Any","proptest::bool","The type of the `ANY` constant.",null,null],[3,"Weighted","","The return type from `weighted()`.",null,null],[3,"BoolValueTree","","The `ValueTree` to shrink booleans to false.",null,null],[5,"weighted","","Generates boolean values by picking `true` with the given…",null,[[["f64"]],["weighted"]]],[17,"ANY","","Generates boolean values by picking `true` or `false`…",null,null],[0,"char","proptest","Strategies for generating `char` values.",null,null],[3,"CharStrategy","proptest::char","Strategy for generating `char`s.",null,null],[3,"CharValueTree","","The `ValueTree` corresponding to `CharStrategy`.",null,null],[5,"select_char","","Selects a random character the way `CharStrategy` does.",null,[[],["char"]]],[5,"any","","Creates a `CharStrategy` which picks from literally any…",null,[[],["charstrategy"]]],[5,"range","","Creates a `CharStrategy` which selects characters within…",null,[[["char"]],["charstrategy"]]],[5,"ranges","","Creates a `CharStrategy` which selects characters within…",null,[[["cow"]],["charstrategy"]]],[17,"DEFAULT_SPECIAL_CHARS","","A default set of characters to consider as \"special\"…",null,null],[17,"DEFAULT_PREFERRED_RANGES","","A default sequence of ranges used preferentially when…",null,null],[11,"new","","Construct a new `CharStrategy` with the parameters it will…",7,[[["cow"],["cow"]],["self"]]],[11,"new_borrowed","","Same as `CharStrategy::new()` but using `Cow::Borrowed`…",7,[[],["self"]]],[0,"collection","proptest","Strategies for generating `std::collections` of values.",null,null],[3,"SizeRange","proptest::collection","The minimum and maximum range/bounds on the size of a…",null,null],[3,"VecStrategy","","Strategy to create `Vec`s with a length in a certain range.",null,null],[3,"VecDequeStrategy","","Strategy to create `VecDeque`s with a length in a certain…",null,null],[3,"VecDequeValueTree","","`ValueTree` corresponding to `VecDequeStrategy`.",null,null],[3,"LinkedListStrategy","","Strategy to create `LinkedList`s with a length in a…",null,null],[3,"LinkedListValueTree","","`ValueTree` corresponding to `LinkedListStrategy`.",null,null],[3,"BinaryHeapStrategy","","Strategy to create `BinaryHeap`s with a length in a…",null,null],[3,"BinaryHeapValueTree","","`ValueTree` corresponding to `BinaryHeapStrategy`.",null,null],[3,"HashSetStrategy","","Strategy to create `HashSet`s with a length in a certain…",null,null],[3,"HashSetValueTree","","`ValueTree` corresponding to `HashSetStrategy`.",null,null],[3,"BTreeSetStrategy","","Strategy to create `BTreeSet`s with a length in a certain…",null,null],[3,"BTreeSetValueTree","","`ValueTree` corresponding to `BTreeSetStrategy`.",null,null],[3,"HashMapStrategy","","Strategy to create `HashMap`s with a length in a certain…",null,null],[3,"HashMapValueTree","","`ValueTree` corresponding to `HashMapStrategy`.",null,null],[3,"BTreeMapStrategy","","Strategy to create `BTreeMap`s with a length in a certain…",null,null],[3,"BTreeMapValueTree","","`ValueTree` corresponding to `BTreeMapStrategy`.",null,null],[3,"VecValueTree","","`ValueTree` corresponding to `VecStrategy`.",null,null],[5,"size_range","","Creates a `SizeRange` from some value that is convertible…",null,[[],["sizerange"]]],[5,"vec","","Create a strategy to generate `Vec`s containing elements…",null,[[["strategy"]],[["strategy"],["vecstrategy"]]]],[5,"vec_deque","","Create a strategy to generate `VecDeque`s containing…",null,[[["strategy"]],[["strategy"],["vecdequestrategy"]]]],[5,"linked_list","","Create a strategy to generate `LinkedList`s containing…",null,[[["strategy"]],[["strategy"],["linkedliststrategy"]]]],[5,"binary_heap","","Create a strategy to generate `BinaryHeap`s containing…",null,[[["strategy"]],[["strategy"],["binaryheapstrategy"]]]],[5,"hash_set","","Create a strategy to generate `HashSet`s containing…",null,[[["strategy"]],[["strategy"],["hashsetstrategy"]]]],[5,"btree_set","","Create a strategy to generate `BTreeSet`s containing…",null,[[["strategy"]],[["strategy"],["btreesetstrategy"]]]],[5,"hash_map","","Create a strategy to generate `HashMap`s containing keys…",null,[[["strategy"]],[["strategy"],["hashmapstrategy"]]]],[5,"btree_map","","Create a strategy to generate `BTreeMap`s containing keys…",null,[[["strategy"]],[["strategy"],["btreemapstrategy"]]]],[11,"new","","Creates a `SizeBounds` from a `RangeInclusive<usize>`.",8,[[["rangeinclusive",["usize"]],["usize"]],["self"]]],[11,"with","","Merges self together with some other argument producing a…",8,[[["x"]]]],[11,"lift","","Merges self together with some other argument generated…",8,[[]]],[0,"num","proptest","Strategies to generate numeric values (as opposed to…",null,null],[0,"i8","proptest::num","",null,null],[3,"Any","proptest::num::i8","Type of the `ANY` constant.",null,null],[3,"BinarySearch","","Shrinks an integer towards 0, using binary search to find…",null,null],[17,"ANY","","Generates integers with completely arbitrary values,…",null,null],[11,"new","","Creates a new binary searcher starting at the given value.",9,[[["i8"]],["self"]]],[0,"i16","proptest::num","",null,null],[3,"Any","proptest::num::i16","Type of the `ANY` constant.",null,null],[3,"BinarySearch","","Shrinks an integer towards 0, using binary search to find…",null,null],[17,"ANY","","Generates integers with completely arbitrary values,…",null,null],[11,"new","","Creates a new binary searcher starting at the given value.",10,[[["i16"]],["self"]]],[0,"i32","proptest::num","",null,null],[3,"Any","proptest::num::i32","Type of the `ANY` constant.",null,null],[3,"BinarySearch","","Shrinks an integer towards 0, using binary search to find…",null,null],[17,"ANY","","Generates integers with completely arbitrary values,…",null,null],[11,"new","","Creates a new binary searcher starting at the given value.",11,[[["i32"]],["self"]]],[0,"i64","proptest::num","",null,null],[3,"Any","proptest::num::i64","Type of the `ANY` constant.",null,null],[3,"BinarySearch","","Shrinks an integer towards 0, using binary search to find…",null,null],[17,"ANY","","Generates integers with completely arbitrary values,…",null,null],[11,"new","","Creates a new binary searcher starting at the given value.",12,[[["i64"]],["self"]]],[0,"i128","proptest::num","",null,null],[3,"Any","proptest::num::i128","Type of the `ANY` constant.",null,null],[3,"BinarySearch","","Shrinks an integer towards 0, using binary search to find…",null,null],[17,"ANY","","Generates integers with completely arbitrary values,…",null,null],[11,"new","","Creates a new binary searcher starting at the given value.",13,[[["i128"]],["self"]]],[0,"isize","proptest::num","",null,null],[3,"Any","proptest::num::isize","Type of the `ANY` constant.",null,null],[3,"BinarySearch","","Shrinks an integer towards 0, using binary search to find…",null,null],[17,"ANY","","Generates integers with completely arbitrary values,…",null,null],[11,"new","","Creates a new binary searcher starting at the given value.",14,[[["isize"]],["self"]]],[0,"u8","proptest::num","",null,null],[3,"Any","proptest::num::u8","Type of the `ANY` constant.",null,null],[3,"BinarySearch","","Shrinks an integer towards 0, using binary search to find…",null,null],[17,"ANY","","Generates integers with completely arbitrary values,…",null,null],[11,"new","","Creates a new binary searcher starting at the given value.",15,[[["u8"]],["self"]]],[11,"new_above","","Creates a new binary searcher which will not search below…",15,[[["u8"]],["self"]]],[0,"u16","proptest::num","",null,null],[3,"Any","proptest::num::u16","Type of the `ANY` constant.",null,null],[3,"BinarySearch","","Shrinks an integer towards 0, using binary search to find…",null,null],[17,"ANY","","Generates integers with completely arbitrary values,…",null,null],[11,"new","","Creates a new binary searcher starting at the given value.",16,[[["u16"]],["self"]]],[11,"new_above","","Creates a new binary searcher which will not search below…",16,[[["u16"]],["self"]]],[0,"u32","proptest::num","",null,null],[3,"Any","proptest::num::u32","Type of the `ANY` constant.",null,null],[3,"BinarySearch","","Shrinks an integer towards 0, using binary search to find…",null,null],[17,"ANY","","Generates integers with completely arbitrary values,…",null,null],[11,"new","","Creates a new binary searcher starting at the given value.",17,[[["u32"]],["self"]]],[11,"new_above","","Creates a new binary searcher which will not search below…",17,[[["u32"]],["self"]]],[0,"u64","proptest::num","",null,null],[3,"Any","proptest::num::u64","Type of the `ANY` constant.",null,null],[3,"BinarySearch","","Shrinks an integer towards 0, using binary search to find…",null,null],[17,"ANY","","Generates integers with completely arbitrary values,…",null,null],[11,"new","","Creates a new binary searcher starting at the given value.",18,[[["u64"]],["self"]]],[11,"new_above","","Creates a new binary searcher which will not search below…",18,[[["u64"]],["self"]]],[0,"u128","proptest::num","",null,null],[3,"Any","proptest::num::u128","Type of the `ANY` constant.",null,null],[3,"BinarySearch","","Shrinks an integer towards 0, using binary search to find…",null,null],[17,"ANY","","Generates integers with completely arbitrary values,…",null,null],[11,"new","","Creates a new binary searcher starting at the given value.",19,[[["u128"]],["self"]]],[11,"new_above","","Creates a new binary searcher which will not search below…",19,[[["u128"]],["self"]]],[0,"usize","proptest::num","",null,null],[3,"Any","proptest::num::usize","Type of the `ANY` constant.",null,null],[3,"BinarySearch","","Shrinks an integer towards 0, using binary search to find…",null,null],[17,"ANY","","Generates integers with completely arbitrary values,…",null,null],[11,"new","","Creates a new binary searcher starting at the given value.",20,[[["usize"]],["self"]]],[11,"new_above","","Creates a new binary searcher which will not search below…",20,[[["usize"]],["self"]]],[0,"f32","proptest::num","",null,null],[3,"Any","proptest::num::f32","Strategies which produce floating-point values from…",null,null],[3,"BinarySearch","","Shrinks a float towards 0, using binary search to find…",null,null],[17,"POSITIVE","","Generates positive floats",null,null],[17,"NEGATIVE","","Generates negative floats.",null,null],[17,"NORMAL","","Generates \"normal\" floats.",null,null],[17,"SUBNORMAL","","Generates subnormal floats.",null,null],[17,"ZERO","","Generates zero-valued floats.",null,null],[17,"INFINITE","","Generates infinity floats.",null,null],[17,"QUIET_NAN","","Generates \"Quiet NaN\" floats.",null,null],[17,"SIGNALING_NAN","","Generates \"Signaling NaN\" floats if allowed by the platform.",null,null],[17,"ANY","","Generates literally arbitrary floating-point values,…",null,null],[11,"new","","Creates a new binary searcher starting at the given value.",21,[[["f32"]],["self"]]],[0,"f64","proptest::num","",null,null],[3,"Any","proptest::num::f64","Strategies which produce floating-point values from…",null,null],[3,"BinarySearch","","Shrinks a float towards 0, using binary search to find…",null,null],[17,"POSITIVE","","Generates positive floats",null,null],[17,"NEGATIVE","","Generates negative floats.",null,null],[17,"NORMAL","","Generates \"normal\" floats.",null,null],[17,"SUBNORMAL","","Generates subnormal floats.",null,null],[17,"ZERO","","Generates zero-valued floats.",null,null],[17,"INFINITE","","Generates infinity floats.",null,null],[17,"QUIET_NAN","","Generates \"Quiet NaN\" floats.",null,null],[17,"SIGNALING_NAN","","Generates \"Signaling NaN\" floats if allowed by the platform.",null,null],[17,"ANY","","Generates literally arbitrary floating-point values,…",null,null],[11,"new","","Creates a new binary searcher starting at the given value.",22,[[["f64"]],["self"]]],[0,"strategy","proptest","Defines the core traits used by Proptest.",null,null],[3,"Filter","proptest::strategy","`Strategy` and `ValueTree` filter adaptor.",null,null],[3,"FilterMap","","`Strategy` and `ValueTree` filter_map adaptor.",null,null],[3,"FilterMapValueTree","","`ValueTree` corresponding to `FilterMap`.",null,null],[3,"Flatten","","Adaptor that flattens a `Strategy` which produces other…",null,null],[3,"FlattenValueTree","","The `ValueTree` produced by `Flatten`.",null,null],[3,"IndFlatten","","Similar to `Flatten`, but does not shrink the input…",null,null],[3,"IndFlattenMap","","Similar to `Map` plus `Flatten`, but does not shrink the…",null,null],[3,"Fuse","","Adaptor for `Strategy` and `ValueTree` which guards…",null,null],[3,"Just","","A `Strategy` which always produces a single value value…",null,null],[12,"0","","The value produced by this strategy.",23,null],[3,"LazyJust","","A `Strategy` which always produces a single value value…",null,null],[3,"LazyValueTree","","Represents a value tree that is initialized on the first…",null,null],[3,"LazyValueTree","","Represents a value tree that is initialized on the first…",null,null],[3,"Map","","`Strategy` and `ValueTree` map adaptor.",null,null],[3,"MapInto","","`Strategy` and `ValueTree` map into adaptor.",null,null],[3,"Perturb","","`Strategy` perturbation adaptor.",null,null],[3,"PerturbValueTree","","`ValueTree` perturbation adaptor.",null,null],[3,"Recursive","","Return type from `Strategy::prop_recursive()`.",null,null],[3,"Shuffle","","`Strategy` shuffle adaptor.",null,null],[3,"ShuffleValueTree","","`ValueTree` shuffling adaptor.",null,null],[3,"NoShrink","","Wraps a `Strategy` or `ValueTree` to suppress shrinking of…",null,null],[3,"BoxedStrategy","","A boxed `Strategy` trait object as produced by…",null,null],[3,"SBoxedStrategy","","A boxed `Strategy` trait object which is also `Sync` and…",null,null],[3,"CheckStrategySanityOptions","","Options passed to `check_strategy_sanity()`.",null,null],[12,"strict_complicate_after_simplify","","If true (the default), require that `complicate()` return…",24,null],[12,"error_on_local_rejects","","If true, cause local rejects to return an error instead of…",24,null],[3,"Union","","A `Strategy` which picks from one of several delegate…",null,null],[3,"UnionValueTree","","`ValueTree corresponding to `Union`.",null,null],[3,"TupleUnion","","Similar to `Union`, but internally uses a tuple to hold…",null,null],[3,"TupleUnionValueTree","","`ValueTree` type produced by `TupleUnion`.",null,null],[5,"check_strategy_sanity","","Run some tests on the given `Strategy` to ensure that it…",null,[[["strategy"],["checkstrategysanityoptions"],["option",["checkstrategysanityoptions"]]]]],[5,"float_to_weight","","Convert a floating-point weight in the range (0.0,1.0) to…",null,[[["f64"]]]],[11,"new","","Wrap `source` to flatten it.",25,[[["s"]],["self"]]],[11,"new","","Wrap the given `T` in `Fuse`.",26,[[["t"]],["self"]]],[11,"may_simplify","","Return whether a call to `simplify()` may be productive.",26,[[["self"]],["bool"]]],[11,"disallow_simplify","","Disallow any further calls to `simplify()` until a call to…",26,[[["self"]]]],[11,"may_complicate","","Return whether a call to `complicate()` may be productive.",26,[[["self"]],["bool"]]],[11,"disallow_complicate","","Disallow any further calls to `complicate()` until a call…",26,[[["self"]]]],[11,"freeze","","Prevent any further shrinking operations from occurring.",26,[[["self"]]]],[11,"new","","Constructs a `LazyJust` strategy given the…",27,[[["f"]],["self"]]],[11,"new","","Create a strategy which selects uniformly from the given…",28,[[],["self"]]],[11,"new_weighted","","Create a strategy which selects from the given delegate…",28,[[["vec",["w"]],["w"]],["self"]]],[11,"or","","Add `other` as an additional alternate strategy with…",28,[[["t"]],["self"]]],[11,"new","","Wrap `tuple` in a `TupleUnion`.",29,[[["t"]],["self"]]],[0,"statics","","Modified versions of the normal strategy combinators which…",null,null],[3,"Filter","proptest::strategy::statics","Static version of `strategy::Filter`.",null,null],[3,"Map","","Static version of `strategy::Map`.",null,null],[8,"FilterFn","","Essentially `Fn (&T) -> bool`.",null,null],[10,"apply","","Test whether `t` passes the filter.",30,[[["t"],["self"]],["bool"]]],[8,"MapFn","","Essentially `Fn (T) -> Output`.",null,null],[16,"Output","","",31,null],[10,"apply","","Map `T` to `Output`.",31,[[["self"],["t"]]]],[11,"new","","Adapt strategy `source` to reject values which do not pass…",32,[[["s"],["f"],["reason"]],["self"]]],[11,"new","","Adapt strategy `source` by applying `fun` to values it…",33,[[["s"],["f"]],["self"]]],[6,"LazyJustFn","proptest::strategy","Shorthand for `LazyJust<T, fn () -> T>`.",null,null],[6,"NewTree","","A new [`ValueTree`] from a [`Strategy`] when [`Ok`] or…",null,null],[6,"W","","A relative `weight` of a particular `Strategy`…",null,null],[6,"WA","","A relative `weight` of a particular `Strategy`…",null,null],[8,"Shuffleable","","A value which can be used with the `prop_shuffle`…",null,null],[10,"shuffle_len","","Return the length of this collection.",34,[[["self"]],["usize"]]],[10,"shuffle_swap","","Swap the elements at the given indices.",34,[[["self"],["usize"]]]],[8,"Strategy","","A strategy for producing arbitrary values of a given type.",null,null],[16,"Tree","","The value tree generated by this `Strategy`.",35,null],[16,"Value","","The type of value used by functions under test generated…",35,null],[10,"new_tree","","Generate a new value tree from the given runner.",35,[[["testrunner"],["self"]],["newtree"]]],[11,"prop_map","","Returns a strategy which produces values transformed by…",35,[[["fn"]],[["map"],["fn"]]]],[11,"prop_map_into","","Returns a strategy which produces values of type `O` by…",35,[[],[["mapinto"],["debug"]]]],[11,"prop_perturb","","Returns a strategy which produces values transformed by…",35,[[["fn"]],[["perturb"],["fn"]]]],[11,"prop_flat_map","","Maps values produced by this strategy into new strategies…",35,[[["fn"]],[["flatten",["map"]],["map"]]]],[11,"prop_ind_flat_map","","Maps values produced by this strategy into new strategies…",35,[[["fn"]],[["map"],["indflatten",["map"]]]]],[11,"prop_ind_flat_map2","","Similar to `prop_ind_flat_map()`, but produces 2-tuples…",35,[[["fn"]],[["fn"],["indflattenmap"]]]],[11,"prop_filter","","Returns a strategy which only produces values accepted by…",35,[[["fn"],["into",["reason"]],["reason"]],[["filter"],["fn"]]]],[11,"prop_filter_map","","Returns a strategy which only produces transformed values…",35,[[["fn"]],[["filtermap"],["fn"]]]],[11,"prop_union","","Returns a strategy which picks uniformly from `self` and…",35,[[],["union"]]],[11,"prop_recursive","","Generate a recursive structure with `self` items as leaves.",35,[[["u32"],["fn"]],[["fn"],["recursive"]]]],[11,"prop_shuffle","","Shuffle the contents of the values produced by this…",35,[[],["shuffle"]]],[11,"boxed","","Erases the type of this `Strategy` so it can be passed…",35,[[],["boxedstrategy"]]],[11,"sboxed","","Erases the type of this `Strategy` so it can be passed…",35,[[],["sboxedstrategy"]]],[11,"no_shrink","","Wraps this strategy to prevent values from being subject…",35,[[],["noshrink"]]],[8,"ValueTree","","A generated value and its associated shrinker.",null,null],[16,"Value","","The type of the value produced by this `ValueTree`.",36,null],[10,"current","","Returns the current value.",36,[[["self"]]]],[10,"simplify","","Attempts to simplify the current value. Notionally, this…",36,[[["self"]],["bool"]]],[10,"complicate","","Attempts to partially undo the last simplification.…",36,[[["self"]],["bool"]]],[0,"test_runner","proptest","State and functions for running proptest tests.",null,null],[3,"Config","proptest::test_runner","Configuration for how a proptest test should be run.",null,null],[12,"cases","","The number of successful test cases that must execute for…",37,null],[12,"max_local_rejects","","The maximum number of individual inputs that may be…",37,null],[12,"max_global_rejects","","The maximum number of combined inputs that may be rejected…",37,null],[12,"max_flat_map_regens","","The maximum number of times all `Flatten` combinators will…",37,null],[12,"failure_persistence","","Indicates whether and how to persist failed test results.",37,null],[12,"source_file","","File location of the current test, relevant for…",37,null],[12,"test_name","","The fully-qualified name of the test being run, as would…",37,null],[12,"fork","","If true, tests are run in a subprocess.",37,null],[12,"timeout","","If non-zero, tests are run in a subprocess and each…",37,null],[12,"max_shrink_time","","If non-zero, give up the shrinking process after this many…",37,null],[12,"max_shrink_iters","","Give up on shrinking if more than this number of…",37,null],[12,"result_cache","","A function to create new result caches.",37,null],[12,"verbose","","Set to non-zero values to cause proptest to emit…",37,null],[12,"rng_algorithm","","The RNG algorithm to use when not using a user-provided RNG.",37,null],[3,"MapFailurePersistence","","Failure persistence option that loads and saves seeds in…",null,null],[12,"map","","Backing map, keyed by source_file.",38,null],[3,"PersistedSeed","","Opaque struct representing a seed which can be persisted.",null,null],[3,"Reason","","The reason for why something, such as a generated value,…",null,null],[3,"ResultCacheKey","","A key used for the result cache.",null,null],[3,"TestRng","","Proptest's random number generator.",null,null],[3,"TestRunner","","State used when running a proptest test.",null,null],[4,"TestCaseError","","Errors which can be returned from test cases to indicate…",null,null],[13,"Reject","","The input was not valid for the test case. This does not…",39,null],[13,"Fail","","The code under test failed the test.",39,null],[4,"TestError","","A failure state from running test cases for a single test.",null,null],[13,"Abort","","The test was aborted for the given reason, for example,…",40,null],[13,"Fail","","A failing test case was found. The string indicates where…",40,null],[4,"FileFailurePersistence","","Describes how failing test cases are persisted.",null,null],[13,"Off","","Completely disables persistence of failing test cases.",41,null],[13,"SourceParallel","","The path given to `TestRunner::set_source_file()` is…",41,null],[13,"WithSource","","The path given to `TestRunner::set_source_file()` is…",41,null],[13,"Direct","","The string given in this option is directly used as a file…",41,null],[4,"RngAlgorithm","","Identifies a particular RNG algorithm supported by proptest.",null,null],[13,"XorShift","","The XorShift algorithm. This was the default up through…",42,null],[13,"ChaCha","","The ChaCha algorithm. This became the default with…",42,null],[13,"PassThrough","","This is not an actual RNG algorithm, but instead returns…",42,null],[5,"basic_result_cache","","A basic result cache.",null,[[],[["box",["resultcache"]],["resultcache"]]]],[5,"noop_result_cache","","A result cache that does nothing.",null,[[],[["box",["resultcache"]],["resultcache"]]]],[11,"with_cases","","Constructs a `Config` only differing from the `default()`…",37,[[["u32"]],["self"]]],[11,"with_source_file","","Constructs a `Config` only differing from the `default()`…",37,[[["str"]],["self"]]],[11,"clone_with_source_file","","Constructs a `Config` only differing from the provided…",37,[[["str"],["self"]],["self"]]],[11,"fork","","Return whether this configuration implies forking.",37,[[["self"]],["bool"]]],[11,"timeout","","Returns the configured timeout.",37,[[["self"]],["u32"]]],[11,"max_shrink_iters","","Returns the configured limit on shrinking iterations.",37,[[["self"]],["u32"]]],[11,"reject","","Rejects the generated test input as invalid for this test…",39,[[],["self"]]],[11,"fail","","The code under test failed the test.",39,[[],["self"]]],[11,"message","","Return the message for this `Reason`.",43,[[["self"]],["str"]]],[11,"value_debug","","Return the test input value as an `&dyn Debug`.",44,[[["self"]],["debug"]]],[11,"from_seed","","Create a new RNG with the given algorithm and seed.",45,[[["rngalgorithm"]],["self"]]],[11,"deterministic_rng","","Returns a `TestRng` with a particular hard-coded seed.",45,[[["rngalgorithm"]],["self"]]],[11,"new","","Create a fresh `TestRunner` with the given configuration.",46,[[["config"]],["self"]]],[11,"deterministic","","Create a fresh `TestRunner` with the standard…",46,[[],["self"]]],[11,"new_with_rng","","Create a fresh `TestRunner` with the given configuration…",46,[[["testrng"],["config"]],["self"]]],[11,"rng","","Returns the RNG for this test run.",46,[[["self"]],["testrng"]]],[11,"new_rng","","Create a new, independent but deterministic RNG from the…",46,[[["self"]],["testrng"]]],[11,"config","","Returns the configuration of this runner.",46,[[["self"]],["config"]]],[11,"run","","Run test cases against `f`, choosing inputs via `strategy`.",46,[[["s"],["self"]],[["result",["testerror"]],["testerror"]]]],[11,"run_one","","Run one specific test case against this runner.",46,[[["valuetree"],["self"]],[["testerror"],["result",["bool","testerror"]],["bool"]]]],[11,"reject_local","","Update the state to account for a local rejection from…",46,[[["self"]],[["result",["reason"]],["reason"]]]],[11,"flat_map_regen","","Increment the counter of flat map regenerations and return…",46,[[["self"]],["bool"]]],[6,"TestCaseResult","","Convenience for the type returned by test cases.",null,null],[8,"FailurePersistence","","Provides external persistence for historical test failures…",null,null],[11,"load_persisted_failures2","","Supply seeds associated with the given `source_file` that…",47,[[["option",["str"]],["self"],["str"]],[["vec",["persistedseed"]],["persistedseed"]]]],[11,"load_persisted_failures","","Use `load_persisted_failures2` instead.",47,[[["option",["str"]],["self"],["str"]],["vec"]]],[11,"save_persisted_failure2","","Store a new failure-generating seed associated with the…",47,[[["option",["str"]],["str"],["debug"],["self"],["persistedseed"]]]],[11,"save_persisted_failure","","Use `save_persisted_failures2` instead.",47,[[["option",["str"]],["str"],["debug"],["self"]]]],[10,"box_clone","","Delegate method for producing a trait object usable with…",47,[[["self"]],[["box",["failurepersistence"]],["failurepersistence"]]]],[10,"eq","","Equality testing delegate required due to constraints of…",47,[[["failurepersistence"],["self"]],["bool"]]],[10,"as_any","","Assistant method for trait object comparison.",47,[[["self"]],["any"]]],[8,"ResultCache","","An object which can cache the outcomes of tests.",null,null],[10,"key","","Convert the given cache key into a `u64` representing that…",48,[[["resultcachekey"],["self"]],["u64"]]],[10,"put","","Save `result` as the outcome associated with the test…",48,[[["self"],["u64"],["testcaseresult"]]]],[10,"get","","If `put()` has been called with a semantically equivalent…",48,[[["self"],["u64"]],[["testcaseresult"],["option",["testcaseresult"]]]]],[0,"tuple","proptest","Support for combining strategies into tuples.",null,null],[3,"TupleValueTree","proptest::tuple","Common `ValueTree` implementation for all tuple strategies.",null,null],[11,"new","","Create a new `TupleValueTree` wrapping `inner`.",49,[[["t"]],["self"]]],[0,"option","proptest","Strategies for generating `std::Option` values.",null,null],[3,"Probability","proptest::option","A probability in the range `[0.0, 1.0]` with a default of…",null,null],[3,"OptionStrategy","","Strategy which generates `Option` values whose inner…",null,null],[3,"OptionValueTree","","`ValueTree` type corresponding to `OptionStrategy`.",null,null],[5,"prob","","Creates a `Probability` from some value that is…",null,[[],["probability"]]],[5,"of","","Return a strategy producing `Optional` values wrapping…",null,[[["strategy"]],[["optionstrategy"],["strategy"]]]],[5,"weighted","","Return a strategy producing `Optional` values wrapping…",null,[[["strategy"]],[["optionstrategy"],["strategy"]]]],[11,"new","","Creates a `Probability` from a `f64`.",50,[[["f64"]],["self"]]],[11,"with","","Merges self together with some other argument producing a…",50,[[["x"]]]],[11,"lift","","Merges self together with some other argument generated…",50,[[]]],[0,"result","proptest","Strategies for combining delegate strategies into…",null,null],[3,"MaybeOk","proptest::result","Strategy which generates `Result`s using `Ok` and `Err`…",null,null],[3,"MaybeOkValueTree","","`ValueTree` type corresponding to `MaybeOk`.",null,null],[3,"MaybeErr","","Strategy which generates `Result`s using `Ok` and `Err`…",null,null],[3,"MaybeErrValueTree","","`ValueTree` type corresponding to `MaybeErr`.",null,null],[5,"maybe_ok","","Create a strategy for `Result`s where `Ok` values are…",null,[[["strategy"]],[["strategy"],["maybeok"]]]],[5,"maybe_ok_weighted","","Create a strategy for `Result`s where `Ok` values are…",null,[[["strategy"]],[["strategy"],["maybeok"]]]],[5,"maybe_err","","Create a strategy for `Result`s where `Ok` values are…",null,[[["strategy"]],[["maybeerr"],["strategy"]]]],[5,"maybe_err_weighted","","Create a strategy for `Result`s where `Ok` values are…",null,[[["strategy"]],[["maybeerr"],["strategy"]]]],[0,"sample","proptest","Strategies for generating values by taking samples of…",null,null],[3,"Subsequence","proptest::sample","Strategy to generate `Vec`s by sampling a subsequence from…",null,null],[3,"SubsequenceValueTree","","`ValueTree` type for `Subsequence`.",null,null],[3,"Select","","Strategy to produce one value from a fixed collection of…",null,null],[3,"SelectValueTree","","`ValueTree` corresponding to `Select`.",null,null],[3,"Index","","A stand-in for an index into a slice or similar collection…",null,null],[3,"IndexStrategy","","Strategy to create `Index`es.",null,null],[3,"IndexValueTree","","`ValueTree` corresponding to `IndexStrategy`.",null,null],[3,"Selector","","A value for picking random values out of iterators.",null,null],[3,"SelectorStrategy","","Strategy to create `Selector`s.",null,null],[3,"SelectorValueTree","","`ValueTree` corresponding to `SelectorStrategy`.",null,null],[5,"subsequence","","Sample subsequences whose size are within `size` from the…",null,[[],[["subsequence"],["clone"]]]],[5,"select","","Create a strategy which uniformly selects one value from…",null,[[],[["clone"],["debug"],["select"]]]],[11,"index","","Return the real index that would be used to index a…",51,[[["self"],["usize"]],["usize"]]],[11,"get","","Return a reference to the element in `slice` that this…",51,[[["self"]],["t"]]],[11,"get_mut","","Return a mutable reference to the element in `slice` that…",51,[[["self"]],["t"]]],[11,"select","","Pick a random element from iterable `it`.",52,[[["intoiterator"],["self"]]]],[11,"try_select","","Pick a random element from iterable `it`.",52,[[["intoiterator"],["self"]],["option"]]],[0,"string","proptest","Strategies for generating strings and byte strings from…",null,null],[3,"StringParam","proptest::string","Wraps the regex that forms the `Strategy` for `String` so…",null,null],[3,"RegexGeneratorStrategy","","Strategy which generates values (i.e., `String` or…",null,null],[3,"RegexGeneratorValueTree","","`ValueTree` corresponding to `RegexGeneratorStrategy`.",null,null],[4,"Error","","Errors which may occur when preparing a regular expression…",null,null],[13,"RegexSyntax","","The string passed as the regex was not syntactically valid.",53,null],[13,"UnsupportedRegex","","The regex was syntactically valid, but contains elements…",53,null],[5,"string_regex","","Creates a strategy which generates strings matching the…",null,[[["str"]],[["error"],["regexgeneratorstrategy",["string"]],["result",["regexgeneratorstrategy","error"]]]]],[5,"string_regex_parsed","","Like `string_regex()`, but allows providing a pre-parsed…",null,[[["hir"]],[["error"],["regexgeneratorstrategy",["string"]],["result",["regexgeneratorstrategy","error"]]]]],[5,"bytes_regex","","Creates a strategy which generates byte strings matching…",null,[[["str"]],[["error"],["regexgeneratorstrategy",["vec"]],["result",["regexgeneratorstrategy","error"]]]]],[5,"bytes_regex_parsed","","Like `bytes_regex()`, but allows providing a pre-parsed…",null,[[["hir"]],[["error"],["regexgeneratorstrategy",["vec"]],["result",["regexgeneratorstrategy","error"]]]]],[0,"prelude","proptest","Re-exports the most commonly-needed APIs of proptest.",null,null],[8,"Rng","proptest::prelude","An automatically-implemented extension trait on…",null,null],[11,"gen","","Return a random value supporting the [`Standard`]…",54,[[["self"]],["t"]]],[11,"gen_range","","Generate a random value in the range [`low`, `high`), i.e.…",54,[[["b2"],["self"],["b1"]],["t"]]],[11,"sample","","Sample a new value, using the given distribution.",54,[[["self"],["d"]],["t"]]],[11,"sample_iter","","Create an iterator that generates values using the given…",54,[[["d"]],["distiter"]]],[11,"fill","","Fill `dest` entirely with random bytes (uniform value…",54,[[["self"],["t"]]]],[11,"try_fill","","Fill `dest` entirely with random bytes (uniform value…",54,[[["self"],["t"]],[["result",["error"]],["error"]]]],[11,"gen_bool","","Return a bool with a probability `p` of being true.",54,[[["self"],["f64"]],["bool"]]],[11,"gen_ratio","","Return a bool with a probability of…",54,[[["self"],["u32"]],["bool"]]],[8,"RngCore","","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",55,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",55,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",55,[[["self"]]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",55,[[["self"]],[["result",["error"]],["error"]]]],[3,"BoxedStrategy","","A boxed `Strategy` trait object as produced by…",null,null],[3,"Just","","A `Strategy` which always produces a single value value…",null,null],[12,"0","","The value produced by this strategy.",23,null],[3,"SBoxedStrategy","","A boxed `Strategy` trait object which is also `Sync` and…",null,null],[3,"ProptestConfig","","Configuration for how a proptest test should be run.",null,null],[12,"cases","","The number of successful test cases that must execute for…",37,null],[12,"max_local_rejects","","The maximum number of individual inputs that may be…",37,null],[12,"max_global_rejects","","The maximum number of combined inputs that may be rejected…",37,null],[12,"max_flat_map_regens","","The maximum number of times all `Flatten` combinators will…",37,null],[12,"failure_persistence","","Indicates whether and how to persist failed test results.",37,null],[12,"source_file","","File location of the current test, relevant for…",37,null],[12,"test_name","","The fully-qualified name of the test being run, as would…",37,null],[12,"fork","","If true, tests are run in a subprocess.",37,null],[12,"timeout","","If non-zero, tests are run in a subprocess and each…",37,null],[12,"max_shrink_time","","If non-zero, give up the shrinking process after this many…",37,null],[12,"max_shrink_iters","","Give up on shrinking if more than this number of…",37,null],[12,"result_cache","","A function to create new result caches.",37,null],[12,"verbose","","Set to non-zero values to cause proptest to emit…",37,null],[12,"rng_algorithm","","The RNG algorithm to use when not using a user-provided RNG.",37,null],[4,"TestCaseError","","Errors which can be returned from test cases to indicate…",null,null],[13,"Reject","","The input was not valid for the test case. This does not…",39,null],[13,"Fail","","The code under test failed the test.",39,null],[5,"any","","Generates a [`Strategy`] producing [`Arbitrary`][trait…",null,[[],[["arbitrary"],["strategyfor"]]]],[5,"any_with","","Generates a [`Strategy`] producing [`Arbitrary`] values of…",null,[[["paramsfor"],["arbitrary"]],[["arbitrary"],["strategyfor"]]]],[0,"prop","","Re-exports the entire public API of proptest so that an…",null,null],[8,"Arbitrary","","Arbitrary determines a canonical [`Strategy`] for the…",null,null],[16,"Parameters","","The type of parameters that [`arbitrary_with`] accepts for…",2,null],[11,"arbitrary","proptest::arbitrary","Generates a [`Strategy`] for producing arbitrary values of…",2,[[]]],[10,"arbitrary_with","proptest::prelude","Generates a [`Strategy`] for producing arbitrary values of…",2,[[]]],[16,"Strategy","","The type of [`Strategy`] used to generate values of type…",2,null],[8,"Strategy","","A strategy for producing arbitrary values of a given type.",null,null],[16,"Tree","","The value tree generated by this `Strategy`.",35,null],[16,"Value","","The type of value used by functions under test generated…",35,null],[10,"new_tree","","Generate a new value tree from the given runner.",35,[[["testrunner"],["self"]],["newtree"]]],[11,"prop_map","proptest::strategy","Returns a strategy which produces values transformed by…",35,[[["fn"]],[["map"],["fn"]]]],[11,"prop_map_into","","Returns a strategy which produces values of type `O` by…",35,[[],[["mapinto"],["debug"]]]],[11,"prop_perturb","","Returns a strategy which produces values transformed by…",35,[[["fn"]],[["perturb"],["fn"]]]],[11,"prop_flat_map","","Maps values produced by this strategy into new strategies…",35,[[["fn"]],[["flatten",["map"]],["map"]]]],[11,"prop_ind_flat_map","","Maps values produced by this strategy into new strategies…",35,[[["fn"]],[["map"],["indflatten",["map"]]]]],[11,"prop_ind_flat_map2","","Similar to `prop_ind_flat_map()`, but produces 2-tuples…",35,[[["fn"]],[["fn"],["indflattenmap"]]]],[11,"prop_filter","","Returns a strategy which only produces values accepted by…",35,[[["fn"],["into",["reason"]],["reason"]],[["filter"],["fn"]]]],[11,"prop_filter_map","","Returns a strategy which only produces transformed values…",35,[[["fn"]],[["filtermap"],["fn"]]]],[11,"prop_union","","Returns a strategy which picks uniformly from `self` and…",35,[[],["union"]]],[11,"prop_recursive","","Generate a recursive structure with `self` items as leaves.",35,[[["u32"],["fn"]],[["fn"],["recursive"]]]],[11,"prop_shuffle","","Shuffle the contents of the values produced by this…",35,[[],["shuffle"]]],[11,"boxed","","Erases the type of this `Strategy` so it can be passed…",35,[[],["boxedstrategy"]]],[11,"sboxed","","Erases the type of this `Strategy` so it can be passed…",35,[[],["sboxedstrategy"]]],[11,"no_shrink","","Wraps this strategy to prevent values from being subject…",35,[[],["noshrink"]]],[14,"proptest","proptest","Easily define `proptest` tests.",null,null],[14,"prop_assume","","Rejects the test input if assumptions are not met.",null,null],[14,"prop_oneof","","Produce a strategy which picks one of the listed choices.",null,null],[14,"prop_compose","","Convenience to define functions which produce new…",null,null],[14,"prop_assert","","Similar to `assert!` from std, but returns a test failure…",null,null],[14,"prop_assert_eq","","Similar to `assert_eq!` from std, but returns a test…",null,null],[14,"prop_assert_ne","","Similar to `assert_ne!` from std, but returns a test…",null,null],[11,"from","proptest::array","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"into","","",56,[[],["u"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"vzip","","",56,[[],["v"]]],[11,"from","proptest::bits","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"into","","",57,[[],["u"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"vzip","","",57,[[],["v"]]],[11,"from","proptest::bool","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"into","","",58,[[],["u"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"vzip","","",58,[[],["v"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"into","","",59,[[],["u"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"vzip","","",59,[[],["v"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"into","","",60,[[],["u"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"vzip","","",60,[[],["v"]]],[11,"from","proptest::char","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"into","","",61,[[],["u"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"vzip","","",61,[[],["v"]]],[11,"from","proptest::collection","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"into","","",62,[[],["u"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"vzip","","",62,[[],["v"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"into","","",63,[[],["u"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"vzip","","",63,[[],["v"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"into","","",64,[[],["u"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"vzip","","",64,[[],["v"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"into","","",65,[[],["u"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"vzip","","",65,[[],["v"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"into","","",66,[[],["u"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"vzip","","",66,[[],["v"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"into","","",67,[[],["u"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"vzip","","",67,[[],["v"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"into","","",68,[[],["u"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"vzip","","",68,[[],["v"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"into","","",69,[[],["u"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"vzip","","",69,[[],["v"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"into","","",70,[[],["u"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"vzip","","",70,[[],["v"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"into","","",71,[[],["u"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"vzip","","",71,[[],["v"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"into","","",72,[[],["u"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"vzip","","",72,[[],["v"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"into","","",73,[[],["u"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"vzip","","",73,[[],["v"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"into","","",74,[[],["u"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"vzip","","",74,[[],["v"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"into","","",75,[[],["u"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"vzip","","",75,[[],["v"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"into","","",76,[[],["u"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"vzip","","",76,[[],["v"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"into","","",77,[[],["u"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"vzip","","",77,[[],["v"]]],[11,"from","proptest::num::i8","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"into","","",78,[[],["u"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"vzip","","",78,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","proptest::num::i16","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"into","","",79,[[],["u"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"vzip","","",79,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","proptest::num::i32","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"into","","",80,[[],["u"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"vzip","","",80,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","proptest::num::i64","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"into","","",81,[[],["u"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"vzip","","",81,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","proptest::num::i128","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"into","","",82,[[],["u"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"vzip","","",82,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","proptest::num::isize","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"into","","",83,[[],["u"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"vzip","","",83,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","proptest::num::u8","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"into","","",84,[[],["u"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"vzip","","",84,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","proptest::num::u16","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"into","","",85,[[],["u"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"vzip","","",85,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"into","","",16,[[],["u"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","proptest::num::u32","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"into","","",86,[[],["u"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"vzip","","",86,[[],["v"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","proptest::num::u64","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"into","","",87,[[],["u"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"vzip","","",87,[[],["v"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"vzip","","",18,[[],["v"]]],[11,"from","proptest::num::u128","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"into","","",88,[[],["u"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,[[["self"],["t"]]]],[11,"vzip","","",88,[[],["v"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"vzip","","",19,[[],["v"]]],[11,"from","proptest::num::usize","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"into","","",89,[[],["u"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"vzip","","",89,[[],["v"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"vzip","","",20,[[],["v"]]],[11,"from","proptest::num::f32","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"into","","",90,[[],["u"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"vzip","","",90,[[],["v"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","proptest::num::f64","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"into","","",91,[[],["u"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,[[["self"],["t"]]]],[11,"vzip","","",91,[[],["v"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","proptest::strategy","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"into","","",92,[[],["u"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,[[["self"],["t"]]]],[11,"vzip","","",92,[[],["v"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"into","","",93,[[],["u"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,[[["self"],["t"]]]],[11,"vzip","","",93,[[],["v"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"into","","",94,[[],["u"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,[[["self"],["t"]]]],[11,"vzip","","",94,[[],["v"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"vzip","","",25,[[],["v"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"into","","",95,[[],["u"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,[[["self"],["t"]]]],[11,"vzip","","",95,[[],["v"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"into","","",96,[[],["u"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"vzip","","",96,[[],["v"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"into","","",97,[[],["u"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"vzip","","",97,[[],["v"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"vzip","","",26,[[],["v"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"vzip","","",27,[[],["v"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"into","","",98,[[],["u"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"vzip","","",98,[[],["v"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"into","","",99,[[],["u"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"vzip","","",99,[[],["v"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"into","","",100,[[],["u"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,[[["self"],["t"]]]],[11,"vzip","","",100,[[],["v"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"into","","",101,[[],["u"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,[[["self"],["t"]]]],[11,"vzip","","",101,[[],["v"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"into","","",102,[[],["u"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,[[["self"],["t"]]]],[11,"vzip","","",102,[[],["v"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"into","","",103,[[],["u"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,[[["self"],["t"]]]],[11,"vzip","","",103,[[],["v"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"into","","",104,[[],["u"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,[[["self"],["t"]]]],[11,"vzip","","",104,[[],["v"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"into","","",105,[[],["u"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,[[["self"],["t"]]]],[11,"vzip","","",105,[[],["v"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"into","","",106,[[],["u"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,[[["self"],["t"]]]],[11,"vzip","","",106,[[],["v"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"into","","",107,[[],["u"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,[[["self"],["t"]]]],[11,"vzip","","",107,[[],["v"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"into","","",108,[[],["u"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,[[["self"],["t"]]]],[11,"vzip","","",108,[[],["v"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"vzip","","",28,[[],["v"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"into","","",109,[[],["u"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,[[["self"],["t"]]]],[11,"vzip","","",109,[[],["v"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"vzip","","",29,[[],["v"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"into","","",110,[[],["u"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,[[["self"],["t"]]]],[11,"vzip","","",110,[[],["v"]]],[11,"from","proptest::strategy::statics","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"vzip","","",32,[[],["v"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"vzip","","",33,[[],["v"]]],[11,"from","proptest::test_runner","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"into","","",37,[[],["u"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"vzip","","",37,[[],["v"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"into","","",38,[[],["u"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"vzip","","",38,[[],["v"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"into","","",111,[[],["u"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,[[["self"],["t"]]]],[11,"to_string","","",111,[[["self"]],["string"]]],[11,"vzip","","",111,[[],["v"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"into","","",43,[[],["u"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"to_string","","",43,[[["self"]],["string"]]],[11,"vzip","","",43,[[],["v"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"into","","",44,[[],["u"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"vzip","","",44,[[],["v"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"into","","",45,[[],["u"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"vzip","","",45,[[],["v"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"into","","",46,[[],["u"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"to_string","","",46,[[["self"]],["string"]]],[11,"vzip","","",46,[[],["v"]]],[11,"from","","",39,[[],["t"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"into","","",39,[[],["u"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"vzip","","",39,[[],["v"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"into","","",40,[[],["u"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"to_string","","",40,[[["self"]],["string"]]],[11,"vzip","","",40,[[],["v"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"into","","",41,[[],["u"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"vzip","","",41,[[],["v"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"into","","",42,[[],["u"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"to_string","","",42,[[["self"]],["string"]]],[11,"vzip","","",42,[[],["v"]]],[11,"from","proptest::tuple","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"into","","",49,[[],["u"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"vzip","","",49,[[],["v"]]],[11,"from","proptest::option","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"into","","",50,[[],["u"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"vzip","","",50,[[],["v"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"into","","",112,[[],["u"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,[[["self"],["t"]]]],[11,"vzip","","",112,[[],["v"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"into","","",113,[[],["u"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,[[["self"],["t"]]]],[11,"vzip","","",113,[[],["v"]]],[11,"from","proptest::result","",114,[[["t"]],["t"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"into","","",114,[[],["u"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,[[["self"],["t"]]]],[11,"vzip","","",114,[[],["v"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"into","","",115,[[],["u"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,[[["self"],["t"]]]],[11,"vzip","","",115,[[],["v"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"into","","",116,[[],["u"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,[[["self"],["t"]]]],[11,"vzip","","",116,[[],["v"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"into","","",117,[[],["u"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,[[["self"],["t"]]]],[11,"vzip","","",117,[[],["v"]]],[11,"from","proptest::sample","",118,[[["t"]],["t"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"into","","",118,[[],["u"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,[[["self"],["t"]]]],[11,"vzip","","",118,[[],["v"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"into","","",119,[[],["u"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,[[["self"],["t"]]]],[11,"vzip","","",119,[[],["v"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"into","","",120,[[],["u"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,[[["self"],["t"]]]],[11,"vzip","","",120,[[],["v"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"into","","",121,[[],["u"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,[[["self"],["t"]]]],[11,"vzip","","",121,[[],["v"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"into","","",51,[[],["u"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"vzip","","",51,[[],["v"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"into","","",122,[[],["u"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,[[["self"],["t"]]]],[11,"vzip","","",122,[[],["v"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"into","","",123,[[],["u"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,[[["self"],["t"]]]],[11,"vzip","","",123,[[],["v"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"into","","",52,[[],["u"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"vzip","","",52,[[],["v"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"into","","",124,[[],["u"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"vzip","","",124,[[],["v"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"into","","",125,[[],["u"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"vzip","","",125,[[],["v"]]],[11,"from","proptest::string","",126,[[["t"]],["t"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"into","","",126,[[],["u"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,[[["self"],["t"]]]],[11,"vzip","","",126,[[],["v"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"into","","",127,[[],["u"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"vzip","","",127,[[],["v"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"into","","",128,[[],["u"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"vzip","","",128,[[],["v"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"into","","",53,[[],["u"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"to_string","","",53,[[["self"]],["string"]]],[11,"vzip","","",53,[[],["v"]]],[11,"read","proptest::prelude","",55,[[["self"]],[["error"],["usize"],["result",["usize","error"]]]]],[11,"arbitrary_with","proptest::sample","",51,[[],["indexstrategy"]]],[11,"arbitrary_with","","",52,[[],["selectorstrategy"]]],[11,"arbitrary_with","proptest::option","",50,[[]]],[11,"arbitrary_with","proptest::collection","",8,[[]]],[11,"new_tree","proptest::array","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",3,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","proptest::bits","",5,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",6,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","proptest::bool","",58,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",59,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","proptest::char","",7,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","proptest::collection","",63,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",65,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",67,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",69,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",71,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",73,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",75,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",62,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","proptest::num::i8","",78,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","proptest::num::i16","",79,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","proptest::num::i32","",80,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","proptest::num::i64","",81,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","proptest::num::i128","",82,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","proptest::num::isize","",83,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","proptest::num::u8","",84,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","proptest::num::u16","",85,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","proptest::num::u32","",86,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","proptest::num::u64","",87,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","proptest::num::u128","",88,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","proptest::num::usize","",89,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","proptest::num::f32","",90,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","proptest::num::f64","",91,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","proptest::strategy","",92,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",93,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",25,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",96,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",97,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",26,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",23,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",27,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",99,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",100,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",101,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",103,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",104,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",106,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",107,[[["testrunner"],["self"]],["newtree"]]],[11,"boxed","","",107,[[],["boxedstrategy"]]],[11,"new_tree","","",108,[[["testrunner"],["self"]],["newtree"]]],[11,"sboxed","","",108,[[],["sboxedstrategy"]]],[11,"boxed","","",108,[[],["boxedstrategy"]]],[11,"new_tree","","",28,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",29,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",29,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",29,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",29,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",29,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",29,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",29,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",29,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",29,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","proptest::strategy::statics","",32,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",33,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","proptest::option","",112,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","proptest::result","",114,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",116,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","proptest::sample","",118,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",120,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",122,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","","",124,[[["testrunner"],["self"]],["newtree"]]],[11,"new_tree","proptest::string","",127,[[["testrunner"],["self"]],["newtree"]]],[11,"current","proptest::array","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","","",56,[[["self"]]]],[11,"simplify","","",56,[[["self"]],["bool"]]],[11,"complicate","","",56,[[["self"]],["bool"]]],[11,"current","proptest::bits","",57,[[["self"]],["t"]]],[11,"simplify","","",57,[[["self"]],["bool"]]],[11,"complicate","","",57,[[["self"]],["bool"]]],[11,"current","proptest::bool","",60,[[["self"]],["bool"]]],[11,"simplify","","",60,[[["self"]],["bool"]]],[11,"complicate","","",60,[[["self"]],["bool"]]],[11,"current","proptest::char","",61,[[["self"]],["char"]]],[11,"simplify","","",61,[[["self"]],["bool"]]],[11,"complicate","","",61,[[["self"]],["bool"]]],[11,"current","proptest::collection","",64,[[["self"]]]],[11,"simplify","","",64,[[["self"]],["bool"]]],[11,"complicate","","",64,[[["self"]],["bool"]]],[11,"current","","",66,[[["self"]]]],[11,"simplify","","",66,[[["self"]],["bool"]]],[11,"complicate","","",66,[[["self"]],["bool"]]],[11,"current","","",68,[[["self"]]]],[11,"simplify","","",68,[[["self"]],["bool"]]],[11,"complicate","","",68,[[["self"]],["bool"]]],[11,"current","","",70,[[["self"]]]],[11,"simplify","","",70,[[["self"]],["bool"]]],[11,"complicate","","",70,[[["self"]],["bool"]]],[11,"current","","",72,[[["self"]]]],[11,"simplify","","",72,[[["self"]],["bool"]]],[11,"complicate","","",72,[[["self"]],["bool"]]],[11,"current","","",74,[[["self"]]]],[11,"simplify","","",74,[[["self"]],["bool"]]],[11,"complicate","","",74,[[["self"]],["bool"]]],[11,"current","","",76,[[["self"]]]],[11,"simplify","","",76,[[["self"]],["bool"]]],[11,"complicate","","",76,[[["self"]],["bool"]]],[11,"current","","",77,[[["self"]],["vec"]]],[11,"simplify","","",77,[[["self"]],["bool"]]],[11,"complicate","","",77,[[["self"]],["bool"]]],[11,"current","proptest::num::i8","",9,[[["self"]],["i8"]]],[11,"simplify","","",9,[[["self"]],["bool"]]],[11,"complicate","","",9,[[["self"]],["bool"]]],[11,"current","proptest::num::i16","",10,[[["self"]],["i16"]]],[11,"simplify","","",10,[[["self"]],["bool"]]],[11,"complicate","","",10,[[["self"]],["bool"]]],[11,"current","proptest::num::i32","",11,[[["self"]],["i32"]]],[11,"simplify","","",11,[[["self"]],["bool"]]],[11,"complicate","","",11,[[["self"]],["bool"]]],[11,"current","proptest::num::i64","",12,[[["self"]],["i64"]]],[11,"simplify","","",12,[[["self"]],["bool"]]],[11,"complicate","","",12,[[["self"]],["bool"]]],[11,"current","proptest::num::i128","",13,[[["self"]],["i128"]]],[11,"simplify","","",13,[[["self"]],["bool"]]],[11,"complicate","","",13,[[["self"]],["bool"]]],[11,"current","proptest::num::isize","",14,[[["self"]],["isize"]]],[11,"simplify","","",14,[[["self"]],["bool"]]],[11,"complicate","","",14,[[["self"]],["bool"]]],[11,"current","proptest::num::u8","",15,[[["self"]],["u8"]]],[11,"simplify","","",15,[[["self"]],["bool"]]],[11,"complicate","","",15,[[["self"]],["bool"]]],[11,"current","proptest::num::u16","",16,[[["self"]],["u16"]]],[11,"simplify","","",16,[[["self"]],["bool"]]],[11,"complicate","","",16,[[["self"]],["bool"]]],[11,"current","proptest::num::u32","",17,[[["self"]],["u32"]]],[11,"simplify","","",17,[[["self"]],["bool"]]],[11,"complicate","","",17,[[["self"]],["bool"]]],[11,"current","proptest::num::u64","",18,[[["self"]],["u64"]]],[11,"simplify","","",18,[[["self"]],["bool"]]],[11,"complicate","","",18,[[["self"]],["bool"]]],[11,"current","proptest::num::u128","",19,[[["self"]],["u128"]]],[11,"simplify","","",19,[[["self"]],["bool"]]],[11,"complicate","","",19,[[["self"]],["bool"]]],[11,"current","proptest::num::usize","",20,[[["self"]],["usize"]]],[11,"simplify","","",20,[[["self"]],["bool"]]],[11,"complicate","","",20,[[["self"]],["bool"]]],[11,"current","proptest::num::f32","",21,[[["self"]],["f32"]]],[11,"simplify","","",21,[[["self"]],["bool"]]],[11,"complicate","","",21,[[["self"]],["bool"]]],[11,"current","proptest::num::f64","",22,[[["self"]],["f64"]]],[11,"simplify","","",22,[[["self"]],["bool"]]],[11,"complicate","","",22,[[["self"]],["bool"]]],[11,"current","proptest::strategy","",92,[[["self"]]]],[11,"simplify","","",92,[[["self"]],["bool"]]],[11,"complicate","","",92,[[["self"]],["bool"]]],[11,"current","","",94,[[["self"]],["o"]]],[11,"simplify","","",94,[[["self"]],["bool"]]],[11,"complicate","","",94,[[["self"]],["bool"]]],[11,"current","","",95,[[["self"]]]],[11,"simplify","","",95,[[["self"]],["bool"]]],[11,"complicate","","",95,[[["self"]],["bool"]]],[11,"current","","",26,[[["self"]]]],[11,"simplify","","",26,[[["self"]],["bool"]]],[11,"complicate","","",26,[[["self"]],["bool"]]],[11,"simplify","","",23,[[["self"]],["bool"]]],[11,"complicate","","",23,[[["self"]],["bool"]]],[11,"current","","",23,[[["self"]],["t"]]],[11,"simplify","","",27,[[["self"]],["bool"]]],[11,"complicate","","",27,[[["self"]],["bool"]]],[11,"current","","",27,[[["self"]]]],[11,"current","","",99,[[["self"]],["o"]]],[11,"simplify","","",99,[[["self"]],["bool"]]],[11,"complicate","","",99,[[["self"]],["bool"]]],[11,"current","","",100,[[["self"]],["o"]]],[11,"simplify","","",100,[[["self"]],["bool"]]],[11,"complicate","","",100,[[["self"]],["bool"]]],[11,"current","","",102,[[["self"]],["o"]]],[11,"simplify","","",102,[[["self"]],["bool"]]],[11,"complicate","","",102,[[["self"]],["bool"]]],[11,"current","","",105,[[["self"]]]],[11,"simplify","","",105,[[["self"]],["bool"]]],[11,"complicate","","",105,[[["self"]],["bool"]]],[11,"current","","",106,[[["self"]]]],[11,"simplify","","",106,[[["self"]],["bool"]]],[11,"complicate","","",106,[[["self"]],["bool"]]],[11,"current","","",109,[[["self"]]]],[11,"simplify","","",109,[[["self"]],["bool"]]],[11,"complicate","","",109,[[["self"]],["bool"]]],[11,"current","","",110,[[["self"]]]],[11,"simplify","","",110,[[["self"]],["bool"]]],[11,"complicate","","",110,[[["self"]],["bool"]]],[11,"current","","",110,[[["self"]]]],[11,"simplify","","",110,[[["self"]],["bool"]]],[11,"complicate","","",110,[[["self"]],["bool"]]],[11,"current","","",110,[[["self"]]]],[11,"simplify","","",110,[[["self"]],["bool"]]],[11,"complicate","","",110,[[["self"]],["bool"]]],[11,"current","","",110,[[["self"]]]],[11,"simplify","","",110,[[["self"]],["bool"]]],[11,"complicate","","",110,[[["self"]],["bool"]]],[11,"current","","",110,[[["self"]]]],[11,"simplify","","",110,[[["self"]],["bool"]]],[11,"complicate","","",110,[[["self"]],["bool"]]],[11,"current","","",110,[[["self"]]]],[11,"simplify","","",110,[[["self"]],["bool"]]],[11,"complicate","","",110,[[["self"]],["bool"]]],[11,"current","","",110,[[["self"]]]],[11,"simplify","","",110,[[["self"]],["bool"]]],[11,"complicate","","",110,[[["self"]],["bool"]]],[11,"current","","",110,[[["self"]]]],[11,"simplify","","",110,[[["self"]],["bool"]]],[11,"complicate","","",110,[[["self"]],["bool"]]],[11,"current","","",110,[[["self"]]]],[11,"simplify","","",110,[[["self"]],["bool"]]],[11,"complicate","","",110,[[["self"]],["bool"]]],[11,"current","proptest::strategy::statics","",32,[[["self"]]]],[11,"simplify","","",32,[[["self"]],["bool"]]],[11,"complicate","","",32,[[["self"]],["bool"]]],[11,"current","","",33,[[["self"]]]],[11,"simplify","","",33,[[["self"]],["bool"]]],[11,"complicate","","",33,[[["self"]],["bool"]]],[11,"current","proptest::tuple","",49,[[["self"]]]],[11,"simplify","","",49,[[["self"]],["bool"]]],[11,"complicate","","",49,[[["self"]],["bool"]]],[11,"current","","",49,[[["self"]]]],[11,"simplify","","",49,[[["self"]],["bool"]]],[11,"complicate","","",49,[[["self"]],["bool"]]],[11,"current","","",49,[[["self"]]]],[11,"simplify","","",49,[[["self"]],["bool"]]],[11,"complicate","","",49,[[["self"]],["bool"]]],[11,"current","","",49,[[["self"]]]],[11,"simplify","","",49,[[["self"]],["bool"]]],[11,"complicate","","",49,[[["self"]],["bool"]]],[11,"current","","",49,[[["self"]]]],[11,"simplify","","",49,[[["self"]],["bool"]]],[11,"complicate","","",49,[[["self"]],["bool"]]],[11,"current","","",49,[[["self"]]]],[11,"simplify","","",49,[[["self"]],["bool"]]],[11,"complicate","","",49,[[["self"]],["bool"]]],[11,"current","","",49,[[["self"]]]],[11,"simplify","","",49,[[["self"]],["bool"]]],[11,"complicate","","",49,[[["self"]],["bool"]]],[11,"current","","",49,[[["self"]]]],[11,"simplify","","",49,[[["self"]],["bool"]]],[11,"complicate","","",49,[[["self"]],["bool"]]],[11,"current","","",49,[[["self"]]]],[11,"simplify","","",49,[[["self"]],["bool"]]],[11,"complicate","","",49,[[["self"]],["bool"]]],[11,"current","","",49,[[["self"]]]],[11,"simplify","","",49,[[["self"]],["bool"]]],[11,"complicate","","",49,[[["self"]],["bool"]]],[11,"current","proptest::option","",113,[[["self"]]]],[11,"simplify","","",113,[[["self"]],["bool"]]],[11,"complicate","","",113,[[["self"]],["bool"]]],[11,"current","proptest::result","",115,[[["self"]]]],[11,"simplify","","",115,[[["self"]],["bool"]]],[11,"complicate","","",115,[[["self"]],["bool"]]],[11,"current","","",117,[[["self"]]]],[11,"simplify","","",117,[[["self"]],["bool"]]],[11,"complicate","","",117,[[["self"]],["bool"]]],[11,"current","proptest::sample","",119,[[["self"]]]],[11,"simplify","","",119,[[["self"]],["bool"]]],[11,"complicate","","",119,[[["self"]],["bool"]]],[11,"current","","",121,[[["self"]]]],[11,"simplify","","",121,[[["self"]],["bool"]]],[11,"complicate","","",121,[[["self"]],["bool"]]],[11,"current","","",123,[[["self"]]]],[11,"simplify","","",123,[[["self"]],["bool"]]],[11,"complicate","","",123,[[["self"]],["bool"]]],[11,"current","","",125,[[["self"]],["selector"]]],[11,"simplify","","",125,[[["self"]],["bool"]]],[11,"complicate","","",125,[[["self"]],["bool"]]],[11,"current","proptest::string","",128,[[["self"]]]],[11,"simplify","","",128,[[["self"]],["bool"]]],[11,"complicate","","",128,[[["self"]],["bool"]]],[11,"load_persisted_failures2","proptest::test_runner","",41,[[["option",["str"]],["self"],["str"]],[["vec",["persistedseed"]],["persistedseed"]]]],[11,"save_persisted_failure2","","",41,[[["debug"],["option",["str"]],["str"],["self"],["persistedseed"]]]],[11,"box_clone","","",41,[[["self"]],[["box",["failurepersistence"]],["failurepersistence"]]]],[11,"eq","","",41,[[["failurepersistence"],["self"]],["bool"]]],[11,"as_any","","",41,[[["self"]],["any"]]],[11,"load_persisted_failures2","","",38,[[["option",["str"]],["self"],["str"]],[["vec",["persistedseed"]],["persistedseed"]]]],[11,"save_persisted_failure2","","",38,[[["option",["str"]],["str"],["debug"],["self"],["persistedseed"]]]],[11,"box_clone","","",38,[[["self"]],[["box",["failurepersistence"]],["failurepersistence"]]]],[11,"eq","","",38,[[["failurepersistence"],["self"]],["bool"]]],[11,"as_any","","",38,[[["self"]],["any"]]],[11,"from","proptest::collection","",8,[[],["self"]]],[11,"from","","",8,[[["usize"]],["self"]]],[11,"from","","",8,[[["rangeto",["usize"]],["usize"]],["self"]]],[11,"from","","",8,[[["range",["usize"]],["usize"]],["self"]]],[11,"from","","",8,[[["rangeinclusive",["usize"]],["usize"]],["self"]]],[11,"from","","",8,[[["rangetoinclusive",["usize"]],["usize"]],["self"]]],[11,"from","proptest::test_runner","",39,[[["e"]],["self"]]],[11,"from","","",43,[[["str"]],["self"]]],[11,"from","","",43,[[["string"]],["self"]]],[11,"from","","",43,[[["str"],["box",["str"]]],["self"]]],[11,"from","proptest::option","Creates a `Probability` from a `f64`.",50,[[["f64"]],["self"]]],[11,"from","proptest::string","",126,[[["str"]],["self"]]],[11,"from","","",53,[[["parseerror"]],["error"]]],[11,"fmt","proptest::array","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","proptest::bits","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","proptest::bool","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","proptest::char","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","proptest::collection","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","proptest::num::i8","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","proptest::num::i16","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","proptest::num::i32","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","proptest::num::i64","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","proptest::num::i128","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","proptest::num::isize","",83,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","proptest::num::u8","",84,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","proptest::num::u16","",85,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","proptest::num::u32","",86,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","proptest::num::u64","",87,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","proptest::num::u128","",88,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","proptest::num::usize","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","proptest::num::f32","",90,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","proptest::num::f64","",91,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","proptest::strategy","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",104,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",105,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",106,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",107,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",108,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",110,[[["formatter"],["self"]],["result"]]],[11,"fmt","proptest::strategy::statics","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","proptest::test_runner","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",111,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","proptest::tuple","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","proptest::option","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","proptest::result","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","proptest::sample","",118,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",119,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",120,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",121,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",122,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",123,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",124,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",125,[[["formatter"],["self"]],["result"]]],[11,"fmt","proptest::string","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",127,[[["formatter"],["self"]],["result"]]],[11,"fmt","proptest::test_runner","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","proptest::string","",53,[[["formatter"],["self"]],["result"]]],[11,"eq","proptest::collection","",8,[[["sizerange"],["self"]],["bool"]]],[11,"ne","","",8,[[["sizerange"],["self"]],["bool"]]],[11,"eq","proptest::test_runner","",37,[[["config"],["self"]],["bool"]]],[11,"ne","","",37,[[["config"],["self"]],["bool"]]],[11,"eq","","",40,[[["self"],["testerror"]],["bool"]]],[11,"ne","","",40,[[["self"],["testerror"]],["bool"]]],[11,"eq","","",41,[[["filefailurepersistence"],["self"]],["bool"]]],[11,"ne","","",41,[[["filefailurepersistence"],["self"]],["bool"]]],[11,"eq","","",38,[[["self"],["mapfailurepersistence"]],["bool"]]],[11,"ne","","",38,[[["self"],["mapfailurepersistence"]],["bool"]]],[11,"eq","","",111,[[["self"],["persistedseed"]],["bool"]]],[11,"ne","","",111,[[["self"],["persistedseed"]],["bool"]]],[11,"eq","","",47,[[["failurepersistence"],["self"]],["bool"]]],[11,"eq","","",43,[[["self"],["reason"]],["bool"]]],[11,"ne","","",43,[[["self"],["reason"]],["bool"]]],[11,"eq","","",42,[[["rngalgorithm"],["self"]],["bool"]]],[11,"eq","proptest::option","",50,[[["self"],["probability"]],["bool"]]],[11,"ne","","",50,[[["self"],["probability"]],["bool"]]],[11,"eq","proptest::string","",126,[[["stringparam"],["self"]],["bool"]]],[11,"ne","","",126,[[["stringparam"],["self"]],["bool"]]],[11,"cmp","proptest::test_runner","",111,[[["self"],["persistedseed"]],["ordering"]]],[11,"cmp","","",43,[[["self"],["reason"]],["ordering"]]],[11,"cmp","proptest::string","",126,[[["stringparam"],["self"]],["ordering"]]],[11,"partial_cmp","proptest::test_runner","",111,[[["self"],["persistedseed"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",111,[[["self"],["persistedseed"]],["bool"]]],[11,"le","","",111,[[["self"],["persistedseed"]],["bool"]]],[11,"gt","","",111,[[["self"],["persistedseed"]],["bool"]]],[11,"ge","","",111,[[["self"],["persistedseed"]],["bool"]]],[11,"partial_cmp","","",43,[[["self"],["reason"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",43,[[["self"],["reason"]],["bool"]]],[11,"le","","",43,[[["self"],["reason"]],["bool"]]],[11,"gt","","",43,[[["self"],["reason"]],["bool"]]],[11,"ge","","",43,[[["self"],["reason"]],["bool"]]],[11,"partial_cmp","proptest::string","",126,[[["stringparam"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",126,[[["stringparam"],["self"]],["bool"]]],[11,"le","","",126,[[["stringparam"],["self"]],["bool"]]],[11,"gt","","",126,[[["stringparam"],["self"]],["bool"]]],[11,"ge","","",126,[[["stringparam"],["self"]],["bool"]]],[11,"add","proptest::collection","",8,[[["usize"]]]],[11,"bitor","proptest::num::f32","",90,[[],["self"]]],[11,"bitor","proptest::num::f64","",91,[[],["self"]]],[11,"bitor_assign","proptest::num::f32","",90,[[["self"]]]],[11,"bitor_assign","proptest::num::f64","",91,[[["self"]]]],[11,"hash","proptest::collection","",8,[[["self"],["__h"]]]],[11,"hash","proptest::test_runner","",43,[[["self"],["__h"]]]],[11,"hash","proptest::string","",126,[[["self"],["__h"]]]],[11,"from_str","proptest::test_runner","",111,[[["str"]],["result"]]],[11,"from_str","","",42,[[["str"]],["result"]]],[11,"clone","proptest::array","",3,[[["self"]],["uniformarraystrategy"]]],[11,"clone","","",56,[[["self"]],["arrayvaluetree"]]],[11,"clone","proptest::bits","",5,[[["self"]],["bitsetstrategy"]]],[11,"clone","","",6,[[["self"]],["sampledbitsetstrategy"]]],[11,"clone","","",57,[[["self"]],["bitsetvaluetree"]]],[11,"clone","proptest::bool","",58,[[["self"]],["any"]]],[11,"clone","","",59,[[["self"]],["weighted"]]],[11,"clone","","",60,[[["self"]],["boolvaluetree"]]],[11,"clone","proptest::char","",7,[[["self"]],["charstrategy"]]],[11,"clone","","",61,[[["self"]],["charvaluetree"]]],[11,"clone","proptest::collection","",8,[[["self"]],["sizerange"]]],[11,"clone","","",62,[[["self"]],["vecstrategy"]]],[11,"clone","","",63,[[["self"]],["vecdequestrategy"]]],[11,"clone","","",64,[[["self"]],["vecdequevaluetree"]]],[11,"clone","","",65,[[["self"]],["linkedliststrategy"]]],[11,"clone","","",66,[[["self"]],["linkedlistvaluetree"]]],[11,"clone","","",67,[[["self"]],["binaryheapstrategy"]]],[11,"clone","","",68,[[["self"]],["binaryheapvaluetree"]]],[11,"clone","","",69,[[["self"]],["hashsetstrategy"]]],[11,"clone","","",70,[[["self"]],["hashsetvaluetree"]]],[11,"clone","","",71,[[["self"]],["btreesetstrategy"]]],[11,"clone","","",72,[[["self"]],["btreesetvaluetree"]]],[11,"clone","","",73,[[["self"]],["hashmapstrategy"]]],[11,"clone","","",74,[[["self"]],["hashmapvaluetree"]]],[11,"clone","","",75,[[["self"]],["btreemapstrategy"]]],[11,"clone","","",76,[[["self"]],["btreemapvaluetree"]]],[11,"clone","","",77,[[["self"]],["vecvaluetree"]]],[11,"clone","proptest::num::i8","",78,[[["self"]],["any"]]],[11,"clone","","",9,[[["self"]],["binarysearch"]]],[11,"clone","proptest::num::i16","",79,[[["self"]],["any"]]],[11,"clone","","",10,[[["self"]],["binarysearch"]]],[11,"clone","proptest::num::i32","",80,[[["self"]],["any"]]],[11,"clone","","",11,[[["self"]],["binarysearch"]]],[11,"clone","proptest::num::i64","",81,[[["self"]],["any"]]],[11,"clone","","",12,[[["self"]],["binarysearch"]]],[11,"clone","proptest::num::i128","",82,[[["self"]],["any"]]],[11,"clone","","",13,[[["self"]],["binarysearch"]]],[11,"clone","proptest::num::isize","",83,[[["self"]],["any"]]],[11,"clone","","",14,[[["self"]],["binarysearch"]]],[11,"clone","proptest::num::u8","",84,[[["self"]],["any"]]],[11,"clone","","",15,[[["self"]],["binarysearch"]]],[11,"clone","proptest::num::u16","",85,[[["self"]],["any"]]],[11,"clone","","",16,[[["self"]],["binarysearch"]]],[11,"clone","proptest::num::u32","",86,[[["self"]],["any"]]],[11,"clone","","",17,[[["self"]],["binarysearch"]]],[11,"clone","proptest::num::u64","",87,[[["self"]],["any"]]],[11,"clone","","",18,[[["self"]],["binarysearch"]]],[11,"clone","proptest::num::u128","",88,[[["self"]],["any"]]],[11,"clone","","",19,[[["self"]],["binarysearch"]]],[11,"clone","proptest::num::usize","",89,[[["self"]],["any"]]],[11,"clone","","",20,[[["self"]],["binarysearch"]]],[11,"clone","proptest::num::f32","",90,[[["self"]],["any"]]],[11,"clone","","",21,[[["self"]],["binarysearch"]]],[11,"clone","proptest::num::f64","",91,[[["self"]],["any"]]],[11,"clone","","",22,[[["self"]],["binarysearch"]]],[11,"clone","proptest::strategy","",92,[[["self"]],["self"]]],[11,"clone","","",93,[[["self"]],["self"]]],[11,"clone","","",94,[[["self"]],["self"]]],[11,"clone","","",25,[[["self"]],["flatten"]]],[11,"clone","","",95,[[["self"]],["self"]]],[11,"clone","","",96,[[["self"]],["indflatten"]]],[11,"clone","","",97,[[["self"]],["self"]]],[11,"clone","","",26,[[["self"]],["fuse"]]],[11,"clone","","",23,[[["self"]],["just"]]],[11,"clone","","",27,[[["self"]],["self"]]],[11,"clone","","",98,[[["self"]],["self"]]],[11,"clone","","",99,[[["self"]],["self"]]],[11,"clone","","",100,[[["self"]],["self"]]],[11,"clone","","",101,[[["self"]],["self"]]],[11,"clone","","",102,[[["self"]],["self"]]],[11,"clone","","",103,[[["self"]],["self"]]],[11,"clone","","",104,[[["self"]],["shuffle"]]],[11,"clone","","",105,[[["self"]],["shufflevaluetree"]]],[11,"clone","","",106,[[["self"]],["noshrink"]]],[11,"clone","","",107,[[["self"]],["self"]]],[11,"clone","","",108,[[["self"]],["self"]]],[11,"clone","","",24,[[["self"]],["checkstrategysanityoptions"]]],[11,"clone","","",28,[[["self"]],["union"]]],[11,"clone","","",109,[[["self"]],["self"]]],[11,"clone","","",29,[[["self"]],["tupleunion"]]],[11,"clone","","",110,[[["self"]],["tupleunionvaluetree"]]],[11,"clone","proptest::strategy::statics","",32,[[["self"]],["filter"]]],[11,"clone","","",33,[[["self"]],["map"]]],[11,"clone","proptest::test_runner","",37,[[["self"]],["config"]]],[11,"clone","","",39,[[["self"]],["testcaseerror"]]],[11,"clone","","",40,[[["self"]],["testerror"]]],[11,"clone","","",41,[[["self"]],["filefailurepersistence"]]],[11,"clone","","",38,[[["self"]],["mapfailurepersistence"]]],[11,"clone","","",111,[[["self"]],["persistedseed"]]],[11,"clone","","",43,[[["self"]],["reason"]]],[11,"clone","","",42,[[["self"]],["rngalgorithm"]]],[11,"clone","","",45,[[["self"]],["testrng"]]],[11,"clone","","",46,[[["self"]],["testrunner"]]],[11,"clone","proptest::tuple","",49,[[["self"]],["tuplevaluetree"]]],[11,"clone","proptest::option","",50,[[["self"]],["probability"]]],[11,"clone","","",112,[[["self"]],["optionstrategy"]]],[11,"clone","","",113,[[["self"]],["self"]]],[11,"clone","proptest::result","",114,[[["self"]],["maybeok"]]],[11,"clone","","",116,[[["self"]],["maybeerr"]]],[11,"clone","","",115,[[["self"]],["self"]]],[11,"clone","","",117,[[["self"]],["self"]]],[11,"clone","proptest::sample","",118,[[["self"]],["subsequence"]]],[11,"clone","","",119,[[["self"]],["subsequencevaluetree"]]],[11,"clone","","",120,[[["self"]],["select"]]],[11,"clone","","",121,[[["self"]],["selectvaluetree"]]],[11,"clone","","",51,[[["self"]],["index"]]],[11,"clone","","",122,[[["self"]],["indexstrategy"]]],[11,"clone","","",123,[[["self"]],["indexvaluetree"]]],[11,"clone","","",52,[[["self"]],["selector"]]],[11,"clone","proptest::string","",126,[[["self"]],["stringparam"]]],[11,"default","proptest::collection","Constructs a `SizeRange` equivalent to `size_range(0..100)`.",8,[[],["self"]]],[11,"default","proptest::strategy","",24,[[],["self"]]],[11,"default","proptest::test_runner","",37,[[],["self"]]],[11,"default","","",41,[[],["self"]]],[11,"default","","",38,[[],["mapfailurepersistence"]]],[11,"default","","",42,[[],["self"]]],[11,"default","","",46,[[],["self"]]],[11,"default","proptest::option","The default probability is 0.5, or 50% chance.",50,[[],["self"]]],[11,"default","proptest::string","",126,[[],["self"]]],[11,"description","proptest::test_runner","",40,[[["self"]],["str"]]],[11,"cause","proptest::string","",53,[[["self"]],[["option",["error"]],["error"]]]],[11,"next_u32","proptest::test_runner","",45,[[["self"]],["u32"]]],[11,"next_u64","","",45,[[["self"]],["u64"]]],[11,"fill_bytes","","",45,[[["self"]]]],[11,"try_fill_bytes","","",45,[[["self"]],[["result",["error"]],["error"]]]],[11,"arbitrary","proptest::arbitrary","Generates a [`Strategy`] for producing arbitrary values of…",2,[[]]],[11,"prop_map","proptest::strategy","Returns a strategy which produces values transformed by…",35,[[["fn"]],[["map"],["fn"]]]],[11,"prop_map_into","","Returns a strategy which produces values of type `O` by…",35,[[],[["mapinto"],["debug"]]]],[11,"prop_perturb","","Returns a strategy which produces values transformed by…",35,[[["fn"]],[["perturb"],["fn"]]]],[11,"prop_flat_map","","Maps values produced by this strategy into new strategies…",35,[[["fn"]],[["flatten",["map"]],["map"]]]],[11,"prop_ind_flat_map","","Maps values produced by this strategy into new strategies…",35,[[["fn"]],[["map"],["indflatten",["map"]]]]],[11,"prop_ind_flat_map2","","Similar to `prop_ind_flat_map()`, but produces 2-tuples…",35,[[["fn"]],[["fn"],["indflattenmap"]]]],[11,"prop_filter","","Returns a strategy which only produces values accepted by…",35,[[["fn"],["into",["reason"]],["reason"]],[["filter"],["fn"]]]],[11,"prop_filter_map","","Returns a strategy which only produces transformed values…",35,[[["fn"]],[["filtermap"],["fn"]]]],[11,"prop_union","","Returns a strategy which picks uniformly from `self` and…",35,[[],["union"]]],[11,"prop_recursive","","Generate a recursive structure with `self` items as leaves.",35,[[["u32"],["fn"]],[["fn"],["recursive"]]]],[11,"prop_shuffle","","Shuffle the contents of the values produced by this…",35,[[],["shuffle"]]],[11,"boxed","","Erases the type of this `Strategy` so it can be passed…",35,[[],["boxedstrategy"]]],[11,"sboxed","","Erases the type of this `Strategy` so it can be passed…",35,[[],["sboxedstrategy"]]],[11,"no_shrink","","Wraps this strategy to prevent values from being subject…",35,[[],["noshrink"]]],[11,"load_persisted_failures2","proptest::test_runner","Supply seeds associated with the given `source_file` that…",47,[[["option",["str"]],["self"],["str"]],[["vec",["persistedseed"]],["persistedseed"]]]],[11,"load_persisted_failures","","Use `load_persisted_failures2` instead.",47,[[["option",["str"]],["self"],["str"]],["vec"]]],[11,"save_persisted_failure2","","Store a new failure-generating seed associated with the…",47,[[["option",["str"]],["str"],["debug"],["self"],["persistedseed"]]]],[11,"save_persisted_failure","","Use `save_persisted_failures2` instead.",47,[[["option",["str"]],["str"],["debug"],["self"]]]]],"p":[[8,"ArbitraryF1"],[8,"ArbitraryF2"],[8,"Arbitrary"],[3,"UniformArrayStrategy"],[8,"BitSetLike"],[3,"BitSetStrategy"],[3,"SampledBitSetStrategy"],[3,"CharStrategy"],[3,"SizeRange"],[3,"BinarySearch"],[3,"BinarySearch"],[3,"BinarySearch"],[3,"BinarySearch"],[3,"BinarySearch"],[3,"BinarySearch"],[3,"BinarySearch"],[3,"BinarySearch"],[3,"BinarySearch"],[3,"BinarySearch"],[3,"BinarySearch"],[3,"BinarySearch"],[3,"BinarySearch"],[3,"BinarySearch"],[3,"Just"],[3,"CheckStrategySanityOptions"],[3,"Flatten"],[3,"Fuse"],[3,"LazyJust"],[3,"Union"],[3,"TupleUnion"],[8,"FilterFn"],[8,"MapFn"],[3,"Filter"],[3,"Map"],[8,"Shuffleable"],[8,"Strategy"],[8,"ValueTree"],[3,"Config"],[3,"MapFailurePersistence"],[4,"TestCaseError"],[4,"TestError"],[4,"FileFailurePersistence"],[4,"RngAlgorithm"],[3,"Reason"],[3,"ResultCacheKey"],[3,"TestRng"],[3,"TestRunner"],[8,"FailurePersistence"],[8,"ResultCache"],[3,"TupleValueTree"],[3,"Probability"],[3,"Index"],[3,"Selector"],[4,"Error"],[8,"Rng"],[8,"RngCore"],[3,"ArrayValueTree"],[3,"BitSetValueTree"],[3,"Any"],[3,"Weighted"],[3,"BoolValueTree"],[3,"CharValueTree"],[3,"VecStrategy"],[3,"VecDequeStrategy"],[3,"VecDequeValueTree"],[3,"LinkedListStrategy"],[3,"LinkedListValueTree"],[3,"BinaryHeapStrategy"],[3,"BinaryHeapValueTree"],[3,"HashSetStrategy"],[3,"HashSetValueTree"],[3,"BTreeSetStrategy"],[3,"BTreeSetValueTree"],[3,"HashMapStrategy"],[3,"HashMapValueTree"],[3,"BTreeMapStrategy"],[3,"BTreeMapValueTree"],[3,"VecValueTree"],[3,"Any"],[3,"Any"],[3,"Any"],[3,"Any"],[3,"Any"],[3,"Any"],[3,"Any"],[3,"Any"],[3,"Any"],[3,"Any"],[3,"Any"],[3,"Any"],[3,"Any"],[3,"Any"],[3,"Filter"],[3,"FilterMap"],[3,"FilterMapValueTree"],[3,"FlattenValueTree"],[3,"IndFlatten"],[3,"IndFlattenMap"],[3,"LazyValueTree"],[3,"Map"],[3,"MapInto"],[3,"Perturb"],[3,"PerturbValueTree"],[3,"Recursive"],[3,"Shuffle"],[3,"ShuffleValueTree"],[3,"NoShrink"],[3,"BoxedStrategy"],[3,"SBoxedStrategy"],[3,"UnionValueTree"],[3,"TupleUnionValueTree"],[3,"PersistedSeed"],[3,"OptionStrategy"],[3,"OptionValueTree"],[3,"MaybeOk"],[3,"MaybeOkValueTree"],[3,"MaybeErr"],[3,"MaybeErrValueTree"],[3,"Subsequence"],[3,"SubsequenceValueTree"],[3,"Select"],[3,"SelectValueTree"],[3,"IndexStrategy"],[3,"IndexValueTree"],[3,"SelectorStrategy"],[3,"SelectorValueTree"],[3,"StringParam"],[3,"RegexGeneratorStrategy"],[3,"RegexGeneratorValueTree"]]};
searchIndex["proptest_derive"] = {"doc":"This is the API documentation for the `proptest-derive`…","i":[[24,"Arbitrary","proptest_derive","See module level documentation for more information.",null,null]],"p":[]};
searchIndex["quick_error"] = {"doc":"A macro which makes errors easy to write","i":[[3,"Context","quick_error","Generic context type",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[8,"ResultExt","","Result extension trait adding a `context` method",null,null],[10,"context","","The method is use to add context information to current…",1,[[["x"]],[["context"],["result",["context"]]]]],[14,"quick_error","","Main macro that does all the work",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Context"],[8,"ResultExt"]]};
searchIndex["quote"] = {"doc":"![github] ![crates-io] ![docs-rs]","i":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending…",null,null],[10,"append","","For use by `ToTokens` implementations.",0,[[["u"],["self"]]]],[10,"append_all","","For use by `ToTokens` implementations.",0,[[["self"],["i"]]]],[10,"append_separated","","For use by `ToTokens` implementations.",0,[[["u"],["self"],["i"]]]],[10,"append_terminated","","For use by `ToTokens` implementations.",0,[[["u"],["self"],["i"]]]],[8,"IdentFragment","","Specialized formatting trait used by `format_ident!`.",null,null],[10,"fmt","","Format this value as an identifier fragment.",1,[[["formatter"],["self"]],["result"]]],[11,"span","","Span associated with this `IdentFragment`.",1,[[["self"]],[["option",["span"]],["span"]]]],[8,"ToTokens","","Types that can be interpolated inside a `quote!` invocation.",null,null],[10,"to_tokens","","Write `self` to the given `TokenStream`.",2,[[["tokenstream"],["self"]]]],[11,"to_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[["self"]],["tokenstream"]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream"]]],[14,"format_ident","","Formatting macro for constructing `Ident`s.",null,null],[14,"quote","","The whole point.",null,null],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens…",null,null],[11,"span","","Span associated with this `IdentFragment`.",1,[[["self"]],[["option",["span"]],["span"]]]],[11,"to_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[["self"]],["tokenstream"]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream"]]]],"p":[[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","i":[[8,"CryptoRng","rand","A marker trait used to indicate that an [`RngCore`] or…",null,null],[3,"Error","","Error type of random number generators",null,null],[8,"RngCore","","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",0,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",0,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",0,[[["self"]]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",0,[[["self"]],[["result",["error"]],["error"]]]],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",1,null],[10,"from_seed","","Create a new PRNG using the given seed.",1,[[],["self"]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",1,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",1,[[["r"]],[["error"],["result",["error"]]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via [`getrandom`].",1,[[],["self"]]],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number…",null,[[],["threadrng"]]],[5,"random","","Generates a random value using the thread-local random…",null,[[],["t"]]],[0,"distributions","","Generating random samples from probability distributions",null,null],[3,"Bernoulli","rand::distributions","The Bernoulli distribution.",null,null],[3,"Open01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"Alphanumeric","","Sample a `char`, uniformly distributed over ASCII letters…",null,null],[3,"Uniform","","Sample values uniformly between two bounds.",null,null],[3,"Binomial","","The binomial distribution `Binomial(n, p)`.",null,null],[3,"Cauchy","","The Cauchy distribution `Cauchy(median, scale)`.",null,null],[3,"Dirichlet","","The dirichelet distribution `Dirichlet(alpha)`.",null,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[3,"Exp1","","Samples floating-point numbers according to the…",null,null],[3,"Beta","","The Beta distribution with shape parameters `alpha` and…",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the…",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"Gamma","","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the…",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"StandardNormal","","Samples floating-point numbers according to the normal…",null,null],[3,"Pareto","","Samples floating-point numbers according to the Pareto…",null,null],[3,"Poisson","","The Poisson distribution `Poisson(lambda)`.",null,null],[3,"Triangular","","The triangular distribution.",null,null],[3,"UnitCircle","","Samples uniformly from the edge of the unit circle in two…",null,null],[3,"UnitSphereSurface","","Samples uniformly from the surface of the unit sphere in…",null,null],[3,"Weibull","","Samples floating-point numbers according to the Weibull…",null,null],[3,"DistIter","","An iterator that generates random values of `T` with…",null,null],[3,"Standard","","A generic random value distribution, implemented for many…",null,null],[4,"BernoulliError","","Error type returned from `Bernoulli::new`.",null,null],[13,"InvalidProbability","","`p < 0` or `p > 1`.",2,null],[11,"new","","Construct a new `Bernoulli` with the given probability of…",3,[[["f64"]],[["bernoullierror"],["bernoulli"],["result",["bernoulli","bernoullierror"]]]]],[11,"from_ratio","","Construct a new `Bernoulli` with the probability of…",3,[[["u32"]],[["bernoullierror"],["bernoulli"],["result",["bernoulli","bernoullierror"]]]]],[11,"new","","Construct a new `Binomial` with the given shape parameters…",4,[[["f64"],["u64"]],["binomial"]]],[11,"new","","Construct a new `Cauchy` with the given shape parameters…",5,[[["f64"]],["cauchy"]]],[11,"new","","Construct a new `Dirichlet` with the given alpha parameter…",6,[[["into",["vec"]],["vec",["f64"]]],["dirichlet"]]],[11,"new_with_param","","Construct a new `Dirichlet` with the given shape parameter…",6,[[["f64"],["usize"]],["dirichlet"]]],[11,"new","","Construct a new `Exp` with the given shape parameter…",7,[[["f64"]],["exp"]]],[11,"new","","Construct an object representing the `Gamma(shape, scale)`…",8,[[["f64"]],["gamma"]]],[11,"new","","Create a new chi-squared distribution with…",9,[[["f64"]],["chisquared"]]],[11,"new","","Create a new `FisherF` distribution, with the given…",10,[[["f64"]],["fisherf"]]],[11,"new","","Create a new Student t distribution with `n` degrees of…",11,[[["f64"]],["studentt"]]],[11,"new","","Construct an object representing the `Beta(alpha, beta)`…",12,[[["f64"]],["beta"]]],[11,"new","","Construct a new `Normal` distribution with the given mean…",13,[[["f64"]],["normal"]]],[11,"new","","Construct a new `LogNormal` distribution with the given…",14,[[["f64"]],["lognormal"]]],[11,"new","","Construct a new Pareto distribution with given `scale` and…",15,[[["f64"]],["pareto"]]],[11,"new","","Construct a new `Poisson` with the given shape parameter…",16,[[["f64"]],["poisson"]]],[11,"new","","Construct a new `Triangular` with minimum `min`, maximum…",17,[[["f64"]],["triangular"]]],[0,"uniform","","A distribution uniformly sampling numbers within a given…",null,null],[3,"Uniform","rand::distributions::uniform","Sample values uniformly between two bounds.",null,null],[3,"UniformInt","","The back-end implementing [`UniformSampler`] for integer…",null,null],[3,"UniformFloat","","The back-end implementing [`UniformSampler`] for…",null,null],[3,"UniformDuration","","The back-end implementing [`UniformSampler`] for `Duration`.",null,null],[8,"SampleUniform","","Helper trait for creating objects using the correct…",null,null],[16,"Sampler","","The `UniformSampler` implementation supporting type `X`.",18,null],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",null,null],[16,"X","","The type sampled by this implementation.",19,null],[10,"new","","Construct self, with inclusive lower bound and exclusive…",19,[[["b2"],["b1"]],["self"]]],[10,"new_inclusive","","Construct self, with inclusive bounds `[low, high]`.",19,[[["b2"],["b1"]],["self"]]],[10,"sample","","Sample a value.",19,[[["self"],["r"]]]],[11,"sample_single","","Sample a single value uniformly from a range with…",19,[[["b2"],["b1"],["r"]]]],[8,"SampleBorrow","","Helper trait similar to [`Borrow`] but implemented only…",null,null],[10,"borrow","","Immutably borrows from an owned value. See…",20,[[["self"]],["borrowed"]]],[11,"new","","Create a new `Uniform` instance which samples uniformly…",21,[[["b2"],["b1"]],["uniform"]]],[11,"new_inclusive","","Create a new `Uniform` instance which samples uniformly…",21,[[["b2"],["b1"]],["uniform"]]],[11,"new","rand::distributions","Construct a new `UnitCircle` distribution.",22,[[],["unitcircle"]]],[11,"new","","Construct a new `UnitSphereSurface` distribution.",23,[[],["unitspheresurface"]]],[11,"new","","Construct a new `Weibull` distribution with given `scale`…",24,[[["f64"]],["weibull"]]],[0,"weighted","","Weighted index sampling",null,null],[3,"WeightedIndex","rand::distributions::weighted","A distribution using weighted sampling to pick a…",null,null],[4,"WeightedError","","Error type returned from `WeightedIndex::new`.",null,null],[13,"NoItem","","The provided weight collection contains no items.",25,null],[13,"InvalidWeight","","A weight is either less than zero, greater than the…",25,null],[13,"AllWeightsZero","","All items in the provided weight collection are zero.",25,null],[13,"TooMany","","Too many weights are provided (length greater than…",25,null],[0,"alias_method","","This module contains an implementation of alias method for…",null,null],[3,"WeightedIndex","rand::distributions::weighted::alias_method","A distribution using weighted sampling to pick a…",null,null],[8,"Weight","","Trait that must be implemented for weights, that are used…",null,null],[18,"MAX","","Maximum number representable by `Self`.",26,null],[18,"ZERO","","Element of `Self` equivalent to 0.",26,null],[10,"try_from_u32_lossy","","Produce an instance of `Self` from a `u32` value, or…",26,[[["u32"]],["option"]]],[11,"sum","","Sums all values in slice `values`.",26,[[],["self"]]],[11,"new","","Creates a new [`WeightedIndex`].",27,[[["vec"]],[["result",["weightederror"]],["weightederror"]]]],[11,"new","rand::distributions::weighted","Creates a new a `WeightedIndex` [`Distribution`] using the…",28,[[["i"]],[["weightederror"],["weightedindex"],["result",["weightedindex","weightederror"]]]]],[11,"update_weights","","Update a subset of weights, without changing the number of…",28,[[["self"]],[["result",["weightederror"]],["weightederror"]]]],[8,"Distribution","rand::distributions","Types (distributions) that can be used to create a random…",null,null],[10,"sample","","Generate a random value of `T`, using `rng` as the source…",29,[[["self"],["r"]],["t"]]],[11,"sample_iter","","Create an iterator that generates random values of `T`,…",29,[[["r"]],["distiter"]]],[0,"prelude","rand","Convenience re-export of common members",null,null],[0,"rngs","","Random number generators and adapters",null,null],[3,"OsRng","rand::rngs","A random number generator that retrieves randomness from…",null,null],[3,"EntropyRng","","An interface returning random data from external…",null,null],[3,"StdRng","","The standard RNG. The PRNG algorithm in `StdRng` is chosen…",null,null],[3,"ThreadRng","","The type returned by [`thread_rng`], essentially just a…",null,null],[0,"adapter","","Wrappers / adapters forming RNGs",null,null],[3,"ReadError","rand::rngs::adapter","`ReadRng` error type",null,null],[3,"ReadRng","","An RNG that reads random bytes straight from any type…",null,null],[3,"ReseedingRng","","A wrapper around any PRNG that implements…",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",30,[[["r"]],["readrng"]]],[11,"new","","Create a new `ReseedingRng` from an existing PRNG,…",31,[[["rsdr"],["u64"],["r"]],["self"]]],[11,"reseed","","Reseed the internal PRNG.",31,[[["self"]],[["result",["error"]],["error"]]]],[11,"new","rand::rngs","Create a new `EntropyRng`.",32,[[],["self"]]],[0,"mock","","Mock random number generator",null,null],[3,"StepRng","rand::rngs::mock","A simple implementation of `RngCore` for testing purposes.",null,null],[11,"new","","Create a `StepRng`, yielding an arithmetic sequence…",33,[[["u64"]],["self"]]],[0,"seq","rand","Sequence-related functionality",null,null],[3,"SliceChooseIter","rand::seq","An iterator over multiple slice elements.",null,null],[0,"index","","Low-level API for sampling indices",null,null],[4,"IndexVec","rand::seq::index","A vector of indices.",null,null],[4,"IndexVecIter","","Return type of `IndexVec::iter`.",null,null],[4,"IndexVecIntoIter","","Return type of `IndexVec::into_iter`.",null,null],[5,"sample","","Randomly sample exactly `amount` distinct indices from…",null,[[["usize"],["r"]],["indexvec"]]],[11,"len","","Returns the number of indices",34,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the length is 0.",34,[[["self"]],["bool"]]],[11,"index","","Return the value at the given `index`.",34,[[["self"],["usize"]],["usize"]]],[11,"into_vec","","Return result as a `Vec<usize>`. Conversion may or may not…",34,[[],[["vec",["usize"]],["usize"]]]],[11,"iter","","Iterate over the indices as a sequence of `usize` values",34,[[["self"]],["indexveciter"]]],[11,"into_iter","","Convert into an iterator over the indices as a sequence of…",34,[[],["indexvecintoiter"]]],[8,"SliceRandom","rand::seq","Extension trait on slices, providing random mutation and…",null,null],[16,"Item","","The element type.",35,null],[10,"choose","","Returns a reference to one random element of the slice, or…",35,[[["self"],["r"]],["option"]]],[10,"choose_mut","","Returns a mutable reference to one random element of the…",35,[[["self"],["r"]],["option"]]],[10,"choose_multiple","","Chooses `amount` elements from the slice at random,…",35,[[["usize"],["self"],["r"]],["slicechooseiter"]]],[10,"choose_weighted","","Similar to [`choose`], but where the likelihood of each…",35,[[["f"],["self"],["r"]],[["result",["weightederror"]],["weightederror"]]]],[10,"choose_weighted_mut","","Similar to [`choose_mut`], but where the likelihood of…",35,[[["self"],["f"],["r"]],[["result",["weightederror"]],["weightederror"]]]],[10,"shuffle","","Shuffle a mutable slice in place.",35,[[["self"],["r"]]]],[10,"partial_shuffle","","Shuffle a slice in place, but exit early.",35,[[["self"],["usize"],["r"]]]],[8,"IteratorRandom","","Extension trait on iterators, providing random sampling…",null,null],[11,"choose","","Choose one element at random from the iterator.",36,[[["r"]],["option"]]],[11,"choose_multiple_fill","","Collects values at random from the iterator into a…",36,[[["r"]],["usize"]]],[11,"choose_multiple","","Collects `amount` values at random from the iterator into…",36,[[["usize"],["r"]],["vec"]]],[8,"Rng","rand","An automatically-implemented extension trait on…",null,null],[11,"gen","","Return a random value supporting the [`Standard`]…",37,[[["self"]],["t"]]],[11,"gen_range","","Generate a random value in the range [`low`, `high`), i.e.…",37,[[["b2"],["self"],["b1"]],["sampleuniform"]]],[11,"sample","","Sample a new value, using the given distribution.",37,[[["self"],["distribution"]],["t"]]],[11,"sample_iter","","Create an iterator that generates values using the given…",37,[[["d"]],["distiter"]]],[11,"fill","","Fill `dest` entirely with random bytes (uniform value…",37,[[["self"],["t"]]]],[11,"try_fill","","Fill `dest` entirely with random bytes (uniform value…",37,[[["self"],["t"]],[["result",["error"]],["error"]]]],[11,"gen_bool","","Return a bool with a probability `p` of being true.",37,[[["self"],["f64"]],["bool"]]],[11,"gen_ratio","","Return a bool with a probability of…",37,[[["self"],["u32"]],["bool"]]],[8,"AsByteSliceMut","","Trait for casting types to byte slices",null,null],[10,"as_byte_slice_mut","","Return a mutable reference to self as a byte slice",38,[[["self"]]]],[10,"to_le","","Call `to_le` on each element (i.e. byte-swap on Big Endian…",38,[[["self"]]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"from","rand::distributions","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"vzip","","",41,[[],["v"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"vzip","","",42,[[],["v"]]],[11,"from","rand::distributions::uniform","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","rand::distributions","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"vzip","","",43,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"vzip","","",44,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"into_iter","","",45,[[],["i"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"vzip","","",45,[[],["v"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"vzip","","",46,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","rand::distributions::uniform","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"vzip","","",47,[[],["v"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"vzip","","",48,[[],["v"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"vzip","","",49,[[],["v"]]],[11,"from","rand::distributions::weighted","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"to_string","","",25,[[["self"]],["string"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"vzip","","",25,[[],["v"]]],[11,"from","rand::distributions::weighted::alias_method","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"vzip","","",27,[[],["v"]]],[11,"from","rand::rngs","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"vzip","","",50,[[],["v"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"vzip","","",32,[[],["v"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"vzip","","",51,[[],["v"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"vzip","","",52,[[],["v"]]],[11,"from","rand::rngs::adapter","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_string","","",53,[[["self"]],["string"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"vzip","","",53,[[],["v"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"vzip","","",30,[[],["v"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"vzip","","",31,[[],["v"]]],[11,"from","rand::rngs::mock","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"vzip","","",33,[[],["v"]]],[11,"from","rand::seq","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"into_iter","","",54,[[],["i"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"vzip","","",54,[[],["v"]]],[11,"from","rand::seq::index","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"vzip","","",34,[[],["v"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"into_iter","","",55,[[],["i"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"vzip","","",55,[[],["v"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"into_iter","","",56,[[],["i"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"vzip","","",56,[[],["v"]]],[11,"clone","rand::rngs","",50,[[["self"]],["osrng"]]],[11,"next_u32","","",50,[[["self"]],["u32"]]],[11,"next_u64","","",50,[[["self"]],["u64"]]],[11,"fill_bytes","","",50,[[["self"]]]],[11,"try_fill_bytes","","",50,[[["self"]],[["result",["error"]],["error"]]]],[11,"read","rand","",0,[[["self"]],[["result",["usize","error"]],["error"],["usize"]]]],[11,"fmt","rand::rngs","",50,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","rand","",39,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"from","","",39,[[["error"]],["error"]]],[11,"from","","",39,[[["nonzerou32"]],["error"]]],[11,"fmt","","",39,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"source","","",39,[[["self"]],[["error"],["option",["error"]]]]],[11,"default","rand::rngs","",50,[[],["osrng"]]],[11,"new","rand::distributions::uniform","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",47,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",47,[[["b2"],["b1"]],["self"]]],[11,"sample","","",47,[[["self"],["r"]]]],[11,"sample_single","","",47,[[["b2"],["b1"],["r"]]]],[11,"new","","",48,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",48,[[["b2"],["b1"]],["self"]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample_single","","",48,[[["b2"],["b1"],["r"]]]],[11,"new","","",48,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",48,[[["b2"],["b1"]],["self"]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample_single","","",48,[[["b2"],["b1"],["r"]]]],[11,"new","","",49,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",49,[[["b2"],["b1"]],["self"]]],[11,"sample","","",49,[[["self"],["r"]],["duration"]]],[11,"sample","rand::distributions","",3,[[["self"],["r"]],["bool"]]],[11,"sample","","",4,[[["self"],["r"]],["u64"]]],[11,"sample","","",5,[[["self"],["r"]],["f64"]]],[11,"sample","","",6,[[["self"],["r"]],[["f64"],["vec",["f64"]]]]],[11,"sample","","",43,[[["self"],["r"]],["f64"]]],[11,"sample","","",7,[[["self"],["r"]],["f64"]]],[11,"sample","","",8,[[["self"],["r"]],["f64"]]],[11,"sample","","",9,[[["self"],["r"]],["f64"]]],[11,"sample","","",10,[[["self"],["r"]],["f64"]]],[11,"sample","","",11,[[["self"],["r"]],["f64"]]],[11,"sample","","",12,[[["self"],["r"]],["f64"]]],[11,"sample","","",44,[[["self"],["r"]],["f64"]]],[11,"sample","","",13,[[["self"],["r"]],["f64"]]],[11,"sample","","",14,[[["self"],["r"]],["f64"]]],[11,"sample","","",15,[[["self"],["r"]],["f64"]]],[11,"sample","","",16,[[["self"],["r"]],["u64"]]],[11,"sample","","",17,[[["self"],["r"]],["f64"]]],[11,"sample","rand::distributions::uniform","",21,[[["self"],["r"]],["x"]]],[11,"sample","rand::distributions","",22,[[["self"],["r"]]]],[11,"sample","","",23,[[["self"],["r"]]]],[11,"sample","","",24,[[["self"],["r"]],["f64"]]],[11,"sample","rand::distributions::weighted::alias_method","",27,[[["self"],["r"]],["usize"]]],[11,"sample","rand::distributions::weighted","",28,[[["self"],["r"]],["usize"]]],[11,"sample","rand::distributions","",46,[[["self"],["r"]],["f32"]]],[11,"sample","","",41,[[["self"],["r"]],["f32"]]],[11,"sample","","",40,[[["self"],["r"]],["f32"]]],[11,"sample","","",46,[[["self"],["r"]],["f64"]]],[11,"sample","","",41,[[["self"],["r"]],["f64"]]],[11,"sample","","",40,[[["self"],["r"]],["f64"]]],[11,"sample","","",46,[[["self"],["r"]],["u8"]]],[11,"sample","","",46,[[["self"],["r"]],["u16"]]],[11,"sample","","",46,[[["self"],["r"]],["u32"]]],[11,"sample","","",46,[[["self"],["r"]],["u64"]]],[11,"sample","","",46,[[["self"],["r"]],["u128"]]],[11,"sample","","",46,[[["self"],["r"]],["usize"]]],[11,"sample","","",46,[[["self"],["r"]],["i8"]]],[11,"sample","","",46,[[["self"],["r"]],["i16"]]],[11,"sample","","",46,[[["self"],["r"]],["i32"]]],[11,"sample","","",46,[[["self"],["r"]],["i64"]]],[11,"sample","","",46,[[["self"],["r"]],["i128"]]],[11,"sample","","",46,[[["self"],["r"]],["isize"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou8"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou16"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou32"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou64"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerou128"]]],[11,"sample","","",46,[[["self"],["r"]],["nonzerousize"]]],[11,"sample","","",46,[[["self"],["r"]],["char"]]],[11,"sample","","",42,[[["self"],["r"]],["char"]]],[11,"sample","","",46,[[["self"],["r"]],["bool"]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]]]],[11,"sample","","",46,[[["self"],["r"]],["option"]]],[11,"sample","","",46,[[["self"],["r"]],["wrapping"]]],[11,"from","rand::distributions::uniform","",21,[[["range"]],["uniform"]]],[11,"from","","",21,[[["rangeinclusive"]],["uniform"]]],[11,"from","rand::seq::index","",34,[[["u32"],["vec",["u32"]]],["self"]]],[11,"from","","",34,[[["vec",["usize"]],["usize"]],["self"]]],[11,"len","rand::seq","",54,[[["self"]],["usize"]]],[11,"next","rand::distributions","",45,[[["self"]],["option"]]],[11,"size_hint","","",45,[[["self"]]]],[11,"next","rand::seq::index","",55,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"size_hint","","",55,[[["self"]]]],[11,"next","","",56,[[["self"]],["option"]]],[11,"size_hint","","",56,[[["self"]]]],[11,"next","rand::seq","",54,[[["self"]],["option"]]],[11,"size_hint","","",54,[[["self"]]]],[11,"clone","rand::distributions","",3,[[["self"]],["bernoulli"]]],[11,"clone","","",2,[[["self"]],["bernoullierror"]]],[11,"clone","","",4,[[["self"]],["binomial"]]],[11,"clone","","",5,[[["self"]],["cauchy"]]],[11,"clone","","",6,[[["self"]],["dirichlet"]]],[11,"clone","","",43,[[["self"]],["exp1"]]],[11,"clone","","",7,[[["self"]],["exp"]]],[11,"clone","","",8,[[["self"]],["gamma"]]],[11,"clone","","",9,[[["self"]],["chisquared"]]],[11,"clone","","",10,[[["self"]],["fisherf"]]],[11,"clone","","",11,[[["self"]],["studentt"]]],[11,"clone","","",12,[[["self"]],["beta"]]],[11,"clone","","",44,[[["self"]],["standardnormal"]]],[11,"clone","","",13,[[["self"]],["normal"]]],[11,"clone","","",14,[[["self"]],["lognormal"]]],[11,"clone","","",15,[[["self"]],["pareto"]]],[11,"clone","","",16,[[["self"]],["poisson"]]],[11,"clone","","",17,[[["self"]],["triangular"]]],[11,"clone","rand::distributions::uniform","",21,[[["self"]],["uniform"]]],[11,"clone","","",47,[[["self"]],["uniformint"]]],[11,"clone","","",48,[[["self"]],["uniformfloat"]]],[11,"clone","","",49,[[["self"]],["uniformduration"]]],[11,"clone","rand::distributions","",22,[[["self"]],["unitcircle"]]],[11,"clone","","",23,[[["self"]],["unitspheresurface"]]],[11,"clone","","",24,[[["self"]],["weibull"]]],[11,"clone","rand::distributions::weighted::alias_method","",27,[[["self"]],["self"]]],[11,"clone","rand::distributions::weighted","",28,[[["self"]],["weightedindex"]]],[11,"clone","","",25,[[["self"]],["weightederror"]]],[11,"clone","rand::distributions","",41,[[["self"]],["openclosed01"]]],[11,"clone","","",40,[[["self"]],["open01"]]],[11,"clone","","",46,[[["self"]],["standard"]]],[11,"clone","rand::rngs::adapter","",31,[[["self"]],["reseedingrng"]]],[11,"clone","rand::rngs::mock","",33,[[["self"]],["steprng"]]],[11,"clone","rand::rngs","",51,[[["self"]],["stdrng"]]],[11,"clone","","",52,[[["self"]],["threadrng"]]],[11,"clone","rand::seq::index","",34,[[["self"]],["indexvec"]]],[11,"clone","","",56,[[["self"]],["indexvecintoiter"]]],[11,"default","rand::rngs","",32,[[],["self"]]],[11,"default","","",52,[[],["threadrng"]]],[11,"eq","rand::distributions","",2,[[["bernoullierror"],["self"]],["bool"]]],[11,"eq","rand::distributions::weighted","",25,[[["self"],["weightederror"]],["bool"]]],[11,"eq","rand::seq::index","",34,[[["self"],["indexvec"]],["bool"]]],[11,"fmt","rand::distributions","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions::uniform","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions::weighted::alias_method","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions::weighted","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs::adapter","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs::mock","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::seq::index","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::seq","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions::weighted","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs::adapter","",53,[[["formatter"],["self"]],["result"]]],[11,"source","","",53,[[["self"]],[["option",["error"]],["error"]]]],[11,"next_u32","","",30,[[["self"]],["u32"]]],[11,"next_u64","","",30,[[["self"]],["u64"]]],[11,"fill_bytes","","",30,[[["self"]]]],[11,"try_fill_bytes","","",30,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","","",31,[[["self"]],["u32"]]],[11,"next_u64","","",31,[[["self"]],["u64"]]],[11,"fill_bytes","","",31,[[["self"]]]],[11,"try_fill_bytes","","",31,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","rand::rngs","",32,[[["self"]],["u32"]]],[11,"next_u64","","",32,[[["self"]],["u64"]]],[11,"fill_bytes","","",32,[[["self"]]]],[11,"try_fill_bytes","","",32,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","rand::rngs::mock","",33,[[["self"]],["u32"]]],[11,"next_u64","","",33,[[["self"]],["u64"]]],[11,"fill_bytes","","",33,[[["self"]]]],[11,"try_fill_bytes","","",33,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","rand::rngs","",51,[[["self"]],["u32"]]],[11,"next_u64","","",51,[[["self"]],["u64"]]],[11,"fill_bytes","","",51,[[["self"]]]],[11,"try_fill_bytes","","",51,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","","",52,[[["self"]],["u32"]]],[11,"next_u64","","",52,[[["self"]],["u64"]]],[11,"fill_bytes","","",52,[[["self"]]]],[11,"try_fill_bytes","","",52,[[["self"]],[["result",["error"]],["error"]]]],[11,"from_seed","","",51,[[],["self"]]],[11,"from_rng","","",51,[[["rngcore"]],[["error"],["result",["error"]]]]],[11,"new","rand","Construct from any type supporting `std::error::Error`",39,[[["e"]],["error"]]],[11,"inner","","Reference the inner error (`std` only)",39,[[["self"]],["error"]]],[11,"take_inner","","Unwrap the inner error (`std` only)",39,[[],[["box",["error"]],["error"]]]],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",39,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",39,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",39,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"code","","Retrieve the error code, if any.",39,[[["self"]],[["nonzerou32"],["option",["nonzerou32"]]]]]],"p":[[8,"RngCore"],[8,"SeedableRng"],[4,"BernoulliError"],[3,"Bernoulli"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Exp"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"Normal"],[3,"LogNormal"],[3,"Pareto"],[3,"Poisson"],[3,"Triangular"],[8,"SampleUniform"],[8,"UniformSampler"],[8,"SampleBorrow"],[3,"Uniform"],[3,"UnitCircle"],[3,"UnitSphereSurface"],[3,"Weibull"],[4,"WeightedError"],[8,"Weight"],[3,"WeightedIndex"],[3,"WeightedIndex"],[8,"Distribution"],[3,"ReadRng"],[3,"ReseedingRng"],[3,"EntropyRng"],[3,"StepRng"],[4,"IndexVec"],[8,"SliceRandom"],[8,"IteratorRandom"],[8,"Rng"],[8,"AsByteSliceMut"],[3,"Error"],[3,"Open01"],[3,"OpenClosed01"],[3,"Alphanumeric"],[3,"Exp1"],[3,"StandardNormal"],[3,"DistIter"],[3,"Standard"],[3,"UniformInt"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"OsRng"],[3,"StdRng"],[3,"ThreadRng"],[3,"ReadError"],[3,"SliceChooseIter"],[4,"IndexVecIter"],[4,"IndexVecIntoIter"]]};
searchIndex["rand_chacha"] = {"doc":"The ChaCha random number generator.","i":[[3,"ChaCha12Core","rand_chacha","ChaCha with 12 rounds",null,null],[3,"ChaCha12Rng","","A cryptographically secure random number generator that…",null,null],[3,"ChaCha20Core","","ChaCha with 20 rounds",null,null],[3,"ChaCha20Rng","","A cryptographically secure random number generator that…",null,null],[3,"ChaCha8Core","","ChaCha with 8 rounds",null,null],[3,"ChaCha8Rng","","A cryptographically secure random number generator that…",null,null],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",0,[[["self"]],["u128"]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",0,[[["self"],["u128"]]]],[11,"set_stream","","Set the stream number.",0,[[["self"],["u64"]]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",1,[[["self"]],["u128"]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",1,[[["self"],["u128"]]]],[11,"set_stream","","Set the stream number.",1,[[["self"],["u64"]]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",2,[[["self"]],["u128"]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",2,[[["self"],["u128"]]]],[11,"set_stream","","Set the stream number.",2,[[["self"],["u64"]]]],[6,"ChaChaRng","","ChaCha with 20 rounds",null,null],[6,"ChaChaCore","","ChaCha with 20 rounds, low-level interface",null,null],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",0,[[["chacha20core"]],["self"]]],[11,"from","","",1,[[["chacha12core"]],["self"]]],[11,"from","","",2,[[["chacha8core"]],["self"]]],[11,"clone","","",4,[[["self"]],["chacha20core"]]],[11,"clone","","",0,[[["self"]],["chacha20rng"]]],[11,"clone","","",3,[[["self"]],["chacha12core"]]],[11,"clone","","",1,[[["self"]],["chacha12rng"]]],[11,"clone","","",5,[[["self"]],["chacha8core"]]],[11,"clone","","",2,[[["self"]],["chacha8rng"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"generate","","",4,[[["self"]]]],[11,"generate","","",3,[[["self"]]]],[11,"generate","","",5,[[["self"]]]],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,[[["self"]]]],[11,"try_fill_bytes","","",0,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,[[["self"]]]],[11,"try_fill_bytes","","",1,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","","",2,[[["self"]],["u32"]]],[11,"next_u64","","",2,[[["self"]],["u64"]]],[11,"fill_bytes","","",2,[[["self"]]]],[11,"try_fill_bytes","","",2,[[["self"]],[["result",["error"]],["error"]]]],[11,"from_seed","","",4,[[],["self"]]],[11,"from_seed","","",0,[[],["self"]]],[11,"from_seed","","",3,[[],["self"]]],[11,"from_seed","","",1,[[],["self"]]],[11,"from_seed","","",5,[[],["self"]]],[11,"from_seed","","",2,[[],["self"]]]],"p":[[3,"ChaCha20Rng"],[3,"ChaCha12Rng"],[3,"ChaCha8Rng"],[3,"ChaCha12Core"],[3,"ChaCha20Core"],[3,"ChaCha8Core"]]};
searchIndex["rand_core"] = {"doc":"Random number generation traits","i":[[3,"Error","rand_core","Error type of random number generators",null,null],[3,"OsRng","","A random number generator that retrieves randomness from…",null,null],[11,"new","","Construct from any type supporting `std::error::Error`",0,[[["e"]],["self"]]],[11,"inner","","Reference the inner error (`std` only)",0,[[["self"]],["error"]]],[11,"take_inner","","Unwrap the inner error (`std` only)",0,[[],[["box",["error"]],["error"]]]],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",0,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",0,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",0,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"code","","Retrieve the error code, if any.",0,[[["self"]],[["option",["nonzerou32"]],["nonzerou32"]]]],[0,"block","","The `BlockRngCore` trait and implementation helpers",null,null],[3,"BlockRng","rand_core::block","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",1,null],[3,"BlockRng64","","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",2,null],[8,"BlockRngCore","","A trait for RNGs which do not generate random numbers…",null,null],[16,"Item","","Results element type, e.g. `u32`.",3,null],[16,"Results","","Results type. This is the 'block' an RNG implementing…",3,null],[10,"generate","","Generate a new block of results.",3,[[["self"]]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",1,[[["r"]],["blockrng"]]],[11,"index","","Get the index into the result buffer.",1,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a…",1,[[["self"]]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",1,[[["self"],["usize"]]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",2,[[["r"]],["blockrng64"]]],[11,"index","","Get the index into the result buffer.",2,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a…",2,[[["self"]]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",2,[[["self"],["usize"]]]],[0,"impls","rand_core","Helper functions for implementing `RngCore` functions.",null,null],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",null,[[["r"]],["u64"]]],[5,"fill_bytes_via_next","","Implement `fill_bytes` via `next_u64` and `next_u32`,…",null,[[["r"]]]],[5,"fill_via_u32_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"fill_via_u64_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"next_u32_via_fill","","Implement `next_u32` via `fill_bytes`, little-endian order.",null,[[["r"]],["u32"]]],[5,"next_u64_via_fill","","Implement `next_u64` via `fill_bytes`, little-endian order.",null,[[["r"]],["u64"]]],[0,"le","rand_core","Little-Endian utilities",null,null],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",null,[[]]],[5,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.…",null,[[]]],[8,"RngCore","rand_core","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",4,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",4,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",4,[[["self"]]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",4,[[["self"]],[["result",["error"]],["error"]]]],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",null,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",5,null],[10,"from_seed","","Create a new PRNG using the given seed.",5,[[],["self"]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",5,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",5,[[["rngcore"]],[["result",["error"]],["error"]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via [`getrandom`].",5,[[],["self"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","rand_core::block","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"next_u32","","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,[[["self"]]]],[11,"try_fill_bytes","","",1,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","","",2,[[["self"]],["u32"]]],[11,"next_u64","","",2,[[["self"]],["u64"]]],[11,"fill_bytes","","",2,[[["self"]]]],[11,"try_fill_bytes","","",2,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","rand_core","",6,[[["self"]],["u32"]]],[11,"next_u64","","",6,[[["self"]],["u64"]]],[11,"fill_bytes","","",6,[[["self"]]]],[11,"try_fill_bytes","","",6,[[["self"]],[["result",["error"]],["error"]]]],[11,"from_seed","rand_core::block","",1,[[],["self"]]],[11,"seed_from_u64","","",1,[[["u64"]],["self"]]],[11,"from_rng","","",1,[[["rngcore"]],[["result",["error"]],["error"]]]],[11,"from_seed","","",2,[[],["self"]]],[11,"seed_from_u64","","",2,[[["u64"]],["self"]]],[11,"from_rng","","",2,[[["rngcore"]],[["result",["error"]],["error"]]]],[11,"from","rand_core","",0,[[["nonzerou32"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"clone","rand_core::block","",1,[[["self"]],["blockrng"]]],[11,"clone","","",2,[[["self"]],["blockrng64"]]],[11,"clone","rand_core","",6,[[["self"]],["osrng"]]],[11,"default","","",6,[[],["osrng"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand_core::block","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand_core","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"source","","",0,[[["self"]],[["option",["error"]],["error"]]]],[11,"read","","",4,[[["self"]],[["error"],["usize"],["result",["usize","error"]]]]]],"p":[[3,"Error"],[3,"BlockRng"],[3,"BlockRng64"],[8,"BlockRngCore"],[8,"RngCore"],[8,"SeedableRng"],[3,"OsRng"]]};
searchIndex["rand_xorshift"] = {"doc":"The xorshift random number generator.","i":[[3,"XorShiftRng","rand_xorshift","An Xorshift random number generator.",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["xorshiftrng"]]],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,[[["self"]]]],[11,"try_fill_bytes","","",0,[[["self"]],[["error"],["result",["error"]]]]],[11,"from_seed","","",0,[[],["self"]]],[11,"from_rng","","",0,[[["rngcore"]],[["result",["error"]],["error"]]]]],"p":[[3,"XorShiftRng"]]};
searchIndex["rand_xoshiro"] = {"doc":"This crate implements the [xoshiro] family of pseudorandom…","i":[[3,"SplitMix64","rand_xoshiro","A splitmix64 random number generator.",null,null],[3,"Xoshiro128StarStar","","A xoshiro128** random number generator.",null,null],[3,"Xoshiro128PlusPlus","","A xoshiro128++ random number generator.",null,null],[3,"Xoshiro128Plus","","A xoshiro128+ random number generator.",null,null],[3,"Xoshiro256StarStar","","A xoshiro256** random number generator.",null,null],[3,"Xoshiro256PlusPlus","","A xoshiro256** random number generator.",null,null],[3,"Xoshiro256Plus","","A xoshiro256+ random number generator.",null,null],[3,"Seed512","","512-bit seed for a generator.",null,null],[12,"0","","",0,null],[3,"Xoshiro512StarStar","","A xoshiro512** random number generator.",null,null],[3,"Xoshiro512PlusPlus","","A xoshiro512++ random number generator.",null,null],[3,"Xoshiro512Plus","","A xoshiro512+ random number generator.",null,null],[3,"Xoroshiro128Plus","","A xoroshiro128+ random number generator.",null,null],[3,"Xoroshiro128StarStar","","A xoroshiro128** random number generator.",null,null],[3,"Xoroshiro128PlusPlus","","A xoroshiro128++ random number generator.",null,null],[3,"Xoroshiro64StarStar","","A xoroshiro64** random number generator.",null,null],[3,"Xoroshiro64Star","","A xoroshiro64* random number generator.",null,null],[11,"iter","","Return an iterator over the seed.",0,[[["self"]],[["u8"],["iter",["u8"]]]]],[11,"jump","","Jump forward, equivalently to 2^64 calls to `next_u32()`.",1,[[["self"]]]],[11,"long_jump","","Jump forward, equivalently to 2^96 calls to `next_u32()`.",1,[[["self"]]]],[11,"jump","","Jump forward, equivalently to 2^64 calls to `next_u32()`.",2,[[["self"]]]],[11,"long_jump","","Jump forward, equivalently to 2^96 calls to `next_u32()`.",2,[[["self"]]]],[11,"jump","","Jump forward, equivalently to 2^64 calls to `next_u32()`.",3,[[["self"]]]],[11,"jump","","Jump forward, equivalently to 2^128 calls to `next_u64()`.",4,[[["self"]]]],[11,"long_jump","","Jump forward, equivalently to 2^192 calls to `next_u64()`.",4,[[["self"]]]],[11,"jump","","Jump forward, equivalently to 2^128 calls to `next_u64()`.",5,[[["self"]]]],[11,"long_jump","","Jump forward, equivalently to 2^192 calls to `next_u64()`.",5,[[["self"]]]],[11,"jump","","Jump forward, equivalently to 2^128 calls to `next_u64()`.",6,[[["self"]]]],[11,"long_jump","","Jump forward, equivalently to 2^192 calls to `next_u64()`.",6,[[["self"]]]],[11,"jump","","Jump forward, equivalently to 2^256 calls to `next_u64()`.",7,[[["self"]]]],[11,"long_jump","","Jump forward, equivalently to 2^384 calls to `next_u64()`.",7,[[["self"]]]],[11,"jump","","Jump forward, equivalently to 2^256 calls to `next_u64()`.",8,[[["self"]]]],[11,"long_jump","","Jump forward, equivalently to 2^384 calls to `next_u64()`.",8,[[["self"]]]],[11,"jump","","Jump forward, equivalently to 2^256 calls to `next_u64()`.",9,[[["self"]]]],[11,"long_jump","","Jump forward, equivalently to 2^384 calls to `next_u64()`.",9,[[["self"]]]],[11,"jump","","Jump forward, equivalently to 2^64 calls to `next_u64()`.",10,[[["self"]]]],[11,"long_jump","","Jump forward, equivalently to 2^96 calls to `next_u64()`.",10,[[["self"]]]],[11,"jump","","Jump forward, equivalently to 2^64 calls to `next_u64()`.",11,[[["self"]]]],[11,"long_jump","","Jump forward, equivalently to 2^96 calls to `next_u64()`.",11,[[["self"]]]],[11,"jump","","Jump forward, equivalently to 2^64 calls to `next_u64()`.",12,[[["self"]]]],[11,"long_jump","","Jump forward, equivalently to 2^96 calls to `next_u64()`.",12,[[["self"]]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"as_mut","","",0,[[["self"]]]],[11,"clone","","",0,[[["self"]],["seed512"]]],[11,"clone","","",13,[[["self"]],["splitmix64"]]],[11,"clone","","",1,[[["self"]],["xoshiro128starstar"]]],[11,"clone","","",2,[[["self"]],["xoshiro128plusplus"]]],[11,"clone","","",3,[[["self"]],["xoshiro128plus"]]],[11,"clone","","",4,[[["self"]],["xoshiro256starstar"]]],[11,"clone","","",5,[[["self"]],["xoshiro256plusplus"]]],[11,"clone","","",6,[[["self"]],["xoshiro256plus"]]],[11,"clone","","",7,[[["self"]],["xoshiro512starstar"]]],[11,"clone","","",8,[[["self"]],["xoshiro512plusplus"]]],[11,"clone","","",9,[[["self"]],["xoshiro512plus"]]],[11,"clone","","",10,[[["self"]],["xoroshiro128plus"]]],[11,"clone","","",11,[[["self"]],["xoroshiro128plusplus"]]],[11,"clone","","",12,[[["self"]],["xoroshiro128starstar"]]],[11,"clone","","",14,[[["self"]],["xoroshiro64starstar"]]],[11,"clone","","",15,[[["self"]],["xoroshiro64star"]]],[11,"default","","",0,[[],["seed512"]]],[11,"next_u32","","",13,[[["self"]],["u32"]]],[11,"next_u64","","",13,[[["self"]],["u64"]]],[11,"fill_bytes","","",13,[[["self"]]]],[11,"try_fill_bytes","","",13,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,[[["self"]]]],[11,"try_fill_bytes","","",1,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",2,[[["self"]],["u32"]]],[11,"next_u64","","",2,[[["self"]],["u64"]]],[11,"fill_bytes","","",2,[[["self"]]]],[11,"try_fill_bytes","","",2,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",3,[[["self"]],["u32"]]],[11,"next_u64","","",3,[[["self"]],["u64"]]],[11,"fill_bytes","","",3,[[["self"]]]],[11,"try_fill_bytes","","",3,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",4,[[["self"]],["u32"]]],[11,"next_u64","","",4,[[["self"]],["u64"]]],[11,"fill_bytes","","",4,[[["self"]]]],[11,"try_fill_bytes","","",4,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",5,[[["self"]],["u32"]]],[11,"next_u64","","",5,[[["self"]],["u64"]]],[11,"fill_bytes","","",5,[[["self"]]]],[11,"try_fill_bytes","","",5,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",6,[[["self"]],["u32"]]],[11,"next_u64","","",6,[[["self"]],["u64"]]],[11,"fill_bytes","","",6,[[["self"]]]],[11,"try_fill_bytes","","",6,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",7,[[["self"]],["u32"]]],[11,"next_u64","","",7,[[["self"]],["u64"]]],[11,"fill_bytes","","",7,[[["self"]]]],[11,"try_fill_bytes","","",7,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",8,[[["self"]],["u32"]]],[11,"next_u64","","",8,[[["self"]],["u64"]]],[11,"fill_bytes","","",8,[[["self"]]]],[11,"try_fill_bytes","","",8,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",9,[[["self"]],["u32"]]],[11,"next_u64","","",9,[[["self"]],["u64"]]],[11,"fill_bytes","","",9,[[["self"]]]],[11,"try_fill_bytes","","",9,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",10,[[["self"]],["u32"]]],[11,"next_u64","","",10,[[["self"]],["u64"]]],[11,"fill_bytes","","",10,[[["self"]]]],[11,"try_fill_bytes","","",10,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","","",11,[[["self"]],["u32"]]],[11,"next_u64","","",11,[[["self"]],["u64"]]],[11,"fill_bytes","","",11,[[["self"]]]],[11,"try_fill_bytes","","",11,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","","",12,[[["self"]],["u32"]]],[11,"next_u64","","",12,[[["self"]],["u64"]]],[11,"fill_bytes","","",12,[[["self"]]]],[11,"try_fill_bytes","","",12,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","","",14,[[["self"]],["u32"]]],[11,"next_u64","","",14,[[["self"]],["u64"]]],[11,"fill_bytes","","",14,[[["self"]]]],[11,"try_fill_bytes","","",14,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","","",15,[[["self"]],["u32"]]],[11,"next_u64","","",15,[[["self"]],["u64"]]],[11,"fill_bytes","","",15,[[["self"]]]],[11,"try_fill_bytes","","",15,[[["self"]],[["result",["error"]],["error"]]]],[11,"from_seed","","Create a new `SplitMix64`.",13,[[],["splitmix64"]]],[11,"seed_from_u64","","Seed a `SplitMix64` from a `u64`.",13,[[["u64"]],["splitmix64"]]],[11,"from_seed","","Create a new `Xoshiro128StarStar`. If `seed` is entirely…",1,[[],["xoshiro128starstar"]]],[11,"seed_from_u64","","Seed a `Xoshiro128StarStar` from a `u64` using `SplitMix64`.",1,[[["u64"]],["xoshiro128starstar"]]],[11,"from_seed","","Create a new `Xoshiro128PlusPlus`. If `seed` is entirely…",2,[[],["xoshiro128plusplus"]]],[11,"seed_from_u64","","Seed a `Xoshiro128PlusPlus` from a `u64` using `SplitMix64`.",2,[[["u64"]],["xoshiro128plusplus"]]],[11,"from_seed","","Create a new `Xoshiro128Plus`. If `seed` is entirely 0, it…",3,[[],["xoshiro128plus"]]],[11,"seed_from_u64","","Seed a `Xoshiro128Plus` from a `u64` using `SplitMix64`.",3,[[["u64"]],["xoshiro128plus"]]],[11,"from_seed","","Create a new `Xoshiro256StarStar`. If `seed` is entirely…",4,[[],["xoshiro256starstar"]]],[11,"seed_from_u64","","Seed a `Xoshiro256StarStar` from a `u64` using `SplitMix64`.",4,[[["u64"]],["xoshiro256starstar"]]],[11,"from_seed","","Create a new `Xoshiro256PlusPlus`. If `seed` is entirely…",5,[[],["xoshiro256plusplus"]]],[11,"seed_from_u64","","Seed a `Xoshiro256PlusPlus` from a `u64` using `SplitMix64`.",5,[[["u64"]],["xoshiro256plusplus"]]],[11,"from_seed","","Create a new `Xoshiro256Plus`. If `seed` is entirely 0, it…",6,[[],["xoshiro256plus"]]],[11,"seed_from_u64","","Seed a `Xoshiro256Plus` from a `u64` using `SplitMix64`.",6,[[["u64"]],["xoshiro256plus"]]],[11,"from_seed","","Create a new `Xoshiro512StarStar`. If `seed` is entirely…",7,[[["seed512"]],["xoshiro512starstar"]]],[11,"seed_from_u64","","Seed a `Xoshiro512StarStar` from a `u64` using `SplitMix64`.",7,[[["u64"]],["xoshiro512starstar"]]],[11,"from_seed","","Create a new `Xoshiro512PlusPlus`. If `seed` is entirely…",8,[[["seed512"]],["xoshiro512plusplus"]]],[11,"seed_from_u64","","Seed a `Xoshiro512PlusPlus` from a `u64` using `SplitMix64`.",8,[[["u64"]],["xoshiro512plusplus"]]],[11,"from_seed","","Create a new `Xoshiro512Plus`. If `seed` is entirely 0, it…",9,[[["seed512"]],["xoshiro512plus"]]],[11,"seed_from_u64","","Seed a `Xoshiro512Plus` from a `u64` using `SplitMix64`.",9,[[["u64"]],["xoshiro512plus"]]],[11,"from_seed","","Create a new `Xoroshiro128Plus`. If `seed` is entirely 0,…",10,[[],["xoroshiro128plus"]]],[11,"seed_from_u64","","Seed a `Xoroshiro128Plus` from a `u64` using `SplitMix64`.",10,[[["u64"]],["xoroshiro128plus"]]],[11,"from_seed","","Create a new `Xoroshiro128PlusPlus`. If `seed` is entirely…",11,[[],["xoroshiro128plusplus"]]],[11,"seed_from_u64","","Seed a `Xoroshiro128PlusPlus` from a `u64` using…",11,[[["u64"]],["xoroshiro128plusplus"]]],[11,"from_seed","","Create a new `Xoroshiro128StarStar`. If `seed` is entirely…",12,[[],["xoroshiro128starstar"]]],[11,"seed_from_u64","","Seed a `Xoroshiro128StarStar` from a `u64` using…",12,[[["u64"]],["xoroshiro128starstar"]]],[11,"from_seed","","Create a new `Xoroshiro64StarStar`. If `seed` is entirely…",14,[[],["xoroshiro64starstar"]]],[11,"seed_from_u64","","Seed a `Xoroshiro64StarStar` from a `u64` using…",14,[[["u64"]],["xoroshiro64starstar"]]],[11,"from_seed","","Create a new `Xoroshiro64Star`. If `seed` is entirely 0,…",15,[[],["xoroshiro64star"]]],[11,"seed_from_u64","","Seed a `Xoroshiro64Star` from a `u64` using `SplitMix64`.",15,[[["u64"]],["xoroshiro64star"]]]],"p":[[3,"Seed512"],[3,"Xoshiro128StarStar"],[3,"Xoshiro128PlusPlus"],[3,"Xoshiro128Plus"],[3,"Xoshiro256StarStar"],[3,"Xoshiro256PlusPlus"],[3,"Xoshiro256Plus"],[3,"Xoshiro512StarStar"],[3,"Xoshiro512PlusPlus"],[3,"Xoshiro512Plus"],[3,"Xoroshiro128Plus"],[3,"Xoroshiro128PlusPlus"],[3,"Xoroshiro128StarStar"],[3,"SplitMix64"],[3,"Xoroshiro64StarStar"],[3,"Xoroshiro64Star"]]};
searchIndex["regex"] = {"doc":"This crate provides a library for parsing, compiling, and…","i":[[3,"RegexSetBuilder","regex","A configurable builder for a set of regular expressions.",null,null],[3,"RegexBuilder","","A configurable builder for a regular expression.",null,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions…",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex…",null,null],[3,"CaptureLocations","","CaptureLocations is a low level representation of the raw…",null,null],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture groups…",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"Captures","","Captures represents a group of captured strings for a…",null,null],[3,"Match","","Match represents a single match of a regex in a haystack.",null,null],[3,"Matches","","An iterator over all non-overlapping matches for a…",null,null],[3,"NoExpand","","`NoExpand` indicates literal string replacement.",null,null],[12,"0","","",0,null],[3,"Regex","","A compiled regular expression for matching Unicode strings.",null,null],[3,"ReplacerRef","","By-reference adaptor for a `Replacer`",null,null],[3,"Split","","Yields all substrings delimited by a regular expression…",null,null],[3,"SplitN","","Yields at most `N` substrings delimited by a regular…",null,null],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the order…",null,null],[4,"Error","","An error that occurred during parsing or compiling a…",null,null],[13,"Syntax","","A syntax error.",1,null],[13,"CompiledTooBig","","The compiled program exceeded the set size limit. The…",1,null],[5,"escape","","Escapes all regular expression meta characters in `text`.",null,[[["str"]],["string"]]],[0,"bytes","","Match regular expressions on arbitrary bytes.",null,null],[3,"RegexBuilder","regex::bytes","A configurable builder for a regular expression.",null,null],[3,"RegexSetBuilder","","A configurable builder for a set of regular expressions.",null,null],[3,"Match","","Match represents a single match of a regex in a haystack.",null,null],[3,"Regex","","A compiled regular expression for matching arbitrary bytes.",null,null],[3,"Matches","","An iterator over all non-overlapping matches for a…",null,null],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture groups…",null,null],[3,"Split","","Yields all substrings delimited by a regular expression…",null,null],[3,"SplitN","","Yields at most `N` substrings delimited by a regular…",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"CaptureLocations","","CaptureLocations is a low level representation of the raw…",null,null],[3,"Captures","","Captures represents a group of captured byte strings for a…",null,null],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the order…",null,null],[3,"ReplacerRef","","By-reference adaptor for a `Replacer`",null,null],[3,"NoExpand","","`NoExpand` indicates literal byte string replacement.",null,null],[12,"0","","",2,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions…",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex set.",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex…",null,null],[8,"Replacer","","Replacer describes types that can be used to replace…",null,null],[10,"replace_append","","Appends text to `dst` to replace the current match.",3,[[["self"],["captures"],["vec"]]]],[11,"no_expansion","","Return a fixed unchanging replacement byte string.",3,[[["self"]],[["cow"],["option",["cow"]]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",3,[[["self"]],["replacerref"]]],[11,"new","","Create a new regular expression builder with the given…",4,[[["str"]],["regexbuilder"]]],[11,"build","","Consume the builder and compile the regular expression.",4,[[["self"]],[["regex"],["result",["regex","error"]],["error"]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",4,[[["self"],["bool"]],["regexbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",4,[[["self"],["usize"]],["regexbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",4,[[["self"],["usize"]],["regexbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",4,[[["self"],["u32"]],["regexbuilder"]]],[11,"new","regex","Create a new regular expression builder with the given…",5,[[["str"]],["regexbuilder"]]],[11,"build","","Consume the builder and compile the regular expression.",5,[[["self"]],[["result",["regex","error"]],["regex"],["error"]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",5,[[["self"],["bool"]],["regexbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",5,[[["self"],["usize"]],["regexbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",5,[[["self"],["usize"]],["regexbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",5,[[["self"],["u32"]],["regexbuilder"]]],[11,"new","regex::bytes","Create a new regular expression builder with the given…",6,[[["i"]],["regexsetbuilder"]]],[11,"build","","Consume the builder and compile the regular expressions…",6,[[["self"]],[["regexset"],["result",["regexset","error"]],["error"]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",6,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",6,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",6,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",6,[[["self"],["u32"]],["regexsetbuilder"]]],[11,"new","regex","Create a new regular expression builder with the given…",7,[[["i"]],["regexsetbuilder"]]],[11,"build","","Consume the builder and compile the regular expressions…",7,[[["self"]],[["regexset"],["error"],["result",["regexset","error"]]]]],[11,"case_insensitive","","Set the value for the case insensitive (`i`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"multi_line","","Set the value for the multi-line matching (`m`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"dot_matches_new_line","","Set the value for the any character (`s`) flag, where in…",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"swap_greed","","Set the value for the greedy swap (`U`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (`x`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"unicode","","Set the value for the Unicode (`u`) flag.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",7,[[["self"],["bool"]],["regexsetbuilder"]]],[11,"size_limit","","Set the approximate size limit of the compiled regular…",7,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",7,[[["self"],["usize"]],["regexsetbuilder"]]],[11,"nest_limit","","Set the nesting limit for this parser.",7,[[["self"],["u32"]],["regexsetbuilder"]]],[11,"no_expansion","regex::bytes","Return a fixed unchanging replacement byte string.",3,[[["self"]],[["cow"],["option",["cow"]]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",3,[[["self"]],["replacerref"]]],[11,"start","","Returns the starting byte offset of the match in the…",8,[[["self"]],["usize"]]],[11,"end","","Returns the ending byte offset of the match in the haystack.",8,[[["self"]],["usize"]]],[11,"range","","Returns the range over the starting and ending byte…",8,[[["self"]],[["range",["usize"]],["usize"]]]],[11,"as_bytes","","Returns the matched text.",8,[[["self"]]]],[11,"new","","Compiles a regular expression. Once compiled, it can be…",9,[[["str"]],[["regex"],["result",["regex","error"]],["error"]]]],[11,"is_match","","Returns true if and only if the regex matches the string…",9,[[["self"]],["bool"]]],[11,"find","","Returns the start and end byte range of the leftmost-first…",9,[[["self"]],[["match"],["option",["match"]]]]],[11,"find_iter","","Returns an iterator for each successive non-overlapping…",9,[[["self"]],["matches"]]],[11,"captures","","Returns the capture groups corresponding to the…",9,[[["self"]],[["option",["captures"]],["captures"]]]],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture…",9,[[["self"]],["capturematches"]]],[11,"split","","Returns an iterator of substrings of `text` delimited by a…",9,[[["self"]],["split"]]],[11,"splitn","","Returns an iterator of at most `limit` substrings of…",9,[[["self"],["usize"]],["splitn"]]],[11,"replace","","Replaces the leftmost-first match with the replacement…",9,[[["replacer"],["self"]],["cow"]]],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the…",9,[[["replacer"],["self"]],["cow"]]],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text`…",9,[[["replacer"],["usize"],["self"]],["cow"]]],[11,"shortest_match","","Returns the end location of a match in the text given.",9,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"shortest_match_at","","Returns the same as shortest_match, but starts the search…",9,[[["self"],["usize"]],[["usize"],["option",["usize"]]]]],[11,"is_match_at","","Returns the same as is_match, but starts the search at the…",9,[[["self"],["usize"]],["bool"]]],[11,"find_at","","Returns the same as find, but starts the search at the…",9,[[["self"],["usize"]],[["match"],["option",["match"]]]]],[11,"captures_read","","This is like `captures`, but uses `CaptureLocations`…",9,[[["capturelocations"],["self"]],[["match"],["option",["match"]]]]],[11,"captures_read_at","","Returns the same as `captures_read`, but starts the search…",9,[[["capturelocations"],["usize"],["self"]],[["match"],["option",["match"]]]]],[11,"as_str","","Returns the original string of this regex.",9,[[["self"]],["str"]]],[11,"capture_names","","Returns an iterator over the capture names.",9,[[["self"]],["capturenames"]]],[11,"captures_len","","Returns the number of captures.",9,[[["self"]],["usize"]]],[11,"capture_locations","","Returns an empty set of capture locations that can be…",9,[[["self"]],["capturelocations"]]],[11,"get","","Returns the start and end positions of the Nth capture…",10,[[["self"],["usize"]],["option"]]],[11,"len","","Returns the total number of capturing groups.",10,[[["self"]],["usize"]]],[11,"get","","Returns the match associated with the capture group at…",11,[[["self"],["usize"]],[["match"],["option",["match"]]]]],[11,"name","","Returns the match for the capture group named `name`. If…",11,[[["str"],["self"]],[["match"],["option",["match"]]]]],[11,"iter","","An iterator that yields all capturing matches in the order…",11,[[["self"]],["subcapturematches"]]],[11,"expand","","Expands all instances of `$name` in `replacement` to the…",11,[[["vec"],["self"]]]],[11,"len","","Returns the number of captured groups.",11,[[["self"]],["usize"]]],[11,"new","regex","Create a new regex set with the given regular expressions.",12,[[["i"]],[["regexset"],["error"],["result",["regexset","error"]]]]],[11,"is_match","","Returns true if and only if one of the regexes in this set…",12,[[["str"],["self"]],["bool"]]],[11,"matches","","Returns the set of regular expressions that match in the…",12,[[["str"],["self"]],["setmatches"]]],[11,"len","","Returns the total number of regular expressions in this set.",12,[[["self"]],["usize"]]],[11,"patterns","","Returns the patterns that this set will match on.",12,[[["self"]]]],[11,"matched_any","","Whether this set contains any matches.",13,[[["self"]],["bool"]]],[11,"matched","","Whether the regex at the given index matched.",13,[[["self"],["usize"]],["bool"]]],[11,"len","","The total number of regexes in the set that created these…",13,[[["self"]],["usize"]]],[11,"iter","","Returns an iterator over indexes in the regex that matched.",13,[[["self"]],["setmatchesiter"]]],[11,"new","regex::bytes","Create a new regex set with the given regular expressions.",14,[[["i"]],[["regexset"],["result",["regexset","error"]],["error"]]]],[11,"is_match","","Returns true if and only if one of the regexes in this set…",14,[[["self"]],["bool"]]],[11,"matches","","Returns the set of regular expressions that match in the…",14,[[["self"]],["setmatches"]]],[11,"len","","Returns the total number of regular expressions in this set.",14,[[["self"]],["usize"]]],[11,"patterns","","Returns the patterns that this set will match on.",14,[[["self"]]]],[11,"matched_any","","Whether this set contains any matches.",15,[[["self"]],["bool"]]],[11,"matched","","Whether the regex at the given index matched.",15,[[["self"],["usize"]],["bool"]]],[11,"len","","The total number of regexes in the set that created these…",15,[[["self"]],["usize"]]],[11,"iter","","Returns an iterator over indexes in the regex that matched.",15,[[["self"]],["setmatchesiter"]]],[11,"start","regex","Returns the starting byte offset of the match in the…",16,[[["self"]],["usize"]]],[11,"end","","Returns the ending byte offset of the match in the haystack.",16,[[["self"]],["usize"]]],[11,"range","","Returns the range over the starting and ending byte…",16,[[["self"]],[["range",["usize"]],["usize"]]]],[11,"as_str","","Returns the matched text.",16,[[["self"]],["str"]]],[11,"new","","Compiles a regular expression. Once compiled, it can be…",17,[[["str"]],[["result",["regex","error"]],["regex"],["error"]]]],[11,"is_match","","Returns true if and only if the regex matches the string…",17,[[["str"],["self"]],["bool"]]],[11,"find","","Returns the start and end byte range of the leftmost-first…",17,[[["str"],["self"]],[["option",["match"]],["match"]]]],[11,"find_iter","","Returns an iterator for each successive non-overlapping…",17,[[["str"],["self"]],["matches"]]],[11,"captures","","Returns the capture groups corresponding to the…",17,[[["str"],["self"]],[["option",["captures"]],["captures"]]]],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture…",17,[[["str"],["self"]],["capturematches"]]],[11,"split","","Returns an iterator of substrings of `text` delimited by a…",17,[[["str"],["self"]],["split"]]],[11,"splitn","","Returns an iterator of at most `limit` substrings of…",17,[[["str"],["self"],["usize"]],["splitn"]]],[11,"replace","","Replaces the leftmost-first match with the replacement…",17,[[["str"],["self"],["replacer"]],[["str"],["cow",["str"]]]]],[11,"replace_all","","Replaces all non-overlapping matches in `text` with the…",17,[[["str"],["self"],["replacer"]],[["str"],["cow",["str"]]]]],[11,"replacen","","Replaces at most `limit` non-overlapping matches in `text`…",17,[[["usize"],["replacer"],["str"],["self"]],[["str"],["cow",["str"]]]]],[11,"shortest_match","","Returns the end location of a match in the text given.",17,[[["str"],["self"]],[["usize"],["option",["usize"]]]]],[11,"shortest_match_at","","Returns the same as shortest_match, but starts the search…",17,[[["str"],["self"],["usize"]],[["usize"],["option",["usize"]]]]],[11,"is_match_at","","Returns the same as is_match, but starts the search at the…",17,[[["str"],["self"],["usize"]],["bool"]]],[11,"find_at","","Returns the same as find, but starts the search at the…",17,[[["str"],["self"],["usize"]],[["option",["match"]],["match"]]]],[11,"captures_read","","This is like `captures`, but uses `CaptureLocations`…",17,[[["capturelocations"],["self"],["str"]],[["option",["match"]],["match"]]]],[11,"captures_read_at","","Returns the same as captures, but starts the search at the…",17,[[["capturelocations"],["usize"],["str"],["self"]],[["option",["match"]],["match"]]]],[11,"as_str","","Returns the original string of this regex.",17,[[["self"]],["str"]]],[11,"capture_names","","Returns an iterator over the capture names.",17,[[["self"]],["capturenames"]]],[11,"captures_len","","Returns the number of captures.",17,[[["self"]],["usize"]]],[11,"capture_locations","","Returns an empty set of capture locations that can be…",17,[[["self"]],["capturelocations"]]],[11,"get","","Returns the start and end positions of the Nth capture…",18,[[["self"],["usize"]],["option"]]],[11,"len","","Returns the total number of capturing groups.",18,[[["self"]],["usize"]]],[11,"get","","Returns the match associated with the capture group at…",19,[[["self"],["usize"]],[["option",["match"]],["match"]]]],[11,"name","","Returns the match for the capture group named `name`. If…",19,[[["str"],["self"]],[["option",["match"]],["match"]]]],[11,"iter","","An iterator that yields all capturing matches in the order…",19,[[["self"]],["subcapturematches"]]],[11,"expand","","Expands all instances of `$name` in `replacement` to the…",19,[[["str"],["string"],["self"]]]],[11,"len","","Returns the number of captured groups.",19,[[["self"]],["usize"]]],[8,"Replacer","","Replacer describes types that can be used to replace…",null,null],[10,"replace_append","","Appends text to `dst` to replace the current match.",20,[[["captures"],["self"],["string"]]]],[11,"no_expansion","","Return a fixed unchanging replacement string.",20,[[["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",20,[[["self"]],["replacerref"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"into_iter","","",13,[[],["i"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"into_iter","","",21,[[],["i"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"into_iter","","",22,[[],["i"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"into_iter","","",23,[[],["i"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"into_iter","","",24,[[],["i"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"into_iter","","",25,[[],["i"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"into_iter","","",27,[[],["i"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"into_iter","","",28,[[],["i"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"into_iter","","",29,[[],["i"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","regex::bytes","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"into_iter","","",30,[[],["i"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"into_iter","","",31,[[],["i"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"into_iter","","",32,[[],["i"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"into_iter","","",33,[[],["i"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"into_iter","","",34,[[],["i"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"into_iter","","",35,[[],["i"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"into_iter","","",15,[[],["i"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"into_iter","","",37,[[],["i"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"into_iter","","",38,[[],["i"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"replace_append","","",36,[[["self"],["captures"],["vec"]]]],[11,"no_expansion","","",36,[[["self"]],[["cow"],["option",["cow"]]]]],[11,"replace_append","","",2,[[["self"],["captures"],["vec"]]]],[11,"no_expansion","","",2,[[["self"]],[["option",["cow"]],["cow"]]]],[11,"replace_append","regex","",26,[[["captures"],["self"],["string"]]]],[11,"no_expansion","","",26,[[["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"replace_append","","",0,[[["captures"],["self"],["string"]]]],[11,"no_expansion","","",0,[[["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"next_back","","",21,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"next_back","","",22,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"next_back","regex::bytes","",37,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"next_back","","",38,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"into_iter","regex","",13,[[]]],[11,"into_iter","regex::bytes","",15,[[]]],[11,"next","","",30,[[["self"]],[["match"],["option",["match"]]]]],[11,"next","","",31,[[["self"]],[["option",["captures"]],["captures"]]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"next","","",33,[[["self"]],["option"]]],[11,"next","","",34,[[["self"]],[["option",["option"]],["option",["str"]]]]],[11,"size_hint","","",34,[[["self"]]]],[11,"next","","",35,[[["self"]],[["option",["match"]],["option",["option"]]]]],[11,"next","regex","",21,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"size_hint","","",21,[[["self"]]]],[11,"next","","",22,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"size_hint","","",22,[[["self"]]]],[11,"next","regex::bytes","",37,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"size_hint","","",37,[[["self"]]]],[11,"next","","",38,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"size_hint","","",38,[[["self"]]]],[11,"next","regex","",24,[[["self"]],[["option",["option"]],["option",["str"]]]]],[11,"size_hint","","",24,[[["self"]]]],[11,"next","","",27,[[["self"]],[["str"],["option",["str"]]]]],[11,"next","","",28,[[["self"]],[["str"],["option",["str"]]]]],[11,"next","","",29,[[["self"]],[["option",["match"]],["option",["option"]]]]],[11,"next","","",23,[[["self"]],[["option",["captures"]],["captures"]]]],[11,"next","","",25,[[["self"]],[["option",["match"]],["match"]]]],[11,"clone","","",1,[[["self"]],["error"]]],[11,"clone","regex::bytes","",8,[[["self"]],["match"]]],[11,"clone","","",9,[[["self"]],["regex"]]],[11,"clone","","",10,[[["self"]],["capturelocations"]]],[11,"clone","regex","",12,[[["self"]],["regexset"]]],[11,"clone","","",13,[[["self"]],["setmatches"]]],[11,"clone","","",22,[[["self"]],["setmatchesiter"]]],[11,"clone","regex::bytes","",14,[[["self"]],["regexset"]]],[11,"clone","","",15,[[["self"]],["setmatches"]]],[11,"clone","","",38,[[["self"]],["setmatchesiter"]]],[11,"clone","regex","",16,[[["self"]],["match"]]],[11,"clone","","",17,[[["self"]],["regex"]]],[11,"clone","","",18,[[["self"]],["capturelocations"]]],[11,"eq","","",1,[[["self"],["error"]],["bool"]]],[11,"ne","","",1,[[["self"],["error"]],["bool"]]],[11,"eq","regex::bytes","",8,[[["self"],["match"]],["bool"]]],[11,"ne","","",8,[[["self"],["match"]],["bool"]]],[11,"eq","regex","",16,[[["match"],["self"]],["bool"]]],[11,"ne","","",16,[[["match"],["self"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex::bytes","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","Shows the original regular expression.",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex::bytes","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","Shows the original regular expression.",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex::bytes","Shows the original regular expression.",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex","Shows the original regular expression.",17,[[["formatter"],["self"]],["result"]]],[11,"index","regex::bytes","",11,[[["self"],["usize"]]]],[11,"index","","",11,[[["str"],["self"]]]],[11,"index","regex","",19,[[["self"],["usize"]],["str"]]],[11,"index","","",19,[[["str"],["self"]],["str"]]],[11,"from_str","regex::bytes","Attempts to parse a string into a regular expression",9,[[["str"]],[["regex"],["result",["regex","error"]],["error"]]]],[11,"from_str","regex","Attempts to parse a string into a regular expression",17,[[["str"]],[["result",["regex","error"]],["regex"],["error"]]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"no_expansion","","Return a fixed unchanging replacement string.",20,[[["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"by_ref","","Return a `Replacer` that borrows and wraps this `Replacer`.",20,[[["self"]],["replacerref"]]]],"p":[[3,"NoExpand"],[4,"Error"],[3,"NoExpand"],[8,"Replacer"],[3,"RegexBuilder"],[3,"RegexBuilder"],[3,"RegexSetBuilder"],[3,"RegexSetBuilder"],[3,"Match"],[3,"Regex"],[3,"CaptureLocations"],[3,"Captures"],[3,"RegexSet"],[3,"SetMatches"],[3,"RegexSet"],[3,"SetMatches"],[3,"Match"],[3,"Regex"],[3,"CaptureLocations"],[3,"Captures"],[8,"Replacer"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"CaptureMatches"],[3,"CaptureNames"],[3,"Matches"],[3,"ReplacerRef"],[3,"Split"],[3,"SplitN"],[3,"SubCaptureMatches"],[3,"Matches"],[3,"CaptureMatches"],[3,"Split"],[3,"SplitN"],[3,"CaptureNames"],[3,"SubCaptureMatches"],[3,"ReplacerRef"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"]]};
searchIndex["regex_automata"] = {"doc":"A low level regular expression library that uses…","i":[[3,"Regex","regex_automata","A regular expression that uses deterministic finite…",null,null],[4,"DenseDFA","","A dense table-based deterministic finite automaton (DFA).",null,null],[13,"Standard","","A standard DFA that does not use premultiplication or byte…",0,null],[13,"ByteClass","","A DFA that shrinks its alphabet to a set of equivalence…",0,null],[13,"Premultiplied","","A DFA that premultiplies all of its state identifiers in…",0,null],[13,"PremultipliedByteClass","","The default configuration of a DFA, which uses byte…",0,null],[4,"SparseDFA","","A sparse table-based deterministic finite automaton (DFA).",null,null],[13,"Standard","","A standard DFA that does not use byte classes.",1,null],[13,"ByteClass","","A DFA that shrinks its alphabet to a set of equivalence…",1,null],[11,"as_ref","","Cheaply return a borrowed version of this dense DFA.…",0,[[["self"]],["densedfa"]]],[11,"memory_usage","","Returns the memory usage, in bytes, of this DFA.",0,[[["self"]],["usize"]]],[11,"from_bytes","","Deserialize a DFA with a specific state identifier…",0,[[],["densedfa"]]],[11,"is_match","","Returns true if and only if the given bytes match.",2,[[["self"]],["bool"]]],[11,"shortest_match","","Returns the first position at which a match is found.",2,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"find","","Returns the start and end offset of the leftmost first…",2,[[["self"]],["option"]]],[11,"is_match_at","","Returns the same as `is_match`, but starts the search at…",2,[[["self"],["usize"]],["bool"]]],[11,"shortest_match_at","","Returns the same as `shortest_match`, but starts the…",2,[[["self"],["usize"]],[["option",["usize"]],["usize"]]]],[11,"find_at","","Returns the same as `find`, but starts the search at the…",2,[[["self"],["usize"]],["option"]]],[11,"find_iter","","Returns an iterator over all non-overlapping leftmost…",2,[[["self"]],["matches"]]],[11,"from_dfas","","Build a new regex from its constituent forward and reverse…",2,[[["d"]],["regex"]]],[11,"forward","","Return the underlying DFA responsible for forward matching.",2,[[["self"]],["d"]]],[11,"reverse","","Return the underlying DFA responsible for reverse matching.",2,[[["self"]],["d"]]],[11,"as_ref","","Cheaply return a borrowed version of this sparse DFA.…",1,[[["self"]],["sparsedfa"]]],[11,"memory_usage","","Returns the memory usage, in bytes, of this DFA.",1,[[["self"]],["usize"]]],[11,"from_bytes","","Deserialize a sparse DFA with a specific state identifier…",1,[[],["sparsedfa"]]],[0,"dense","","Types and routines specific to dense DFAs.",null,null],[3,"Standard","regex_automata::dense","A standard dense DFA that does not use premultiplication…",null,null],[3,"ByteClass","","A dense DFA that shrinks its alphabet.",null,null],[3,"Premultiplied","","A dense DFA that premultiplies all of its state…",null,null],[3,"PremultipliedByteClass","","The default configuration of a dense DFA, which uses byte…",null,null],[4,"DenseDFA","","A dense table-based deterministic finite automaton (DFA).",null,null],[13,"Standard","","A standard DFA that does not use premultiplication or byte…",0,null],[13,"ByteClass","","A DFA that shrinks its alphabet to a set of equivalence…",0,null],[13,"Premultiplied","","A DFA that premultiplies all of its state identifiers in…",0,null],[13,"PremultipliedByteClass","","The default configuration of a DFA, which uses byte…",0,null],[0,"sparse","regex_automata","Types and routines specific to sparse DFAs.",null,null],[3,"Standard","regex_automata::sparse","A standard sparse DFA that does not use premultiplication…",null,null],[3,"ByteClass","","A sparse DFA that shrinks its alphabet.",null,null],[4,"SparseDFA","","A sparse table-based deterministic finite automaton (DFA).",null,null],[13,"Standard","","A standard DFA that does not use byte classes.",1,null],[13,"ByteClass","","A DFA that shrinks its alphabet to a set of equivalence…",1,null],[8,"DFA","regex_automata","A trait describing the interface of a deterministic finite…",null,null],[16,"ID","","The representation used for state identifiers in this DFA.",3,null],[10,"start_state","","Return the identifier of this DFA's start state.",3,[[["self"]]]],[10,"is_match_state","","Returns true if and only if the given identifier…",3,[[["self"]],["bool"]]],[10,"is_dead_state","","Returns true if and only if the given identifier…",3,[[["self"]],["bool"]]],[10,"is_match_or_dead_state","","Returns true if and only if the given identifier…",3,[[["self"]],["bool"]]],[10,"is_anchored","","Returns true if and only if this DFA is anchored.",3,[[["self"]],["bool"]]],[10,"next_state","","Given the current state that this DFA is in and the next…",3,[[["u8"],["self"]]]],[10,"next_state_unchecked","","Like `next_state`, but its implementation may look up the…",3,[[["u8"],["self"]]]],[11,"is_match","","Returns true if and only if the given bytes match this DFA.",3,[[["self"]],["bool"]]],[11,"shortest_match","","Returns the first position at which a match is found.",3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"find","","Returns the end offset of the longest match. If no match…",3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"rfind","","Returns the start offset of the longest match in reverse,…",3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"is_match_at","","Returns the same as `is_match`, but starts the search at…",3,[[["self"],["usize"]],["bool"]]],[11,"shortest_match_at","","Returns the same as `shortest_match`, but starts the…",3,[[["self"],["usize"]],[["option",["usize"]],["usize"]]]],[11,"find_at","","Returns the same as `find`, but starts the search at the…",3,[[["self"],["usize"]],[["option",["usize"]],["usize"]]]],[11,"rfind_at","","Returns the same as `rfind`, but starts the search at the…",3,[[["self"],["usize"]],[["option",["usize"]],["usize"]]]],[8,"StateID","","A trait describing the representation of a DFA's state…",null,null],[10,"from_usize","","Convert from a `usize` to this implementation's…",4,[[["usize"]],["self"]]],[10,"to_usize","","Convert this implementation's representation to a `usize`.",4,[[],["usize"]]],[10,"max_id","","Return the maximum state identifier supported by this…",4,[[],["usize"]]],[10,"read_bytes","","Read a single state identifier from the given slice of…",4,[[],["self"]]],[10,"write_bytes","","Write this state identifier to the given slice of bytes in…",4,[[]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"from","regex_automata::dense","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"from","regex_automata::sparse","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"start_state","regex_automata","",0,[[["self"]],["s"]]],[11,"is_match_state","","",0,[[["s"],["self"]],["bool"]]],[11,"is_dead_state","","",0,[[["s"],["self"]],["bool"]]],[11,"is_match_or_dead_state","","",0,[[["s"],["self"]],["bool"]]],[11,"is_anchored","","",0,[[["self"]],["bool"]]],[11,"next_state","","",0,[[["s"],["self"],["u8"]],["s"]]],[11,"next_state_unchecked","","",0,[[["s"],["self"],["u8"]],["s"]]],[11,"is_match_at","","",0,[[["self"],["usize"]],["bool"]]],[11,"shortest_match_at","","",0,[[["self"],["usize"]],[["option",["usize"]],["usize"]]]],[11,"find_at","","",0,[[["self"],["usize"]],[["option",["usize"]],["usize"]]]],[11,"rfind_at","","",0,[[["self"],["usize"]],[["option",["usize"]],["usize"]]]],[11,"start_state","regex_automata::dense","",5,[[["self"]],["s"]]],[11,"is_match_state","","",5,[[["s"],["self"]],["bool"]]],[11,"is_dead_state","","",5,[[["s"],["self"]],["bool"]]],[11,"is_match_or_dead_state","","",5,[[["s"],["self"]],["bool"]]],[11,"is_anchored","","",5,[[["self"]],["bool"]]],[11,"next_state","","",5,[[["s"],["self"],["u8"]],["s"]]],[11,"next_state_unchecked","","",5,[[["s"],["self"],["u8"]],["s"]]],[11,"start_state","","",6,[[["self"]],["s"]]],[11,"is_match_state","","",6,[[["s"],["self"]],["bool"]]],[11,"is_dead_state","","",6,[[["s"],["self"]],["bool"]]],[11,"is_match_or_dead_state","","",6,[[["s"],["self"]],["bool"]]],[11,"is_anchored","","",6,[[["self"]],["bool"]]],[11,"next_state","","",6,[[["s"],["self"],["u8"]],["s"]]],[11,"next_state_unchecked","","",6,[[["s"],["self"],["u8"]],["s"]]],[11,"start_state","","",7,[[["self"]],["s"]]],[11,"is_match_state","","",7,[[["s"],["self"]],["bool"]]],[11,"is_dead_state","","",7,[[["s"],["self"]],["bool"]]],[11,"is_match_or_dead_state","","",7,[[["s"],["self"]],["bool"]]],[11,"is_anchored","","",7,[[["self"]],["bool"]]],[11,"next_state","","",7,[[["s"],["self"],["u8"]],["s"]]],[11,"next_state_unchecked","","",7,[[["s"],["self"],["u8"]],["s"]]],[11,"start_state","","",8,[[["self"]],["s"]]],[11,"is_match_state","","",8,[[["s"],["self"]],["bool"]]],[11,"is_dead_state","","",8,[[["s"],["self"]],["bool"]]],[11,"is_match_or_dead_state","","",8,[[["s"],["self"]],["bool"]]],[11,"is_anchored","","",8,[[["self"]],["bool"]]],[11,"next_state","","",8,[[["s"],["self"],["u8"]],["s"]]],[11,"next_state_unchecked","","",8,[[["s"],["self"],["u8"]],["s"]]],[11,"start_state","regex_automata","",1,[[["self"]],["s"]]],[11,"is_match_state","","",1,[[["s"],["self"]],["bool"]]],[11,"is_dead_state","","",1,[[["s"],["self"]],["bool"]]],[11,"is_match_or_dead_state","","",1,[[["s"],["self"]],["bool"]]],[11,"is_anchored","","",1,[[["self"]],["bool"]]],[11,"next_state","","",1,[[["s"],["self"],["u8"]],["s"]]],[11,"next_state_unchecked","","",1,[[["s"],["self"],["u8"]],["s"]]],[11,"is_match_at","","",1,[[["self"],["usize"]],["bool"]]],[11,"shortest_match_at","","",1,[[["self"],["usize"]],[["option",["usize"]],["usize"]]]],[11,"find_at","","",1,[[["self"],["usize"]],[["option",["usize"]],["usize"]]]],[11,"rfind_at","","",1,[[["self"],["usize"]],[["option",["usize"]],["usize"]]]],[11,"start_state","regex_automata::sparse","",9,[[["self"]],["s"]]],[11,"is_match_state","","",9,[[["s"],["self"]],["bool"]]],[11,"is_dead_state","","",9,[[["s"],["self"]],["bool"]]],[11,"is_match_or_dead_state","","",9,[[["s"],["self"]],["bool"]]],[11,"is_anchored","","",9,[[["self"]],["bool"]]],[11,"next_state","","",9,[[["s"],["self"],["u8"]],["s"]]],[11,"next_state_unchecked","","",9,[[["s"],["self"],["u8"]],["s"]]],[11,"start_state","","",10,[[["self"]],["s"]]],[11,"is_match_state","","",10,[[["s"],["self"]],["bool"]]],[11,"is_dead_state","","",10,[[["s"],["self"]],["bool"]]],[11,"is_match_or_dead_state","","",10,[[["s"],["self"]],["bool"]]],[11,"is_anchored","","",10,[[["self"]],["bool"]]],[11,"next_state","","",10,[[["s"],["self"],["u8"]],["s"]]],[11,"next_state_unchecked","","",10,[[["s"],["self"],["u8"]],["s"]]],[11,"fmt","regex_automata","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_automata::dense","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_automata","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_automata::sparse","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"clone","regex_automata","",0,[[["self"]],["densedfa"]]],[11,"clone","regex_automata::dense","",5,[[["self"]],["standard"]]],[11,"clone","","",6,[[["self"]],["byteclass"]]],[11,"clone","","",7,[[["self"]],["premultiplied"]]],[11,"clone","","",8,[[["self"]],["premultipliedbyteclass"]]],[11,"clone","regex_automata","",2,[[["self"]],["regex"]]],[11,"clone","","",1,[[["self"]],["sparsedfa"]]],[11,"clone","regex_automata::sparse","",9,[[["self"]],["standard"]]],[11,"clone","","",10,[[["self"]],["byteclass"]]],[11,"is_match","regex_automata","Returns true if and only if the given bytes match this DFA.",3,[[["self"]],["bool"]]],[11,"shortest_match","","Returns the first position at which a match is found.",3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"find","","Returns the end offset of the longest match. If no match…",3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"rfind","","Returns the start offset of the longest match in reverse,…",3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"is_match_at","","Returns the same as `is_match`, but starts the search at…",3,[[["self"],["usize"]],["bool"]]],[11,"shortest_match_at","","Returns the same as `shortest_match`, but starts the…",3,[[["self"],["usize"]],[["option",["usize"]],["usize"]]]],[11,"find_at","","Returns the same as `find`, but starts the search at the…",3,[[["self"],["usize"]],[["option",["usize"]],["usize"]]]],[11,"rfind_at","","Returns the same as `rfind`, but starts the search at the…",3,[[["self"],["usize"]],[["option",["usize"]],["usize"]]]]],"p":[[4,"DenseDFA"],[4,"SparseDFA"],[3,"Regex"],[8,"DFA"],[8,"StateID"],[3,"Standard"],[3,"ByteClass"],[3,"Premultiplied"],[3,"PremultipliedByteClass"],[3,"Standard"],[3,"ByteClass"]]};
searchIndex["regex_syntax"] = {"doc":"This crate provides a robust regular expression parser.","i":[[3,"Parser","regex_syntax","A convenience parser for regular expressions.",null,null],[3,"ParserBuilder","","A builder for a regular expression parser.",null,null],[3,"UnicodeWordError","","An error that occurs when the Unicode-aware `\\w` class is…",null,null],[4,"Error","","This error type encompasses any error that can be returned…",null,null],[13,"Parse","","An error that occurred while translating concrete syntax…",0,null],[13,"Translate","","An error that occurred while translating abstract syntax…",0,null],[5,"escape","","Escapes all regular expression meta characters in `text`.",null,[[["str"]],["string"]]],[5,"escape_into","","Escapes all meta characters in `text` and writes the…",null,[[["str"],["string"]]]],[5,"is_meta_character","","Returns true if the give character has significance in a…",null,[[["char"]],["bool"]]],[5,"is_word_character","","Returns true if and only if the given character is a…",null,[[["char"]],["bool"]]],[5,"try_is_word_character","","Returns true if and only if the given character is a…",null,[[["char"]],[["result",["bool","unicodeworderror"]],["unicodeworderror"],["bool"]]]],[5,"is_word_byte","","Returns true if and only if the given character is an…",null,[[["u8"]],["bool"]]],[0,"ast","","Defines an abstract syntax for regular expressions.",null,null],[3,"Error","regex_syntax::ast","An error that occurred while parsing a regular expression…",null,null],[3,"Span","","Span represents the position information of a single AST…",null,null],[12,"start","","The start byte offset.",1,null],[12,"end","","The end byte offset.",1,null],[3,"Position","","A single position in a regular expression.",null,null],[12,"offset","","The absolute offset of this position, starting at `0` from…",2,null],[12,"line","","The line number, starting at `1`.",2,null],[12,"column","","The approximate column number, starting at `1`.",2,null],[3,"WithComments","","An abstract syntax tree for a singular expression along…",null,null],[12,"ast","","The actual ast.",3,null],[12,"comments","","All comments found in the original regular expression.",3,null],[3,"Comment","","A comment from a regular expression with an associated span.",null,null],[12,"span","","The span of this comment, including the beginning `#` and…",4,null],[12,"comment","","The comment text, starting with the first character…",4,null],[3,"Alternation","","An alternation of regular expressions.",null,null],[12,"span","","The span of this alternation.",5,null],[12,"asts","","The alternate regular expressions.",5,null],[3,"Concat","","A concatenation of regular expressions.",null,null],[12,"span","","The span of this concatenation.",6,null],[12,"asts","","The concatenation regular expressions.",6,null],[3,"Literal","","A single literal expression.",null,null],[12,"span","","The span of this literal.",7,null],[12,"kind","","The kind of this literal.",7,null],[12,"c","","The Unicode scalar value corresponding to this literal.",7,null],[3,"ClassPerl","","A Perl character class.",null,null],[12,"span","","The span of this class.",8,null],[12,"kind","","The kind of Perl class.",8,null],[12,"negated","","Whether the class is negated or not. e.g., `\\d` is not…",8,null],[3,"ClassAscii","","An ASCII character class.",null,null],[12,"span","","The span of this class.",9,null],[12,"kind","","The kind of ASCII class.",9,null],[12,"negated","","Whether the class is negated or not. e.g., `[[:alpha:]]`…",9,null],[3,"ClassUnicode","","A Unicode character class.",null,null],[12,"span","","The span of this class.",10,null],[12,"negated","","Whether this class is negated or not.",10,null],[12,"kind","","The kind of Unicode class.",10,null],[3,"ClassBracketed","","A bracketed character class, e.g., `[a-z0-9]`.",null,null],[12,"span","","The span of this class.",11,null],[12,"negated","","Whether this class is negated or not. e.g., `[a]` is not…",11,null],[12,"kind","","The type of this set. A set is either a normal union of…",11,null],[3,"ClassSetRange","","A single character class range in a set.",null,null],[12,"span","","The span of this range.",12,null],[12,"start","","The start of this range.",12,null],[12,"end","","The end of this range.",12,null],[3,"ClassSetUnion","","A union of items inside a character class set.",null,null],[12,"span","","The span of the items in this operation. e.g., the…",13,null],[12,"items","","The sequence of items that make up this union.",13,null],[3,"ClassSetBinaryOp","","A Unicode character class set operation.",null,null],[12,"span","","The span of this operation. e.g., the `a-z--[h-p]` in…",14,null],[12,"kind","","The type of this set operation.",14,null],[12,"lhs","","The left hand side of the operation.",14,null],[12,"rhs","","The right hand side of the operation.",14,null],[3,"Assertion","","A single zero-width assertion.",null,null],[12,"span","","The span of this assertion.",15,null],[12,"kind","","The assertion kind, e.g., `\\b` or `^`.",15,null],[3,"Repetition","","A repetition operation applied to a regular expression.",null,null],[12,"span","","The span of this operation.",16,null],[12,"op","","The actual operation.",16,null],[12,"greedy","","Whether this operation was applied greedily or not.",16,null],[12,"ast","","The regular expression under repetition.",16,null],[3,"RepetitionOp","","The repetition operator itself.",null,null],[12,"span","","The span of this operator. This includes things like `+`,…",17,null],[12,"kind","","The type of operation.",17,null],[3,"Group","","A grouped regular expression.",null,null],[12,"span","","The span of this group.",18,null],[12,"kind","","The kind of this group.",18,null],[12,"ast","","The regular expression in this group.",18,null],[3,"CaptureName","","A capture name.",null,null],[12,"span","","The span of this capture name.",19,null],[12,"name","","The capture name.",19,null],[12,"index","","The capture index.",19,null],[3,"SetFlags","","A group of flags that is not applied to a particular…",null,null],[12,"span","","The span of these flags, including the grouping parentheses.",20,null],[12,"flags","","The actual sequence of flags.",20,null],[3,"Flags","","A group of flags.",null,null],[12,"span","","The span of this group of flags.",21,null],[12,"items","","A sequence of flag items. Each item is either a flag or a…",21,null],[3,"FlagsItem","","A single item in a group of flags.",null,null],[12,"span","","The span of this item.",22,null],[12,"kind","","The kind of this item.",22,null],[4,"ErrorKind","","The type of an error that occurred while building an AST.",null,null],[13,"CaptureLimitExceeded","","The capturing group limit was exceeded.",23,null],[13,"ClassEscapeInvalid","","An invalid escape sequence was found in a character class…",23,null],[13,"ClassRangeInvalid","","An invalid character class range was found. An invalid…",23,null],[13,"ClassRangeLiteral","","An invalid range boundary was found in a character class.…",23,null],[13,"ClassUnclosed","","An opening `[` was found with no corresponding closing `]`.",23,null],[13,"DecimalEmpty","","Note that this error variant is no longer used. Namely, a…",23,null],[13,"DecimalInvalid","","An invalid decimal number was given where one was expected.",23,null],[13,"EscapeHexEmpty","","A bracketed hex literal was empty.",23,null],[13,"EscapeHexInvalid","","A bracketed hex literal did not correspond to a Unicode…",23,null],[13,"EscapeHexInvalidDigit","","An invalid hexadecimal digit was found.",23,null],[13,"EscapeUnexpectedEof","","EOF was found before an escape sequence was completed.",23,null],[13,"EscapeUnrecognized","","An unrecognized escape sequence.",23,null],[13,"FlagDanglingNegation","","A dangling negation was used when setting flags, e.g., `i-`.",23,null],[13,"FlagDuplicate","","A flag was used twice, e.g., `i-i`.",23,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the original flag. The error position…",24,null],[13,"FlagRepeatedNegation","regex_syntax::ast","The negation operator was used twice, e.g., `-i-s`.",23,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the original negation operator. The error…",25,null],[13,"FlagUnexpectedEof","regex_syntax::ast","Expected a flag but got EOF, e.g., `(?`.",23,null],[13,"FlagUnrecognized","","Unrecognized flag, e.g., `a`.",23,null],[13,"GroupNameDuplicate","","A duplicate capture name was found.",23,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the initial occurrence of the capture…",26,null],[13,"GroupNameEmpty","regex_syntax::ast","A capture group name is empty, e.g., `(?P<>abc)`.",23,null],[13,"GroupNameInvalid","","An invalid character was seen for a capture group name.…",23,null],[13,"GroupNameUnexpectedEof","","A closing `>` could not be found for a capture group name.",23,null],[13,"GroupUnclosed","","An unclosed group, e.g., `(ab`.",23,null],[13,"GroupUnopened","","An unopened group, e.g., `ab)`.",23,null],[13,"NestLimitExceeded","","The nest limit was exceeded. The limit stored here is the…",23,null],[13,"RepetitionCountInvalid","","The range provided in a counted repetition operator is…",23,null],[13,"RepetitionCountDecimalEmpty","","An opening `{` was not followed by a valid decimal value.…",23,null],[13,"RepetitionCountUnclosed","","An opening `{` was found with no corresponding closing `}`.",23,null],[13,"RepetitionMissing","","A repetition operator was applied to a missing…",23,null],[13,"UnicodeClassInvalid","","The Unicode class is not valid. This typically occurs when…",23,null],[13,"UnsupportedBackreference","","When octal support is disabled, this error is produced…",23,null],[13,"UnsupportedLookAround","","When syntax similar to PCRE's look-around is used, this…",23,null],[4,"Ast","","An abstract syntax tree for a single regular expression.",null,null],[13,"Empty","","An empty regex that matches everything.",27,null],[13,"Flags","","A set of flags, e.g., `(?is)`.",27,null],[13,"Literal","","A single character literal, which includes escape sequences.",27,null],[13,"Dot","","The \"any character\" class.",27,null],[13,"Assertion","","A single zero-width assertion.",27,null],[13,"Class","","A single character class. This includes all forms of…",27,null],[13,"Repetition","","A repetition operator applied to an arbitrary regular…",27,null],[13,"Group","","A grouped regular expression.",27,null],[13,"Alternation","","An alternation of regular expressions.",27,null],[13,"Concat","","A concatenation of regular expressions.",27,null],[4,"LiteralKind","","The kind of a single literal expression.",null,null],[13,"Verbatim","","The literal is written verbatim, e.g., `a` or `☃`.",28,null],[13,"Punctuation","","The literal is written as an escape because it is…",28,null],[13,"Octal","","The literal is written as an octal escape, e.g., `\\141`.",28,null],[13,"HexFixed","","The literal is written as a hex code with a fixed number…",28,null],[13,"HexBrace","","The literal is written as a hex code with a bracketed…",28,null],[13,"Special","","The literal is written as a specially recognized escape,…",28,null],[4,"SpecialLiteralKind","","The type of a special literal.",null,null],[13,"Bell","","Bell, spelled `\\a` (`\\x07`).",29,null],[13,"FormFeed","","Form feed, spelled `\\f` (`\\x0C`).",29,null],[13,"Tab","","Tab, spelled `\\t` (`\\x09`).",29,null],[13,"LineFeed","","Line feed, spelled `\\n` (`\\x0A`).",29,null],[13,"CarriageReturn","","Carriage return, spelled `\\r` (`\\x0D`).",29,null],[13,"VerticalTab","","Vertical tab, spelled `\\v` (`\\x0B`).",29,null],[13,"Space","","Space, spelled `\\ ` (`\\x20`). Note that this can only…",29,null],[4,"HexLiteralKind","","The type of a Unicode hex literal.",null,null],[13,"X","","A `\\x` prefix. When used without brackets, this form is…",30,null],[13,"UnicodeShort","","A `\\u` prefix. When used without brackets, this form is…",30,null],[13,"UnicodeLong","","A `\\U` prefix. When used without brackets, this form is…",30,null],[4,"Class","","A single character class expression.",null,null],[13,"Unicode","","A Unicode character class, e.g., `\\pL` or `\\p{Greek}`.",31,null],[13,"Perl","","A perl character class, e.g., `\\d` or `\\W`.",31,null],[13,"Bracketed","","A bracketed character class set, which may contain zero or…",31,null],[4,"ClassPerlKind","","The available Perl character classes.",null,null],[13,"Digit","","Decimal numbers.",32,null],[13,"Space","","Whitespace.",32,null],[13,"Word","","Word characters.",32,null],[4,"ClassAsciiKind","","The available ASCII character classes.",null,null],[13,"Alnum","","`[0-9A-Za-z]`",33,null],[13,"Alpha","","`[A-Za-z]`",33,null],[13,"Ascii","","`[\\x00-\\x7F]`",33,null],[13,"Blank","","`[ \\t]`",33,null],[13,"Cntrl","","`[\\x00-\\x1F\\x7F]`",33,null],[13,"Digit","","`[0-9]`",33,null],[13,"Graph","","`[!-~]`",33,null],[13,"Lower","","`[a-z]`",33,null],[13,"Print","","`[ -~]`",33,null],[13,"Punct","","`[!-/:-@\\[-`{-~]`",33,null],[13,"Space","","`[\\t\\n\\v\\f\\r ]`",33,null],[13,"Upper","","`[A-Z]`",33,null],[13,"Word","","`[0-9A-Za-z_]`",33,null],[13,"Xdigit","","`[0-9A-Fa-f]`",33,null],[4,"ClassUnicodeKind","","The available forms of Unicode character classes.",null,null],[13,"OneLetter","","A one letter abbreviated class, e.g., `\\pN`.",34,null],[13,"Named","","A binary property, general category or script. The string…",34,null],[13,"NamedValue","","A property name and an associated value.",34,null],[12,"op","regex_syntax::ast::ClassUnicodeKind","The type of Unicode op used to associate `name` with…",35,null],[12,"name","","The property name (which may be empty).",35,null],[12,"value","","The property value (which may be empty).",35,null],[4,"ClassUnicodeOpKind","regex_syntax::ast","The type of op used in a Unicode character class.",null,null],[13,"Equal","","A property set to a specific value, e.g.,…",36,null],[13,"Colon","","A property set to a specific value using a colon, e.g.,…",36,null],[13,"NotEqual","","A property that isn't a particular value, e.g.,…",36,null],[4,"ClassSet","","A character class set.",null,null],[13,"Item","","An item, which can be a single literal, range, nested…",37,null],[13,"BinaryOp","","A single binary operation (i.e., &&, -- or ~~).",37,null],[4,"ClassSetItem","","A single component of a character class set.",null,null],[13,"Empty","","An empty item.",38,null],[13,"Literal","","A single literal.",38,null],[13,"Range","","A range between two literals.",38,null],[13,"Ascii","","An ASCII character class, e.g., `[:alnum:]` or `[:punct:]`.",38,null],[13,"Unicode","","A Unicode character class, e.g., `\\pL` or `\\p{Greek}`.",38,null],[13,"Perl","","A perl character class, e.g., `\\d` or `\\W`.",38,null],[13,"Bracketed","","A bracketed character class set, which may contain zero or…",38,null],[13,"Union","","A union of items.",38,null],[4,"ClassSetBinaryOpKind","","The type of a Unicode character class set operation.",null,null],[13,"Intersection","","The intersection of two sets, e.g., `\\pN&&[a-z]`.",39,null],[13,"Difference","","The difference of two sets, e.g., `\\pN--[0-9]`.",39,null],[13,"SymmetricDifference","","The symmetric difference of two sets. The symmetric…",39,null],[4,"AssertionKind","","An assertion kind.",null,null],[13,"StartLine","","`^`",40,null],[13,"EndLine","","`$`",40,null],[13,"StartText","","`\\A`",40,null],[13,"EndText","","`\\z`",40,null],[13,"WordBoundary","","`\\b`",40,null],[13,"NotWordBoundary","","`\\B`",40,null],[4,"RepetitionKind","","The kind of a repetition operator.",null,null],[13,"ZeroOrOne","","`?`",41,null],[13,"ZeroOrMore","","`*`",41,null],[13,"OneOrMore","","`+`",41,null],[13,"Range","","`{m,n}`",41,null],[4,"RepetitionRange","","A range repetition operator.",null,null],[13,"Exactly","","`{m}`",42,null],[13,"AtLeast","","`{m,}`",42,null],[13,"Bounded","","`{m,n}`",42,null],[4,"GroupKind","","The kind of a group.",null,null],[13,"CaptureIndex","","`(a)`",43,null],[13,"CaptureName","","`(?P<name>a)`",43,null],[13,"NonCapturing","","`(?:a)` and `(?i:a)`",43,null],[4,"FlagsItemKind","","The kind of an item in a group of flags.",null,null],[13,"Negation","","A negation operator applied to all subsequent flags in the…",44,null],[13,"Flag","","A single flag in a group.",44,null],[4,"Flag","","A single flag.",null,null],[13,"CaseInsensitive","","`i`",45,null],[13,"MultiLine","","`m`",45,null],[13,"DotMatchesNewLine","","`s`",45,null],[13,"SwapGreed","","`U`",45,null],[13,"Unicode","","`u`",45,null],[13,"IgnoreWhitespace","","`x`",45,null],[5,"visit","","Executes an implementation of `Visitor` in constant stack…",null,[[["ast"],["visitor"]],["result"]]],[0,"parse","","This module provides a regular expression parser.",null,null],[3,"ParserBuilder","regex_syntax::ast::parse","A builder for a regular expression parser.",null,null],[3,"Parser","","A regular expression parser.",null,null],[11,"new","","Create a new parser builder with a default configuration.",46,[[],["parserbuilder"]]],[11,"build","","Build a parser from this configuration with the given…",46,[[["self"]],["parser"]]],[11,"nest_limit","","Set the nesting limit for this parser.",46,[[["self"],["u32"]],["parserbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",46,[[["self"],["bool"]],["parserbuilder"]]],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",46,[[["self"],["bool"]],["parserbuilder"]]],[11,"new","","Create a new parser with a default configuration.",47,[[],["parser"]]],[11,"parse","","Parse the regular expression into an abstract syntax tree.",47,[[["str"],["self"]],[["result",["ast","error"]],["ast"],["error"]]]],[11,"parse_with_comments","","Parse the regular expression and return an abstract syntax…",47,[[["str"],["self"]],[["result",["withcomments","error"]],["withcomments"],["error"]]]],[0,"print","regex_syntax::ast","This module provides a regular expression printer for `Ast`.",null,null],[3,"Printer","regex_syntax::ast::print","A printer for a regular expression abstract syntax tree.",null,null],[11,"new","","Create a new printer.",48,[[],["printer"]]],[11,"print","","Print the given `Ast` to the given writer. The writer must…",48,[[["ast"],["self"],["write"]],["result"]]],[8,"Visitor","regex_syntax::ast","A trait for visiting an abstract syntax tree (AST) in…",null,null],[16,"Output","","The result of visiting an AST.",49,null],[16,"Err","","An error that visiting an AST might return.",49,null],[10,"finish","","All implementors of `Visitor` must provide a `finish`…",49,[[],["result"]]],[11,"start","","This method is called before beginning traversal of the AST.",49,[[["self"]]]],[11,"visit_pre","","This method is called on an `Ast` before descending into…",49,[[["ast"],["self"]],["result"]]],[11,"visit_post","","This method is called on an `Ast` after descending all of…",49,[[["ast"],["self"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an…",49,[[["self"]],["result"]]],[11,"visit_class_set_item_pre","","This method is called on every `ClassSetItem` before…",49,[[["classsetitem"],["self"]],["result"]]],[11,"visit_class_set_item_post","","This method is called on every `ClassSetItem` after…",49,[[["classsetitem"],["self"]],["result"]]],[11,"visit_class_set_binary_op_pre","","This method is called on every `ClassSetBinaryOp` before…",49,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_post","","This method is called on every `ClassSetBinaryOp` after…",49,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right hand…",49,[[["self"],["classsetbinaryop"]],["result"]]],[11,"kind","","Return the type of this error.",50,[[["self"]],["errorkind"]]],[11,"pattern","","The original pattern string in which this error occurred.",50,[[["self"]],["str"]]],[11,"span","","Return the span at which this error occurred.",50,[[["self"]],["span"]]],[11,"auxiliary_span","","Return an auxiliary span. This span exists only for some…",50,[[["self"]],[["option",["span"]],["span"]]]],[11,"new","","Create a new span with the given positions.",1,[[["position"]],["span"]]],[11,"splat","","Create a new span using the given position as the start…",1,[[["position"]],["span"]]],[11,"with_start","","Create a new span by replacing the starting the position…",1,[[["position"]],["span"]]],[11,"with_end","","Create a new span by replacing the ending the position…",1,[[["position"]],["span"]]],[11,"is_one_line","","Returns true if and only if this span occurs on a single…",1,[[["self"]],["bool"]]],[11,"is_empty","","Returns true if and only if this span is empty. That is,…",1,[[["self"]],["bool"]]],[11,"new","","Create a new position with the given information.",2,[[["usize"]],["position"]]],[11,"span","","Return the span of this abstract syntax tree.",27,[[["self"]],["span"]]],[11,"is_empty","","Return true if and only if this Ast is empty.",27,[[["self"]],["bool"]]],[11,"into_ast","","Return this alternation as an AST.",5,[[],["ast"]]],[11,"into_ast","","Return this concatenation as an AST.",6,[[],["ast"]]],[11,"byte","","If this literal was written as a `\\x` hex escape, then…",7,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"digits","","The number of digits that must be used with this literal…",30,[[["self"]],["u32"]]],[11,"span","","Return the span of this character class.",31,[[["self"]],["span"]]],[11,"from_name","","Return the corresponding ClassAsciiKind variant for the…",33,[[["str"]],[["option",["classasciikind"]],["classasciikind"]]]],[11,"is_negated","","Returns true if this class has been negated.",10,[[["self"]],["bool"]]],[11,"is_equal","","Whether the op is an equality op or not.",36,[[["self"]],["bool"]]],[11,"union","","Build a set from a union.",37,[[["classsetunion"]],["classset"]]],[11,"span","","Return the span of this character class set.",37,[[["self"]],["span"]]],[11,"span","","Return the span of this character class set item.",38,[[["self"]],["span"]]],[11,"is_valid","","Returns true if and only if this character class range is…",12,[[["self"]],["bool"]]],[11,"push","","Push a new item in this union.",13,[[["self"],["classsetitem"]]]],[11,"into_item","","Return this union as a character class set item.",13,[[],["classsetitem"]]],[11,"is_valid","","Returns true if and only if this repetition range is valid.",42,[[["self"]],["bool"]]],[11,"flags","","If this group is non-capturing, then this returns the…",18,[[["self"]],[["option",["flags"]],["flags"]]]],[11,"is_capturing","","Returns true if and only if this group is capturing.",18,[[["self"]],["bool"]]],[11,"capture_index","","Returns the capture index of this group, if this is a…",18,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"add_item","","Add the given item to this sequence of flags.",21,[[["self"],["flagsitem"]],[["usize"],["option",["usize"]]]]],[11,"flag_state","","Returns the state of the given flag in this set.",21,[[["self"],["flag"]],[["bool"],["option",["bool"]]]]],[11,"is_negation","","Returns true if and only if this item is a negation…",44,[[["self"]],["bool"]]],[0,"hir","regex_syntax","Defines a high-level intermediate representation for…",null,null],[3,"CaseFoldError","regex_syntax::hir","An error that occurs when Unicode-aware simple case…",null,null],[3,"Error","","An error that can occur while translating an `Ast` to a…",null,null],[3,"Hir","","A high-level intermediate representation (HIR) for a…",null,null],[3,"ClassUnicode","","A set of characters represented by Unicode scalar values.",null,null],[3,"ClassUnicodeIter","","An iterator over all ranges in a Unicode character class.",null,null],[3,"ClassUnicodeRange","","A single range of characters represented by Unicode scalar…",null,null],[3,"ClassBytes","","A set of characters represented by arbitrary bytes (where…",null,null],[3,"ClassBytesIter","","An iterator over all ranges in a byte character class.",null,null],[3,"ClassBytesRange","","A single range of characters represented by arbitrary bytes.",null,null],[3,"Group","","The high-level intermediate representation for a group.",null,null],[12,"kind","","The kind of this group. If it is a capturing group, then…",51,null],[12,"hir","","The expression inside the capturing group, which may be…",51,null],[3,"Repetition","","The high-level intermediate representation of a repetition…",null,null],[12,"kind","","The kind of this repetition operator.",52,null],[12,"greedy","","Whether this repetition operator is greedy or not. A…",52,null],[12,"hir","","The expression being repeated.",52,null],[4,"ErrorKind","","The type of an error that occurred while building an `Hir`.",null,null],[13,"UnicodeNotAllowed","","This error occurs when a Unicode feature is used when…",53,null],[13,"InvalidUtf8","","This error occurs when translating a pattern that could…",53,null],[13,"UnicodePropertyNotFound","","This occurs when an unrecognized Unicode property name…",53,null],[13,"UnicodePropertyValueNotFound","","This occurs when an unrecognized Unicode property value…",53,null],[13,"UnicodePerlClassNotFound","","This occurs when a Unicode-aware Perl character class…",53,null],[13,"UnicodeCaseUnavailable","","This occurs when the Unicode simple case mapping tables…",53,null],[13,"EmptyClassNotAllowed","","This occurs when the translator attempts to construct a…",53,null],[4,"HirKind","","The kind of an arbitrary `Hir` expression.",null,null],[13,"Empty","","The empty regular expression, which matches everything,…",54,null],[13,"Literal","","A single literal character that matches exactly this…",54,null],[13,"Class","","A single character class that matches any of the…",54,null],[13,"Anchor","","An anchor assertion. An anchor assertion match always has…",54,null],[13,"WordBoundary","","A word boundary assertion, which may or may not be Unicode…",54,null],[13,"Repetition","","A repetition operation applied to a child expression.",54,null],[13,"Group","","A possibly capturing group, which contains a child…",54,null],[13,"Concat","","A concatenation of expressions. A concatenation always has…",54,null],[13,"Alternation","","An alternation of expressions. An alternation always has…",54,null],[4,"Literal","","The high-level intermediate representation of a literal.",null,null],[13,"Unicode","","A single character represented by a Unicode scalar value.",55,null],[13,"Byte","","A single character represented by an arbitrary byte.",55,null],[4,"Class","","The high-level intermediate representation of a character…",null,null],[13,"Unicode","","A set of characters represented by Unicode scalar values.",56,null],[13,"Bytes","","A set of characters represented by arbitrary bytes (one…",56,null],[4,"Anchor","","The high-level intermediate representation for an anchor…",null,null],[13,"StartLine","","Match the beginning of a line or the beginning of text.…",57,null],[13,"EndLine","","Match the end of a line or the end of text. Specifically,…",57,null],[13,"StartText","","Match the beginning of text. Specifically, this matches at…",57,null],[13,"EndText","","Match the end of text. Specifically, this matches at the…",57,null],[4,"WordBoundary","","The high-level intermediate representation for a…",null,null],[13,"Unicode","","Match a Unicode-aware word boundary. That is, this matches…",58,null],[13,"UnicodeNegate","","Match a Unicode-aware negation of a word boundary.",58,null],[13,"Ascii","","Match an ASCII-only word boundary. That is, this matches a…",58,null],[13,"AsciiNegate","","Match an ASCII-only negation of a word boundary.",58,null],[4,"GroupKind","","The kind of group.",null,null],[13,"CaptureIndex","","A normal unnamed capturing group.",59,null],[13,"CaptureName","","A named capturing group.",59,null],[12,"name","regex_syntax::hir::GroupKind","The name of the group.",60,null],[12,"index","","The capture index of the group.",60,null],[13,"NonCapturing","regex_syntax::hir","A non-capturing group.",59,null],[4,"RepetitionKind","","The kind of a repetition operator.",null,null],[13,"ZeroOrOne","","Matches a sub-expression zero or one times.",61,null],[13,"ZeroOrMore","","Matches a sub-expression zero or more times.",61,null],[13,"OneOrMore","","Matches a sub-expression one or more times.",61,null],[13,"Range","","Matches a sub-expression within a bounded range of times.",61,null],[4,"RepetitionRange","","The kind of a counted repetition operator.",null,null],[13,"Exactly","","Matches a sub-expression exactly this many times.",62,null],[13,"AtLeast","","Matches a sub-expression at least this many times.",62,null],[13,"Bounded","","Matches a sub-expression at least `m` times and at most…",62,null],[5,"visit","","Executes an implementation of `Visitor` in constant stack…",null,[[["hir"],["visitor"]],["result"]]],[0,"literal","","Provides routines for extracting literal prefixes and…",null,null],[3,"Literals","regex_syntax::hir::literal","A set of literal byte strings extracted from a regular…",null,null],[3,"Literal","","A single member of a set of literals extracted from a…",null,null],[11,"empty","","Returns a new empty set of literals using default limits.",63,[[],["literals"]]],[11,"prefixes","","Returns a set of literal prefixes extracted from the given…",63,[[["hir"]],["literals"]]],[11,"suffixes","","Returns a set of literal suffixes extracted from the given…",63,[[["hir"]],["literals"]]],[11,"limit_size","","Get the approximate size limit (in bytes) of this set.",63,[[["self"]],["usize"]]],[11,"set_limit_size","","Set the approximate size limit (in bytes) of this set.",63,[[["self"],["usize"]],["literals"]]],[11,"limit_class","","Get the character class size limit for this set.",63,[[["self"]],["usize"]]],[11,"set_limit_class","","Limits the size of character(or byte) classes considered.",63,[[["self"],["usize"]],["literals"]]],[11,"literals","","Returns the set of literals as a slice. Its order is…",63,[[["self"]]]],[11,"min_len","","Returns the length of the smallest literal.",63,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"all_complete","","Returns true if all members in this set are complete.",63,[[["self"]],["bool"]]],[11,"any_complete","","Returns true if any member in this set is complete.",63,[[["self"]],["bool"]]],[11,"contains_empty","","Returns true if this set contains an empty literal.",63,[[["self"]],["bool"]]],[11,"is_empty","","Returns true if this set is empty or if all of its members…",63,[[["self"]],["bool"]]],[11,"to_empty","","Returns a new empty set of literals using this set's limits.",63,[[["self"]],["literals"]]],[11,"longest_common_prefix","","Returns the longest common prefix of all members in this…",63,[[["self"]]]],[11,"longest_common_suffix","","Returns the longest common suffix of all members in this…",63,[[["self"]]]],[11,"trim_suffix","","Returns a new set of literals with the given number of…",63,[[["self"],["usize"]],[["option",["literals"]],["literals"]]]],[11,"unambiguous_prefixes","","Returns a new set of prefixes of this set of literals that…",63,[[["self"]],["literals"]]],[11,"unambiguous_suffixes","","Returns a new set of suffixes of this set of literals that…",63,[[["self"]],["literals"]]],[11,"union_prefixes","","Unions the prefixes from the given expression to this set.",63,[[["hir"],["self"]],["bool"]]],[11,"union_suffixes","","Unions the suffixes from the given expression to this set.",63,[[["hir"],["self"]],["bool"]]],[11,"union","","Unions this set with another set.",63,[[["self"],["literals"]],["bool"]]],[11,"cross_product","","Extends this set with another set.",63,[[["self"],["literals"]],["bool"]]],[11,"cross_add","","Extends each literal in this set with the bytes given.",63,[[["self"]],["bool"]]],[11,"add","","Adds the given literal to this set.",63,[[["literal"],["self"]],["bool"]]],[11,"add_char_class","","Extends each literal in this set with the character class…",63,[[["self"],["classunicode"]],["bool"]]],[11,"add_byte_class","","Extends each literal in this set with the byte class given.",63,[[["classbytes"],["self"]],["bool"]]],[11,"cut","","Cuts every member of this set. When a member is cut, it…",63,[[["self"]]]],[11,"reverse","","Reverses all members in place.",63,[[["self"]]]],[11,"clear","","Clears this set of all members.",63,[[["self"]]]],[11,"new","","Returns a new complete literal with the bytes given.",64,[[["vec",["u8"]],["u8"]],["literal"]]],[11,"empty","","Returns a new complete empty literal.",64,[[],["literal"]]],[11,"is_cut","","Returns true if this literal was \"cut.\"",64,[[["self"]],["bool"]]],[11,"cut","","Cuts this literal.",64,[[["self"]]]],[0,"print","regex_syntax::hir","This module provides a regular expression printer for `Hir`.",null,null],[3,"Printer","regex_syntax::hir::print","A printer for a regular expression's high-level…",null,null],[11,"new","","Create a new printer.",65,[[],["printer"]]],[11,"print","","Print the given `Ast` to the given writer. The writer must…",65,[[["hir"],["self"],["write"]],["result"]]],[0,"translate","regex_syntax::hir","Defines a translator that converts an `Ast` to an `Hir`.",null,null],[3,"TranslatorBuilder","regex_syntax::hir::translate","A builder for constructing an AST->HIR translator.",null,null],[3,"Translator","","A translator maps abstract syntax to a high level…",null,null],[11,"new","","Create a new translator builder with a default c…",66,[[],["translatorbuilder"]]],[11,"build","","Build a translator using the current configuration.",66,[[["self"]],["translator"]]],[11,"allow_invalid_utf8","","When enabled, translation will permit the construction of…",66,[[["self"],["bool"]],["translatorbuilder"]]],[11,"case_insensitive","","Enable or disable the case insensitive flag (`i`) by…",66,[[["self"],["bool"]],["translatorbuilder"]]],[11,"multi_line","","Enable or disable the multi-line matching flag (`m`) by…",66,[[["self"],["bool"]],["translatorbuilder"]]],[11,"dot_matches_new_line","","Enable or disable the \"dot matches any character\" flag…",66,[[["self"],["bool"]],["translatorbuilder"]]],[11,"swap_greed","","Enable or disable the \"swap greed\" flag (`U`) by default.",66,[[["self"],["bool"]],["translatorbuilder"]]],[11,"unicode","","Enable or disable the Unicode flag (`u`) by default.",66,[[["self"],["bool"]],["translatorbuilder"]]],[11,"new","","Create a new translator using the default configuration.",67,[[],["translator"]]],[11,"translate","","Translate the given abstract syntax tree (AST) into a high…",67,[[["str"],["self"],["ast"]],[["result",["hir","error"]],["hir"],["error"]]]],[8,"Visitor","regex_syntax::hir","A trait for visiting the high-level IR (HIR) in depth…",null,null],[16,"Output","","The result of visiting an HIR.",68,null],[16,"Err","","An error that visiting an HIR might return.",68,null],[10,"finish","","All implementors of `Visitor` must provide a `finish`…",68,[[],["result"]]],[11,"start","","This method is called before beginning traversal of the HIR.",68,[[["self"]]]],[11,"visit_pre","","This method is called on an `Hir` before descending into…",68,[[["hir"],["self"]],["result"]]],[11,"visit_post","","This method is called on an `Hir` after descending all of…",68,[[["hir"],["self"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an alternation.",68,[[["self"]],["result"]]],[11,"kind","","Return the type of this error.",69,[[["self"]],["errorkind"]]],[11,"pattern","","The original pattern string in which this error occurred.",69,[[["self"]],["str"]]],[11,"span","","Return the span at which this error occurred.",69,[[["self"]],["span"]]],[11,"kind","","Returns a reference to the underlying HIR kind.",70,[[["self"]],["hirkind"]]],[11,"into_kind","","Consumes ownership of this HIR expression and returns its…",70,[[],["hirkind"]]],[11,"empty","","Returns an empty HIR expression.",70,[[],["hir"]]],[11,"literal","","Creates a literal HIR expression.",70,[[["literal"]],["hir"]]],[11,"class","","Creates a class HIR expression.",70,[[["class"]],["hir"]]],[11,"anchor","","Creates an anchor assertion HIR expression.",70,[[["anchor"]],["hir"]]],[11,"word_boundary","","Creates a word boundary assertion HIR expression.",70,[[["wordboundary"]],["hir"]]],[11,"repetition","","Creates a repetition HIR expression.",70,[[["repetition"]],["hir"]]],[11,"group","","Creates a group HIR expression.",70,[[["group"]],["hir"]]],[11,"concat","","Returns the concatenation of the given expressions.",70,[[["vec",["hir"]],["hir"]],["hir"]]],[11,"alternation","","Returns the alternation of the given expressions.",70,[[["vec",["hir"]],["hir"]],["hir"]]],[11,"dot","","Build an HIR expression for `.`.",70,[[["bool"]],["hir"]]],[11,"any","","Build an HIR expression for `(?s).`.",70,[[["bool"]],["hir"]]],[11,"is_always_utf8","","Return true if and only if this HIR will always match…",70,[[["self"]],["bool"]]],[11,"is_all_assertions","","Returns true if and only if this entire HIR expression is…",70,[[["self"]],["bool"]]],[11,"is_anchored_start","","Return true if and only if this HIR is required to match…",70,[[["self"]],["bool"]]],[11,"is_anchored_end","","Return true if and only if this HIR is required to match…",70,[[["self"]],["bool"]]],[11,"is_line_anchored_start","","Return true if and only if this HIR is required to match…",70,[[["self"]],["bool"]]],[11,"is_line_anchored_end","","Return true if and only if this HIR is required to match…",70,[[["self"]],["bool"]]],[11,"is_any_anchored_start","","Return true if and only if this HIR contains any…",70,[[["self"]],["bool"]]],[11,"is_any_anchored_end","","Return true if and only if this HIR contains any…",70,[[["self"]],["bool"]]],[11,"is_match_empty","","Return true if and only if the empty string is part of the…",70,[[["self"]],["bool"]]],[11,"is_literal","","Return true if and only if this HIR is a simple literal.…",70,[[["self"]],["bool"]]],[11,"is_alternation_literal","","Return true if and only if this HIR is either a simple…",70,[[["self"]],["bool"]]],[11,"is_empty","","Return true if and only if this HIR is the empty regular…",54,[[["self"]],["bool"]]],[11,"has_subexprs","","Returns true if and only if this kind has any (including…",54,[[["self"]],["bool"]]],[11,"is_unicode","","Returns true if and only if this literal corresponds to a…",55,[[["self"]],["bool"]]],[11,"case_fold_simple","","Apply Unicode simple case folding to this character class,…",56,[[["self"]]]],[11,"negate","","Negate this character class in place.",56,[[["self"]]]],[11,"is_always_utf8","","Returns true if and only if this character class will only…",56,[[["self"]],["bool"]]],[11,"new","","Create a new class from a sequence of ranges.",71,[[["i"]],["classunicode"]]],[11,"empty","","Create a new class with no ranges.",71,[[],["classunicode"]]],[11,"push","","Add a new range to this set.",71,[[["self"],["classunicoderange"]]]],[11,"iter","","Return an iterator over all ranges in this class.",71,[[["self"]],["classunicodeiter"]]],[11,"ranges","","Return the underlying ranges as a slice.",71,[[["self"]]]],[11,"case_fold_simple","","Expand this character class such that it contains all case…",71,[[["self"]]]],[11,"try_case_fold_simple","","Expand this character class such that it contains all case…",71,[[["self"]],[["result",["casefolderror"]],["casefolderror"]]]],[11,"negate","","Negate this character class.",71,[[["self"]]]],[11,"union","","Union this character class with the given character class,…",71,[[["self"],["classunicode"]]]],[11,"intersect","","Intersect this character class with the given character…",71,[[["self"],["classunicode"]]]],[11,"difference","","Subtract the given character class from this character…",71,[[["self"],["classunicode"]]]],[11,"symmetric_difference","","Compute the symmetric difference of the given character…",71,[[["self"],["classunicode"]]]],[11,"is_all_ascii","","Returns true if and only if this character class will…",71,[[["self"]],["bool"]]],[11,"new","","Create a new Unicode scalar value range for a character…",72,[[["char"]],["classunicoderange"]]],[11,"start","","Return the start of this range.",72,[[["self"]],["char"]]],[11,"end","","Return the end of this range.",72,[[["self"]],["char"]]],[11,"new","","Create a new class from a sequence of ranges.",73,[[["i"]],["classbytes"]]],[11,"empty","","Create a new class with no ranges.",73,[[],["classbytes"]]],[11,"push","","Add a new range to this set.",73,[[["self"],["classbytesrange"]]]],[11,"iter","","Return an iterator over all ranges in this class.",73,[[["self"]],["classbytesiter"]]],[11,"ranges","","Return the underlying ranges as a slice.",73,[[["self"]]]],[11,"case_fold_simple","","Expand this character class such that it contains all case…",73,[[["self"]]]],[11,"negate","","Negate this byte class.",73,[[["self"]]]],[11,"union","","Union this byte class with the given byte class, in place.",73,[[["self"],["classbytes"]]]],[11,"intersect","","Intersect this byte class with the given byte class, in…",73,[[["self"],["classbytes"]]]],[11,"difference","","Subtract the given byte class from this byte class, in…",73,[[["self"],["classbytes"]]]],[11,"symmetric_difference","","Compute the symmetric difference of the given byte…",73,[[["self"],["classbytes"]]]],[11,"is_all_ascii","","Returns true if and only if this character class will…",73,[[["self"]],["bool"]]],[11,"new","","Create a new byte range for a character class.",74,[[["u8"]],["classbytesrange"]]],[11,"start","","Return the start of this range.",74,[[["self"]],["u8"]]],[11,"end","","Return the end of this range.",74,[[["self"]],["u8"]]],[11,"is_negated","","Returns true if and only if this word boundary assertion…",58,[[["self"]],["bool"]]],[11,"is_match_empty","","Returns true if and only if this repetition operator makes…",52,[[["self"]],["bool"]]],[11,"new","regex_syntax","Create a new parser builder with a default configuration.",75,[[],["parserbuilder"]]],[11,"build","","Build a parser from this configuration with the given…",75,[[["self"]],["parser"]]],[11,"nest_limit","","Set the nesting limit for this parser.",75,[[["self"],["u32"]],["parserbuilder"]]],[11,"octal","","Whether to support octal syntax or not.",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"allow_invalid_utf8","","When enabled, the parser will permit the construction of a…",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"case_insensitive","","Enable or disable the case insensitive flag by default.",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"multi_line","","Enable or disable the multi-line matching flag by default.",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"dot_matches_new_line","","Enable or disable the \"dot matches any character\" flag by…",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"swap_greed","","Enable or disable the \"swap greed\" flag by default.",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"unicode","","Enable or disable the Unicode flag (`u`) by default.",75,[[["self"],["bool"]],["parserbuilder"]]],[11,"new","","Create a new parser with a default configuration.",76,[[],["parser"]]],[11,"parse","","Parse the regular expression into a high level…",76,[[["str"],["self"]],[["result",["hir"]],["hir"]]]],[0,"utf8","","Converts ranges of Unicode scalar values to equivalent…",null,null],[3,"Utf8Range","regex_syntax::utf8","A single inclusive range of UTF-8 bytes.",null,null],[12,"start","","Start of byte range (inclusive).",77,null],[12,"end","","End of byte range (inclusive).",77,null],[3,"Utf8Sequences","","An iterator over ranges of matching UTF-8 byte sequences.",null,null],[4,"Utf8Sequence","","Utf8Sequence represents a sequence of byte ranges.",null,null],[13,"One","","One byte range.",78,null],[13,"Two","","Two successive byte ranges.",78,null],[13,"Three","","Three successive byte ranges.",78,null],[13,"Four","","Four successive byte ranges.",78,null],[11,"as_slice","","Returns the underlying sequence of byte ranges as a slice.",78,[[["self"]]]],[11,"len","","Returns the number of byte ranges in this sequence.",78,[[["self"]],["usize"]]],[11,"reverse","","Reverses the ranges in this sequence.",78,[[["self"]]]],[11,"matches","","Returns true if and only if a prefix of `bytes` matches…",78,[[["self"]],["bool"]]],[11,"matches","","Returns true if and only if the given byte is in this range.",77,[[["self"],["u8"]],["bool"]]],[11,"new","","Create a new iterator over UTF-8 byte ranges for the…",79,[[["char"]],["self"]]],[6,"Result","regex_syntax","A type alias for dealing with errors returned by this crate.",null,null],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_string","","",80,[[["self"]],["string"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","regex_syntax::ast","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"to_string","","",50,[[["self"]],["string"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"to_string","","",27,[[["self"]],["string"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","regex_syntax::ast::parse","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","regex_syntax::ast::print","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","regex_syntax::hir","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_string","","",81,[[["self"]],["string"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"to_string","","",69,[[["self"]],["string"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"to_string","","",70,[[["self"]],["string"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"into_iter","","",82,[[],["i"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"into_iter","","",83,[[],["i"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"to_string","","",53,[[["self"]],["string"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","regex_syntax::hir::literal","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","regex_syntax::hir::print","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","regex_syntax::hir::translate","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","regex_syntax::utf8","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"into_iter","","",79,[[],["i"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"drop","regex_syntax::ast","",27,[[["self"]]]],[11,"drop","","",37,[[["self"]]]],[11,"drop","regex_syntax::hir","",70,[[["self"]]]],[11,"as_ref","regex_syntax::hir::literal","",64,[[["self"]]]],[11,"from","regex_syntax","",0,[[["error"]],["error"]]],[11,"from","","",0,[[["error"]],["error"]]],[11,"next","regex_syntax::hir","",82,[[["self"]],[["option",["classunicoderange"]],["classunicoderange"]]]],[11,"next","","",83,[[["self"]],[["classbytesrange"],["option",["classbytesrange"]]]]],[11,"next","regex_syntax::utf8","",79,[[["self"]],["option"]]],[11,"clone","regex_syntax::ast::parse","",46,[[["self"]],["parserbuilder"]]],[11,"clone","","",47,[[["self"]],["parser"]]],[11,"clone","regex_syntax::ast","",50,[[["self"]],["error"]]],[11,"clone","","",23,[[["self"]],["errorkind"]]],[11,"clone","","",1,[[["self"]],["span"]]],[11,"clone","","",2,[[["self"]],["position"]]],[11,"clone","","",3,[[["self"]],["withcomments"]]],[11,"clone","","",4,[[["self"]],["comment"]]],[11,"clone","","",27,[[["self"]],["ast"]]],[11,"clone","","",5,[[["self"]],["alternation"]]],[11,"clone","","",6,[[["self"]],["concat"]]],[11,"clone","","",7,[[["self"]],["literal"]]],[11,"clone","","",28,[[["self"]],["literalkind"]]],[11,"clone","","",29,[[["self"]],["specialliteralkind"]]],[11,"clone","","",30,[[["self"]],["hexliteralkind"]]],[11,"clone","","",31,[[["self"]],["class"]]],[11,"clone","","",8,[[["self"]],["classperl"]]],[11,"clone","","",32,[[["self"]],["classperlkind"]]],[11,"clone","","",9,[[["self"]],["classascii"]]],[11,"clone","","",33,[[["self"]],["classasciikind"]]],[11,"clone","","",10,[[["self"]],["classunicode"]]],[11,"clone","","",34,[[["self"]],["classunicodekind"]]],[11,"clone","","",36,[[["self"]],["classunicodeopkind"]]],[11,"clone","","",11,[[["self"]],["classbracketed"]]],[11,"clone","","",37,[[["self"]],["classset"]]],[11,"clone","","",38,[[["self"]],["classsetitem"]]],[11,"clone","","",12,[[["self"]],["classsetrange"]]],[11,"clone","","",13,[[["self"]],["classsetunion"]]],[11,"clone","","",14,[[["self"]],["classsetbinaryop"]]],[11,"clone","","",39,[[["self"]],["classsetbinaryopkind"]]],[11,"clone","","",15,[[["self"]],["assertion"]]],[11,"clone","","",40,[[["self"]],["assertionkind"]]],[11,"clone","","",16,[[["self"]],["repetition"]]],[11,"clone","","",17,[[["self"]],["repetitionop"]]],[11,"clone","","",41,[[["self"]],["repetitionkind"]]],[11,"clone","","",42,[[["self"]],["repetitionrange"]]],[11,"clone","","",18,[[["self"]],["group"]]],[11,"clone","","",43,[[["self"]],["groupkind"]]],[11,"clone","","",19,[[["self"]],["capturename"]]],[11,"clone","","",20,[[["self"]],["setflags"]]],[11,"clone","","",21,[[["self"]],["flags"]]],[11,"clone","","",22,[[["self"]],["flagsitem"]]],[11,"clone","","",44,[[["self"]],["flagsitemkind"]]],[11,"clone","","",45,[[["self"]],["flag"]]],[11,"clone","regex_syntax","",0,[[["self"]],["error"]]],[11,"clone","regex_syntax::hir::literal","",63,[[["self"]],["literals"]]],[11,"clone","","",64,[[["self"]],["literal"]]],[11,"clone","regex_syntax::hir::translate","",66,[[["self"]],["translatorbuilder"]]],[11,"clone","","",67,[[["self"]],["translator"]]],[11,"clone","regex_syntax::hir","",69,[[["self"]],["error"]]],[11,"clone","","",53,[[["self"]],["errorkind"]]],[11,"clone","","",70,[[["self"]],["hir"]]],[11,"clone","","",54,[[["self"]],["hirkind"]]],[11,"clone","","",55,[[["self"]],["literal"]]],[11,"clone","","",56,[[["self"]],["class"]]],[11,"clone","","",71,[[["self"]],["classunicode"]]],[11,"clone","","",72,[[["self"]],["classunicoderange"]]],[11,"clone","","",73,[[["self"]],["classbytes"]]],[11,"clone","","",74,[[["self"]],["classbytesrange"]]],[11,"clone","","",57,[[["self"]],["anchor"]]],[11,"clone","","",58,[[["self"]],["wordboundary"]]],[11,"clone","","",51,[[["self"]],["group"]]],[11,"clone","","",59,[[["self"]],["groupkind"]]],[11,"clone","","",52,[[["self"]],["repetition"]]],[11,"clone","","",61,[[["self"]],["repetitionkind"]]],[11,"clone","","",62,[[["self"]],["repetitionrange"]]],[11,"clone","regex_syntax","",75,[[["self"]],["parserbuilder"]]],[11,"clone","","",76,[[["self"]],["parser"]]],[11,"clone","regex_syntax::utf8","",78,[[["self"]],["utf8sequence"]]],[11,"clone","","",77,[[["self"]],["utf8range"]]],[11,"default","regex_syntax::ast::parse","",46,[[],["parserbuilder"]]],[11,"default","regex_syntax::hir::translate","",66,[[],["translatorbuilder"]]],[11,"default","regex_syntax::hir","",72,[[],["classunicoderange"]]],[11,"default","","",74,[[],["classbytesrange"]]],[11,"default","regex_syntax","",75,[[],["parserbuilder"]]],[11,"cmp","regex_syntax::ast","",1,[[["self"],["span"]],["ordering"]]],[11,"cmp","","",2,[[["position"],["self"]],["ordering"]]],[11,"cmp","regex_syntax::hir::literal","",64,[[["literal"],["self"]],["ordering"]]],[11,"cmp","regex_syntax::hir","",72,[[["classunicoderange"],["self"]],["ordering"]]],[11,"cmp","","",74,[[["self"],["classbytesrange"]],["ordering"]]],[11,"cmp","regex_syntax::utf8","",78,[[["self"],["utf8sequence"]],["ordering"]]],[11,"cmp","","",77,[[["self"],["utf8range"]],["ordering"]]],[11,"eq","regex_syntax::ast","",50,[[["error"],["self"]],["bool"]]],[11,"ne","","",50,[[["error"],["self"]],["bool"]]],[11,"eq","","",23,[[["self"],["errorkind"]],["bool"]]],[11,"ne","","",23,[[["self"],["errorkind"]],["bool"]]],[11,"eq","","",1,[[["self"],["span"]],["bool"]]],[11,"ne","","",1,[[["self"],["span"]],["bool"]]],[11,"eq","","",2,[[["position"],["self"]],["bool"]]],[11,"ne","","",2,[[["position"],["self"]],["bool"]]],[11,"eq","","",3,[[["self"],["withcomments"]],["bool"]]],[11,"ne","","",3,[[["self"],["withcomments"]],["bool"]]],[11,"eq","","",4,[[["comment"],["self"]],["bool"]]],[11,"ne","","",4,[[["comment"],["self"]],["bool"]]],[11,"eq","","",27,[[["ast"],["self"]],["bool"]]],[11,"ne","","",27,[[["ast"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["alternation"]],["bool"]]],[11,"ne","","",5,[[["self"],["alternation"]],["bool"]]],[11,"eq","","",6,[[["self"],["concat"]],["bool"]]],[11,"ne","","",6,[[["self"],["concat"]],["bool"]]],[11,"eq","","",7,[[["self"],["literal"]],["bool"]]],[11,"ne","","",7,[[["self"],["literal"]],["bool"]]],[11,"eq","","",28,[[["literalkind"],["self"]],["bool"]]],[11,"ne","","",28,[[["literalkind"],["self"]],["bool"]]],[11,"eq","","",29,[[["specialliteralkind"],["self"]],["bool"]]],[11,"eq","","",30,[[["hexliteralkind"],["self"]],["bool"]]],[11,"eq","","",31,[[["self"],["class"]],["bool"]]],[11,"ne","","",31,[[["self"],["class"]],["bool"]]],[11,"eq","","",8,[[["self"],["classperl"]],["bool"]]],[11,"ne","","",8,[[["self"],["classperl"]],["bool"]]],[11,"eq","","",32,[[["self"],["classperlkind"]],["bool"]]],[11,"eq","","",9,[[["classascii"],["self"]],["bool"]]],[11,"ne","","",9,[[["classascii"],["self"]],["bool"]]],[11,"eq","","",33,[[["classasciikind"],["self"]],["bool"]]],[11,"eq","","",10,[[["classunicode"],["self"]],["bool"]]],[11,"ne","","",10,[[["classunicode"],["self"]],["bool"]]],[11,"eq","","",34,[[["classunicodekind"],["self"]],["bool"]]],[11,"ne","","",34,[[["classunicodekind"],["self"]],["bool"]]],[11,"eq","","",36,[[["self"],["classunicodeopkind"]],["bool"]]],[11,"eq","","",11,[[["classbracketed"],["self"]],["bool"]]],[11,"ne","","",11,[[["classbracketed"],["self"]],["bool"]]],[11,"eq","","",37,[[["self"],["classset"]],["bool"]]],[11,"ne","","",37,[[["self"],["classset"]],["bool"]]],[11,"eq","","",38,[[["classsetitem"],["self"]],["bool"]]],[11,"ne","","",38,[[["classsetitem"],["self"]],["bool"]]],[11,"eq","","",12,[[["self"],["classsetrange"]],["bool"]]],[11,"ne","","",12,[[["self"],["classsetrange"]],["bool"]]],[11,"eq","","",13,[[["classsetunion"],["self"]],["bool"]]],[11,"ne","","",13,[[["classsetunion"],["self"]],["bool"]]],[11,"eq","","",14,[[["self"],["classsetbinaryop"]],["bool"]]],[11,"ne","","",14,[[["self"],["classsetbinaryop"]],["bool"]]],[11,"eq","","",39,[[["classsetbinaryopkind"],["self"]],["bool"]]],[11,"eq","","",15,[[["assertion"],["self"]],["bool"]]],[11,"ne","","",15,[[["assertion"],["self"]],["bool"]]],[11,"eq","","",40,[[["self"],["assertionkind"]],["bool"]]],[11,"eq","","",16,[[["self"],["repetition"]],["bool"]]],[11,"ne","","",16,[[["self"],["repetition"]],["bool"]]],[11,"eq","","",17,[[["repetitionop"],["self"]],["bool"]]],[11,"ne","","",17,[[["repetitionop"],["self"]],["bool"]]],[11,"eq","","",41,[[["repetitionkind"],["self"]],["bool"]]],[11,"ne","","",41,[[["repetitionkind"],["self"]],["bool"]]],[11,"eq","","",42,[[["repetitionrange"],["self"]],["bool"]]],[11,"ne","","",42,[[["repetitionrange"],["self"]],["bool"]]],[11,"eq","","",18,[[["self"],["group"]],["bool"]]],[11,"ne","","",18,[[["self"],["group"]],["bool"]]],[11,"eq","","",43,[[["groupkind"],["self"]],["bool"]]],[11,"ne","","",43,[[["groupkind"],["self"]],["bool"]]],[11,"eq","","",19,[[["capturename"],["self"]],["bool"]]],[11,"ne","","",19,[[["capturename"],["self"]],["bool"]]],[11,"eq","","",20,[[["setflags"],["self"]],["bool"]]],[11,"ne","","",20,[[["setflags"],["self"]],["bool"]]],[11,"eq","","",21,[[["self"],["flags"]],["bool"]]],[11,"ne","","",21,[[["self"],["flags"]],["bool"]]],[11,"eq","","",22,[[["flagsitem"],["self"]],["bool"]]],[11,"ne","","",22,[[["flagsitem"],["self"]],["bool"]]],[11,"eq","","",44,[[["flagsitemkind"],["self"]],["bool"]]],[11,"ne","","",44,[[["flagsitemkind"],["self"]],["bool"]]],[11,"eq","","",45,[[["flag"],["self"]],["bool"]]],[11,"eq","regex_syntax","",0,[[["error"],["self"]],["bool"]]],[11,"ne","","",0,[[["error"],["self"]],["bool"]]],[11,"eq","regex_syntax::hir::literal","",63,[[["self"],["literals"]],["bool"]]],[11,"ne","","",63,[[["self"],["literals"]],["bool"]]],[11,"eq","","",64,[[["literal"],["self"]],["bool"]]],[11,"eq","regex_syntax::hir","",69,[[["self"],["error"]],["bool"]]],[11,"ne","","",69,[[["self"],["error"]],["bool"]]],[11,"eq","","",53,[[["errorkind"],["self"]],["bool"]]],[11,"eq","","",70,[[["hir"],["self"]],["bool"]]],[11,"ne","","",70,[[["hir"],["self"]],["bool"]]],[11,"eq","","",54,[[["self"],["hirkind"]],["bool"]]],[11,"ne","","",54,[[["self"],["hirkind"]],["bool"]]],[11,"eq","","",55,[[["self"],["literal"]],["bool"]]],[11,"ne","","",55,[[["self"],["literal"]],["bool"]]],[11,"eq","","",56,[[["self"],["class"]],["bool"]]],[11,"ne","","",56,[[["self"],["class"]],["bool"]]],[11,"eq","","",71,[[["self"],["classunicode"]],["bool"]]],[11,"ne","","",71,[[["self"],["classunicode"]],["bool"]]],[11,"eq","","",72,[[["classunicoderange"],["self"]],["bool"]]],[11,"ne","","",72,[[["classunicoderange"],["self"]],["bool"]]],[11,"eq","","",73,[[["classbytes"],["self"]],["bool"]]],[11,"ne","","",73,[[["classbytes"],["self"]],["bool"]]],[11,"eq","","",74,[[["self"],["classbytesrange"]],["bool"]]],[11,"ne","","",74,[[["self"],["classbytesrange"]],["bool"]]],[11,"eq","","",57,[[["self"],["anchor"]],["bool"]]],[11,"eq","","",58,[[["self"],["wordboundary"]],["bool"]]],[11,"eq","","",51,[[["group"],["self"]],["bool"]]],[11,"ne","","",51,[[["group"],["self"]],["bool"]]],[11,"eq","","",59,[[["self"],["groupkind"]],["bool"]]],[11,"ne","","",59,[[["self"],["groupkind"]],["bool"]]],[11,"eq","","",52,[[["repetition"],["self"]],["bool"]]],[11,"ne","","",52,[[["repetition"],["self"]],["bool"]]],[11,"eq","","",61,[[["self"],["repetitionkind"]],["bool"]]],[11,"ne","","",61,[[["self"],["repetitionkind"]],["bool"]]],[11,"eq","","",62,[[["self"],["repetitionrange"]],["bool"]]],[11,"ne","","",62,[[["self"],["repetitionrange"]],["bool"]]],[11,"eq","regex_syntax::utf8","",78,[[["self"],["utf8sequence"]],["bool"]]],[11,"ne","","",78,[[["self"],["utf8sequence"]],["bool"]]],[11,"eq","","",77,[[["self"],["utf8range"]],["bool"]]],[11,"ne","","",77,[[["self"],["utf8range"]],["bool"]]],[11,"partial_cmp","regex_syntax::ast","",1,[[["self"],["span"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",2,[[["position"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","regex_syntax::hir::literal","",64,[[["literal"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","regex_syntax::hir","",72,[[["classunicoderange"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",72,[[["classunicoderange"],["self"]],["bool"]]],[11,"le","","",72,[[["classunicoderange"],["self"]],["bool"]]],[11,"gt","","",72,[[["classunicoderange"],["self"]],["bool"]]],[11,"ge","","",72,[[["classunicoderange"],["self"]],["bool"]]],[11,"partial_cmp","","",74,[[["self"],["classbytesrange"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",74,[[["self"],["classbytesrange"]],["bool"]]],[11,"le","","",74,[[["self"],["classbytesrange"]],["bool"]]],[11,"gt","","",74,[[["self"],["classbytesrange"]],["bool"]]],[11,"ge","","",74,[[["self"],["classbytesrange"]],["bool"]]],[11,"partial_cmp","regex_syntax::utf8","",78,[[["self"],["utf8sequence"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",78,[[["self"],["utf8sequence"]],["bool"]]],[11,"le","","",78,[[["self"],["utf8sequence"]],["bool"]]],[11,"gt","","",78,[[["self"],["utf8sequence"]],["bool"]]],[11,"ge","","",78,[[["self"],["utf8sequence"]],["bool"]]],[11,"partial_cmp","","",77,[[["self"],["utf8range"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",77,[[["self"],["utf8range"]],["bool"]]],[11,"le","","",77,[[["self"],["utf8range"]],["bool"]]],[11,"gt","","",77,[[["self"],["utf8range"]],["bool"]]],[11,"ge","","",77,[[["self"],["utf8range"]],["bool"]]],[11,"deref","regex_syntax::hir::literal","",64,[[["self"]],["vec"]]],[11,"deref_mut","","",64,[[["self"]],["vec"]]],[11,"fmt","regex_syntax::ast::parse","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::ast::print","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::ast","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::hir::literal","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::hir::print","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::hir::translate","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::hir","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",83,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::hir","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::utf8","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::ast","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax::hir","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","regex_syntax","",80,[[["formatter"],["self"]],["result"]]],[11,"description","regex_syntax::ast","",50,[[["self"]],["str"]]],[11,"description","regex_syntax","",0,[[["self"]],["str"]]],[11,"description","regex_syntax::hir","",69,[[["self"]],["str"]]],[11,"start","regex_syntax::ast","This method is called before beginning traversal of the AST.",49,[[["self"]]]],[11,"visit_pre","","This method is called on an `Ast` before descending into…",49,[[["ast"],["self"]],["result"]]],[11,"visit_post","","This method is called on an `Ast` after descending all of…",49,[[["ast"],["self"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an…",49,[[["self"]],["result"]]],[11,"visit_class_set_item_pre","","This method is called on every `ClassSetItem` before…",49,[[["classsetitem"],["self"]],["result"]]],[11,"visit_class_set_item_post","","This method is called on every `ClassSetItem` after…",49,[[["classsetitem"],["self"]],["result"]]],[11,"visit_class_set_binary_op_pre","","This method is called on every `ClassSetBinaryOp` before…",49,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_post","","This method is called on every `ClassSetBinaryOp` after…",49,[[["self"],["classsetbinaryop"]],["result"]]],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right hand…",49,[[["self"],["classsetbinaryop"]],["result"]]],[11,"start","regex_syntax::hir","This method is called before beginning traversal of the HIR.",68,[[["self"]]]],[11,"visit_pre","","This method is called on an `Hir` before descending into…",68,[[["hir"],["self"]],["result"]]],[11,"visit_post","","This method is called on an `Hir` after descending all of…",68,[[["hir"],["self"]],["result"]]],[11,"visit_alternation_in","","This method is called between child nodes of an alternation.",68,[[["self"]],["result"]]]],"p":[[4,"Error"],[3,"Span"],[3,"Position"],[3,"WithComments"],[3,"Comment"],[3,"Alternation"],[3,"Concat"],[3,"Literal"],[3,"ClassPerl"],[3,"ClassAscii"],[3,"ClassUnicode"],[3,"ClassBracketed"],[3,"ClassSetRange"],[3,"ClassSetUnion"],[3,"ClassSetBinaryOp"],[3,"Assertion"],[3,"Repetition"],[3,"RepetitionOp"],[3,"Group"],[3,"CaptureName"],[3,"SetFlags"],[3,"Flags"],[3,"FlagsItem"],[4,"ErrorKind"],[13,"FlagDuplicate"],[13,"FlagRepeatedNegation"],[13,"GroupNameDuplicate"],[4,"Ast"],[4,"LiteralKind"],[4,"SpecialLiteralKind"],[4,"HexLiteralKind"],[4,"Class"],[4,"ClassPerlKind"],[4,"ClassAsciiKind"],[4,"ClassUnicodeKind"],[13,"NamedValue"],[4,"ClassUnicodeOpKind"],[4,"ClassSet"],[4,"ClassSetItem"],[4,"ClassSetBinaryOpKind"],[4,"AssertionKind"],[4,"RepetitionKind"],[4,"RepetitionRange"],[4,"GroupKind"],[4,"FlagsItemKind"],[4,"Flag"],[3,"ParserBuilder"],[3,"Parser"],[3,"Printer"],[8,"Visitor"],[3,"Error"],[3,"Group"],[3,"Repetition"],[4,"ErrorKind"],[4,"HirKind"],[4,"Literal"],[4,"Class"],[4,"Anchor"],[4,"WordBoundary"],[4,"GroupKind"],[13,"CaptureName"],[4,"RepetitionKind"],[4,"RepetitionRange"],[3,"Literals"],[3,"Literal"],[3,"Printer"],[3,"TranslatorBuilder"],[3,"Translator"],[8,"Visitor"],[3,"Error"],[3,"Hir"],[3,"ClassUnicode"],[3,"ClassUnicodeRange"],[3,"ClassBytes"],[3,"ClassBytesRange"],[3,"ParserBuilder"],[3,"Parser"],[3,"Utf8Range"],[4,"Utf8Sequence"],[3,"Utf8Sequences"],[3,"UnicodeWordError"],[3,"CaseFoldError"],[3,"ClassUnicodeIter"],[3,"ClassBytesIter"]]};
searchIndex["remove_dir_all"] = {"doc":"","i":[[5,"remove_dir_all","remove_dir_all","Removes a directory at this path, after removing all its…",null,[[["p"]],[["error"],["result",["error"]]]]]],"p":[]};
searchIndex["rustc_workspace_hack"] = {"doc":"","i":[],"p":[]};
searchIndex["rustfix"] = {"doc":"","i":[[3,"LinePosition","rustfix","",null,null],[12,"line","","",0,null],[12,"column","","",0,null],[3,"LineRange","","",null,null],[12,"start","","",1,null],[12,"end","","",1,null],[3,"Suggestion","","An error/warning and possible solutions for fixing it",null,null],[12,"message","","",2,null],[12,"snippets","","",2,null],[12,"solutions","","",2,null],[3,"Solution","","",null,null],[12,"message","","",3,null],[12,"replacements","","",3,null],[3,"Snippet","","",null,null],[12,"file_name","","",4,null],[12,"line_range","","",4,null],[12,"range","","",4,null],[12,"text","","leading surrounding text, text to replace, trailing…",4,null],[3,"Replacement","","",null,null],[12,"snippet","","",5,null],[12,"replacement","","",5,null],[3,"CodeFix","","",null,null],[4,"Filter","","",null,null],[13,"MachineApplicableOnly","","",6,null],[13,"Everything","","",6,null],[5,"get_suggestions_from_json","","",null,[[["str"],["filter"],["hashset"]],[["result",["vec"]],["vec",["suggestion"]]]]],[5,"collect_suggestions","","",null,[[["filter"],["hashset"],["diagnostic"]],[["suggestion"],["option",["suggestion"]]]]],[5,"apply_suggestions","","",null,[[["str"]],[["string"],["error"],["result",["string","error"]]]]],[0,"diagnostics","","Rustc Diagnostic JSON Output",null,null],[3,"Diagnostic","rustfix::diagnostics","",null,null],[12,"message","","The primary error message.",7,null],[12,"code","","",7,null],[12,"spans","","",7,null],[12,"children","","Associated diagnostic messages.",7,null],[12,"rendered","","The message as rustc would render it. Currently this is…",7,null],[3,"DiagnosticSpan","","",null,null],[12,"file_name","","",8,null],[12,"byte_start","","",8,null],[12,"byte_end","","",8,null],[12,"line_start","","1-based.",8,null],[12,"line_end","","",8,null],[12,"column_start","","1-based, character offset.",8,null],[12,"column_end","","",8,null],[12,"text","","Source text from the start of line_start to the end of…",8,null],[12,"suggested_replacement","","If we are suggesting a replacement, this will contain text…",8,null],[12,"suggestion_applicability","","",8,null],[3,"DiagnosticSpanLine","","",null,null],[12,"text","","",9,null],[12,"highlight_start","","1-based, character offset in self.text.",9,null],[12,"highlight_end","","",9,null],[3,"DiagnosticCode","","",null,null],[12,"code","","The code itself.",10,null],[4,"Applicability","","",null,null],[13,"MachineApplicable","","",11,null],[13,"HasPlaceholders","","",11,null],[13,"MaybeIncorrect","","",11,null],[13,"Unspecified","","",11,null],[11,"new","rustfix","",12,[[["str"]],["codefix"]]],[11,"apply","","",12,[[["self"],["suggestion"]],[["error"],["result",["error"]]]]],[11,"finish","","",12,[[["self"]],[["string"],["error"],["result",["string","error"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","rustfix::diagnostics","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"clone","","",7,[[["self"]],["diagnostic"]]],[11,"clone","","",8,[[["self"]],["diagnosticspan"]]],[11,"clone","","",11,[[["self"]],["applicability"]]],[11,"clone","","",9,[[["self"]],["diagnosticspanline"]]],[11,"clone","","",10,[[["self"]],["diagnosticcode"]]],[11,"clone","rustfix","",6,[[["self"]],["filter"]]],[11,"clone","","",0,[[["self"]],["lineposition"]]],[11,"clone","","",1,[[["self"]],["linerange"]]],[11,"clone","","",2,[[["self"]],["suggestion"]]],[11,"clone","","",3,[[["self"]],["solution"]]],[11,"clone","","",4,[[["self"]],["snippet"]]],[11,"clone","","",5,[[["self"]],["replacement"]]],[11,"eq","rustfix::diagnostics","",7,[[["self"],["diagnostic"]],["bool"]]],[11,"ne","","",7,[[["self"],["diagnostic"]],["bool"]]],[11,"eq","","",8,[[["diagnosticspan"],["self"]],["bool"]]],[11,"ne","","",8,[[["diagnosticspan"],["self"]],["bool"]]],[11,"eq","","",11,[[["applicability"],["self"]],["bool"]]],[11,"eq","","",9,[[["self"],["diagnosticspanline"]],["bool"]]],[11,"ne","","",9,[[["self"],["diagnosticspanline"]],["bool"]]],[11,"eq","","",10,[[["self"],["diagnosticcode"]],["bool"]]],[11,"ne","","",10,[[["self"],["diagnosticcode"]],["bool"]]],[11,"eq","rustfix","",0,[[["lineposition"],["self"]],["bool"]]],[11,"ne","","",0,[[["lineposition"],["self"]],["bool"]]],[11,"eq","","",1,[[["linerange"],["self"]],["bool"]]],[11,"ne","","",1,[[["linerange"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["suggestion"]],["bool"]]],[11,"ne","","",2,[[["self"],["suggestion"]],["bool"]]],[11,"eq","","",3,[[["solution"],["self"]],["bool"]]],[11,"ne","","",3,[[["solution"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["snippet"]],["bool"]]],[11,"ne","","",4,[[["self"],["snippet"]],["bool"]]],[11,"eq","","",5,[[["replacement"],["self"]],["bool"]]],[11,"ne","","",5,[[["replacement"],["self"]],["bool"]]],[11,"fmt","rustfix::diagnostics","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","rustfix","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"hash","rustfix::diagnostics","",7,[[["self"],["__h"]]]],[11,"hash","","",8,[[["self"],["__h"]]]],[11,"hash","","",11,[[["self"],["__h"]]]],[11,"hash","","",9,[[["self"],["__h"]]]],[11,"hash","","",10,[[["self"],["__h"]]]],[11,"hash","rustfix","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"hash","","",5,[[["self"],["__h"]]]],[11,"deserialize","rustfix::diagnostics","",7,[[["__d"]],["result"]]],[11,"deserialize","","",8,[[["__d"]],["result"]]],[11,"deserialize","","",11,[[["__d"]],["result"]]],[11,"deserialize","","",9,[[["__d"]],["result"]]],[11,"deserialize","","",10,[[["__d"]],["result"]]]],"p":[[3,"LinePosition"],[3,"LineRange"],[3,"Suggestion"],[3,"Solution"],[3,"Snippet"],[3,"Replacement"],[4,"Filter"],[3,"Diagnostic"],[3,"DiagnosticSpan"],[3,"DiagnosticSpanLine"],[3,"DiagnosticCode"],[4,"Applicability"],[3,"CodeFix"]]};
searchIndex["rusty_fork"] = {"doc":"Rusty-fork provides a way to \"fork\" unit tests into…","i":[[3,"RustyForkId","rusty_fork","The type of the value produced by `rusty_fork_id!`.",null,null],[3,"ChildWrapper","","Wraps a `std::process::Child` to coordinate state between…",null,null],[3,"ExitStatusWrapper","","Wraps `std::process::ExitStatus`. Historically, this was…",null,null],[4,"Error","","Enum for errors produced by the rusty-fork crate.",null,null],[13,"UnknownFlag","","An unknown flag was encountered when examining the current…",0,null],[13,"DisallowedFlag","","A flag was encountered when examining the current…",0,null],[13,"SpawnError","","Spawning a subprocess failed.",0,null],[5,"fork","","Simulate a process fork.",null,[[["str"],["child"],["modifier"],["parent"],["id"]],["result"]]],[0,"fork_test","","Support code for the `rusty_fork_test!` macro and similar.",null,null],[5,"fix_module_path","rusty_fork::fork_test","Transform a string representing a qualified path as…",null,[[["str"]],["str"]]],[11,"success","rusty_fork","Was termination successful? Signal termination is not…",1,[[["self"]],["bool"]]],[11,"code","","Returns the exit code of the process, if any.",1,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"unix_signal","","Returns the Unix signal which terminated this process.",1,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"inner","","Return a reference to the inner `std::process::Child`.",2,[[["self"]],["child"]]],[11,"inner_mut","","Return a mutable reference to the inner…",2,[[["self"]],["child"]]],[11,"kill","","Forces the child to exit. This is equivalent to sending a…",2,[[["self"]],["result"]]],[11,"id","","Returns the OS-assigned processor identifier associated…",2,[[["self"]],["u32"]]],[11,"wait","","Waits for the child to exit completely, returning the…",2,[[["self"]],[["result",["exitstatuswrapper"]],["exitstatuswrapper"]]]],[11,"try_wait","","Attempts to collect the exit status of the child if it has…",2,[[["self"]],[["option",["exitstatuswrapper"]],["result",["option"]]]]],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all…",2,[[],[["result",["output"]],["output"]]]],[11,"wait_timeout","","Wait for the child to exit, but only up to the given…",2,[[["self"],["duration"]],[["option",["exitstatuswrapper"]],["result",["option"]]]]],[6,"Result","","General `Result` type for rusty-fork.",null,null],[14,"rusty_fork_id","","Produce a hashable identifier unique to the particular…",null,null],[14,"rusty_fork_test","","Run Rust tests in subprocesses.",null,null],[14,"rusty_fork_test_name","","Given the unqualified name of a `#[test]` function,…",null,null],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",0,[[["error"]],["error"]]],[11,"clone","","",3,[[["self"]],["rustyforkid"]]],[11,"clone","","",1,[[["self"]],["exitstatuswrapper"]]],[11,"eq","","",3,[[["self"],["rustyforkid"]],["bool"]]],[11,"ne","","",3,[[["self"],["rustyforkid"]],["bool"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"cause","","",0,[[["self"]],[["error"],["option",["error"]]]]]],"p":[[4,"Error"],[3,"ExitStatusWrapper"],[3,"ChildWrapper"],[3,"RustyForkId"]]};
searchIndex["ryu"] = {"doc":"Pure Rust implementation of Ryū, an algorithm to quickly…","i":[[3,"Buffer","ryu","Safe API for formatting floating point numbers to text.",null,null],[11,"new","","This is a cheap operation; you don't need to worry about…",0,[[],["self"]]],[11,"format","","Print a floating point number into this buffer and return…",0,[[["self"],["float"]],["str"]]],[11,"format_finite","","Print a floating point number into this buffer and return…",0,[[["self"],["float"]],["str"]]],[0,"raw","","Unsafe functions that mirror the API of the C…",null,null],[5,"format32","ryu::raw","Print f32 to the given buffer and return number of bytes…",null,[[["f32"]],["usize"]]],[5,"format64","","Print f64 to the given buffer and return number of bytes…",null,[[["f64"]],["usize"]]],[8,"Float","ryu","A floating point number, f32 or f64, that can be written…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["buffer"]]],[11,"default","","",0,[[],["self"]]]],"p":[[3,"Buffer"]]};
searchIndex["same_file"] = {"doc":"This crate provides a safe and simple cross platform way…","i":[[3,"Handle","same_file","A handle to a file that can be tested for equality with…",null,null],[5,"is_same_file","","Returns true if the two file paths may correspond to the…",null,[[["q"],["p"]],[["result",["bool"]],["bool"]]]],[11,"from_path","","Construct a handle from a path.",0,[[["path"],["asref",["path"]]],[["result",["handle"]],["handle"]]]],[11,"from_file","","Construct a handle from a file.",0,[[["file"]],[["result",["handle"]],["handle"]]]],[11,"stdin","","Construct a handle from stdin.",0,[[],[["result",["handle"]],["handle"]]]],[11,"stdout","","Construct a handle from stdout.",0,[[],[["result",["handle"]],["handle"]]]],[11,"stderr","","Construct a handle from stderr.",0,[[],[["result",["handle"]],["handle"]]]],[11,"as_file","","Return a reference to the underlying file.",0,[[["self"]],["file"]]],[11,"as_file_mut","","Return a mutable reference to the underlying file.",0,[[["self"]],["file"]]],[11,"dev","","Return the underlying device number of this handle.",0,[[["self"]],["u64"]]],[11,"ino","","Return the underlying inode number of this handle.",0,[[["self"]],["u64"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["handle"],["self"]],["bool"]]],[11,"ne","","",0,[[["handle"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"as_raw_fd","","",0,[[["self"]],["rawfd"]]],[11,"into_raw_fd","","",0,[[],["rawfd"]]]],"p":[[3,"Handle"]]};
searchIndex["semver"] = {"doc":"Semantic version parsing and comparison.","i":[[3,"Version","semver","Represents a version number conforming to the semantic…",null,null],[12,"major","","The major version, to be incremented on incompatible…",0,null],[12,"minor","","The minor version, to be incremented when functionality is…",0,null],[12,"patch","","The patch version, to be incremented when…",0,null],[12,"pre","","The pre-release version identifier, if one exists.",0,null],[12,"build","","The build metadata, ignored when determining version…",0,null],[3,"VersionReq","","A `VersionReq` is a struct containing a list of predicates…",null,null],[4,"Identifier","","An identifier in the pre-release or build metadata.",null,null],[13,"Numeric","","An identifier that's solely numbers.",1,null],[13,"AlphaNumeric","","An identifier with letters and numbers.",1,null],[4,"SemVerError","","An error type for this crate",null,null],[13,"ParseError","","An error ocurred while parsing.",2,null],[4,"ReqParseError","","A `ReqParseError` is returned from methods which parse a…",null,null],[13,"InvalidVersionRequirement","","The given version requirement is invalid.",3,null],[13,"OpAlreadySet","","You have already provided an operation, such as `=`, `~`,…",3,null],[13,"InvalidSigil","","The sigil you have written is not correct.",3,null],[13,"VersionComponentsMustBeNumeric","","All components of a version must be numeric.",3,null],[13,"InvalidIdentifier","","There was an error parsing an identifier.",3,null],[13,"MajorVersionRequired","","At least a major version is required.",3,null],[13,"UnimplementedVersionRequirement","","An unimplemented version requirement.",3,null],[13,"DeprecatedVersionRequirement","","This form of requirement is deprecated.",3,null],[11,"new","","Contructs the simple case without pre or build.",0,[[["u64"]],["version"]]],[11,"parse","","Parse a string into a semver object.",0,[[["str"]],[["version"],["semvererror"],["result",["version","semvererror"]]]]],[11,"increment_patch","","Increments the patch number for this Version (Must be…",0,[[["self"]]]],[11,"increment_minor","","Increments the minor version number for this Version (Must…",0,[[["self"]]]],[11,"increment_major","","Increments the major version number for this Version (Must…",0,[[["self"]]]],[11,"is_prerelease","","Checks to see if the current Version is in pre-release…",0,[[["self"]],["bool"]]],[11,"any","","`any()` is a factory method which creates a `VersionReq`…",4,[[],["versionreq"]]],[11,"parse","","`parse()` is the main constructor of a `VersionReq`. It…",4,[[["str"]],[["result",["versionreq","reqparseerror"]],["reqparseerror"],["versionreq"]]]],[11,"exact","","`exact()` is a factory method which creates a `VersionReq`…",4,[[["version"]],["versionreq"]]],[11,"matches","","`matches()` matches a given `Version` against this…",4,[[["version"],["self"]],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",1,[[["identifier"]],["identifier"]]],[11,"from","","",0,[[["version"]],["version"]]],[11,"from","","",0,[[],["version"]]],[11,"from","","",4,[[["versionreq"]],["versionreq"]]],[11,"from","","",3,[[["string"]],["reqparseerror"]]],[11,"clone","","",1,[[["self"]],["identifier"]]],[11,"clone","","",0,[[["self"]],["version"]]],[11,"clone","","",2,[[["self"]],["semvererror"]]],[11,"clone","","",4,[[["self"]],["versionreq"]]],[11,"clone","","",3,[[["self"]],["reqparseerror"]]],[11,"cmp","","",1,[[["identifier"],["self"]],["ordering"]]],[11,"cmp","","",0,[[["version"],["self"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["versionreq"]],["ordering"]]],[11,"eq","","",1,[[["identifier"],["self"]],["bool"]]],[11,"ne","","",1,[[["identifier"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["semvererror"]],["bool"]]],[11,"ne","","",2,[[["self"],["semvererror"]],["bool"]]],[11,"eq","","",0,[[["version"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["versionreq"]],["bool"]]],[11,"ne","","",4,[[["self"],["versionreq"]],["bool"]]],[11,"eq","","",3,[[["reqparseerror"],["self"]],["bool"]]],[11,"ne","","",3,[[["reqparseerror"],["self"]],["bool"]]],[11,"partial_cmp","","",1,[[["identifier"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",1,[[["identifier"],["self"]],["bool"]]],[11,"le","","",1,[[["identifier"],["self"]],["bool"]]],[11,"gt","","",1,[[["identifier"],["self"]],["bool"]]],[11,"ge","","",1,[[["identifier"],["self"]],["bool"]]],[11,"partial_cmp","","",2,[[["self"],["semvererror"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",2,[[["self"],["semvererror"]],["bool"]]],[11,"le","","",2,[[["self"],["semvererror"]],["bool"]]],[11,"gt","","",2,[[["self"],["semvererror"]],["bool"]]],[11,"ge","","",2,[[["self"],["semvererror"]],["bool"]]],[11,"partial_cmp","","",0,[[["version"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",4,[[["self"],["versionreq"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",4,[[["self"],["versionreq"]],["bool"]]],[11,"le","","",4,[[["self"],["versionreq"]],["bool"]]],[11,"gt","","",4,[[["self"],["versionreq"]],["bool"]]],[11,"ge","","",4,[[["self"],["versionreq"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"from_str","","",0,[[["str"]],[["version"],["semvererror"],["result",["version","semvererror"]]]]],[11,"from_str","","",4,[[["str"]],[["result",["versionreq","reqparseerror"]],["reqparseerror"],["versionreq"]]]],[11,"description","","",2,[[["self"]],["str"]]],[11,"description","","",3,[[["self"]],["str"]]],[11,"serialize","","",1,[[["s"],["self"]],["result"]]],[11,"serialize","","",0,[[["s"],["self"]],["result"]]],[11,"serialize","","",4,[[["s"],["self"]],["result"]]],[11,"deserialize","","",1,[[["d"]],["result"]]],[11,"deserialize","","",0,[[["d"]],["result"]]],[11,"deserialize","","",4,[[["d"]],["result"]]]],"p":[[3,"Version"],[4,"Identifier"],[4,"SemVerError"],[4,"ReqParseError"],[3,"VersionReq"]]};
searchIndex["semver_parser"] = {"doc":"","i":[[0,"version","semver_parser","",null,null],[3,"Version","semver_parser::version","",null,null],[12,"major","","",0,null],[12,"minor","","",0,null],[12,"patch","","",0,null],[12,"pre","","",0,null],[12,"build","","",0,null],[4,"Identifier","","",null,null],[13,"Numeric","","An identifier that's solely numbers.",1,null],[13,"AlphaNumeric","","An identifier with letters and numbers.",1,null],[5,"parse","","",null,[[["str"]],[["result",["version","string"]],["string"],["version"]]]],[0,"range","semver_parser","",null,null],[3,"VersionReq","semver_parser::range","",null,null],[12,"predicates","","",2,null],[3,"Predicate","","",null,null],[12,"op","","",3,null],[12,"major","","",3,null],[12,"minor","","",3,null],[12,"patch","","",3,null],[12,"pre","","",3,null],[4,"WildcardVersion","","",null,null],[13,"Major","","",4,null],[13,"Minor","","",4,null],[13,"Patch","","",4,null],[4,"Op","","",null,null],[13,"Ex","","",5,null],[13,"Gt","","",5,null],[13,"GtEq","","",5,null],[13,"Lt","","",5,null],[13,"LtEq","","",5,null],[13,"Tilde","","",5,null],[13,"Compatible","","",5,null],[13,"Wildcard","","",5,null],[5,"parse_predicate","","",null,[[["str"]],[["predicate"],["string"],["result",["predicate","string"]]]]],[5,"parse","","",null,[[["str"]],[["string"],["result",["versionreq","string"]],["versionreq"]]]],[11,"from","semver_parser::version","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","semver_parser::range","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"clone","semver_parser::version","",0,[[["self"]],["version"]]],[11,"clone","","",1,[[["self"]],["identifier"]]],[11,"eq","","",0,[[["self"],["version"]],["bool"]]],[11,"ne","","",0,[[["self"],["version"]],["bool"]]],[11,"eq","","",1,[[["self"],["identifier"]],["bool"]]],[11,"ne","","",1,[[["self"],["identifier"]],["bool"]]],[11,"eq","semver_parser::range","",4,[[["self"],["wildcardversion"]],["bool"]]],[11,"eq","","",5,[[["op"],["self"]],["bool"]]],[11,"ne","","",5,[[["op"],["self"]],["bool"]]],[11,"eq","","",3,[[["predicate"],["self"]],["bool"]]],[11,"ne","","",3,[[["predicate"],["self"]],["bool"]]],[11,"fmt","semver_parser::version","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","semver_parser::range","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","semver_parser::version","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"from_str","semver_parser::range","",5,[[["str"]],[["op"],["result",["op","string"]],["string"]]]]],"p":[[3,"Version"],[4,"Identifier"],[3,"VersionReq"],[3,"Predicate"],[4,"WildcardVersion"],[4,"Op"]]};
searchIndex["serde"] = {"doc":"Serde","i":[[0,"de","serde","Generic data structure deserialization framework.",null,null],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",null,null],[4,"Unexpected","","`Unexpected` represents an unexpected invocation of any…",null,null],[13,"Bool","","The input contained a boolean value that was not expected.",0,null],[13,"Unsigned","","The input contained an unsigned integer `u8`, `u16`, `u32`…",0,null],[13,"Signed","","The input contained a signed integer `i8`, `i16`, `i32` or…",0,null],[13,"Float","","The input contained a floating point `f32` or `f64` that…",0,null],[13,"Char","","The input contained a `char` that was not expected.",0,null],[13,"Str","","The input contained a `&str` or `String` that was not…",0,null],[13,"Bytes","","The input contained a `&[u8]` or `Vec<u8>` that was not…",0,null],[13,"Unit","","The input contained a unit `()` that was not expected.",0,null],[13,"Option","","The input contained an `Option<T>` that was not expected.",0,null],[13,"NewtypeStruct","","The input contained a newtype struct that was not expected.",0,null],[13,"Seq","","The input contained a sequence that was not expected.",0,null],[13,"Map","","The input contained a map that was not expected.",0,null],[13,"Enum","","The input contained an enum that was not expected.",0,null],[13,"UnitVariant","","The input contained a unit variant that was not expected.",0,null],[13,"NewtypeVariant","","The input contained a newtype variant that was not expected.",0,null],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",0,null],[13,"StructVariant","","The input contained a struct variant that was not expected.",0,null],[13,"Other","","A message stating what uncategorized thing the input…",0,null],[0,"value","","Building blocks for deserializing basic values using the…",null,null],[3,"Error","serde::de::value","A minimal representation of all possible errors that can…",null,null],[3,"UnitDeserializer","","A deserializer holding a `()`.",null,null],[3,"BoolDeserializer","","A deserializer holding a `bool`.",null,null],[3,"I8Deserializer","","A deserializer holding an `i8`.",null,null],[3,"I16Deserializer","","A deserializer holding an `i16`.",null,null],[3,"I32Deserializer","","A deserializer holding an `i32`.",null,null],[3,"I64Deserializer","","A deserializer holding an `i64`.",null,null],[3,"IsizeDeserializer","","A deserializer holding an `isize`.",null,null],[3,"U8Deserializer","","A deserializer holding a `u8`.",null,null],[3,"U16Deserializer","","A deserializer holding a `u16`.",null,null],[3,"U64Deserializer","","A deserializer holding a `u64`.",null,null],[3,"UsizeDeserializer","","A deserializer holding a `usize`.",null,null],[3,"F32Deserializer","","A deserializer holding an `f32`.",null,null],[3,"F64Deserializer","","A deserializer holding an `f64`.",null,null],[3,"CharDeserializer","","A deserializer holding a `char`.",null,null],[3,"I128Deserializer","","A deserializer holding an `i128`.",null,null],[3,"U128Deserializer","","A deserializer holding a `u128`.",null,null],[3,"U32Deserializer","","A deserializer holding a `u32`.",null,null],[3,"StrDeserializer","","A deserializer holding a `&str`.",null,null],[3,"BorrowedStrDeserializer","","A deserializer holding a `&str` with a lifetime tied to…",null,null],[3,"StringDeserializer","","A deserializer holding a `String`.",null,null],[3,"CowStrDeserializer","","A deserializer holding a `Cow<str>`.",null,null],[3,"BorrowedBytesDeserializer","","A deserializer holding a `&[u8]` with a lifetime tied to…",null,null],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",null,null],[3,"SeqAccessDeserializer","","A deserializer holding a `SeqAccess`.",null,null],[3,"MapDeserializer","","A deserializer that iterates over a map.",null,null],[3,"MapAccessDeserializer","","A deserializer holding a `MapAccess`.",null,null],[11,"new","","Create a new borrowed deserializer from the given string.",1,[[["str"]],["borrowedstrdeserializer"]]],[11,"new","","Create a new borrowed deserializer from the given byte…",2,[[],["borrowedbytesdeserializer"]]],[11,"new","","Construct a new `SeqDeserializer<I, E>`.",3,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a…",3,[[],["result"]]],[11,"new","","Construct a new `SeqAccessDeserializer<A>`.",4,[[["a"]],["self"]]],[11,"new","","Construct a new `MapDeserializer<I, E>`.",5,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a…",5,[[],["result"]]],[11,"new","","Construct a new `MapAccessDeserializer<A>`.",6,[[["a"]],["self"]]],[8,"Error","serde::de","The `Error` trait allows `Deserialize` implementations to…",null,null],[10,"custom","","Raised when there is general error when deserializing a…",7,[[["t"]],["self"]]],[11,"invalid_type","","Raised when a `Deserialize` receives a type different from…",7,[[["unexpected"],["expected"]],["self"]]],[11,"invalid_value","","Raised when a `Deserialize` receives a value of the right…",7,[[["unexpected"],["expected"]],["self"]]],[11,"invalid_length","","Raised when deserializing a sequence or map and the input…",7,[[["usize"],["expected"]],["self"]]],[11,"unknown_variant","","Raised when a `Deserialize` enum type received a variant…",7,[[["str"]],["self"]]],[11,"unknown_field","","Raised when a `Deserialize` struct type received a field…",7,[[["str"]],["self"]]],[11,"missing_field","","Raised when a `Deserialize` struct type expected to…",7,[[["str"]],["self"]]],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than…",7,[[["str"]],["self"]]],[8,"Expected","","`Expected` represents an explanation of what data a…",null,null],[10,"fmt","","Format an explanation of what data was being expected.…",8,[[["formatter"],["self"]],["result"]]],[8,"Deserialize","","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[["d"]],["result"]]],[8,"DeserializeOwned","","A data structure that can be deserialized without…",null,null],[8,"DeserializeSeed","","`DeserializeSeed` is the stateful form of the…",null,null],[16,"Value","","The type produced by using this seed.",10,null],[10,"deserialize","","Equivalent to the more common `Deserialize::deserialize`…",10,[[["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",11,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[["self"]],["bool"]]],[8,"Visitor","","This trait represents a visitor that walks through a…",null,null],[16,"Value","","The value produced by this visitor.",12,null],[10,"expecting","","Format a message stating what data this Visitor expects to…",12,[[["formatter"],["self"]],["result"]]],[11,"visit_bool","","The input contains a boolean.",12,[[["bool"]],["result"]]],[11,"visit_i8","","The input contains an `i8`.",12,[[["i8"]],["result"]]],[11,"visit_i16","","The input contains an `i16`.",12,[[["i16"]],["result"]]],[11,"visit_i32","","The input contains an `i32`.",12,[[["i32"]],["result"]]],[11,"visit_i64","","The input contains an `i64`.",12,[[["i64"]],["result"]]],[11,"visit_i128","","The input contains a `i128`.",12,[[["i128"]],["result"]]],[11,"visit_u8","","The input contains a `u8`.",12,[[["u8"]],["result"]]],[11,"visit_u16","","The input contains a `u16`.",12,[[["u16"]],["result"]]],[11,"visit_u32","","The input contains a `u32`.",12,[[["u32"]],["result"]]],[11,"visit_u64","","The input contains a `u64`.",12,[[["u64"]],["result"]]],[11,"visit_u128","","The input contains a `u128`.",12,[[["u128"]],["result"]]],[11,"visit_f32","","The input contains an `f32`.",12,[[["f32"]],["result"]]],[11,"visit_f64","","The input contains an `f64`.",12,[[["f64"]],["result"]]],[11,"visit_char","","The input contains a `char`.",12,[[["char"]],["result"]]],[11,"visit_str","","The input contains a string. The lifetime of the string is…",12,[[["str"]],["result"]]],[11,"visit_borrowed_str","","The input contains a string that lives at least as long as…",12,[[["str"]],["result"]]],[11,"visit_string","","The input contains a string and ownership of the string is…",12,[[["string"]],["result"]]],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte…",12,[[],["result"]]],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as…",12,[[],["result"]]],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte…",12,[[["vec",["u8"]],["u8"]],["result"]]],[11,"visit_none","","The input contains an optional that is absent.",12,[[],["result"]]],[11,"visit_some","","The input contains an optional that is present.",12,[[["d"]],["result"]]],[11,"visit_unit","","The input contains a unit `()`.",12,[[],["result"]]],[11,"visit_newtype_struct","","The input contains a newtype struct.",12,[[["d"]],["result"]]],[11,"visit_seq","","The input contains a sequence of elements.",12,[[["a"]],["result"]]],[11,"visit_map","","The input contains a key-value map.",12,[[["a"]],["result"]]],[11,"visit_enum","","The input contains an enum.",12,[[["a"]],["result"]]],[8,"SeqAccess","","Provides a `Visitor` access to each element of a sequence…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",13,null],[10,"next_element_seed","","This returns `Ok(Some(value))` for the next value in the…",13,[[["self"],["t"]],[["option"],["result",["option"]]]]],[11,"next_element","","This returns `Ok(Some(value))` for the next value in the…",13,[[["self"]],[["result",["option"]],["option"]]]],[11,"size_hint","","Returns the number of elements remaining in the sequence,…",13,[[["self"]],[["usize"],["option",["usize"]]]]],[8,"MapAccess","","Provides a `Visitor` access to each entry of a map in the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",14,null],[10,"next_key_seed","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[["self"],["k"]],[["result",["option"]],["option"]]]],[10,"next_value_seed","","This returns a `Ok(value)` for the next value in the map.",14,[[["self"],["v"]],["result"]]],[11,"next_entry_seed","","This returns `Ok(Some((key, value)))` for the next…",14,[[["self"],["k"],["v"]],[["result",["option"]],["option"]]]],[11,"next_key","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[["self"]],[["result",["option"]],["option"]]]],[11,"next_value","","This returns a `Ok(value)` for the next value in the map.",14,[[["self"]],["result"]]],[11,"next_entry","","This returns `Ok(Some((key, value)))` for the next…",14,[[["self"]],[["option"],["result",["option"]]]]],[11,"size_hint","","Returns the number of entries remaining in the map, if…",14,[[["self"]],[["usize"],["option",["usize"]]]]],[8,"EnumAccess","","Provides a `Visitor` access to the data of an enum in the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",15,null],[16,"Variant","","The `Visitor` that will be used to deserialize the content…",15,null],[10,"variant_seed","","`variant` is called to identify which variant to…",15,[[["v"]],["result"]]],[11,"variant","","`variant` is called to identify which variant to…",15,[[],["result"]]],[8,"VariantAccess","","`VariantAccess` is a visitor that is created by the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",16,null],[10,"unit_variant","","Called when deserializing a variant with no values.",16,[[],["result"]]],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",16,[[["t"]],["result"]]],[11,"newtype_variant","","Called when deserializing a variant with a single value.",16,[[],["result"]]],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",16,[[["usize"],["v"]],["result"]]],[10,"struct_variant","","Called when deserializing a struct-like variant.",16,[[["v"]],["result"]]],[8,"IntoDeserializer","","Converts an existing value into a `Deserializer` from…",null,null],[16,"Deserializer","","The type of the deserializer being converted into.",17,null],[10,"into_deserializer","","Convert this value into a deserializer.",17,[[]]],[0,"ser","serde","Generic data structure serialization framework.",null,null],[3,"Impossible","serde::ser","Helper type for implementing a `Serializer` that does not…",null,null],[8,"Error","","Trait used by `Serialize` implementations to generically…",null,null],[10,"custom","","Used when a [`Serialize`] implementation encounters any…",18,[[["t"]],["self"]]],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[["s"],["self"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure…",null,null],[16,"Ok","","The output type produced by this `Serializer` during…",20,null],[16,"Error","","The error type when some error occurs during serialization.",20,null],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",20,null],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",20,null],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",20,null],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",20,null],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",20,null],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",20,null],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",20,null],[10,"serialize_bool","","Serialize a `bool` value.",20,[[["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",20,[[["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",20,[[["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,[[],["result"]]],[10,"serialize_none","","Serialize a [`None`] value.",20,[[],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",20,[[["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[["str"],["u32"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[["str"],["u32"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["usize"],["option",["usize"]]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["usize"],["option",["usize"]]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",20,[[["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[["self"]],["bool"]]],[8,"SerializeSeq","","Returned from `Serializer::serialize_seq`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",21,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",21,null],[10,"serialize_element","","Serialize a sequence element.",21,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a sequence.",21,[[],["result"]]],[8,"SerializeTuple","","Returned from `Serializer::serialize_tuple`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",22,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",22,null],[10,"serialize_element","","Serialize a tuple element.",22,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple.",22,[[],["result"]]],[8,"SerializeTupleStruct","","Returned from `Serializer::serialize_tuple_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",23,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",23,null],[10,"serialize_field","","Serialize a tuple struct field.",23,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple struct.",23,[[],["result"]]],[8,"SerializeTupleVariant","","Returned from `Serializer::serialize_tuple_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",24,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",24,null],[10,"serialize_field","","Serialize a tuple variant field.",24,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple variant.",24,[[],["result"]]],[8,"SerializeMap","","Returned from `Serializer::serialize_map`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",25,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",25,null],[10,"serialize_key","","Serialize a map key.",25,[[["self"],["t"]],["result"]]],[10,"serialize_value","","Serialize a map value.",25,[[["self"],["t"]],["result"]]],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",25,[[["k"],["self"],["v"]],["result"]]],[10,"end","","Finish serializing a map.",25,[[],["result"]]],[8,"SerializeStruct","","Returned from `Serializer::serialize_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",26,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",26,null],[10,"serialize_field","","Serialize a struct field.",26,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct field has been skipped.",26,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct.",26,[[],["result"]]],[8,"SerializeStructVariant","","Returned from `Serializer::serialize_struct_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",27,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",27,null],[10,"serialize_field","","Serialize a struct variant field.",27,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct variant field has been skipped.",27,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct variant.",27,[[],["result"]]],[8,"Deserialize","serde","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",11,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[["self"]],["bool"]]],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[["s"],["self"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure…",null,null],[16,"Ok","","The output type produced by this `Serializer` during…",20,null],[16,"Error","","The error type when some error occurs during serialization.",20,null],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",20,null],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",20,null],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",20,null],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",20,null],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",20,null],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",20,null],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",20,null],[10,"serialize_bool","","Serialize a `bool` value.",20,[[["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",20,[[["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",20,[[["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,[[],["result"]]],[10,"serialize_none","","Serialize a [`None`] value.",20,[[],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",20,[[["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[["str"],["u32"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[["str"],["u32"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["usize"],["option",["usize"]]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["usize"],["option",["usize"]]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",20,[[["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[["self"]],["bool"]]],[14,"forward_to_deserialize_any","","Helper macro when implementing the `Deserializer` part of…",null,null],[14,"serde_if_integer128","","Conditional compilation depending on whether Serde is…",null,null],[11,"fmt","serde::de","",28,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","serde::de::value","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","serde::ser","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"deserialize","serde::de","",28,[[["d"]],[["ignoredany"],["result",["ignoredany"]]]]],[11,"deserialize_bool","serde::de::value","",30,[[["v"]],["result"]]],[11,"deserialize_i8","","",30,[[["v"]],["result"]]],[11,"deserialize_i16","","",30,[[["v"]],["result"]]],[11,"deserialize_i32","","",30,[[["v"]],["result"]]],[11,"deserialize_i64","","",30,[[["v"]],["result"]]],[11,"deserialize_i128","","",30,[[["v"]],["result"]]],[11,"deserialize_u8","","",30,[[["v"]],["result"]]],[11,"deserialize_u16","","",30,[[["v"]],["result"]]],[11,"deserialize_u32","","",30,[[["v"]],["result"]]],[11,"deserialize_u64","","",30,[[["v"]],["result"]]],[11,"deserialize_u128","","",30,[[["v"]],["result"]]],[11,"deserialize_f32","","",30,[[["v"]],["result"]]],[11,"deserialize_f64","","",30,[[["v"]],["result"]]],[11,"deserialize_char","","",30,[[["v"]],["result"]]],[11,"deserialize_str","","",30,[[["v"]],["result"]]],[11,"deserialize_string","","",30,[[["v"]],["result"]]],[11,"deserialize_bytes","","",30,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",30,[[["v"]],["result"]]],[11,"deserialize_unit","","",30,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",30,[[["v"]],["result"]]],[11,"deserialize_tuple","","",30,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",30,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",30,[[["v"]],["result"]]],[11,"deserialize_struct","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",30,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",30,[[["v"]],["result"]]],[11,"deserialize_any","","",30,[[["v"]],["result"]]],[11,"deserialize_option","","",30,[[["v"]],["result"]]],[11,"deserialize_bool","","",31,[[["v"]],["result"]]],[11,"deserialize_i8","","",31,[[["v"]],["result"]]],[11,"deserialize_i16","","",31,[[["v"]],["result"]]],[11,"deserialize_i32","","",31,[[["v"]],["result"]]],[11,"deserialize_i64","","",31,[[["v"]],["result"]]],[11,"deserialize_i128","","",31,[[["v"]],["result"]]],[11,"deserialize_u8","","",31,[[["v"]],["result"]]],[11,"deserialize_u16","","",31,[[["v"]],["result"]]],[11,"deserialize_u32","","",31,[[["v"]],["result"]]],[11,"deserialize_u64","","",31,[[["v"]],["result"]]],[11,"deserialize_u128","","",31,[[["v"]],["result"]]],[11,"deserialize_f32","","",31,[[["v"]],["result"]]],[11,"deserialize_f64","","",31,[[["v"]],["result"]]],[11,"deserialize_char","","",31,[[["v"]],["result"]]],[11,"deserialize_str","","",31,[[["v"]],["result"]]],[11,"deserialize_string","","",31,[[["v"]],["result"]]],[11,"deserialize_bytes","","",31,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",31,[[["v"]],["result"]]],[11,"deserialize_option","","",31,[[["v"]],["result"]]],[11,"deserialize_unit","","",31,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",31,[[["v"]],["result"]]],[11,"deserialize_tuple","","",31,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",31,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",31,[[["v"]],["result"]]],[11,"deserialize_struct","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",31,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",31,[[["v"]],["result"]]],[11,"deserialize_any","","",31,[[["v"]],["result"]]],[11,"deserialize_bool","","",32,[[["v"]],["result"]]],[11,"deserialize_i8","","",32,[[["v"]],["result"]]],[11,"deserialize_i16","","",32,[[["v"]],["result"]]],[11,"deserialize_i32","","",32,[[["v"]],["result"]]],[11,"deserialize_i64","","",32,[[["v"]],["result"]]],[11,"deserialize_i128","","",32,[[["v"]],["result"]]],[11,"deserialize_u8","","",32,[[["v"]],["result"]]],[11,"deserialize_u16","","",32,[[["v"]],["result"]]],[11,"deserialize_u32","","",32,[[["v"]],["result"]]],[11,"deserialize_u64","","",32,[[["v"]],["result"]]],[11,"deserialize_u128","","",32,[[["v"]],["result"]]],[11,"deserialize_f32","","",32,[[["v"]],["result"]]],[11,"deserialize_f64","","",32,[[["v"]],["result"]]],[11,"deserialize_char","","",32,[[["v"]],["result"]]],[11,"deserialize_str","","",32,[[["v"]],["result"]]],[11,"deserialize_string","","",32,[[["v"]],["result"]]],[11,"deserialize_bytes","","",32,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",32,[[["v"]],["result"]]],[11,"deserialize_option","","",32,[[["v"]],["result"]]],[11,"deserialize_unit","","",32,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",32,[[["v"]],["result"]]],[11,"deserialize_tuple","","",32,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",32,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",32,[[["v"]],["result"]]],[11,"deserialize_struct","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",32,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",32,[[["v"]],["result"]]],[11,"deserialize_any","","",32,[[["v"]],["result"]]],[11,"deserialize_bool","","",33,[[["v"]],["result"]]],[11,"deserialize_i8","","",33,[[["v"]],["result"]]],[11,"deserialize_i16","","",33,[[["v"]],["result"]]],[11,"deserialize_i32","","",33,[[["v"]],["result"]]],[11,"deserialize_i64","","",33,[[["v"]],["result"]]],[11,"deserialize_i128","","",33,[[["v"]],["result"]]],[11,"deserialize_u8","","",33,[[["v"]],["result"]]],[11,"deserialize_u16","","",33,[[["v"]],["result"]]],[11,"deserialize_u32","","",33,[[["v"]],["result"]]],[11,"deserialize_u64","","",33,[[["v"]],["result"]]],[11,"deserialize_u128","","",33,[[["v"]],["result"]]],[11,"deserialize_f32","","",33,[[["v"]],["result"]]],[11,"deserialize_f64","","",33,[[["v"]],["result"]]],[11,"deserialize_char","","",33,[[["v"]],["result"]]],[11,"deserialize_str","","",33,[[["v"]],["result"]]],[11,"deserialize_string","","",33,[[["v"]],["result"]]],[11,"deserialize_bytes","","",33,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",33,[[["v"]],["result"]]],[11,"deserialize_option","","",33,[[["v"]],["result"]]],[11,"deserialize_unit","","",33,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",33,[[["v"]],["result"]]],[11,"deserialize_tuple","","",33,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",33,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",33,[[["v"]],["result"]]],[11,"deserialize_struct","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",33,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",33,[[["v"]],["result"]]],[11,"deserialize_any","","",33,[[["v"]],["result"]]],[11,"deserialize_bool","","",34,[[["v"]],["result"]]],[11,"deserialize_i8","","",34,[[["v"]],["result"]]],[11,"deserialize_i16","","",34,[[["v"]],["result"]]],[11,"deserialize_i32","","",34,[[["v"]],["result"]]],[11,"deserialize_i64","","",34,[[["v"]],["result"]]],[11,"deserialize_i128","","",34,[[["v"]],["result"]]],[11,"deserialize_u8","","",34,[[["v"]],["result"]]],[11,"deserialize_u16","","",34,[[["v"]],["result"]]],[11,"deserialize_u32","","",34,[[["v"]],["result"]]],[11,"deserialize_u64","","",34,[[["v"]],["result"]]],[11,"deserialize_u128","","",34,[[["v"]],["result"]]],[11,"deserialize_f32","","",34,[[["v"]],["result"]]],[11,"deserialize_f64","","",34,[[["v"]],["result"]]],[11,"deserialize_char","","",34,[[["v"]],["result"]]],[11,"deserialize_str","","",34,[[["v"]],["result"]]],[11,"deserialize_string","","",34,[[["v"]],["result"]]],[11,"deserialize_bytes","","",34,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",34,[[["v"]],["result"]]],[11,"deserialize_option","","",34,[[["v"]],["result"]]],[11,"deserialize_unit","","",34,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",34,[[["v"]],["result"]]],[11,"deserialize_tuple","","",34,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",34,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",34,[[["v"]],["result"]]],[11,"deserialize_struct","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",34,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",34,[[["v"]],["result"]]],[11,"deserialize_any","","",34,[[["v"]],["result"]]],[11,"deserialize_bool","","",35,[[["v"]],["result"]]],[11,"deserialize_i8","","",35,[[["v"]],["result"]]],[11,"deserialize_i16","","",35,[[["v"]],["result"]]],[11,"deserialize_i32","","",35,[[["v"]],["result"]]],[11,"deserialize_i64","","",35,[[["v"]],["result"]]],[11,"deserialize_i128","","",35,[[["v"]],["result"]]],[11,"deserialize_u8","","",35,[[["v"]],["result"]]],[11,"deserialize_u16","","",35,[[["v"]],["result"]]],[11,"deserialize_u32","","",35,[[["v"]],["result"]]],[11,"deserialize_u64","","",35,[[["v"]],["result"]]],[11,"deserialize_u128","","",35,[[["v"]],["result"]]],[11,"deserialize_f32","","",35,[[["v"]],["result"]]],[11,"deserialize_f64","","",35,[[["v"]],["result"]]],[11,"deserialize_char","","",35,[[["v"]],["result"]]],[11,"deserialize_str","","",35,[[["v"]],["result"]]],[11,"deserialize_string","","",35,[[["v"]],["result"]]],[11,"deserialize_bytes","","",35,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",35,[[["v"]],["result"]]],[11,"deserialize_option","","",35,[[["v"]],["result"]]],[11,"deserialize_unit","","",35,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",35,[[["v"]],["result"]]],[11,"deserialize_tuple","","",35,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",35,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",35,[[["v"]],["result"]]],[11,"deserialize_struct","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",35,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",35,[[["v"]],["result"]]],[11,"deserialize_any","","",35,[[["v"]],["result"]]],[11,"deserialize_bool","","",36,[[["v"]],["result"]]],[11,"deserialize_i8","","",36,[[["v"]],["result"]]],[11,"deserialize_i16","","",36,[[["v"]],["result"]]],[11,"deserialize_i32","","",36,[[["v"]],["result"]]],[11,"deserialize_i64","","",36,[[["v"]],["result"]]],[11,"deserialize_i128","","",36,[[["v"]],["result"]]],[11,"deserialize_u8","","",36,[[["v"]],["result"]]],[11,"deserialize_u16","","",36,[[["v"]],["result"]]],[11,"deserialize_u32","","",36,[[["v"]],["result"]]],[11,"deserialize_u64","","",36,[[["v"]],["result"]]],[11,"deserialize_u128","","",36,[[["v"]],["result"]]],[11,"deserialize_f32","","",36,[[["v"]],["result"]]],[11,"deserialize_f64","","",36,[[["v"]],["result"]]],[11,"deserialize_char","","",36,[[["v"]],["result"]]],[11,"deserialize_str","","",36,[[["v"]],["result"]]],[11,"deserialize_string","","",36,[[["v"]],["result"]]],[11,"deserialize_bytes","","",36,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",36,[[["v"]],["result"]]],[11,"deserialize_option","","",36,[[["v"]],["result"]]],[11,"deserialize_unit","","",36,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",36,[[["v"]],["result"]]],[11,"deserialize_tuple","","",36,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",36,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",36,[[["v"]],["result"]]],[11,"deserialize_struct","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",36,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",36,[[["v"]],["result"]]],[11,"deserialize_any","","",36,[[["v"]],["result"]]],[11,"deserialize_bool","","",37,[[["v"]],["result"]]],[11,"deserialize_i8","","",37,[[["v"]],["result"]]],[11,"deserialize_i16","","",37,[[["v"]],["result"]]],[11,"deserialize_i32","","",37,[[["v"]],["result"]]],[11,"deserialize_i64","","",37,[[["v"]],["result"]]],[11,"deserialize_i128","","",37,[[["v"]],["result"]]],[11,"deserialize_u8","","",37,[[["v"]],["result"]]],[11,"deserialize_u16","","",37,[[["v"]],["result"]]],[11,"deserialize_u32","","",37,[[["v"]],["result"]]],[11,"deserialize_u64","","",37,[[["v"]],["result"]]],[11,"deserialize_u128","","",37,[[["v"]],["result"]]],[11,"deserialize_f32","","",37,[[["v"]],["result"]]],[11,"deserialize_f64","","",37,[[["v"]],["result"]]],[11,"deserialize_char","","",37,[[["v"]],["result"]]],[11,"deserialize_str","","",37,[[["v"]],["result"]]],[11,"deserialize_string","","",37,[[["v"]],["result"]]],[11,"deserialize_bytes","","",37,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",37,[[["v"]],["result"]]],[11,"deserialize_option","","",37,[[["v"]],["result"]]],[11,"deserialize_unit","","",37,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",37,[[["v"]],["result"]]],[11,"deserialize_tuple","","",37,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",37,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",37,[[["v"]],["result"]]],[11,"deserialize_struct","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",37,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",37,[[["v"]],["result"]]],[11,"deserialize_any","","",37,[[["v"]],["result"]]],[11,"deserialize_bool","","",38,[[["v"]],["result"]]],[11,"deserialize_i8","","",38,[[["v"]],["result"]]],[11,"deserialize_i16","","",38,[[["v"]],["result"]]],[11,"deserialize_i32","","",38,[[["v"]],["result"]]],[11,"deserialize_i64","","",38,[[["v"]],["result"]]],[11,"deserialize_i128","","",38,[[["v"]],["result"]]],[11,"deserialize_u8","","",38,[[["v"]],["result"]]],[11,"deserialize_u16","","",38,[[["v"]],["result"]]],[11,"deserialize_u32","","",38,[[["v"]],["result"]]],[11,"deserialize_u64","","",38,[[["v"]],["result"]]],[11,"deserialize_u128","","",38,[[["v"]],["result"]]],[11,"deserialize_f32","","",38,[[["v"]],["result"]]],[11,"deserialize_f64","","",38,[[["v"]],["result"]]],[11,"deserialize_char","","",38,[[["v"]],["result"]]],[11,"deserialize_str","","",38,[[["v"]],["result"]]],[11,"deserialize_string","","",38,[[["v"]],["result"]]],[11,"deserialize_bytes","","",38,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",38,[[["v"]],["result"]]],[11,"deserialize_option","","",38,[[["v"]],["result"]]],[11,"deserialize_unit","","",38,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",38,[[["v"]],["result"]]],[11,"deserialize_tuple","","",38,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",38,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",38,[[["v"]],["result"]]],[11,"deserialize_struct","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",38,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",38,[[["v"]],["result"]]],[11,"deserialize_any","","",38,[[["v"]],["result"]]],[11,"deserialize_bool","","",39,[[["v"]],["result"]]],[11,"deserialize_i8","","",39,[[["v"]],["result"]]],[11,"deserialize_i16","","",39,[[["v"]],["result"]]],[11,"deserialize_i32","","",39,[[["v"]],["result"]]],[11,"deserialize_i64","","",39,[[["v"]],["result"]]],[11,"deserialize_i128","","",39,[[["v"]],["result"]]],[11,"deserialize_u8","","",39,[[["v"]],["result"]]],[11,"deserialize_u16","","",39,[[["v"]],["result"]]],[11,"deserialize_u32","","",39,[[["v"]],["result"]]],[11,"deserialize_u64","","",39,[[["v"]],["result"]]],[11,"deserialize_u128","","",39,[[["v"]],["result"]]],[11,"deserialize_f32","","",39,[[["v"]],["result"]]],[11,"deserialize_f64","","",39,[[["v"]],["result"]]],[11,"deserialize_char","","",39,[[["v"]],["result"]]],[11,"deserialize_str","","",39,[[["v"]],["result"]]],[11,"deserialize_string","","",39,[[["v"]],["result"]]],[11,"deserialize_bytes","","",39,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",39,[[["v"]],["result"]]],[11,"deserialize_option","","",39,[[["v"]],["result"]]],[11,"deserialize_unit","","",39,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",39,[[["v"]],["result"]]],[11,"deserialize_tuple","","",39,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",39,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",39,[[["v"]],["result"]]],[11,"deserialize_struct","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",39,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",39,[[["v"]],["result"]]],[11,"deserialize_any","","",39,[[["v"]],["result"]]],[11,"deserialize_bool","","",40,[[["v"]],["result"]]],[11,"deserialize_i8","","",40,[[["v"]],["result"]]],[11,"deserialize_i16","","",40,[[["v"]],["result"]]],[11,"deserialize_i32","","",40,[[["v"]],["result"]]],[11,"deserialize_i64","","",40,[[["v"]],["result"]]],[11,"deserialize_i128","","",40,[[["v"]],["result"]]],[11,"deserialize_u8","","",40,[[["v"]],["result"]]],[11,"deserialize_u16","","",40,[[["v"]],["result"]]],[11,"deserialize_u32","","",40,[[["v"]],["result"]]],[11,"deserialize_u64","","",40,[[["v"]],["result"]]],[11,"deserialize_u128","","",40,[[["v"]],["result"]]],[11,"deserialize_f32","","",40,[[["v"]],["result"]]],[11,"deserialize_f64","","",40,[[["v"]],["result"]]],[11,"deserialize_char","","",40,[[["v"]],["result"]]],[11,"deserialize_str","","",40,[[["v"]],["result"]]],[11,"deserialize_string","","",40,[[["v"]],["result"]]],[11,"deserialize_bytes","","",40,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",40,[[["v"]],["result"]]],[11,"deserialize_option","","",40,[[["v"]],["result"]]],[11,"deserialize_unit","","",40,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",40,[[["v"]],["result"]]],[11,"deserialize_tuple","","",40,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",40,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",40,[[["v"]],["result"]]],[11,"deserialize_struct","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",40,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",40,[[["v"]],["result"]]],[11,"deserialize_any","","",40,[[["v"]],["result"]]],[11,"deserialize_bool","","",41,[[["v"]],["result"]]],[11,"deserialize_i8","","",41,[[["v"]],["result"]]],[11,"deserialize_i16","","",41,[[["v"]],["result"]]],[11,"deserialize_i32","","",41,[[["v"]],["result"]]],[11,"deserialize_i64","","",41,[[["v"]],["result"]]],[11,"deserialize_i128","","",41,[[["v"]],["result"]]],[11,"deserialize_u8","","",41,[[["v"]],["result"]]],[11,"deserialize_u16","","",41,[[["v"]],["result"]]],[11,"deserialize_u32","","",41,[[["v"]],["result"]]],[11,"deserialize_u64","","",41,[[["v"]],["result"]]],[11,"deserialize_u128","","",41,[[["v"]],["result"]]],[11,"deserialize_f32","","",41,[[["v"]],["result"]]],[11,"deserialize_f64","","",41,[[["v"]],["result"]]],[11,"deserialize_char","","",41,[[["v"]],["result"]]],[11,"deserialize_str","","",41,[[["v"]],["result"]]],[11,"deserialize_string","","",41,[[["v"]],["result"]]],[11,"deserialize_bytes","","",41,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",41,[[["v"]],["result"]]],[11,"deserialize_option","","",41,[[["v"]],["result"]]],[11,"deserialize_unit","","",41,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",41,[[["v"]],["result"]]],[11,"deserialize_tuple","","",41,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",41,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",41,[[["v"]],["result"]]],[11,"deserialize_struct","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",41,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",41,[[["v"]],["result"]]],[11,"deserialize_any","","",41,[[["v"]],["result"]]],[11,"deserialize_bool","","",42,[[["v"]],["result"]]],[11,"deserialize_i8","","",42,[[["v"]],["result"]]],[11,"deserialize_i16","","",42,[[["v"]],["result"]]],[11,"deserialize_i32","","",42,[[["v"]],["result"]]],[11,"deserialize_i64","","",42,[[["v"]],["result"]]],[11,"deserialize_i128","","",42,[[["v"]],["result"]]],[11,"deserialize_u8","","",42,[[["v"]],["result"]]],[11,"deserialize_u16","","",42,[[["v"]],["result"]]],[11,"deserialize_u32","","",42,[[["v"]],["result"]]],[11,"deserialize_u64","","",42,[[["v"]],["result"]]],[11,"deserialize_u128","","",42,[[["v"]],["result"]]],[11,"deserialize_f32","","",42,[[["v"]],["result"]]],[11,"deserialize_f64","","",42,[[["v"]],["result"]]],[11,"deserialize_char","","",42,[[["v"]],["result"]]],[11,"deserialize_str","","",42,[[["v"]],["result"]]],[11,"deserialize_string","","",42,[[["v"]],["result"]]],[11,"deserialize_bytes","","",42,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",42,[[["v"]],["result"]]],[11,"deserialize_option","","",42,[[["v"]],["result"]]],[11,"deserialize_unit","","",42,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",42,[[["v"]],["result"]]],[11,"deserialize_tuple","","",42,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",42,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",42,[[["v"]],["result"]]],[11,"deserialize_struct","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",42,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",42,[[["v"]],["result"]]],[11,"deserialize_any","","",42,[[["v"]],["result"]]],[11,"deserialize_bool","","",43,[[["v"]],["result"]]],[11,"deserialize_i8","","",43,[[["v"]],["result"]]],[11,"deserialize_i16","","",43,[[["v"]],["result"]]],[11,"deserialize_i32","","",43,[[["v"]],["result"]]],[11,"deserialize_i64","","",43,[[["v"]],["result"]]],[11,"deserialize_i128","","",43,[[["v"]],["result"]]],[11,"deserialize_u8","","",43,[[["v"]],["result"]]],[11,"deserialize_u16","","",43,[[["v"]],["result"]]],[11,"deserialize_u32","","",43,[[["v"]],["result"]]],[11,"deserialize_u64","","",43,[[["v"]],["result"]]],[11,"deserialize_u128","","",43,[[["v"]],["result"]]],[11,"deserialize_f32","","",43,[[["v"]],["result"]]],[11,"deserialize_f64","","",43,[[["v"]],["result"]]],[11,"deserialize_char","","",43,[[["v"]],["result"]]],[11,"deserialize_str","","",43,[[["v"]],["result"]]],[11,"deserialize_string","","",43,[[["v"]],["result"]]],[11,"deserialize_bytes","","",43,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",43,[[["v"]],["result"]]],[11,"deserialize_option","","",43,[[["v"]],["result"]]],[11,"deserialize_unit","","",43,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",43,[[["v"]],["result"]]],[11,"deserialize_tuple","","",43,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",43,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",43,[[["v"]],["result"]]],[11,"deserialize_struct","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",43,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",43,[[["v"]],["result"]]],[11,"deserialize_any","","",43,[[["v"]],["result"]]],[11,"deserialize_bool","","",44,[[["v"]],["result"]]],[11,"deserialize_i8","","",44,[[["v"]],["result"]]],[11,"deserialize_i16","","",44,[[["v"]],["result"]]],[11,"deserialize_i32","","",44,[[["v"]],["result"]]],[11,"deserialize_i64","","",44,[[["v"]],["result"]]],[11,"deserialize_i128","","",44,[[["v"]],["result"]]],[11,"deserialize_u8","","",44,[[["v"]],["result"]]],[11,"deserialize_u16","","",44,[[["v"]],["result"]]],[11,"deserialize_u32","","",44,[[["v"]],["result"]]],[11,"deserialize_u64","","",44,[[["v"]],["result"]]],[11,"deserialize_u128","","",44,[[["v"]],["result"]]],[11,"deserialize_f32","","",44,[[["v"]],["result"]]],[11,"deserialize_f64","","",44,[[["v"]],["result"]]],[11,"deserialize_char","","",44,[[["v"]],["result"]]],[11,"deserialize_str","","",44,[[["v"]],["result"]]],[11,"deserialize_string","","",44,[[["v"]],["result"]]],[11,"deserialize_bytes","","",44,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",44,[[["v"]],["result"]]],[11,"deserialize_option","","",44,[[["v"]],["result"]]],[11,"deserialize_unit","","",44,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",44,[[["v"]],["result"]]],[11,"deserialize_tuple","","",44,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",44,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",44,[[["v"]],["result"]]],[11,"deserialize_struct","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",44,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",44,[[["v"]],["result"]]],[11,"deserialize_any","","",44,[[["v"]],["result"]]],[11,"deserialize_bool","","",45,[[["v"]],["result"]]],[11,"deserialize_i8","","",45,[[["v"]],["result"]]],[11,"deserialize_i16","","",45,[[["v"]],["result"]]],[11,"deserialize_i32","","",45,[[["v"]],["result"]]],[11,"deserialize_i64","","",45,[[["v"]],["result"]]],[11,"deserialize_i128","","",45,[[["v"]],["result"]]],[11,"deserialize_u8","","",45,[[["v"]],["result"]]],[11,"deserialize_u16","","",45,[[["v"]],["result"]]],[11,"deserialize_u32","","",45,[[["v"]],["result"]]],[11,"deserialize_u64","","",45,[[["v"]],["result"]]],[11,"deserialize_u128","","",45,[[["v"]],["result"]]],[11,"deserialize_f32","","",45,[[["v"]],["result"]]],[11,"deserialize_f64","","",45,[[["v"]],["result"]]],[11,"deserialize_char","","",45,[[["v"]],["result"]]],[11,"deserialize_str","","",45,[[["v"]],["result"]]],[11,"deserialize_string","","",45,[[["v"]],["result"]]],[11,"deserialize_bytes","","",45,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",45,[[["v"]],["result"]]],[11,"deserialize_option","","",45,[[["v"]],["result"]]],[11,"deserialize_unit","","",45,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",45,[[["v"]],["result"]]],[11,"deserialize_tuple","","",45,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",45,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",45,[[["v"]],["result"]]],[11,"deserialize_struct","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",45,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",45,[[["v"]],["result"]]],[11,"deserialize_any","","",45,[[["v"]],["result"]]],[11,"deserialize_bool","","",46,[[["v"]],["result"]]],[11,"deserialize_i8","","",46,[[["v"]],["result"]]],[11,"deserialize_i16","","",46,[[["v"]],["result"]]],[11,"deserialize_i32","","",46,[[["v"]],["result"]]],[11,"deserialize_i64","","",46,[[["v"]],["result"]]],[11,"deserialize_i128","","",46,[[["v"]],["result"]]],[11,"deserialize_u8","","",46,[[["v"]],["result"]]],[11,"deserialize_u16","","",46,[[["v"]],["result"]]],[11,"deserialize_u32","","",46,[[["v"]],["result"]]],[11,"deserialize_u64","","",46,[[["v"]],["result"]]],[11,"deserialize_u128","","",46,[[["v"]],["result"]]],[11,"deserialize_f32","","",46,[[["v"]],["result"]]],[11,"deserialize_f64","","",46,[[["v"]],["result"]]],[11,"deserialize_char","","",46,[[["v"]],["result"]]],[11,"deserialize_str","","",46,[[["v"]],["result"]]],[11,"deserialize_string","","",46,[[["v"]],["result"]]],[11,"deserialize_bytes","","",46,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",46,[[["v"]],["result"]]],[11,"deserialize_option","","",46,[[["v"]],["result"]]],[11,"deserialize_unit","","",46,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",46,[[["v"]],["result"]]],[11,"deserialize_tuple","","",46,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",46,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",46,[[["v"]],["result"]]],[11,"deserialize_struct","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",46,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",46,[[["v"]],["result"]]],[11,"deserialize_any","","",46,[[["v"]],["result"]]],[11,"deserialize_enum","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_any","","",47,[[["v"]],["result"]]],[11,"deserialize_enum","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",47,[[["v"]],["result"]]],[11,"deserialize_i8","","",47,[[["v"]],["result"]]],[11,"deserialize_i16","","",47,[[["v"]],["result"]]],[11,"deserialize_i32","","",47,[[["v"]],["result"]]],[11,"deserialize_i64","","",47,[[["v"]],["result"]]],[11,"deserialize_i128","","",47,[[["v"]],["result"]]],[11,"deserialize_u8","","",47,[[["v"]],["result"]]],[11,"deserialize_u16","","",47,[[["v"]],["result"]]],[11,"deserialize_u32","","",47,[[["v"]],["result"]]],[11,"deserialize_u64","","",47,[[["v"]],["result"]]],[11,"deserialize_u128","","",47,[[["v"]],["result"]]],[11,"deserialize_f32","","",47,[[["v"]],["result"]]],[11,"deserialize_f64","","",47,[[["v"]],["result"]]],[11,"deserialize_char","","",47,[[["v"]],["result"]]],[11,"deserialize_str","","",47,[[["v"]],["result"]]],[11,"deserialize_string","","",47,[[["v"]],["result"]]],[11,"deserialize_bytes","","",47,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",47,[[["v"]],["result"]]],[11,"deserialize_option","","",47,[[["v"]],["result"]]],[11,"deserialize_unit","","",47,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",47,[[["v"]],["result"]]],[11,"deserialize_tuple","","",47,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",47,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",47,[[["v"]],["result"]]],[11,"deserialize_struct","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",47,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",47,[[["v"]],["result"]]],[11,"deserialize_any","","",1,[[["v"]],["result"]]],[11,"deserialize_enum","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",1,[[["v"]],["result"]]],[11,"deserialize_i8","","",1,[[["v"]],["result"]]],[11,"deserialize_i16","","",1,[[["v"]],["result"]]],[11,"deserialize_i32","","",1,[[["v"]],["result"]]],[11,"deserialize_i64","","",1,[[["v"]],["result"]]],[11,"deserialize_i128","","",1,[[["v"]],["result"]]],[11,"deserialize_u8","","",1,[[["v"]],["result"]]],[11,"deserialize_u16","","",1,[[["v"]],["result"]]],[11,"deserialize_u32","","",1,[[["v"]],["result"]]],[11,"deserialize_u64","","",1,[[["v"]],["result"]]],[11,"deserialize_u128","","",1,[[["v"]],["result"]]],[11,"deserialize_f32","","",1,[[["v"]],["result"]]],[11,"deserialize_f64","","",1,[[["v"]],["result"]]],[11,"deserialize_char","","",1,[[["v"]],["result"]]],[11,"deserialize_str","","",1,[[["v"]],["result"]]],[11,"deserialize_string","","",1,[[["v"]],["result"]]],[11,"deserialize_bytes","","",1,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",1,[[["v"]],["result"]]],[11,"deserialize_option","","",1,[[["v"]],["result"]]],[11,"deserialize_unit","","",1,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",1,[[["v"]],["result"]]],[11,"deserialize_tuple","","",1,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",1,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",1,[[["v"]],["result"]]],[11,"deserialize_struct","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",1,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",1,[[["v"]],["result"]]],[11,"deserialize_any","","",48,[[["v"]],["result"]]],[11,"deserialize_enum","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",48,[[["v"]],["result"]]],[11,"deserialize_i8","","",48,[[["v"]],["result"]]],[11,"deserialize_i16","","",48,[[["v"]],["result"]]],[11,"deserialize_i32","","",48,[[["v"]],["result"]]],[11,"deserialize_i64","","",48,[[["v"]],["result"]]],[11,"deserialize_i128","","",48,[[["v"]],["result"]]],[11,"deserialize_u8","","",48,[[["v"]],["result"]]],[11,"deserialize_u16","","",48,[[["v"]],["result"]]],[11,"deserialize_u32","","",48,[[["v"]],["result"]]],[11,"deserialize_u64","","",48,[[["v"]],["result"]]],[11,"deserialize_u128","","",48,[[["v"]],["result"]]],[11,"deserialize_f32","","",48,[[["v"]],["result"]]],[11,"deserialize_f64","","",48,[[["v"]],["result"]]],[11,"deserialize_char","","",48,[[["v"]],["result"]]],[11,"deserialize_str","","",48,[[["v"]],["result"]]],[11,"deserialize_string","","",48,[[["v"]],["result"]]],[11,"deserialize_bytes","","",48,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",48,[[["v"]],["result"]]],[11,"deserialize_option","","",48,[[["v"]],["result"]]],[11,"deserialize_unit","","",48,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",48,[[["v"]],["result"]]],[11,"deserialize_tuple","","",48,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",48,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",48,[[["v"]],["result"]]],[11,"deserialize_struct","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",48,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",48,[[["v"]],["result"]]],[11,"deserialize_any","","",49,[[["v"]],["result"]]],[11,"deserialize_enum","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",49,[[["v"]],["result"]]],[11,"deserialize_i8","","",49,[[["v"]],["result"]]],[11,"deserialize_i16","","",49,[[["v"]],["result"]]],[11,"deserialize_i32","","",49,[[["v"]],["result"]]],[11,"deserialize_i64","","",49,[[["v"]],["result"]]],[11,"deserialize_i128","","",49,[[["v"]],["result"]]],[11,"deserialize_u8","","",49,[[["v"]],["result"]]],[11,"deserialize_u16","","",49,[[["v"]],["result"]]],[11,"deserialize_u32","","",49,[[["v"]],["result"]]],[11,"deserialize_u64","","",49,[[["v"]],["result"]]],[11,"deserialize_u128","","",49,[[["v"]],["result"]]],[11,"deserialize_f32","","",49,[[["v"]],["result"]]],[11,"deserialize_f64","","",49,[[["v"]],["result"]]],[11,"deserialize_char","","",49,[[["v"]],["result"]]],[11,"deserialize_str","","",49,[[["v"]],["result"]]],[11,"deserialize_string","","",49,[[["v"]],["result"]]],[11,"deserialize_bytes","","",49,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",49,[[["v"]],["result"]]],[11,"deserialize_option","","",49,[[["v"]],["result"]]],[11,"deserialize_unit","","",49,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",49,[[["v"]],["result"]]],[11,"deserialize_tuple","","",49,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",49,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",49,[[["v"]],["result"]]],[11,"deserialize_struct","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",49,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",49,[[["v"]],["result"]]],[11,"deserialize_any","","",2,[[["v"]],["result"]]],[11,"deserialize_bool","","",2,[[["v"]],["result"]]],[11,"deserialize_i8","","",2,[[["v"]],["result"]]],[11,"deserialize_i16","","",2,[[["v"]],["result"]]],[11,"deserialize_i32","","",2,[[["v"]],["result"]]],[11,"deserialize_i64","","",2,[[["v"]],["result"]]],[11,"deserialize_i128","","",2,[[["v"]],["result"]]],[11,"deserialize_u8","","",2,[[["v"]],["result"]]],[11,"deserialize_u16","","",2,[[["v"]],["result"]]],[11,"deserialize_u32","","",2,[[["v"]],["result"]]],[11,"deserialize_u64","","",2,[[["v"]],["result"]]],[11,"deserialize_u128","","",2,[[["v"]],["result"]]],[11,"deserialize_f32","","",2,[[["v"]],["result"]]],[11,"deserialize_f64","","",2,[[["v"]],["result"]]],[11,"deserialize_char","","",2,[[["v"]],["result"]]],[11,"deserialize_str","","",2,[[["v"]],["result"]]],[11,"deserialize_string","","",2,[[["v"]],["result"]]],[11,"deserialize_bytes","","",2,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",2,[[["v"]],["result"]]],[11,"deserialize_option","","",2,[[["v"]],["result"]]],[11,"deserialize_unit","","",2,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",2,[[["v"]],["result"]]],[11,"deserialize_tuple","","",2,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",2,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",2,[[["v"]],["result"]]],[11,"deserialize_struct","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",2,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",2,[[["v"]],["result"]]],[11,"deserialize_enum","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_any","","",3,[[["v"]],["result"]]],[11,"deserialize_bool","","",3,[[["v"]],["result"]]],[11,"deserialize_i8","","",3,[[["v"]],["result"]]],[11,"deserialize_i16","","",3,[[["v"]],["result"]]],[11,"deserialize_i32","","",3,[[["v"]],["result"]]],[11,"deserialize_i64","","",3,[[["v"]],["result"]]],[11,"deserialize_i128","","",3,[[["v"]],["result"]]],[11,"deserialize_u8","","",3,[[["v"]],["result"]]],[11,"deserialize_u16","","",3,[[["v"]],["result"]]],[11,"deserialize_u32","","",3,[[["v"]],["result"]]],[11,"deserialize_u64","","",3,[[["v"]],["result"]]],[11,"deserialize_u128","","",3,[[["v"]],["result"]]],[11,"deserialize_f32","","",3,[[["v"]],["result"]]],[11,"deserialize_f64","","",3,[[["v"]],["result"]]],[11,"deserialize_char","","",3,[[["v"]],["result"]]],[11,"deserialize_str","","",3,[[["v"]],["result"]]],[11,"deserialize_string","","",3,[[["v"]],["result"]]],[11,"deserialize_bytes","","",3,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",3,[[["v"]],["result"]]],[11,"deserialize_option","","",3,[[["v"]],["result"]]],[11,"deserialize_unit","","",3,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",3,[[["v"]],["result"]]],[11,"deserialize_tuple","","",3,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",3,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",3,[[["v"]],["result"]]],[11,"deserialize_struct","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",3,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",3,[[["v"]],["result"]]],[11,"deserialize_any","","",4,[[["v"]],["result"]]],[11,"deserialize_bool","","",4,[[["v"]],["result"]]],[11,"deserialize_i8","","",4,[[["v"]],["result"]]],[11,"deserialize_i16","","",4,[[["v"]],["result"]]],[11,"deserialize_i32","","",4,[[["v"]],["result"]]],[11,"deserialize_i64","","",4,[[["v"]],["result"]]],[11,"deserialize_i128","","",4,[[["v"]],["result"]]],[11,"deserialize_u8","","",4,[[["v"]],["result"]]],[11,"deserialize_u16","","",4,[[["v"]],["result"]]],[11,"deserialize_u32","","",4,[[["v"]],["result"]]],[11,"deserialize_u64","","",4,[[["v"]],["result"]]],[11,"deserialize_u128","","",4,[[["v"]],["result"]]],[11,"deserialize_f32","","",4,[[["v"]],["result"]]],[11,"deserialize_f64","","",4,[[["v"]],["result"]]],[11,"deserialize_char","","",4,[[["v"]],["result"]]],[11,"deserialize_str","","",4,[[["v"]],["result"]]],[11,"deserialize_string","","",4,[[["v"]],["result"]]],[11,"deserialize_bytes","","",4,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",4,[[["v"]],["result"]]],[11,"deserialize_option","","",4,[[["v"]],["result"]]],[11,"deserialize_unit","","",4,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",4,[[["v"]],["result"]]],[11,"deserialize_tuple","","",4,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",4,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",4,[[["v"]],["result"]]],[11,"deserialize_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",4,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",4,[[["v"]],["result"]]],[11,"deserialize_any","","",5,[[["v"]],["result"]]],[11,"deserialize_seq","","",5,[[["v"]],["result"]]],[11,"deserialize_tuple","","",5,[[["usize"],["v"]],["result"]]],[11,"deserialize_bool","","",5,[[["v"]],["result"]]],[11,"deserialize_i8","","",5,[[["v"]],["result"]]],[11,"deserialize_i16","","",5,[[["v"]],["result"]]],[11,"deserialize_i32","","",5,[[["v"]],["result"]]],[11,"deserialize_i64","","",5,[[["v"]],["result"]]],[11,"deserialize_i128","","",5,[[["v"]],["result"]]],[11,"deserialize_u8","","",5,[[["v"]],["result"]]],[11,"deserialize_u16","","",5,[[["v"]],["result"]]],[11,"deserialize_u32","","",5,[[["v"]],["result"]]],[11,"deserialize_u64","","",5,[[["v"]],["result"]]],[11,"deserialize_u128","","",5,[[["v"]],["result"]]],[11,"deserialize_f32","","",5,[[["v"]],["result"]]],[11,"deserialize_f64","","",5,[[["v"]],["result"]]],[11,"deserialize_char","","",5,[[["v"]],["result"]]],[11,"deserialize_str","","",5,[[["v"]],["result"]]],[11,"deserialize_string","","",5,[[["v"]],["result"]]],[11,"deserialize_bytes","","",5,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",5,[[["v"]],["result"]]],[11,"deserialize_option","","",5,[[["v"]],["result"]]],[11,"deserialize_unit","","",5,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",5,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",5,[[["v"]],["result"]]],[11,"deserialize_struct","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",5,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",5,[[["v"]],["result"]]],[11,"deserialize_any","","",6,[[["v"]],["result"]]],[11,"deserialize_enum","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",6,[[["v"]],["result"]]],[11,"deserialize_i8","","",6,[[["v"]],["result"]]],[11,"deserialize_i16","","",6,[[["v"]],["result"]]],[11,"deserialize_i32","","",6,[[["v"]],["result"]]],[11,"deserialize_i64","","",6,[[["v"]],["result"]]],[11,"deserialize_i128","","",6,[[["v"]],["result"]]],[11,"deserialize_u8","","",6,[[["v"]],["result"]]],[11,"deserialize_u16","","",6,[[["v"]],["result"]]],[11,"deserialize_u32","","",6,[[["v"]],["result"]]],[11,"deserialize_u64","","",6,[[["v"]],["result"]]],[11,"deserialize_u128","","",6,[[["v"]],["result"]]],[11,"deserialize_f32","","",6,[[["v"]],["result"]]],[11,"deserialize_f64","","",6,[[["v"]],["result"]]],[11,"deserialize_char","","",6,[[["v"]],["result"]]],[11,"deserialize_str","","",6,[[["v"]],["result"]]],[11,"deserialize_string","","",6,[[["v"]],["result"]]],[11,"deserialize_bytes","","",6,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",6,[[["v"]],["result"]]],[11,"deserialize_option","","",6,[[["v"]],["result"]]],[11,"deserialize_unit","","",6,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",6,[[["v"]],["result"]]],[11,"deserialize_tuple","","",6,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",6,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",6,[[["v"]],["result"]]],[11,"deserialize_struct","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",6,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",6,[[["v"]],["result"]]],[11,"expecting","serde::de","",28,[[["formatter"],["self"]],["result"]]],[11,"visit_bool","","",28,[[["bool"]],["result"]]],[11,"visit_i64","","",28,[[["i64"]],["result"]]],[11,"visit_u64","","",28,[[["u64"]],["result"]]],[11,"visit_f64","","",28,[[["f64"]],["result"]]],[11,"visit_str","","",28,[[["str"]],["result"]]],[11,"visit_none","","",28,[[],["result"]]],[11,"visit_some","","",28,[[["d"]],["result"]]],[11,"visit_newtype_struct","","",28,[[["d"]],["result"]]],[11,"visit_unit","","",28,[[],["result"]]],[11,"visit_seq","","",28,[[["a"]],["result"]]],[11,"visit_map","","",28,[[["a"]],["result"]]],[11,"visit_bytes","","",28,[[],["result"]]],[11,"visit_enum","","",28,[[["a"]],["result"]]],[11,"next_element_seed","serde::de::value","",3,[[["self"],["v"]],[["option"],["result",["option"]]]]],[11,"size_hint","","",3,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"next_element_seed","","",5,[[["self"],["t"]],[["option"],["result",["option"]]]]],[11,"size_hint","","",5,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"next_key_seed","","",5,[[["self"],["t"]],[["option"],["result",["option"]]]]],[11,"next_value_seed","","",5,[[["self"],["t"]],["result"]]],[11,"next_entry_seed","","",5,[[["tv"],["self"],["tk"]],[["result",["option"]],["option"]]]],[11,"size_hint","","",5,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"variant_seed","","",46,[[["t"]],["result"]]],[11,"variant_seed","","",47,[[["t"]],["result"]]],[11,"variant_seed","","",1,[[["t"]],["result"]]],[11,"variant_seed","","",48,[[["t"]],["result"]]],[11,"variant_seed","","",49,[[["t"]],["result"]]],[11,"variant_seed","","",6,[[["t"]],["result"]]],[11,"serialize_element","serde::ser","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_element","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_key","","",50,[[["self"],["t"]],["result"]]],[11,"serialize_value","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"custom","serde::de::value","",29,[[["t"]],["self"]]],[11,"custom","","",29,[[["t"]],["self"]]],[11,"clone","","",29,[[["self"]],["error"]]],[11,"clone","","",30,[[["self"]],["self"]]],[11,"clone","","",31,[[["self"]],["self"]]],[11,"clone","","",32,[[["self"]],["self"]]],[11,"clone","","",33,[[["self"]],["self"]]],[11,"clone","","",34,[[["self"]],["self"]]],[11,"clone","","",35,[[["self"]],["self"]]],[11,"clone","","",36,[[["self"]],["self"]]],[11,"clone","","",37,[[["self"]],["self"]]],[11,"clone","","",38,[[["self"]],["self"]]],[11,"clone","","",39,[[["self"]],["self"]]],[11,"clone","","",40,[[["self"]],["self"]]],[11,"clone","","",41,[[["self"]],["self"]]],[11,"clone","","",42,[[["self"]],["self"]]],[11,"clone","","",43,[[["self"]],["self"]]],[11,"clone","","",44,[[["self"]],["self"]]],[11,"clone","","",45,[[["self"]],["self"]]],[11,"clone","","",46,[[["self"]],["self"]]],[11,"clone","","",47,[[["self"]],["self"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone","","",48,[[["self"]],["self"]]],[11,"clone","","",49,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["seqdeserializer"]]],[11,"clone","","",4,[[["self"]],["seqaccessdeserializer"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"clone","","",6,[[["self"]],["mapaccessdeserializer"]]],[11,"clone","serde::de","",28,[[["self"]],["ignoredany"]]],[11,"clone","","",0,[[["self"]],["unexpected"]]],[11,"default","","",28,[[],["ignoredany"]]],[11,"eq","serde::de::value","",29,[[["self"],["error"]],["bool"]]],[11,"ne","","",29,[[["self"],["error"]],["bool"]]],[11,"eq","serde::de","",0,[[["unexpected"],["self"]],["bool"]]],[11,"ne","","",0,[[["unexpected"],["self"]],["bool"]]],[11,"fmt","serde::de::value","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde::de","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde::de::value","",29,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","serde::de","",0,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"description","serde::de::value","",29,[[["self"]],["str"]]]],"p":[[4,"Unexpected"],[3,"BorrowedStrDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[8,"Error"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"IgnoredAny"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"Impossible"]]};
searchIndex["serde_derive"] = {"doc":"This crate provides Serde's two derive macros.","i":[[24,"Serialize","serde_derive","",null,null],[24,"Deserialize","","",null,null]],"p":[]};
searchIndex["serde_ignored"] = {"doc":"Find out about keys that are ignored when deserializing…","i":[[3,"Deserializer","serde_ignored","Deserializer adapter that invokes a callback with the path…",null,null],[4,"Path","","Path to the current value in the input, like…",null,null],[13,"Root","","",0,null],[13,"Seq","","",0,null],[12,"parent","serde_ignored::Path","",1,null],[12,"index","","",1,null],[13,"Map","serde_ignored","",0,null],[12,"parent","serde_ignored::Path","",2,null],[12,"key","","",2,null],[13,"Some","serde_ignored","",0,null],[12,"parent","serde_ignored::Path","",3,null],[13,"NewtypeStruct","serde_ignored","",0,null],[12,"parent","serde_ignored::Path","",4,null],[13,"NewtypeVariant","serde_ignored","",0,null],[12,"parent","serde_ignored::Path","",5,null],[5,"deserialize","serde_ignored","Entry point. See crate documentation for an example.",null,[[["d"],["f"]],["result"]]],[11,"new","","",6,[[["d"],["f"]],["self"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"deserialize_any","","",6,[[["v"]],["result"]]],[11,"deserialize_bool","","",6,[[["v"]],["result"]]],[11,"deserialize_u8","","",6,[[["v"]],["result"]]],[11,"deserialize_u16","","",6,[[["v"]],["result"]]],[11,"deserialize_u32","","",6,[[["v"]],["result"]]],[11,"deserialize_u64","","",6,[[["v"]],["result"]]],[11,"deserialize_i8","","",6,[[["v"]],["result"]]],[11,"deserialize_i16","","",6,[[["v"]],["result"]]],[11,"deserialize_i32","","",6,[[["v"]],["result"]]],[11,"deserialize_i64","","",6,[[["v"]],["result"]]],[11,"deserialize_f32","","",6,[[["v"]],["result"]]],[11,"deserialize_f64","","",6,[[["v"]],["result"]]],[11,"deserialize_char","","",6,[[["v"]],["result"]]],[11,"deserialize_str","","",6,[[["v"]],["result"]]],[11,"deserialize_string","","",6,[[["v"]],["result"]]],[11,"deserialize_bytes","","",6,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",6,[[["v"]],["result"]]],[11,"deserialize_option","","",6,[[["v"]],["result"]]],[11,"deserialize_unit","","",6,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",6,[[["v"]],["result"]]],[11,"deserialize_tuple","","",6,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",6,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",6,[[["v"]],["result"]]],[11,"deserialize_struct","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",6,[[["v"]],["result"]]],[11,"deserialize_identifier","","",6,[[["v"]],["result"]]]],"p":[[4,"Path"],[13,"Seq"],[13,"Map"],[13,"Some"],[13,"NewtypeStruct"],[13,"NewtypeVariant"],[3,"Deserializer"]]};
searchIndex["serde_json"] = {"doc":"Serde JSON","i":[[3,"Deserializer","serde_json","A structure that deserializes JSON into Rust values.",null,null],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON…",null,null],[3,"Error","","This type represents all possible errors that can occur…",null,null],[3,"Serializer","","A structure for serializing Rust values into JSON.",null,null],[3,"Map","","Represents a JSON key/value type.",null,null],[3,"Number","","Represents a JSON number, whether integer or floating point.",null,null],[4,"Value","","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",0,null],[13,"Bool","","Represents a JSON boolean.",0,null],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,null],[13,"String","","Represents a JSON string.",0,null],[13,"Array","","Represents a JSON array.",0,null],[13,"Object","","Represents a JSON object.",0,null],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of…",null,[[["r"]],["result"]]],[5,"from_slice","","Deserialize an instance of type `T` from bytes of JSON text.",null,[[],["result"]]],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON…",null,[[["str"]],["result"]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",null,[[["t"]],[["string"],["result",["string"]]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed…",null,[[["t"]],[["string"],["result",["string"]]]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",null,[[["t"]],[["result",["vec"]],["vec",["u8"]]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed…",null,[[["t"]],[["result",["vec"]],["vec",["u8"]]]]],[5,"to_writer","","Serialize the given data structure as JSON into the IO…",null,[[["w"],["t"]],["result"]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON…",null,[[["w"],["t"]],["result"]]],[5,"from_value","","Interpret a `serde_json::Value` as an instance of type `T`.",null,[[["value"]],[["error"],["result",["error"]]]]],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum…",null,[[["t"]],[["error"],["result",["value","error"]],["value"]]]],[0,"de","","Deserialize JSON data to a Rust data structure.",null,null],[3,"SliceRead","serde_json::de","JSON input source that reads from a slice of bytes.",null,null],[3,"StrRead","","JSON input source that reads from a UTF-8 string.",null,null],[3,"IoRead","","JSON input source that reads from a std::io input stream.",null,null],[3,"Deserializer","","A structure that deserializes JSON into Rust values.",null,null],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON…",null,null],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of…",null,[[["r"]],["result"]]],[5,"from_slice","","Deserialize an instance of type `T` from bytes of JSON text.",null,[[],["result"]]],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON…",null,[[["str"]],["result"]]],[8,"Read","","Trait used by the deserializer for iterating over input.…",null,null],[11,"new","","Create a JSON deserializer from one of the possible…",1,[[["r"]],["self"]]],[11,"from_reader","","Creates a JSON deserializer from an `io::Read`.",1,[[["r"]],["self"]]],[11,"from_slice","","Creates a JSON deserializer from a `&[u8]`.",1,[[],["self"]]],[11,"from_str","","Creates a JSON deserializer from a `&str`.",1,[[["str"]],["self"]]],[11,"end","","The `Deserializer::end` method should be called after a…",1,[[["self"]],["result"]]],[11,"into_iter","","Turn a JSON deserializer into an iterator over values of…",1,[[],["streamdeserializer"]]],[11,"new","","Create a JSON stream deserializer from one of the possible…",2,[[["r"]],["self"]]],[11,"byte_offset","","Returns the number of bytes so far deserialized into a…",2,[[["self"]],["usize"]]],[0,"error","serde_json","When serializing or deserializing JSON goes wrong.",null,null],[3,"Error","serde_json::error","This type represents all possible errors that can occur…",null,null],[4,"Category","","Categorizes the cause of a `serde_json::Error`.",null,null],[13,"Io","","The error was caused by a failure to read or write bytes…",3,null],[13,"Syntax","","The error was caused by input that was not syntactically…",3,null],[13,"Data","","The error was caused by input data that was semantically…",3,null],[13,"Eof","","The error was caused by prematurely reaching the end of…",3,null],[6,"Result","","Alias for a `Result` with the error type…",null,null],[11,"line","","One-based line number at which the error was detected.",4,[[["self"]],["usize"]]],[11,"column","","One-based column number at which the error was detected.",4,[[["self"]],["usize"]]],[11,"classify","","Categorizes the cause of this error.",4,[[["self"]],["category"]]],[11,"is_io","","Returns true if this error was caused by a failure to read…",4,[[["self"]],["bool"]]],[11,"is_syntax","","Returns true if this error was caused by input that was…",4,[[["self"]],["bool"]]],[11,"is_data","","Returns true if this error was caused by input data that…",4,[[["self"]],["bool"]]],[11,"is_eof","","Returns true if this error was caused by prematurely…",4,[[["self"]],["bool"]]],[0,"map","serde_json","A map of String to serde_json::Value.",null,null],[3,"Map","serde_json::map","Represents a JSON key/value type.",null,null],[3,"VacantEntry","","A vacant Entry. It is part of the [`Entry`] enum.",null,null],[3,"OccupiedEntry","","An occupied Entry. It is part of the [`Entry`] enum.",null,null],[3,"Iter","","An iterator over a serde_json::Map's entries.",null,null],[3,"IterMut","","A mutable iterator over a serde_json::Map's entries.",null,null],[3,"IntoIter","","An owning iterator over a serde_json::Map's entries.",null,null],[3,"Keys","","An iterator over a serde_json::Map's keys.",null,null],[3,"Values","","An iterator over a serde_json::Map's values.",null,null],[3,"ValuesMut","","A mutable iterator over a serde_json::Map's values.",null,null],[4,"Entry","","A view into a single entry in a map, which may either be…",null,null],[13,"Vacant","","A vacant Entry.",5,null],[13,"Occupied","","An occupied Entry.",5,null],[11,"new","","Makes a new empty Map.",6,[[],["self"]]],[11,"with_capacity","","Makes a new empty Map with the given initial capacity.",6,[[["usize"]],["self"]]],[11,"clear","","Clears the map, removing all values.",6,[[["self"]]]],[11,"get","","Returns a reference to the value corresponding to the key.",6,[[["self"],["q"]],[["option",["value"]],["value"]]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",6,[[["self"],["q"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",6,[[["self"],["q"]],[["option",["value"]],["value"]]]],[11,"insert","","Inserts a key-value pair into the map.",6,[[["value"],["self"],["string"]],[["option",["value"]],["value"]]]],[11,"remove","","Removes a key from the map, returning the value at the key…",6,[[["self"],["q"]],[["option",["value"]],["value"]]]],[11,"append","","Moves all elements from other into Self, leaving other…",6,[[["self"]]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",6,[[["self"],["s"]],["entry"]]],[11,"len","","Returns the number of elements in the map.",6,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",6,[[["self"]],["bool"]]],[11,"iter","","Gets an iterator over the entries of the map.",6,[[["self"]],["iter"]]],[11,"iter_mut","","Gets a mutable iterator over the entries of the map.",6,[[["self"]],["itermut"]]],[11,"keys","","Gets an iterator over the keys of the map.",6,[[["self"]],["keys"]]],[11,"values","","Gets an iterator over the values of the map.",6,[[["self"]],["values"]]],[11,"values_mut","","Gets an iterator over mutable values of the map.",6,[[["self"]],["valuesmut"]]],[11,"key","","Returns a reference to this entry's key.",5,[[["self"]],["string"]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",5,[[["value"]],["value"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",5,[[["f"]],["value"]]],[11,"key","","Gets a reference to the key that would be used when…",7,[[["self"]],["string"]]],[11,"insert","","Sets the value of the entry with the VacantEntry's key,…",7,[[["value"]],["value"]]],[11,"key","","Gets a reference to the key in the entry.",8,[[["self"]],["string"]]],[11,"get","","Gets a reference to the value in the entry.",8,[[["self"]],["value"]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",8,[[["self"]],["value"]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",8,[[],["value"]]],[11,"insert","","Sets the value of the entry with the `OccupiedEntry`'s…",8,[[["self"],["value"]],["value"]]],[11,"remove","","Takes the value of the entry out of the map, and returns it.",8,[[],["value"]]],[0,"ser","serde_json","Serialize a Rust data structure into JSON data.",null,null],[3,"Serializer","serde_json::ser","A structure for serializing Rust values into JSON.",null,null],[3,"CompactFormatter","","This structure compacts a JSON value with no extra…",null,null],[3,"PrettyFormatter","","This structure pretty prints a JSON value to make it human…",null,null],[4,"CharEscape","","Represents a character escape code in a type-safe manner.",null,null],[13,"Quote","","An escaped quote `\"`",9,null],[13,"ReverseSolidus","","An escaped reverse solidus `\\`",9,null],[13,"Solidus","","An escaped solidus `/`",9,null],[13,"Backspace","","An escaped backspace character (usually escaped as `\\b`)",9,null],[13,"FormFeed","","An escaped form feed character (usually escaped as `\\f`)",9,null],[13,"LineFeed","","An escaped line feed character (usually escaped as `\\n`)",9,null],[13,"CarriageReturn","","An escaped carriage return character (usually escaped as…",9,null],[13,"Tab","","An escaped tab character (usually escaped as `\\t`)",9,null],[13,"AsciiControl","","An escaped ASCII plane control character (usually escaped…",9,null],[5,"to_writer","","Serialize the given data structure as JSON into the IO…",null,[[["w"],["t"]],["result"]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON…",null,[[["w"],["t"]],["result"]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",null,[[["t"]],[["result",["vec"]],["vec",["u8"]]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed…",null,[[["t"]],[["result",["vec"]],["vec",["u8"]]]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",null,[[["t"]],[["string"],["result",["string"]]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed…",null,[[["t"]],[["string"],["result",["string"]]]]],[8,"Formatter","","This trait abstracts away serializing the JSON control…",null,null],[11,"write_null","","Writes a `null` value to the specified writer.",10,[[["w"],["self"]],["result"]]],[11,"write_bool","","Writes a `true` or `false` value to the specified writer.",10,[[["w"],["self"],["bool"]],["result"]]],[11,"write_i8","","Writes an integer value like `-123` to the specified writer.",10,[[["w"],["self"],["i8"]],["result"]]],[11,"write_i16","","Writes an integer value like `-123` to the specified writer.",10,[[["w"],["self"],["i16"]],["result"]]],[11,"write_i32","","Writes an integer value like `-123` to the specified writer.",10,[[["w"],["self"],["i32"]],["result"]]],[11,"write_i64","","Writes an integer value like `-123` to the specified writer.",10,[[["w"],["self"],["i64"]],["result"]]],[11,"write_u8","","Writes an integer value like `123` to the specified writer.",10,[[["w"],["self"],["u8"]],["result"]]],[11,"write_u16","","Writes an integer value like `123` to the specified writer.",10,[[["w"],["self"],["u16"]],["result"]]],[11,"write_u32","","Writes an integer value like `123` to the specified writer.",10,[[["w"],["self"],["u32"]],["result"]]],[11,"write_u64","","Writes an integer value like `123` to the specified writer.",10,[[["w"],["self"],["u64"]],["result"]]],[11,"write_f32","","Writes a floating point value like `-31.26e+12` to the…",10,[[["w"],["self"],["f32"]],["result"]]],[11,"write_f64","","Writes a floating point value like `-31.26e+12` to the…",10,[[["w"],["self"],["f64"]],["result"]]],[11,"write_number_str","","Writes a number that has already been rendered to a string.",10,[[["w"],["self"],["str"]],["result"]]],[11,"begin_string","","Called before each series of `write_string_fragment` and…",10,[[["w"],["self"]],["result"]]],[11,"end_string","","Called after each series of `write_string_fragment` and…",10,[[["w"],["self"]],["result"]]],[11,"write_string_fragment","","Writes a string fragment that doesn't need any escaping to…",10,[[["w"],["self"],["str"]],["result"]]],[11,"write_char_escape","","Writes a character escape code to the specified writer.",10,[[["w"],["self"],["charescape"]],["result"]]],[11,"begin_array","","Called before every array. Writes a `[` to the specified…",10,[[["w"],["self"]],["result"]]],[11,"end_array","","Called after every array. Writes a `]` to the specified…",10,[[["w"],["self"]],["result"]]],[11,"begin_array_value","","Called before every array value. Writes a `,` if needed to…",10,[[["w"],["self"],["bool"]],["result"]]],[11,"end_array_value","","Called after every array value.",10,[[["w"],["self"]],["result"]]],[11,"begin_object","","Called before every object. Writes a `{` to the specified…",10,[[["w"],["self"]],["result"]]],[11,"end_object","","Called after every object. Writes a `}` to the specified…",10,[[["w"],["self"]],["result"]]],[11,"begin_object_key","","Called before every object key.",10,[[["w"],["self"],["bool"]],["result"]]],[11,"end_object_key","","Called after every object key. A `:` should be written to…",10,[[["w"],["self"]],["result"]]],[11,"begin_object_value","","Called before every object value. A `:` should be written…",10,[[["w"],["self"]],["result"]]],[11,"end_object_value","","Called after every object value.",10,[[["w"],["self"]],["result"]]],[11,"write_raw_fragment","","Writes a raw JSON fragment that doesn't need any escaping…",10,[[["w"],["self"],["str"]],["result"]]],[11,"new","","Creates a new JSON serializer.",11,[[["w"]],["self"]]],[11,"pretty","","Creates a new JSON pretty print serializer.",11,[[["w"]],["self"]]],[11,"with_formatter","","Creates a new JSON visitor whose output will be written to…",11,[[["w"],["f"]],["self"]]],[11,"into_inner","","Unwrap the `Writer` from the `Serializer`.",11,[[],["w"]]],[11,"new","","Construct a pretty printer formatter that defaults to…",12,[[],["self"]]],[11,"with_indent","","Construct a pretty printer formatter that uses the…",12,[[],["self"]]],[0,"value","serde_json","The Value enum, a loosely typed way of representing any…",null,null],[3,"Serializer","serde_json::value","Serializer whose output is a `Value`.",null,null],[3,"Number","","Represents a JSON number, whether integer or floating point.",null,null],[3,"RawValue","","Reference to a range of bytes encompassing a single valid…",null,null],[4,"Value","","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",0,null],[13,"Bool","","Represents a JSON boolean.",0,null],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,null],[13,"String","","Represents a JSON string.",0,null],[13,"Array","","Represents a JSON array.",0,null],[13,"Object","","Represents a JSON object.",0,null],[5,"to_raw_value","","Convert a `T` into a boxed `RawValue`.",null,[[["t"]],[["error"],["result",["box","error"]],["box",["rawvalue"]]]]],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum…",null,[[["t"]],[["error"],["result",["value","error"]],["value"]]]],[5,"from_value","","Interpret a `serde_json::Value` as an instance of type `T`.",null,[[["value"]],[["error"],["result",["error"]]]]],[8,"Index","","A type that can be used to index into a `serde_json::Value`.",null,null],[11,"get","","Index into a JSON array or map. A string index can be used…",0,[[["self"],["index"]],[["option",["value"]],["value"]]]],[11,"get_mut","","Mutably index into a JSON array or map. A string index can…",0,[[["self"],["index"]],[["option",["value"]],["value"]]]],[11,"is_object","","Returns true if the `Value` is an Object. Returns false…",0,[[["self"]],["bool"]]],[11,"as_object","","If the `Value` is an Object, returns the associated Map.…",0,[[["self"]],[["option",["map"]],["map"]]]],[11,"as_object_mut","","If the `Value` is an Object, returns the associated…",0,[[["self"]],[["option",["map"]],["map"]]]],[11,"is_array","","Returns true if the `Value` is an Array. Returns false…",0,[[["self"]],["bool"]]],[11,"as_array","","If the `Value` is an Array, returns the associated vector.…",0,[[["self"]],[["vec"],["option",["vec"]]]]],[11,"as_array_mut","","If the `Value` is an Array, returns the associated mutable…",0,[[["self"]],[["vec"],["option",["vec"]]]]],[11,"is_string","","Returns true if the `Value` is a String. Returns false…",0,[[["self"]],["bool"]]],[11,"as_str","","If the `Value` is a String, returns the associated str.…",0,[[["self"]],[["str"],["option",["str"]]]]],[11,"is_number","","Returns true if the `Value` is a Number. Returns false…",0,[[["self"]],["bool"]]],[11,"is_i64","","Returns true if the `Value` is an integer between…",0,[[["self"]],["bool"]]],[11,"is_u64","","Returns true if the `Value` is an integer between zero and…",0,[[["self"]],["bool"]]],[11,"is_f64","","Returns true if the `Value` is a number that can be…",0,[[["self"]],["bool"]]],[11,"as_i64","","If the `Value` is an integer, represent it as i64 if…",0,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"as_u64","","If the `Value` is an integer, represent it as u64 if…",0,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"as_f64","","If the `Value` is a number, represent it as f64 if…",0,[[["self"]],[["f64"],["option",["f64"]]]]],[11,"is_boolean","","Returns true if the `Value` is a Boolean. Returns false…",0,[[["self"]],["bool"]]],[11,"as_bool","","If the `Value` is a Boolean, returns the associated bool.…",0,[[["self"]],[["bool"],["option",["bool"]]]]],[11,"is_null","","Returns true if the `Value` is a Null. Returns false…",0,[[["self"]],["bool"]]],[11,"as_null","","If the `Value` is a Null, returns (). Returns None…",0,[[["self"]],["option"]]],[11,"pointer","","Looks up a value by a JSON Pointer.",0,[[["str"],["self"]],[["option",["value"]],["value"]]]],[11,"pointer_mut","","Looks up a value by a JSON Pointer and returns a mutable…",0,[[["str"],["self"]],[["option",["value"]],["value"]]]],[11,"take","","Takes the value out of the `Value`, leaving a `Null` in…",0,[[["self"]],["value"]]],[11,"is_i64","serde_json","Returns true if the `Number` is an integer between…",13,[[["self"]],["bool"]]],[11,"is_u64","","Returns true if the `Number` is an integer between zero…",13,[[["self"]],["bool"]]],[11,"is_f64","","Returns true if the `Number` can be represented by f64.",13,[[["self"]],["bool"]]],[11,"as_i64","","If the `Number` is an integer, represent it as i64 if…",13,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"as_u64","","If the `Number` is an integer, represent it as u64 if…",13,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"as_f64","","Represents the number as f64 if possible. Returns None…",13,[[["self"]],[["f64"],["option",["f64"]]]]],[11,"from_f64","","Converts a finite `f64` to a `Number`. Infinite or NaN…",13,[[["f64"]],[["number"],["option",["number"]]]]],[11,"new","serde_json::de","Create a JSON input source to read from a std::io input…",14,[[["r"]],["self"]]],[11,"new","","Create a JSON input source to read from a slice of bytes.",15,[[],["self"]]],[11,"new","","Create a JSON input source to read from a UTF-8 string.",16,[[["str"]],["self"]]],[11,"from_string","serde_json::value","Convert an owned `String` of JSON data to an owned…",17,[[["string"]],[["box"],["error"],["result",["box","error"]]]]],[11,"get","","Access the JSON text underlying a raw value.",17,[[["self"]],["str"]]],[6,"Result","serde_json","Alias for a `Result` with the error type…",null,null],[14,"json","","Construct a `serde_json::Value` from a JSON literal.",null,null],[11,"from","serde_json::de","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","serde_json::error","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","serde_json::ser","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","serde_json::map","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"into_iter","","",6,[[],["i"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","serde_json","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","serde_json::value","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","serde_json::de","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","serde_json::error","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","serde_json::map","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"into_iter","","",18,[[],["i"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"into_iter","","",19,[[],["i"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"into_iter","","",20,[[],["i"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"into_iter","","",21,[[],["i"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"into_iter","","",22,[[],["i"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"into_iter","","",23,[[],["i"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","serde_json::ser","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","serde_json::value","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"begin_array","serde_json::ser","",12,[[["w"],["self"]],["result"]]],[11,"end_array","","",12,[[["w"],["self"]],["result"]]],[11,"begin_array_value","","",12,[[["w"],["self"],["bool"]],["result"]]],[11,"end_array_value","","",12,[[["w"],["self"]],["result"]]],[11,"begin_object","","",12,[[["w"],["self"]],["result"]]],[11,"end_object","","",12,[[["w"],["self"]],["result"]]],[11,"begin_object_key","","",12,[[["w"],["self"],["bool"]],["result"]]],[11,"begin_object_value","","",12,[[["w"],["self"]],["result"]]],[11,"end_object_value","","",12,[[["w"],["self"]],["result"]]],[11,"next","serde_json::de","",14,[[["self"]],[["option",["u8"]],["result",["option"]]]]],[11,"peek","","",14,[[["self"]],[["option",["u8"]],["result",["option"]]]]],[11,"discard","","",14,[[["self"]]]],[11,"position","","",14,[[["self"]],["position"]]],[11,"peek_position","","",14,[[["self"]],["position"]]],[11,"byte_offset","","",14,[[["self"]],["usize"]]],[11,"parse_str","","",14,[[["vec"],["self"]],[["result",["reference"]],["reference",["str"]]]]],[11,"parse_str_raw","","",14,[[["vec"],["self"]],[["result",["reference"]],["reference"]]]],[11,"ignore_str","","",14,[[["self"]],["result"]]],[11,"decode_hex_escape","","",14,[[["self"]],[["result",["u16"]],["u16"]]]],[11,"begin_raw_buffering","","",14,[[["self"]]]],[11,"end_raw_buffering","","",14,[[["self"],["v"]],["result"]]],[11,"set_failed","","",14,[[["self"],["bool"]]]],[11,"next","","",15,[[["self"]],[["option",["u8"]],["result",["option"]]]]],[11,"peek","","",15,[[["self"]],[["option",["u8"]],["result",["option"]]]]],[11,"discard","","",15,[[["self"]]]],[11,"position","","",15,[[["self"]],["position"]]],[11,"peek_position","","",15,[[["self"]],["position"]]],[11,"byte_offset","","",15,[[["self"]],["usize"]]],[11,"parse_str","","",15,[[["vec"],["self"]],[["result",["reference"]],["reference",["str"]]]]],[11,"parse_str_raw","","",15,[[["vec"],["self"]],[["result",["reference"]],["reference"]]]],[11,"ignore_str","","",15,[[["self"]],["result"]]],[11,"decode_hex_escape","","",15,[[["self"]],[["result",["u16"]],["u16"]]]],[11,"begin_raw_buffering","","",15,[[["self"]]]],[11,"end_raw_buffering","","",15,[[["self"],["v"]],["result"]]],[11,"set_failed","","",15,[[["self"],["bool"]]]],[11,"next","","",16,[[["self"]],[["option",["u8"]],["result",["option"]]]]],[11,"peek","","",16,[[["self"]],[["option",["u8"]],["result",["option"]]]]],[11,"discard","","",16,[[["self"]]]],[11,"position","","",16,[[["self"]],["position"]]],[11,"peek_position","","",16,[[["self"]],["position"]]],[11,"byte_offset","","",16,[[["self"]],["usize"]]],[11,"parse_str","","",16,[[["vec"],["self"]],[["result",["reference"]],["reference",["str"]]]]],[11,"parse_str_raw","","",16,[[["vec"],["self"]],[["result",["reference"]],["reference"]]]],[11,"ignore_str","","",16,[[["self"]],["result"]]],[11,"decode_hex_escape","","",16,[[["self"]],[["result",["u16"]],["u16"]]]],[11,"begin_raw_buffering","","",16,[[["self"]]]],[11,"end_raw_buffering","","",16,[[["self"],["v"]],["result"]]],[11,"set_failed","","",16,[[["self"],["bool"]]]],[11,"from","serde_json::value","",0,[[["i8"]],["self"]]],[11,"from","","",0,[[["i16"]],["self"]]],[11,"from","","",0,[[["i32"]],["self"]]],[11,"from","","",0,[[["i64"]],["self"]]],[11,"from","","",0,[[["isize"]],["self"]]],[11,"from","","",0,[[["u8"]],["self"]]],[11,"from","","",0,[[["u16"]],["self"]]],[11,"from","","",0,[[["u32"]],["self"]]],[11,"from","","",0,[[["u64"]],["self"]]],[11,"from","","",0,[[["usize"]],["self"]]],[11,"from","","Convert 32-bit floating point number to `Value`",0,[[["f32"]],["self"]]],[11,"from","","Convert 64-bit floating point number to `Value`",0,[[["f64"]],["self"]]],[11,"from","","Convert boolean to `Value`",0,[[["bool"]],["self"]]],[11,"from","","Convert `String` to `Value`",0,[[["string"]],["self"]]],[11,"from","","Convert string slice to `Value`",0,[[["str"]],["self"]]],[11,"from","","Convert copy-on-write string to `Value`",0,[[["str"],["cow",["str"]]],["self"]]],[11,"from","","Convert map (with string keys) to `Value`",0,[[["string"],["map",["string","value"]],["value"]],["self"]]],[11,"from","","Convert a `Vec` to `Value`",0,[[["vec"]],["self"]]],[11,"from","","Convert a slice to `Value`",0,[[],["self"]]],[11,"from","","Convert `()` to `Value`",0,[[],["self"]]],[11,"from","serde_json","",13,[[["u8"]],["self"]]],[11,"from","","",13,[[["u16"]],["self"]]],[11,"from","","",13,[[["u32"]],["self"]]],[11,"from","","",13,[[["u64"]],["self"]]],[11,"from","","",13,[[["usize"]],["self"]]],[11,"from","","",13,[[["i8"]],["self"]]],[11,"from","","",13,[[["i16"]],["self"]]],[11,"from","","",13,[[["i32"]],["self"]]],[11,"from","","",13,[[["i64"]],["self"]]],[11,"from","","",13,[[["isize"]],["self"]]],[11,"next_back","serde_json::map","",18,[[["self"]],["option"]]],[11,"next_back","","",19,[[["self"]],["option"]]],[11,"next_back","","",20,[[["self"]],["option"]]],[11,"next_back","","",21,[[["self"]],["option"]]],[11,"next_back","","",22,[[["self"]],["option"]]],[11,"next_back","","",23,[[["self"]],["option"]]],[11,"len","","",18,[[["self"]],["usize"]]],[11,"len","","",19,[[["self"]],["usize"]]],[11,"len","","",20,[[["self"]],["usize"]]],[11,"len","","",21,[[["self"]],["usize"]]],[11,"len","","",22,[[["self"]],["usize"]]],[11,"len","","",23,[[["self"]],["usize"]]],[11,"extend","","",6,[[["self"],["t"]]]],[11,"into_iter","","",6,[[]]],[11,"next","serde_json::de","",2,[[["self"]],[["result"],["option",["result"]]]]],[11,"next","serde_json::map","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,[[["self"]]]],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,[[["self"]]]],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,[[["self"]]]],[11,"next","","",21,[[["self"]],["option"]]],[11,"size_hint","","",21,[[["self"]]]],[11,"next","","",22,[[["self"]],["option"]]],[11,"size_hint","","",22,[[["self"]]]],[11,"next","","",23,[[["self"]],["option"]]],[11,"size_hint","","",23,[[["self"]]]],[11,"clone","serde_json::error","",3,[[["self"]],["category"]]],[11,"clone","serde_json::map","",6,[[["self"]],["self"]]],[11,"clone","serde_json::ser","",24,[[["self"]],["compactformatter"]]],[11,"clone","","",12,[[["self"]],["prettyformatter"]]],[11,"clone","serde_json::value","",0,[[["self"]],["value"]]],[11,"clone","serde_json","",13,[[["self"]],["number"]]],[11,"default","serde_json::map","",6,[[],["self"]]],[11,"default","serde_json::ser","",12,[[],["self"]]],[11,"default","serde_json::value","",0,[[],["value"]]],[11,"eq","serde_json::error","",3,[[["self"],["category"]],["bool"]]],[11,"eq","serde_json::map","",6,[[["self"]],["bool"]]],[11,"eq","serde_json::value","",0,[[["self"],["value"]],["bool"]]],[11,"ne","","",0,[[["self"],["value"]],["bool"]]],[11,"eq","","",0,[[["str"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["str"]],["bool"]]],[11,"eq","","",0,[[["string"],["self"]],["bool"]]],[11,"eq","","",0,[[["i8"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["i16"]],["bool"]]],[11,"eq","","",0,[[["self"],["i32"]],["bool"]]],[11,"eq","","",0,[[["i64"],["self"]],["bool"]]],[11,"eq","","",0,[[["isize"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["u8"]],["bool"]]],[11,"eq","","",0,[[["u16"],["self"]],["bool"]]],[11,"eq","","",0,[[["u32"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["u64"]],["bool"]]],[11,"eq","","",0,[[["self"],["usize"]],["bool"]]],[11,"eq","","",0,[[["f32"],["self"]],["bool"]]],[11,"eq","","",0,[[["f64"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["bool"]],["bool"]]],[11,"eq","serde_json","",13,[[["self"],["number"]],["bool"]]],[11,"ne","","",13,[[["self"],["number"]],["bool"]]],[11,"to_owned","serde_json::value","",17,[[["self"]]]],[11,"fmt","serde_json::error","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json::map","",6,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","serde_json::ser","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json::value","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json::value","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json::error","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json::value","Display a JSON value as a string.",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde_json::value","",17,[[["formatter"],["self"]],["result"]]],[11,"index","serde_json::map","",6,[[["self"],["q"]],["value"]]],[11,"index","serde_json::value","Index into a `serde_json::Value` using the syntax…",0,[[["i"],["self"]],["value"]]],[11,"index_mut","serde_json::map","",6,[[["self"],["q"]],["value"]]],[11,"index_mut","serde_json::value","Write into a `serde_json::Value` using the syntax…",0,[[["self"],["i"]],["value"]]],[11,"from_iter","serde_json::map","",6,[[["t"]],["self"]]],[11,"from_iter","serde_json::value","Convert an iteratable type to a `Value`",0,[[["intoiterator"]],["self"]]],[11,"from_str","serde_json","",13,[[["str"]],["result"]]],[11,"from_str","serde_json::value","",0,[[["str"]],[["error"],["result",["value","error"]],["value"]]]],[11,"source","serde_json::error","",4,[[["self"]],[["error"],["option",["error"]]]]],[11,"deserialize_any","serde_json::value","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i8","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i16","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i32","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i64","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u8","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u16","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u32","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u64","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_f32","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_f64","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i128","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u128","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_option","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_enum","","",0,[[["str"],["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_newtype_struct","","",0,[[["str"],["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_bool","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_char","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_str","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_string","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_bytes","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_byte_buf","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_unit","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_unit_struct","","",0,[[["str"],["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_seq","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_tuple","","",0,[[["usize"],["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_tuple_struct","","",0,[[["str"],["usize"],["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_map","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_struct","","",0,[[["str"],["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_identifier","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_ignored_any","","",0,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_any","serde_json","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i8","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i16","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i32","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i64","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u8","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u16","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u32","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u64","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_f32","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_f64","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_i128","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_u128","","",13,[[["v"]],[["error"],["result",["error"]]]]],[11,"deserialize_bool","","",13,[[["v"]],["result"]]],[11,"deserialize_char","","",13,[[["v"]],["result"]]],[11,"deserialize_str","","",13,[[["v"]],["result"]]],[11,"deserialize_string","","",13,[[["v"]],["result"]]],[11,"deserialize_bytes","","",13,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",13,[[["v"]],["result"]]],[11,"deserialize_option","","",13,[[["v"]],["result"]]],[11,"deserialize_unit","","",13,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",13,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",13,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",13,[[["v"]],["result"]]],[11,"deserialize_tuple","","",13,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",13,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",13,[[["v"]],["result"]]],[11,"deserialize_struct","","",13,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",13,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",13,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",13,[[["v"]],["result"]]],[11,"into_deserializer","serde_json::value","",0,[[]]],[11,"custom","serde_json::error","",4,[[["display"]],["error"]]],[11,"serialize","serde_json::map","",6,[[["s"],["self"]],["result"]]],[11,"serialize","serde_json::value","",0,[[["s"],["self"]],["result"]]],[11,"serialize","serde_json","",13,[[["s"],["self"]],["result"]]],[11,"serialize","serde_json::value","",17,[[["s"],["self"]],["result"]]],[11,"serialize_bool","","",25,[[["bool"]],[["result",["value"]],["value"]]]],[11,"serialize_i8","","",25,[[["i8"]],[["result",["value"]],["value"]]]],[11,"serialize_i16","","",25,[[["i16"]],[["result",["value"]],["value"]]]],[11,"serialize_i32","","",25,[[["i32"]],[["result",["value"]],["value"]]]],[11,"serialize_i64","","",25,[[["i64"]],[["result",["value"]],["value"]]]],[11,"serialize_u8","","",25,[[["u8"]],[["result",["value"]],["value"]]]],[11,"serialize_u16","","",25,[[["u16"]],[["result",["value"]],["value"]]]],[11,"serialize_u32","","",25,[[["u32"]],[["result",["value"]],["value"]]]],[11,"serialize_u64","","",25,[[["u64"]],[["result",["value"]],["value"]]]],[11,"serialize_f32","","",25,[[["f32"]],[["result",["value"]],["value"]]]],[11,"serialize_f64","","",25,[[["f64"]],[["result",["value"]],["value"]]]],[11,"serialize_char","","",25,[[["char"]],[["result",["value"]],["value"]]]],[11,"serialize_str","","",25,[[["str"]],[["result",["value"]],["value"]]]],[11,"serialize_bytes","","",25,[[],[["result",["value"]],["value"]]]],[11,"serialize_unit","","",25,[[],[["result",["value"]],["value"]]]],[11,"serialize_unit_struct","","",25,[[["str"]],[["result",["value"]],["value"]]]],[11,"serialize_unit_variant","","",25,[[["str"],["u32"]],[["result",["value"]],["value"]]]],[11,"serialize_newtype_struct","","",25,[[["str"],["t"]],[["result",["value"]],["value"]]]],[11,"serialize_newtype_variant","","",25,[[["str"],["u32"],["t"]],[["result",["value"]],["value"]]]],[11,"serialize_none","","",25,[[],[["result",["value"]],["value"]]]],[11,"serialize_some","","",25,[[["t"]],[["result",["value"]],["value"]]]],[11,"serialize_seq","","",25,[[["usize"],["option",["usize"]]],["result"]]],[11,"serialize_tuple","","",25,[[["usize"]],["result"]]],[11,"serialize_tuple_struct","","",25,[[["str"],["usize"]],["result"]]],[11,"serialize_tuple_variant","","",25,[[["str"],["u32"],["usize"]],["result"]]],[11,"serialize_map","","",25,[[["usize"],["option",["usize"]]],["result"]]],[11,"serialize_struct","","",25,[[["str"],["usize"]],["result"]]],[11,"serialize_struct_variant","","",25,[[["str"],["u32"],["usize"]],["result"]]],[11,"collect_str","","",25,[[["t"]],[["result",["value"]],["value"]]]],[11,"deserialize","serde_json::map","",6,[[["d"]],["result"]]],[11,"deserialize","serde_json::value","",0,[[["d"]],[["value"],["result",["value"]]]]],[11,"deserialize","serde_json","",13,[[["d"]],[["result",["number"]],["number"]]]],[11,"custom","serde_json::error","",4,[[["display"]],["error"]]],[11,"invalid_type","","",4,[[["expected"],["unexpected"]],["self"]]]],"p":[[4,"Value"],[3,"Deserializer"],[3,"StreamDeserializer"],[4,"Category"],[3,"Error"],[4,"Entry"],[3,"Map"],[3,"VacantEntry"],[3,"OccupiedEntry"],[4,"CharEscape"],[8,"Formatter"],[3,"Serializer"],[3,"PrettyFormatter"],[3,"Number"],[3,"IoRead"],[3,"SliceRead"],[3,"StrRead"],[3,"RawValue"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"CompactFormatter"],[3,"Serializer"]]};
searchIndex["shell_escape"] = {"doc":"Escape characters that may have special meaning in a shell.","i":[[5,"escape","shell_escape","Escape characters that may have special meaning in a shell.",null,[[["str"],["cow",["str"]]],[["str"],["cow",["str"]]]]],[0,"windows","","Windows-specific escaping.",null,null],[5,"escape","shell_escape::windows","Escape for the windows cmd.exe shell.",null,[[["str"],["cow",["str"]]],[["str"],["cow",["str"]]]]],[0,"unix","shell_escape","Unix-specific escaping.",null,null],[5,"escape","shell_escape::unix","Escape characters that may have special meaning in a…",null,[[["str"],["cow",["str"]]],[["str"],["cow",["str"]]]]]],"p":[]};
searchIndex["sized_chunks"] = {"doc":"Sized Chunks","i":[[0,"inline_array","sized_chunks","A fixed capacity array sized to match some other type `T`.",null,null],[3,"Drain","sized_chunks::inline_array","A draining iterator over the elements of an `InlineArray`.",null,null],[3,"Iter","","A consuming iterator over the elements of an `InlineArray`.",null,null],[3,"InlineArray","","A fixed capacity array sized to match some other type `T`.",null,null],[18,"CAPACITY","","The maximum number of elements the `InlineArray` can hold.",0,null],[11,"len","","Get the length of the array.",0,[[["self"]],["usize"]]],[11,"is_empty","","Test if the array is empty.",0,[[["self"]],["bool"]]],[11,"is_full","","Test if the array is at capacity.",0,[[["self"]],["bool"]]],[11,"new","","Construct a new empty array.",0,[[],["self"]]],[11,"push","","Push an item to the back of the array.",0,[[["a"],["self"]]]],[11,"pop","","Pop an item from the back of the array.",0,[[["self"]],["option"]]],[11,"insert","","Insert a new value at index `index`, shifting all the…",0,[[["a"],["self"],["usize"]]]],[11,"remove","","Remove the value at index `index`, shifting all the…",0,[[["self"],["usize"]],["option"]]],[11,"split_off","","Split an array into two, the original array containing…",0,[[["self"],["usize"]],["self"]]],[11,"clear","","Discard the contents of the array.",0,[[["self"]]]],[11,"drain","","Construct an iterator that drains values from the front of…",0,[[["self"]],["drain"]]],[0,"ring_buffer","sized_chunks","A fixed capacity ring buffer.",null,null],[3,"Drain","sized_chunks::ring_buffer","A draining iterator over a `RingBuffer`.",null,null],[3,"Iter","","A reference iterator over a `RingBuffer`.",null,null],[3,"IterMut","","A mutable reference iterator over a `RingBuffer`.",null,null],[3,"OwnedIter","","A consuming iterator over a `RingBuffer`.",null,null],[3,"Slice","","An indexable representation of a subset of a `RingBuffer`.",null,null],[3,"SliceMut","","An indexable representation of a mutable subset of a…",null,null],[3,"RingBuffer","","A fixed capacity ring buffer.",null,null],[11,"len","","Get the length of the slice.",1,[[["self"]],["usize"]]],[11,"is_empty","","Test if the slice is empty.",1,[[["self"]],["bool"]]],[11,"get","","Get a reference to the value at a given index.",1,[[["self"],["usize"]],[["option"],["a"]]]],[11,"first","","Get a reference to the first value in the slice.",1,[[["self"]],[["option"],["a"]]]],[11,"last","","Get a reference to the last value in the slice.",1,[[["self"]],[["option"],["a"]]]],[11,"iter","","Get an iterator over references to the items in the slice…",1,[[["self"]],["iter"]]],[11,"slice","","Create a subslice of this slice.",1,[[["rangebounds",["usize"]],["usize"]],["slice"]]],[11,"split_at","","Split the slice into two subslices at the given index.",1,[[["usize"]]]],[11,"to_owned","","Construct a new `RingBuffer` by copying the elements in…",1,[[["self"]],["ringbuffer"]]],[11,"unmut","","Downgrade this slice into a non-mutable slice.",2,[[],["slice"]]],[11,"len","","Get the length of the slice.",2,[[["self"]],["usize"]]],[11,"is_empty","","Test if the slice is empty.",2,[[["self"]],["bool"]]],[11,"get","","Get a reference to the value at a given index.",2,[[["self"],["usize"]],[["option"],["a"]]]],[11,"get_mut","","Get a mutable reference to the value at a given index.",2,[[["self"],["usize"]],[["option"],["a"]]]],[11,"first","","Get a reference to the first value in the slice.",2,[[["self"]],[["option"],["a"]]]],[11,"first_mut","","Get a mutable reference to the first value in the slice.",2,[[["self"]],[["a"],["option"]]]],[11,"last","","Get a reference to the last value in the slice.",2,[[["self"]],[["option"],["a"]]]],[11,"last_mut","","Get a mutable reference to the last value in the slice.",2,[[["self"]],[["a"],["option"]]]],[11,"iter","","Get an iterator over references to the items in the slice…",2,[[["self"]],["iter"]]],[11,"iter_mut","","Get an iterator over mutable references to the items in…",2,[[["self"]],["itermut"]]],[11,"slice","","Create a subslice of this slice.",2,[[["rangebounds",["usize"]],["usize"]],["slicemut"]]],[11,"split_at","","Split the slice into two subslices at the given index.",2,[[["usize"]]]],[11,"set","","Update the value at index `index`, returning the old value.",2,[[["a"],["self"],["usize"]],["a"]]],[11,"to_owned","","Construct a new `RingBuffer` by copying the elements in…",2,[[["self"]],["ringbuffer"]]],[18,"CAPACITY","","The capacity of this ring buffer, as a `usize`.",3,null],[11,"new","","Construct an empty ring buffer.",3,[[],["self"]]],[11,"unit","","Construct a ring buffer with a single item.",3,[[["a"]],["self"]]],[11,"pair","","Construct a ring buffer with two items.",3,[[["a"]],["self"]]],[11,"drain_from","","Construct a new ring buffer and move every item from…",3,[[["self"]],["self"]]],[11,"collect_from","","Construct a new ring buffer and populate it by taking…",3,[[["i"],["usize"]],["self"]]],[11,"from_front","","Construct a new ring buffer and populate it by taking…",3,[[["self"],["usize"]],["self"]]],[11,"from_back","","Construct a new ring buffer and populate it by taking…",3,[[["self"],["usize"]],["self"]]],[11,"len","","Get the length of the ring buffer.",3,[[["self"]],["usize"]]],[11,"is_empty","","Test if the ring buffer is empty.",3,[[["self"]],["bool"]]],[11,"is_full","","Test if the ring buffer is full.",3,[[["self"]],["bool"]]],[11,"iter","","Get an iterator over references to the items in the ring…",3,[[["self"]],["iter"]]],[11,"iter_mut","","Get an iterator over mutable references to the items in…",3,[[["self"]],["itermut"]]],[11,"slice","","Get a `Slice` for a subset of the ring buffer.",3,[[["rangebounds",["usize"]],["self"],["usize"]],["slice"]]],[11,"slice_mut","","Get a `SliceMut` for a subset of the ring buffer.",3,[[["self"],["rangebounds",["usize"]],["usize"]],["slicemut"]]],[11,"get","","Get a reference to the value at a given index.",3,[[["self"],["usize"]],[["option"],["a"]]]],[11,"get_mut","","Get a mutable reference to the value at a given index.",3,[[["self"],["usize"]],[["a"],["option"]]]],[11,"first","","Get a reference to the first value in the buffer.",3,[[["self"]],[["option"],["a"]]]],[11,"first_mut","","Get a mutable reference to the first value in the buffer.",3,[[["self"]],[["a"],["option"]]]],[11,"last","","Get a reference to the last value in the buffer.",3,[[["self"]],[["option"],["a"]]]],[11,"last_mut","","Get a mutable reference to the last value in the buffer.",3,[[["self"]],[["a"],["option"]]]],[11,"push_back","","Push a value to the back of the buffer.",3,[[["a"],["self"]]]],[11,"push_front","","Push a value to the front of the buffer.",3,[[["a"],["self"]]]],[11,"pop_back","","Pop a value from the back of the buffer.",3,[[["self"]],["option"]]],[11,"pop_front","","Pop a value from the front of the buffer.",3,[[["self"]],["option"]]],[11,"drop_left","","Discard all items up to but not including `index`.",3,[[["self"],["usize"]]]],[11,"drop_right","","Discard all items from `index` onward.",3,[[["self"],["usize"]]]],[11,"split_off","","Split a buffer into two, the original buffer containing…",3,[[["self"],["usize"]],["self"]]],[11,"append","","Remove all items from `other` and append them to the back…",3,[[["self"]]]],[11,"drain_from_front","","Remove `count` items from the front of `other` and append…",3,[[["self"],["usize"]]]],[11,"drain_from_back","","Remove `count` items from the back of `other` and append…",3,[[["self"],["usize"]]]],[11,"set","","Update the value at index `index`, returning the old value.",3,[[["a"],["self"],["usize"]],["a"]]],[11,"insert","","Insert a new value at index `index`, shifting all the…",3,[[["a"],["self"],["usize"]]]],[11,"remove","","Remove the value at index `index`, shifting all the…",3,[[["self"],["usize"]],["a"]]],[11,"drain","","Construct an iterator that drains values from the front of…",3,[[["self"]],["drain"]]],[11,"clear","","Discard the contents of the buffer.",3,[[["self"]]]],[0,"sized_chunk","sized_chunks","A fixed capacity smart array.",null,null],[3,"Drain","sized_chunks::sized_chunk","A draining iterator over the elements of a `Chunk`.",null,null],[3,"Iter","","A consuming iterator over the elements of a `Chunk`.",null,null],[3,"Chunk","","A fixed capacity smart array.",null,null],[18,"CAPACITY","","The maximum number of elements this `Chunk` can contain.",4,null],[11,"new","","Construct a new empty chunk.",4,[[],["self"]]],[11,"unit","","Construct a new chunk with one item.",4,[[["a"]],["self"]]],[11,"pair","","Construct a new chunk with two items.",4,[[["a"]],["self"]]],[11,"drain_from","","Construct a new chunk and move every item from `other`…",4,[[["self"]],["self"]]],[11,"collect_from","","Construct a new chunk and populate it by taking `count`…",4,[[["i"],["usize"]],["self"]]],[11,"from_front","","Construct a new chunk and populate it by taking `count`…",4,[[["self"],["usize"]],["self"]]],[11,"from_back","","Construct a new chunk and populate it by taking `count`…",4,[[["self"],["usize"]],["self"]]],[11,"len","","Get the length of the chunk.",4,[[["self"]],["usize"]]],[11,"is_empty","","Test if the chunk is empty.",4,[[["self"]],["bool"]]],[11,"is_full","","Test if the chunk is at capacity.",4,[[["self"]],["bool"]]],[11,"push_front","","Push an item to the front of the chunk.",4,[[["a"],["self"]]]],[11,"push_back","","Push an item to the back of the chunk.",4,[[["a"],["self"]]]],[11,"pop_front","","Pop an item off the front of the chunk.",4,[[["self"]],["a"]]],[11,"pop_back","","Pop an item off the back of the chunk.",4,[[["self"]],["a"]]],[11,"drop_left","","Discard all items up to but not including `index`.",4,[[["self"],["usize"]]]],[11,"drop_right","","Discard all items from `index` onward.",4,[[["self"],["usize"]]]],[11,"split_off","","Split a chunk into two, the original chunk containing…",4,[[["self"],["usize"]],["self"]]],[11,"append","","Remove all items from `other` and append them to the back…",4,[[["self"]]]],[11,"drain_from_front","","Remove `count` items from the front of `other` and append…",4,[[["self"],["usize"]]]],[11,"drain_from_back","","Remove `count` items from the back of `other` and append…",4,[[["self"],["usize"]]]],[11,"set","","Update the value at index `index`, returning the old value.",4,[[["a"],["self"],["usize"]],["a"]]],[11,"insert","","Insert a new value at index `index`, shifting all the…",4,[[["a"],["self"],["usize"]]]],[11,"insert_ordered","","Insert a new value into the chunk in sorted order.",4,[[["a"],["self"]]]],[11,"insert_from","","Insert multiple values at index `index`, shifting all the…",4,[[["iterable"],["self"],["usize"]]]],[11,"remove","","Remove the value at index `index`, shifting all the…",4,[[["self"],["usize"]],["a"]]],[11,"drain","","Construct an iterator that drains values from the front of…",4,[[["self"]],["drain"]]],[11,"clear","","Discard the contents of the chunk.",4,[[["self"]]]],[11,"as_slice","","Get a reference to the contents of the chunk as a slice.",4,[[["self"]]]],[11,"as_mut_slice","","Get a reference to the contents of the chunk as a mutable…",4,[[["self"]]]],[0,"sparse_chunk","sized_chunks","A fixed capacity sparse array.",null,null],[3,"Drain","sized_chunks::sparse_chunk","A draining iterator over the elements of a `SparseChunk`.",null,null],[3,"Iter","","An iterator over references to the elements of a…",null,null],[3,"IterMut","","An iterator over mutable references to the elements of a…",null,null],[3,"OptionDrain","","A draining iterator over `Option`s of the elements of a…",null,null],[3,"OptionIter","","An iterator over `Option`s of references to the elements…",null,null],[3,"OptionIterMut","","An iterator over `Option`s of mutable references to the…",null,null],[3,"SparseChunk","","A fixed capacity sparse array.",null,null],[18,"CAPACITY","","The maximum number of elements a `SparseChunk` can contain.",5,null],[11,"new","","Construct a new empty chunk.",5,[[],["self"]]],[11,"unit","","Construct a new chunk with one item.",5,[[["a"],["usize"]],["self"]]],[11,"pair","","Construct a new chunk with two items.",5,[[["a"],["usize"]],["self"]]],[11,"len","","Get the length of the chunk.",5,[[["self"]],["usize"]]],[11,"is_empty","","Test if the chunk is empty.",5,[[["self"]],["bool"]]],[11,"is_full","","Test if the chunk is at capacity.",5,[[["self"]],["bool"]]],[11,"insert","","Insert a new value at a given index.",5,[[["a"],["self"],["usize"]],["option"]]],[11,"remove","","Remove the value at a given index.",5,[[["self"],["usize"]],["option"]]],[11,"pop","","Remove the first value present in the array.",5,[[["self"]],["option"]]],[11,"get","","Get the value at a given index.",5,[[["self"],["usize"]],[["option"],["a"]]]],[11,"get_mut","","Get a mutable reference to the value at a given index.",5,[[["self"],["usize"]],[["a"],["option"]]]],[11,"indices","","Make an iterator over the indices which contain values.",5,[[["self"]],["bitmapiter"]]],[11,"first_index","","Find the first index which contains a value.",5,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"iter","","Make an iterator of references to the values contained in…",5,[[["self"]],["iter"]]],[11,"iter_mut","","Make an iterator of mutable references to the values…",5,[[["self"]],["itermut"]]],[11,"drain","","Turn the chunk into an iterator over the values contained…",5,[[],["drain"]]],[11,"entries","","Make an iterator of pairs of indices and references to the…",5,[[["self"]]]],[11,"option_iter","","Make an iterator of `Option`s of references to the values…",5,[[["self"]],["optioniter"]]],[11,"option_iter_mut","","Make an iterator of `Option`s of mutable references to the…",5,[[["self"]],["optionitermut"]]],[11,"option_drain","","Make a draining iterator of `Option's of the values…",5,[[],["optiondrain"]]],[0,"types","sized_chunks","Helper types for chunks.",null,null],[8,"ChunkLength","sized_chunks::types","A trait used to decide the size of an array.",null,null],[16,"SizedType","","A `Sized` type matching the size of an array of `Self`…",6,null],[11,"from","sized_chunks::inline_array","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"into_iter","","",8,[[],["i"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","sized_chunks::ring_buffer","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"into_iter","","",9,[[],["i"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"into_iter","","",11,[[],["i"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"into_iter","","",12,[[],["i"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","sized_chunks::sized_chunk","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"into_iter","","",13,[[],["i"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"into_iter","","",14,[[],["i"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","sized_chunks::sparse_chunk","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"into_iter","","",15,[[],["i"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"into_iter","","",16,[[],["i"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"into_iter","","",17,[[],["i"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"into_iter","","",18,[[],["i"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"into_iter","","",19,[[],["i"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"into_iter","","",20,[[],["i"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"drop","sized_chunks::inline_array","",0,[[["self"]]]],[11,"drop","sized_chunks::ring_buffer","",3,[[["self"]]]],[11,"drop","sized_chunks::sized_chunk","",4,[[["self"]]]],[11,"drop","sized_chunks::sparse_chunk","",5,[[["self"]]]],[11,"as_mut","sized_chunks::inline_array","",0,[[["self"]]]],[11,"as_mut","sized_chunks::sized_chunk","",4,[[["self"]]]],[11,"as_ref","sized_chunks::inline_array","",0,[[["self"]]]],[11,"as_ref","sized_chunks::sized_chunk","",4,[[["self"]]]],[11,"from","sized_chunks::ring_buffer","",1,[[["ringbuffer"]],["self"]]],[11,"from","","",2,[[["ringbuffer"]],["self"]]],[11,"from","sized_chunks::sized_chunk","",4,[[["inlinearray"]],["self"]]],[11,"from","","",4,[[["inlinearray"]],["self"]]],[11,"into","sized_chunks::ring_buffer","",2,[[],["slice"]]],[11,"next_back","sized_chunks::inline_array","",8,[[["self"]],["option"]]],[11,"next_back","","",7,[[["self"]],["option"]]],[11,"next_back","sized_chunks::ring_buffer","",10,[[["self"]],["option"]]],[11,"next_back","","",11,[[["self"]],["option"]]],[11,"next_back","","",9,[[["self"]],["option"]]],[11,"next_back","","",12,[[["self"]],["option"]]],[11,"next_back","sized_chunks::sized_chunk","",14,[[["self"]],["option"]]],[11,"next_back","","",13,[[["self"]],["option"]]],[11,"extend","sized_chunks::inline_array","Append the contents of the iterator to the back of the…",0,[[["self"],["i"]]]],[11,"extend","","Append the contents of the iterator to the back of the…",0,[[["self"],["i"]]]],[11,"extend","sized_chunks::ring_buffer","",3,[[["self"],["intoiterator"]]]],[11,"extend","","",3,[[["intoiterator"],["self"]]]],[11,"extend","sized_chunks::sized_chunk","Append the contents of the iterator to the back of the…",4,[[["self"],["i"]]]],[11,"extend","","Append the contents of the iterator to the back of the…",4,[[["self"],["i"]]]],[11,"into_iter","sized_chunks::inline_array","",0,[[]]],[11,"into_iter","sized_chunks::ring_buffer","",3,[[]]],[11,"into_iter","sized_chunks::sized_chunk","",4,[[]]],[11,"into_iter","sized_chunks::sparse_chunk","",5,[[]]],[11,"next","sized_chunks::inline_array","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,[[["self"]]]],[11,"next","","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,[[["self"]]]],[11,"next","sized_chunks::ring_buffer","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,[[["self"]]]],[11,"next","","",11,[[["self"]],["option"]]],[11,"size_hint","","",11,[[["self"]]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,[[["self"]]]],[11,"next","","",12,[[["self"]],["option"]]],[11,"size_hint","","",12,[[["self"]]]],[11,"next","sized_chunks::sized_chunk","",14,[[["self"]],["option"]]],[11,"size_hint","","",14,[[["self"]]]],[11,"next","","",13,[[["self"]],["option"]]],[11,"size_hint","","",13,[[["self"]]]],[11,"next","sized_chunks::sparse_chunk","",16,[[["self"]],["option"]]],[11,"size_hint","","",16,[[["self"]]]],[11,"next","","",17,[[["self"]],["option"]]],[11,"size_hint","","",17,[[["self"]]]],[11,"next","","",15,[[["self"]],["option"]]],[11,"size_hint","","",15,[[["self"]]]],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,[[["self"]]]],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,[[["self"]]]],[11,"next","","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,[[["self"]]]],[11,"clone","sized_chunks::inline_array","",0,[[["self"]],["self"]]],[11,"clone","sized_chunks::ring_buffer","",1,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["self"]]],[11,"clone","sized_chunks::sized_chunk","",4,[[["self"]],["self"]]],[11,"clone","sized_chunks::sparse_chunk","",5,[[["self"]],["self"]]],[11,"default","sized_chunks::inline_array","",0,[[],["self"]]],[11,"default","sized_chunks::ring_buffer","",3,[[],["self"]]],[11,"default","sized_chunks::sized_chunk","",4,[[],["self"]]],[11,"default","sized_chunks::sparse_chunk","",5,[[],["self"]]],[11,"cmp","sized_chunks::inline_array","",0,[[["self"]],["ordering"]]],[11,"cmp","sized_chunks::ring_buffer","",1,[[["self"]],["ordering"]]],[11,"cmp","","",2,[[["self"]],["ordering"]]],[11,"cmp","","",3,[[["self"]],["ordering"]]],[11,"cmp","sized_chunks::sized_chunk","",4,[[["self"]],["ordering"]]],[11,"eq","sized_chunks::inline_array","",0,[[["slice"],["self"]],["bool"]]],[11,"eq","sized_chunks::ring_buffer","",1,[[["self"]],["bool"]]],[11,"eq","","",1,[[["s"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"]],["bool"]]],[11,"eq","","",2,[[["s"],["self"]],["bool"]]],[11,"eq","","",3,[[["self"]],["bool"]]],[11,"eq","","",3,[[["slice"],["self"]],["bool"]]],[11,"eq","sized_chunks::sized_chunk","",4,[[["slice"],["self"]],["bool"]]],[11,"eq","sized_chunks::sparse_chunk","",5,[[["self"]],["bool"]]],[11,"eq","","",5,[[["btreemap"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["hashmap"]],["bool"]]],[11,"partial_cmp","sized_chunks::inline_array","",0,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","sized_chunks::ring_buffer","",1,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",2,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",3,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","sized_chunks::sized_chunk","",4,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"deref","sized_chunks::inline_array","",0,[[["self"]]]],[11,"deref","sized_chunks::sized_chunk","",4,[[["self"]]]],[11,"deref_mut","sized_chunks::inline_array","",0,[[["self"]]]],[11,"deref_mut","sized_chunks::sized_chunk","",4,[[["self"]]]],[11,"fmt","sized_chunks::inline_array","",0,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","sized_chunks::ring_buffer","",1,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",2,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",3,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","sized_chunks::sized_chunk","",4,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","sized_chunks::sparse_chunk","",5,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"index","sized_chunks::ring_buffer","",1,[[["self"],["usize"]]]],[11,"index","","",2,[[["self"],["usize"]]]],[11,"index","","",3,[[["self"],["usize"]]]],[11,"index","sized_chunks::sized_chunk","",4,[[["i"],["self"]]]],[11,"index","sized_chunks::sparse_chunk","",5,[[["self"],["usize"]]]],[11,"index_mut","sized_chunks::ring_buffer","",2,[[["self"],["usize"]]]],[11,"index_mut","","",3,[[["self"],["usize"]]]],[11,"index_mut","sized_chunks::sized_chunk","",4,[[["self"],["i"]]]],[11,"index_mut","sized_chunks::sparse_chunk","",5,[[["self"],["usize"]]]],[11,"hash","sized_chunks::inline_array","",0,[[["self"],["h"]]]],[11,"hash","sized_chunks::ring_buffer","",1,[[["self"],["h"]]]],[11,"hash","","",2,[[["self"],["h"]]]],[11,"hash","","",3,[[["self"],["h"]]]],[11,"hash","sized_chunks::sized_chunk","",4,[[["self"],["h"]]]],[11,"from_iter","sized_chunks::inline_array","",0,[[["i"]],["self"]]],[11,"from_iter","sized_chunks::ring_buffer","",3,[[["intoiterator"]],["self"]]],[11,"from_iter","sized_chunks::sized_chunk","",4,[[["i"]],["self"]]],[11,"from_iter","sized_chunks::sparse_chunk","",5,[[["i"]],["self"]]],[11,"borrow","sized_chunks::inline_array","",0,[[["self"]]]],[11,"borrow","sized_chunks::sized_chunk","",4,[[["self"]]]],[11,"borrow_mut","sized_chunks::inline_array","",0,[[["self"]]]],[11,"borrow_mut","sized_chunks::sized_chunk","",4,[[["self"]]]],[11,"read","sized_chunks::ring_buffer","",3,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read","sized_chunks::sized_chunk","",4,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"write","sized_chunks::ring_buffer","",3,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",3,[[["self"]],["result"]]],[11,"write","sized_chunks::sized_chunk","",4,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",4,[[["self"]],["result"]]]],"p":[[3,"InlineArray"],[3,"Slice"],[3,"SliceMut"],[3,"RingBuffer"],[3,"Chunk"],[3,"SparseChunk"],[8,"ChunkLength"],[3,"Drain"],[3,"Iter"],[3,"Drain"],[3,"Iter"],[3,"IterMut"],[3,"OwnedIter"],[3,"Drain"],[3,"Iter"],[3,"Drain"],[3,"Iter"],[3,"IterMut"],[3,"OptionDrain"],[3,"OptionIter"],[3,"OptionIterMut"]]};
searchIndex["smallvec"] = {"doc":"Small vectors in various sizes. These store a certain…","i":[[3,"Drain","smallvec","An iterator that removes the items from a `SmallVec` and…",null,null],[3,"SmallVec","","A `Vec`-like container that can store a small number of…",null,null],[3,"IntoIter","","An iterator that consumes a `SmallVec` and yields its…",null,null],[4,"CollectionAllocErr","","Error type for APIs with fallible heap allocation",null,null],[13,"CapacityOverflow","","Overflow `usize::MAX` or other error during size computation",0,null],[13,"AllocErr","","The allocator return an error",0,null],[12,"layout","smallvec::CollectionAllocErr","The layout that was passed to the allocator",1,null],[8,"ExtendFromSlice","smallvec","Trait to be implemented by a collection that can be…",null,null],[10,"extend_from_slice","","Extends a collection from a slice of its element type",2,[[["self"]]]],[8,"Array","","Types that can be used as the backing store for a SmallVec",null,null],[16,"Item","","The type of the array's elements.",3,null],[10,"size","","Returns the number of items the array can hold.",3,[[],["usize"]]],[8,"ToSmallVec","","Convenience trait for constructing a `SmallVec`",null,null],[10,"to_smallvec","","Construct a new `SmallVec` from a slice.",4,[[["self"]],["smallvec"]]],[11,"new","","Construct an empty vector",5,[[],["smallvec"]]],[11,"with_capacity","","Construct an empty vector with enough capacity…",5,[[["usize"]],["self"]]],[11,"from_vec","","Construct a new `SmallVec` from a `Vec<A::Item>`.",5,[[["vec"]],["smallvec"]]],[11,"from_buf","","Constructs a new `SmallVec` on the stack from an `A`…",5,[[["a"]],["smallvec"]]],[11,"from_buf_and_len","","Constructs a new `SmallVec` on the stack from an `A`…",5,[[["a"],["usize"]],["smallvec"]]],[11,"from_buf_and_len_unchecked","","Constructs a new `SmallVec` on the stack from an `A`…",5,[[["maybeuninit"],["usize"]],["smallvec"]]],[11,"set_len","","Sets the length of a vector.",5,[[["self"],["usize"]]]],[11,"inline_size","","The maximum number of elements this vector can hold inline",5,[[["self"]],["usize"]]],[11,"len","","The number of elements stored in the vector",5,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the vector is empty",5,[[["self"]],["bool"]]],[11,"capacity","","The number of items the vector can hold without reallocating",5,[[["self"]],["usize"]]],[11,"spilled","","Returns `true` if the data has spilled into a separate…",5,[[["self"]],["bool"]]],[11,"drain","","Creates a draining iterator that removes the specified…",5,[[["self"],["r"]],["drain"]]],[11,"push","","Append an item to the vector.",5,[[["self"]]]],[11,"pop","","Remove an item from the end of the vector and return it,…",5,[[["self"]],["option"]]],[11,"grow","","Re-allocate to set the capacity to `max(new_cap,…",5,[[["self"],["usize"]]]],[11,"try_grow","","Re-allocate to set the capacity to `max(new_cap,…",5,[[["self"],["usize"]],[["result",["collectionallocerr"]],["collectionallocerr"]]]],[11,"reserve","","Reserve capacity for `additional` more elements to be…",5,[[["self"],["usize"]]]],[11,"try_reserve","","Reserve capacity for `additional` more elements to be…",5,[[["self"],["usize"]],[["result",["collectionallocerr"]],["collectionallocerr"]]]],[11,"reserve_exact","","Reserve the minimum capacity for `additional` more…",5,[[["self"],["usize"]]]],[11,"try_reserve_exact","","Reserve the minimum capacity for `additional` more…",5,[[["self"],["usize"]],[["result",["collectionallocerr"]],["collectionallocerr"]]]],[11,"shrink_to_fit","","Shrink the capacity of the vector as much as possible.",5,[[["self"]]]],[11,"truncate","","Shorten the vector, keeping the first `len` elements and…",5,[[["self"],["usize"]]]],[11,"as_slice","","Extracts a slice containing the entire vector.",5,[[["self"]]]],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",5,[[["self"]]]],[11,"swap_remove","","Remove the element at position `index`, replacing it with…",5,[[["self"],["usize"]]]],[11,"clear","","Remove all elements from the vector.",5,[[["self"]]]],[11,"remove","","Remove and return the element at position `index`,…",5,[[["self"],["usize"]]]],[11,"insert","","Insert an element at position `index`, shifting all…",5,[[["self"],["usize"]]]],[11,"insert_many","","Insert multiple elements at position `index`, shifting all…",5,[[["self"],["usize"],["intoiterator"]]]],[11,"into_vec","","Convert a SmallVec to a Vec, without reallocating if the…",5,[[],["vec"]]],[11,"into_boxed_slice","","Converts a `SmallVec` into a `Box<[T]>` without…",5,[[],["box"]]],[11,"into_inner","","Convert the SmallVec into an `A` if possible. Otherwise…",5,[[],["result"]]],[11,"retain","","Retains only the elements specified by the predicate.",5,[[["self"],["fnmut"]]]],[11,"dedup","","Removes consecutive duplicate elements.",5,[[["self"]]]],[11,"dedup_by","","Removes consecutive duplicate elements using the given…",5,[[["self"],["f"]]]],[11,"dedup_by_key","","Removes consecutive elements that map to the same key.",5,[[["self"],["f"]]]],[11,"from_raw_parts","","Creates a `SmallVec` directly from the raw components of…",5,[[["usize"]],["smallvec"]]],[11,"from_slice","","Copy the elements from a slice into a new `SmallVec`.",5,[[],["self"]]],[11,"insert_from_slice","","Copy elements from a slice into the vector at position…",5,[[["self"],["usize"]]]],[11,"extend_from_slice","","Copy elements from a slice and append them to the vector.",5,[[["self"]]]],[11,"resize","","Resizes the vector so that its length is equal to `len`.",5,[[["self"],["usize"]]]],[11,"from_elem","","Creates a `SmallVec` with `n` copies of `elem`. ``` use…",5,[[["usize"]],["self"]]],[11,"as_slice","","Returns the remaining items of this iterator as a slice.",6,[[["self"]]]],[11,"as_mut_slice","","Returns the remaining items of this iterator as a mutable…",6,[[["self"]]]],[14,"smallvec","","Creates a [`SmallVec`] containing the arguments.",null,null],[11,"from","","",7,[[["t"]],["t"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",5,[[],["t"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into_iter","","",6,[[],["i"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"extend_from_slice","","",5,[[["self"]]]],[11,"deref","","",5,[[["self"]]]],[11,"deref_mut","","",5,[[["self"]]]],[11,"from","","",0,[[["layouterr"]],["self"]]],[11,"from","","",5,[[],["smallvec"]]],[11,"from","","",5,[[["vec"]],["smallvec"]]],[11,"from","","",5,[[["a"]],["smallvec"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"eq","","",5,[[["smallvec"],["self"]],["bool"]]],[11,"cmp","","",5,[[["self"],["smallvec"]],["ordering"]]],[11,"partial_cmp","","",5,[[["self"],["smallvec"]],[["ordering"],["option",["ordering"]]]]],[11,"drop","","",7,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","","",6,[[["self"]]]],[11,"index","","",5,[[["i"],["self"]]]],[11,"index_mut","","",5,[[["self"],["i"]]]],[11,"hash","","",5,[[["self"],["h"]]]],[11,"next","","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,[[["self"]]]],[11,"next","","",6,[[["self"]],["option"]]],[11,"size_hint","","",6,[[["self"]]]],[11,"next_back","","",7,[[["self"]],["option"]]],[11,"next_back","","",6,[[["self"]],["option"]]],[11,"extend","","",5,[[["self"],["intoiterator"]]]],[11,"from_iter","","",5,[[["intoiterator"]],["smallvec"]]],[11,"into_iter","","",5,[[]]],[11,"len","","",7,[[["self"]],["usize"]]],[11,"as_ref","","",5,[[["self"]]]],[11,"as_mut","","",5,[[["self"]]]],[11,"clone","","",5,[[["self"]],["smallvec"]]],[11,"clone","","",6,[[["self"]],["intoiter"]]],[11,"default","","",5,[[],["smallvec"]]],[11,"borrow","","",5,[[["self"]]]],[11,"borrow_mut","","",5,[[["self"]]]]],"p":[[4,"CollectionAllocErr"],[13,"AllocErr"],[8,"ExtendFromSlice"],[8,"Array"],[8,"ToSmallVec"],[3,"SmallVec"],[3,"IntoIter"],[3,"Drain"]]};
searchIndex["socket2"] = {"doc":"Utilities for handling sockets","i":[[3,"SockAddr","socket2","The address of a socket.",null,null],[3,"Socket","","Newtype, owned, wrapper around a system socket.",null,null],[3,"Domain","","Specification of the communication domain for a socket.",null,null],[3,"Type","","Specification of communication semantics on a socket.",null,null],[3,"Protocol","","Protocol specification used for creating sockets via…",null,null],[11,"from_raw_parts","","Constructs a `SockAddr` from its raw components.",0,[[["socklen_t"]],["sockaddr"]]],[11,"as_inet","","Returns this address as a `SocketAddrV4` if it is in the…",0,[[["self"]],[["socketaddrv4"],["option",["socketaddrv4"]]]]],[11,"as_inet6","","Returns this address as a `SocketAddrV6` if it is in the…",0,[[["self"]],[["socketaddrv6"],["option",["socketaddrv6"]]]]],[11,"as_std","","Returns this address as a `SocketAddr` if it is in the…",0,[[["self"]],[["option",["socketaddr"]],["socketaddr"]]]],[11,"family","","Returns this address's family.",0,[[["self"]],["sa_family_t"]]],[11,"len","","Returns the size of this address in bytes.",0,[[["self"]],["socklen_t"]]],[11,"as_ptr","","Returns a raw pointer to the address.",0,[[["self"]]]],[11,"new","","Creates a new socket ready to be configured.",1,[[["protocol"],["type"],["domain"],["option",["protocol"]]],[["result",["socket"]],["socket"]]]],[11,"into_tcp_stream","","Consumes this `Socket`, converting it to a `TcpStream`.",1,[[],["tcpstream"]]],[11,"into_tcp_listener","","Consumes this `Socket`, converting it to a `TcpListener`.",1,[[],["tcplistener"]]],[11,"into_udp_socket","","Consumes this `Socket`, converting it to a `UdpSocket`.",1,[[],["udpsocket"]]],[11,"connect","","Initiate a connection on this socket to the specified…",1,[[["sockaddr"],["self"]],["result"]]],[11,"connect_timeout","","Initiate a connection on this socket to the specified…",1,[[["sockaddr"],["self"],["duration"]],["result"]]],[11,"bind","","Binds this socket to the specified address.",1,[[["sockaddr"],["self"]],["result"]]],[11,"listen","","Mark a socket as ready to accept incoming connection…",1,[[["self"],["i32"]],["result"]]],[11,"accept","","Accept a new incoming connection from this listener.",1,[[["self"]],["result"]]],[11,"local_addr","","Returns the socket address of the local half of this TCP…",1,[[["self"]],[["sockaddr"],["result",["sockaddr"]]]]],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP…",1,[[["self"]],[["sockaddr"],["result",["sockaddr"]]]]],[11,"try_clone","","Creates a new independently owned handle to the underlying…",1,[[["self"]],[["result",["socket"]],["socket"]]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",1,[[["self"]],[["option",["error"]],["result",["option"]]]]],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",1,[[["self"],["bool"]],["result"]]],[11,"shutdown","","Shuts down the read, write, or both halves of this…",1,[[["shutdown"],["self"]],["result"]]],[11,"recv","","Receives data on the socket from the remote address to…",1,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"recv_with_flags","","Identical to [`recv`] but allows for specification of…",1,[[["i32"],["self"]],[["result",["usize"]],["usize"]]]],[11,"recv_out_of_band","","Receives out-of-band (OOB) data on the socket from the…",1,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"peek","","Receives data on the socket from the remote adress to…",1,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"recv_from","","Receives data from the socket. On success, returns the…",1,[[["self"]],["result"]]],[11,"recv_from_with_flags","","Identical to [`recv_from`] but allows for specification of…",1,[[["i32"],["self"]],[["result",["usize"]],["usize"]]]],[11,"peek_from","","Receives data from the socket, without removing it from…",1,[[["self"]],["result"]]],[11,"send","","Sends data on the socket to a connected peer.",1,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"send_with_flags","","Identical to [`send`] but allows for specification of…",1,[[["i32"],["self"]],[["result",["usize"]],["usize"]]]],[11,"send_out_of_band","","Sends out-of-band (OOB) data on the socket to connected…",1,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"send_to","","Sends data on the socket to the given address. On success,…",1,[[["sockaddr"],["self"]],[["result",["usize"]],["usize"]]]],[11,"send_to_with_flags","","Identical to [`send_to`] but allows for specification of…",1,[[["i32"],["self"]],[["result",["usize"]],["usize"]]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",1,[[["self"]],[["u32"],["result",["u32"]]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",1,[[["u32"],["self"]],["result"]]],[11,"unicast_hops_v6","","Gets the value of the `IPV6_UNICAST_HOPS` option for this…",1,[[["self"]],[["u32"],["result",["u32"]]]]],[11,"set_unicast_hops_v6","","Sets the value for the `IPV6_UNICAST_HOPS` option on this…",1,[[["u32"],["self"]],["result"]]],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",1,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",1,[[["self"],["bool"]],["result"]]],[11,"read_timeout","","Returns the read timeout of this socket.",1,[[["self"]],[["result",["option"]],["option",["duration"]]]]],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",1,[[["duration"],["self"],["option",["duration"]]],["result"]]],[11,"write_timeout","","Returns the write timeout of this socket.",1,[[["self"]],[["result",["option"]],["option",["duration"]]]]],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",1,[[["duration"],["self"],["option",["duration"]]],["result"]]],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",1,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",1,[[["self"],["bool"]],["result"]]],[11,"broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",1,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"set_broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",1,[[["self"],["bool"]],["result"]]],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this…",1,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this…",1,[[["self"],["bool"]],["result"]]],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this…",1,[[["self"]],[["u32"],["result",["u32"]]]]],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this…",1,[[["u32"],["self"]],["result"]]],[11,"multicast_hops_v6","","Gets the value of the `IPV6_MULTICAST_HOPS` option for…",1,[[["self"]],[["u32"],["result",["u32"]]]]],[11,"set_multicast_hops_v6","","Sets the value of the `IPV6_MULTICAST_HOPS` option for…",1,[[["u32"],["self"]],["result"]]],[11,"multicast_if_v4","","Gets the value of the `IP_MULTICAST_IF` option for this…",1,[[["self"]],[["result",["ipv4addr"]],["ipv4addr"]]]],[11,"set_multicast_if_v4","","Sets the value of the `IP_MULTICAST_IF` option for this…",1,[[["ipv4addr"],["self"]],["result"]]],[11,"multicast_if_v6","","Gets the value of the `IPV6_MULTICAST_IF` option for this…",1,[[["self"]],[["u32"],["result",["u32"]]]]],[11,"set_multicast_if_v6","","Sets the value of the `IPV6_MULTICAST_IF` option for this…",1,[[["u32"],["self"]],["result"]]],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for…",1,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for…",1,[[["self"],["bool"]],["result"]]],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",1,[[["ipv4addr"],["self"]],["result"]]],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",1,[[["ipv6addr"],["self"],["u32"]],["result"]]],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",1,[[["ipv4addr"],["self"]],["result"]]],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",1,[[["ipv6addr"],["self"],["u32"]],["result"]]],[11,"linger","","Reads the linger duration for this socket by getting the…",1,[[["self"]],[["result",["option"]],["option",["duration"]]]]],[11,"set_linger","","Sets the linger duration of this socket by setting the…",1,[[["duration"],["self"],["option",["duration"]]],["result"]]],[11,"reuse_address","","Check the `SO_REUSEADDR` option on this socket.",1,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"set_reuse_address","","Set value for the `SO_REUSEADDR` option on this socket.",1,[[["self"],["bool"]],["result"]]],[11,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",1,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",1,[[["self"],["usize"]],["result"]]],[11,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",1,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",1,[[["self"],["usize"]],["result"]]],[11,"keepalive","","Returns whether keepalive messages are enabled on this…",1,[[["self"]],[["result",["option"]],["option",["duration"]]]]],[11,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on…",1,[[["duration"],["self"],["option",["duration"]]],["result"]]],[11,"out_of_band_inline","","Returns the value of the `SO_OOBINLINE` flag of the…",1,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"set_out_of_band_inline","","Sets the `SO_OOBINLINE` flag of the underlying socket. as…",1,[[["self"],["bool"]],["result"]]],[11,"unix","","Domain for Unix socket communication, corresponding to…",2,[[],["domain"]]],[11,"packet","","Domain for low-level packet interface, corresponding to…",2,[[],["domain"]]],[11,"non_blocking","","Set `SOCK_NONBLOCK` on the `Type`.",3,[[],["type"]]],[11,"cloexec","","Set `SOCK_CLOEXEC` on the `Type`.",3,[[],["type"]]],[11,"ipv4","","Domain for IPv4 communication, corresponding to `AF_INET`.",2,[[],["domain"]]],[11,"ipv6","","Domain for IPv6 communication, corresponding to `AF_INET6`.",2,[[],["domain"]]],[11,"stream","","Type corresponding to `SOCK_STREAM`.",3,[[],["type"]]],[11,"dgram","","Type corresponding to `SOCK_DGRAM`.",3,[[],["type"]]],[11,"seqpacket","","Type corresponding to `SOCK_SEQPACKET`.",3,[[],["type"]]],[11,"raw","","Type corresponding to `SOCK_RAW`.",3,[[],["type"]]],[11,"icmpv4","","Protocol corresponding to `ICMPv4`.",4,[[],["self"]]],[11,"icmpv6","","Protocol corresponding to `ICMPv6`.",4,[[],["self"]]],[11,"tcp","","Protocol corresponding to `TCP`.",4,[[],["self"]]],[11,"udp","","Protocol corresponding to `UDP`.",4,[[],["self"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",0,[[["socketaddrv4"]],["sockaddr"]]],[11,"from","","",0,[[["socketaddrv6"]],["sockaddr"]]],[11,"from","","",0,[[["socketaddr"]],["sockaddr"]]],[11,"from","","",1,[[["tcpstream"]],["socket"]]],[11,"from","","",1,[[["tcplistener"]],["socket"]]],[11,"from","","",1,[[["udpsocket"]],["socket"]]],[11,"from","","",2,[[["c_int"]],["domain"]]],[11,"from","","",3,[[["c_int"]],["type"]]],[11,"from","","",4,[[["c_int"]],["protocol"]]],[11,"clone","","",2,[[["self"]],["domain"]]],[11,"clone","","",3,[[["self"]],["type"]]],[11,"clone","","",4,[[["self"]],["protocol"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"read","","",1,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"write","","",1,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",1,[[["self"]],["result"]]],[11,"as_raw_fd","","",1,[[["self"]],["c_int"]]],[11,"from_raw_fd","","",1,[[["c_int"]],["socket"]]],[11,"into_raw_fd","","",1,[[],["c_int"]]]],"p":[[3,"SockAddr"],[3,"Socket"],[3,"Domain"],[3,"Type"],[3,"Protocol"]]};
searchIndex["strip_ansi_escapes"] = {"doc":"A crate for stripping ANSI escape sequences from byte…","i":[[3,"Writer","strip_ansi_escapes","`Writer` wraps an underlying type that implements `Write`,…",null,null],[5,"strip","","Strip ANSI escapes from `data` and return the remaining…",null,[[["t"]],[["vec",["u8"]],["result",["vec"]]]]],[11,"new","","Create a new `Writer` that writes to `inner`.",0,[[["w"]],["writer"]]],[11,"into_inner","","Unwraps this `Writer`, returning the underlying writer.",0,[[],[["result",["intoinnererror"]],["intoinnererror",["linewriter"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"write","","",0,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",0,[[["self"]],["result"]]]],"p":[[3,"Writer"]]};
searchIndex["strsim"] = {"doc":"This library implements string similarity metrics.","i":[[4,"StrSimError","strsim","",null,null],[13,"DifferentLengthArgs","","",0,null],[5,"hamming","","Calculates the number of positions in the two strings…",null,[[["str"]],["hammingresult"]]],[5,"jaro","","Calculates the Jaro similarity between two strings. The…",null,[[["str"]],["f64"]]],[5,"jaro_winkler","","Like Jaro but gives a boost to strings that have a common…",null,[[["str"]],["f64"]]],[5,"levenshtein","","Calculates the minimum number of insertions, deletions,…",null,[[["str"]],["usize"]]],[5,"normalized_levenshtein","","Calculates a normalized score of the Levenshtein algorithm…",null,[[["str"]],["f64"]]],[5,"osa_distance","","Like Levenshtein but allows for adjacent transpositions.…",null,[[["str"]],["usize"]]],[5,"damerau_levenshtein","","Like optimal string alignment, but substrings can be…",null,[[["str"]],["usize"]]],[5,"normalized_damerau_levenshtein","","Calculates a normalized score of the Damerau–Levenshtein…",null,[[["str"]],["f64"]]],[6,"HammingResult","","",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["self"],["strsimerror"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[4,"StrSimError"]]};
searchIndex["structopt"] = {"doc":"This crate defines the `StructOpt` trait and its custom…","i":[[8,"StructOpt","structopt","A struct that is converted from command line arguments.",null,null],[10,"clap","","Returns the corresponding `clap::App`.",0,[[],["app"]]],[10,"from_clap","","Creates the struct from `clap::ArgMatches`. It cannot fail…",0,[[["argmatches"]],["self"]]],[11,"from_args","","Gets the struct from the command line arguments. Print the…",0,[[],["self"]]],[11,"from_iter","","Gets the struct from any iterator such as a `Vec` of your…",0,[[["i"]],["self"]]],[11,"from_iter_safe","","Gets the struct from any iterator such as a `Vec` of your…",0,[[["i"]],[["error"],["result",["error"]]]]]],"p":[[8,"StructOpt"]]};
searchIndex["structopt_derive"] = {"doc":"This crate is custom derive for `StructOpt`. It should not…","i":[[24,"StructOpt","structopt_derive","Generates the `StructOpt` impl.",null,null]],"p":[]};
searchIndex["syn"] = {"doc":"Syn is a parsing library for parsing a stream of Rust…","i":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal…",null,null],[3,"Attribute","","An attribute like `#[repr(transparent)]`.",null,null],[12,"pound_token","","",0,null],[12,"style","","",0,null],[12,"bracket_token","","",0,null],[12,"path","","",0,null],[12,"tts","","",0,null],[3,"MetaList","","A structured list within an attribute, like `derive(Copy,…",null,null],[12,"ident","","",1,null],[12,"paren_token","","",1,null],[12,"nested","","",1,null],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature =…",null,null],[12,"ident","","",2,null],[12,"eq_token","","",2,null],[12,"lit","","",2,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"attrs","","Attributes tagged on the field.",3,null],[12,"vis","","Visibility of the field.",3,null],[12,"ident","","Name of the field, if any.",3,null],[12,"colon_token","","",3,null],[12,"ty","","Type of the field.",3,null],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point…",null,null],[12,"brace_token","","",4,null],[12,"named","","",4,null],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as…",null,null],[12,"paren_token","","",5,null],[12,"unnamed","","",5,null],[3,"Variant","","An enum variant.",null,null],[12,"attrs","","Attributes tagged on the variant.",6,null],[12,"ident","","Name of the variant.",6,null],[12,"fields","","Content stored in the variant.",6,null],[12,"discriminant","","Explicit discriminant: `Variant = 1`",6,null],[3,"VisCrate","","A crate-level visibility: `crate`.",null,null],[12,"crate_token","","",7,null],[3,"VisPublic","","A public visibility level: `pub`.",null,null],[12,"pub_token","","",8,null],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or…",null,null],[12,"pub_token","","",9,null],[12,"paren_token","","",9,null],[12,"in_token","","",9,null],[12,"path","","",9,null],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",null,null],[12,"attrs","","",10,null],[12,"bracket_token","","",10,null],[12,"elems","","",10,null],[3,"ExprAssign","","An assignment expression: `a = compute()`.",null,null],[12,"attrs","","",11,null],[12,"left","","",11,null],[12,"eq_token","","",11,null],[12,"right","","",11,null],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",null,null],[12,"attrs","","",12,null],[12,"left","","",12,null],[12,"op","","",12,null],[12,"right","","",12,null],[3,"ExprAsync","","An async block: `async { ... }`.",null,null],[12,"attrs","","",13,null],[12,"async_token","","",13,null],[12,"capture","","",13,null],[12,"block","","",13,null],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",null,null],[12,"attrs","","",14,null],[12,"left","","",14,null],[12,"op","","",14,null],[12,"right","","",14,null],[3,"ExprBlock","","A blocked scope: `{ ... }`.",null,null],[12,"attrs","","",15,null],[12,"label","","",15,null],[12,"block","","",15,null],[3,"ExprBox","","A box expression: `box f`.",null,null],[12,"attrs","","",16,null],[12,"box_token","","",16,null],[12,"expr","","",16,null],[3,"ExprBreak","","A `break`, with an optional label to break and an optional…",null,null],[12,"attrs","","",17,null],[12,"break_token","","",17,null],[12,"label","","",17,null],[12,"expr","","",17,null],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",null,null],[12,"attrs","","",18,null],[12,"func","","",18,null],[12,"paren_token","","",18,null],[12,"args","","",18,null],[3,"ExprCast","","A cast expression: `foo as f64`.",null,null],[12,"attrs","","",19,null],[12,"expr","","",19,null],[12,"as_token","","",19,null],[12,"ty","","",19,null],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",null,null],[12,"attrs","","",20,null],[12,"asyncness","","",20,null],[12,"movability","","",20,null],[12,"capture","","",20,null],[12,"or1_token","","",20,null],[12,"inputs","","",20,null],[12,"or2_token","","",20,null],[12,"output","","",20,null],[12,"body","","",20,null],[3,"ExprContinue","","A `continue`, with an optional label.",null,null],[12,"attrs","","",21,null],[12,"continue_token","","",21,null],[12,"label","","",21,null],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple…",null,null],[12,"attrs","","",22,null],[12,"base","","",22,null],[12,"dot_token","","",22,null],[12,"member","","",22,null],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",null,null],[12,"attrs","","",23,null],[12,"label","","",23,null],[12,"for_token","","",23,null],[12,"pat","","",23,null],[12,"in_token","","",23,null],[12,"expr","","",23,null],[12,"body","","",23,null],[3,"ExprGroup","","An expression contained within invisible delimiters.",null,null],[12,"attrs","","",24,null],[12,"group_token","","",24,null],[12,"expr","","",24,null],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr…",null,null],[12,"attrs","","",25,null],[12,"if_token","","",25,null],[12,"cond","","",25,null],[12,"then_branch","","",25,null],[12,"else_branch","","",25,null],[3,"ExprInPlace","","A placement expression: `place <- value`.",null,null],[12,"attrs","","",26,null],[12,"place","","",26,null],[12,"arrow_token","","",26,null],[12,"value","","",26,null],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",null,null],[12,"attrs","","",27,null],[12,"expr","","",27,null],[12,"bracket_token","","",27,null],[12,"index","","",27,null],[3,"ExprLet","","A `let` guard: `let Some(x) = opt`.",null,null],[12,"attrs","","",28,null],[12,"let_token","","",28,null],[12,"pats","","",28,null],[12,"eq_token","","",28,null],[12,"expr","","",28,null],[3,"ExprLit","","A literal in place of an expression: `1`, `\"foo\"`.",null,null],[12,"attrs","","",29,null],[12,"lit","","",29,null],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",null,null],[12,"attrs","","",30,null],[12,"label","","",30,null],[12,"loop_token","","",30,null],[12,"body","","",30,null],[3,"ExprMacro","","A macro invocation expression: `format!(\"{}\", q)`.",null,null],[12,"attrs","","",31,null],[12,"mac","","",31,null],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {}…",null,null],[12,"attrs","","",32,null],[12,"match_token","","",32,null],[12,"expr","","",32,null],[12,"brace_token","","",32,null],[12,"arms","","",32,null],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",null,null],[12,"attrs","","",33,null],[12,"receiver","","",33,null],[12,"dot_token","","",33,null],[12,"method","","",33,null],[12,"turbofish","","",33,null],[12,"paren_token","","",33,null],[12,"args","","",33,null],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",null,null],[12,"attrs","","",34,null],[12,"paren_token","","",34,null],[12,"expr","","",34,null],[3,"ExprPath","","A path like `std::mem::replace` possibly containing…",null,null],[12,"attrs","","",35,null],[12,"qself","","",35,null],[12,"path","","",35,null],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",null,null],[12,"attrs","","",36,null],[12,"from","","",36,null],[12,"limits","","",36,null],[12,"to","","",36,null],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",null,null],[12,"attrs","","",37,null],[12,"and_token","","",37,null],[12,"mutability","","",37,null],[12,"expr","","",37,null],[3,"ExprRepeat","","An array literal constructed from one repeated element:…",null,null],[12,"attrs","","",38,null],[12,"bracket_token","","",38,null],[12,"expr","","",38,null],[12,"semi_token","","",38,null],[12,"len","","",38,null],[3,"ExprReturn","","A `return`, with an optional value to be returned.",null,null],[12,"attrs","","",39,null],[12,"return_token","","",39,null],[12,"expr","","",39,null],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",null,null],[12,"attrs","","",40,null],[12,"path","","",40,null],[12,"brace_token","","",40,null],[12,"fields","","",40,null],[12,"dot2_token","","",40,null],[12,"rest","","",40,null],[3,"ExprTry","","A try-expression: `expr?`.",null,null],[12,"attrs","","",41,null],[12,"expr","","",41,null],[12,"question_token","","",41,null],[3,"ExprTryBlock","","A try block: `try { ... }`.",null,null],[12,"attrs","","",42,null],[12,"try_token","","",42,null],[12,"block","","",42,null],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",null,null],[12,"attrs","","",43,null],[12,"paren_token","","",43,null],[12,"elems","","",43,null],[3,"ExprType","","A type ascription expression: `foo: f64`.",null,null],[12,"attrs","","",44,null],[12,"expr","","",44,null],[12,"colon_token","","",44,null],[12,"ty","","",44,null],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",null,null],[12,"attrs","","",45,null],[12,"op","","",45,null],[12,"expr","","",45,null],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",null,null],[12,"attrs","","",46,null],[12,"unsafe_token","","",46,null],[12,"block","","",46,null],[3,"ExprVerbatim","","Tokens in expression position not interpreted by Syn.",null,null],[12,"tts","","",47,null],[3,"ExprWhile","","A while loop: `while expr { ... }`.",null,null],[12,"attrs","","",48,null],[12,"label","","",48,null],[12,"while_token","","",48,null],[12,"cond","","",48,null],[12,"body","","",48,null],[3,"ExprYield","","A yield expression: `yield expr`.",null,null],[12,"attrs","","",49,null],[12,"yield_token","","",49,null],[12,"expr","","",49,null],[3,"Index","","The index of an unnamed tuple struct field.",null,null],[12,"index","","",50,null],[12,"span","","",50,null],[3,"Arm","","One arm of a `match` expression: `0...10 => { return true;…",null,null],[12,"attrs","","",51,null],[12,"leading_vert","","",51,null],[12,"pats","","",51,null],[12,"guard","","",51,null],[12,"fat_arrow_token","","",51,null],[12,"body","","",51,null],[12,"comma","","",51,null],[3,"Block","","A braced block containing Rust statements.",null,null],[12,"brace_token","","",52,null],[12,"stmts","","Statements in a block",52,null],[3,"FieldPat","","A single field in a struct pattern.",null,null],[12,"attrs","","",53,null],[12,"member","","",53,null],[12,"colon_token","","",53,null],[12,"pat","","",53,null],[3,"FieldValue","","A field-value pair in a struct literal.",null,null],[12,"attrs","","Attributes tagged on the field.",54,null],[12,"member","","Name or index of the field.",54,null],[12,"colon_token","","The colon in `Struct { x: x }`. If written in shorthand…",54,null],[12,"expr","","Value of the field.",54,null],[3,"Label","","A lifetime labeling a `for`, `while`, or `loop`.",null,null],[12,"name","","",55,null],[12,"colon_token","","",55,null],[3,"Local","","A local `let` binding: `let x: u64 = s.parse()?`.",null,null],[12,"attrs","","",56,null],[12,"let_token","","",56,null],[12,"pats","","",56,null],[12,"ty","","",56,null],[12,"init","","",56,null],[12,"semi_token","","",56,null],[3,"MethodTurbofish","","The `::<>` explicit type parameters passed to a method…",null,null],[12,"colon2_token","","",57,null],[12,"lt_token","","",57,null],[12,"args","","",57,null],[12,"gt_token","","",57,null],[3,"PatBox","","A box pattern: `box v`.",null,null],[12,"box_token","","",58,null],[12,"pat","","",58,null],[3,"PatIdent","","A pattern that binds a new variable: `ref mut binding @…",null,null],[12,"by_ref","","",59,null],[12,"mutability","","",59,null],[12,"ident","","",59,null],[12,"subpat","","",59,null],[3,"PatLit","","A literal pattern: `0`.",null,null],[12,"expr","","",60,null],[3,"PatMacro","","A macro in expression position.",null,null],[12,"mac","","",61,null],[3,"PatPath","","A path pattern like `Color::Red`, optionally qualified…",null,null],[12,"qself","","",62,null],[12,"path","","",62,null],[3,"PatRange","","A range pattern: `1..=2`.",null,null],[12,"lo","","",63,null],[12,"limits","","",63,null],[12,"hi","","",63,null],[3,"PatRef","","A reference pattern: `&mut (first, second)`.",null,null],[12,"and_token","","",64,null],[12,"mutability","","",64,null],[12,"pat","","",64,null],[3,"PatSlice","","A dynamically sized slice pattern: `[a, b, i.., y, z]`.",null,null],[12,"bracket_token","","",65,null],[12,"front","","",65,null],[12,"middle","","",65,null],[12,"dot2_token","","",65,null],[12,"comma_token","","",65,null],[12,"back","","",65,null],[3,"PatStruct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",null,null],[12,"path","","",66,null],[12,"brace_token","","",66,null],[12,"fields","","",66,null],[12,"dot2_token","","",66,null],[3,"PatTuple","","A tuple pattern: `(a, b)`.",null,null],[12,"paren_token","","",67,null],[12,"front","","",67,null],[12,"dot2_token","","",67,null],[12,"comma_token","","",67,null],[12,"back","","",67,null],[3,"PatTupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",null,null],[12,"path","","",68,null],[12,"pat","","",68,null],[3,"PatVerbatim","","Tokens in pattern position not interpreted by Syn.",null,null],[12,"tts","","",69,null],[3,"PatWild","","A pattern that matches any value: `_`.",null,null],[12,"underscore_token","","",70,null],[3,"BoundLifetimes","","A set of bound lifetimes: `for<'a, 'b, 'c>`.",null,null],[12,"for_token","","",71,null],[12,"lt_token","","",71,null],[12,"lifetimes","","",71,null],[12,"gt_token","","",71,null],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",null,null],[12,"attrs","","",72,null],[12,"const_token","","",72,null],[12,"ident","","",72,null],[12,"colon_token","","",72,null],[12,"ty","","",72,null],[12,"eq_token","","",72,null],[12,"default","","",72,null],[3,"Generics","","Lifetimes and type parameters attached to a declaration of…",null,null],[12,"lt_token","","",73,null],[12,"params","","",73,null],[12,"gt_token","","",73,null],[12,"where_clause","","",73,null],[3,"LifetimeDef","","A lifetime definition: `'a: 'b + 'c + 'd`.",null,null],[12,"attrs","","",74,null],[12,"lifetime","","",74,null],[12,"colon_token","","",74,null],[12,"bounds","","",74,null],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",null,null],[12,"lhs_ty","","",75,null],[12,"eq_token","","",75,null],[12,"rhs_ty","","",75,null],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",null,null],[12,"lifetime","","",76,null],[12,"colon_token","","",76,null],[12,"bounds","","",76,null],[3,"PredicateType","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",null,null],[12,"lifetimes","","Any lifetimes from a `for` binding",77,null],[12,"bounded_ty","","The type being bounded",77,null],[12,"colon_token","","",77,null],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",77,null],[3,"TraitBound","","A trait used as a bound on a type parameter.",null,null],[12,"paren_token","","",78,null],[12,"modifier","","",78,null],[12,"lifetimes","","The `for<'a>` in `for<'a> Foo<&'a T>`",78,null],[12,"path","","The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",78,null],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",null,null],[12,"attrs","","",79,null],[12,"ident","","",79,null],[12,"colon_token","","",79,null],[12,"bounds","","",79,null],[12,"eq_token","","",79,null],[12,"default","","",79,null],[3,"WhereClause","","A `where` clause in a definition: `where T:…",null,null],[12,"where_token","","",80,null],[12,"predicates","","",80,null],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",null,null],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"ArgCaptured","","An explicitly typed pattern captured by a function…",null,null],[12,"pat","","",81,null],[12,"colon_token","","",81,null],[12,"ty","","",81,null],[3,"ArgSelf","","Self captured by value in a function signature: `self` or…",null,null],[12,"mutability","","",82,null],[12,"self_token","","",82,null],[3,"ArgSelfRef","","Self captured by reference in a function signature:…",null,null],[12,"and_token","","",83,null],[12,"lifetime","","",83,null],[12,"mutability","","",83,null],[12,"self_token","","",83,null],[3,"FnDecl","","Header of a function declaration, without including the…",null,null],[12,"fn_token","","",84,null],[12,"generics","","",84,null],[12,"paren_token","","",84,null],[12,"inputs","","",84,null],[12,"variadic","","",84,null],[12,"output","","",84,null],[3,"ForeignItemFn","","A foreign function in an `extern` block.",null,null],[12,"attrs","","",85,null],[12,"vis","","",85,null],[12,"ident","","",85,null],[12,"decl","","",85,null],[12,"semi_token","","",85,null],[3,"ForeignItemMacro","","A macro invocation within an extern block.",null,null],[12,"attrs","","",86,null],[12,"mac","","",86,null],[12,"semi_token","","",86,null],[3,"ForeignItemStatic","","A foreign static item in an `extern` block: `static ext:…",null,null],[12,"attrs","","",87,null],[12,"vis","","",87,null],[12,"static_token","","",87,null],[12,"mutability","","",87,null],[12,"ident","","",87,null],[12,"colon_token","","",87,null],[12,"ty","","",87,null],[12,"semi_token","","",87,null],[3,"ForeignItemType","","A foreign type in an `extern` block: `type void`.",null,null],[12,"attrs","","",88,null],[12,"vis","","",88,null],[12,"type_token","","",88,null],[12,"ident","","",88,null],[12,"semi_token","","",88,null],[3,"ForeignItemVerbatim","","Tokens in an `extern` block not interpreted by Syn.",null,null],[12,"tts","","",89,null],[3,"ImplItemConst","","An associated constant within an impl block.",null,null],[12,"attrs","","",90,null],[12,"vis","","",90,null],[12,"defaultness","","",90,null],[12,"const_token","","",90,null],[12,"ident","","",90,null],[12,"colon_token","","",90,null],[12,"ty","","",90,null],[12,"eq_token","","",90,null],[12,"expr","","",90,null],[12,"semi_token","","",90,null],[3,"ImplItemExistential","","An existential type within an impl block.",null,null],[12,"attrs","","",91,null],[12,"existential_token","","",91,null],[12,"type_token","","",91,null],[12,"ident","","",91,null],[12,"generics","","",91,null],[12,"colon_token","","",91,null],[12,"bounds","","",91,null],[12,"semi_token","","",91,null],[3,"ImplItemMacro","","A macro invocation within an impl block.",null,null],[12,"attrs","","",92,null],[12,"mac","","",92,null],[12,"semi_token","","",92,null],[3,"ImplItemMethod","","A method within an impl block.",null,null],[12,"attrs","","",93,null],[12,"vis","","",93,null],[12,"defaultness","","",93,null],[12,"sig","","",93,null],[12,"block","","",93,null],[3,"ImplItemType","","An associated type within an impl block.",null,null],[12,"attrs","","",94,null],[12,"vis","","",94,null],[12,"defaultness","","",94,null],[12,"type_token","","",94,null],[12,"ident","","",94,null],[12,"generics","","",94,null],[12,"eq_token","","",94,null],[12,"ty","","",94,null],[12,"semi_token","","",94,null],[3,"ImplItemVerbatim","","Tokens within an impl block not interpreted by Syn.",null,null],[12,"tts","","",95,null],[3,"ItemConst","","A constant item: `const MAX: u16 = 65535`.",null,null],[12,"attrs","","",96,null],[12,"vis","","",96,null],[12,"const_token","","",96,null],[12,"ident","","",96,null],[12,"colon_token","","",96,null],[12,"ty","","",96,null],[12,"eq_token","","",96,null],[12,"expr","","",96,null],[12,"semi_token","","",96,null],[3,"ItemEnum","","An enum definition: `enum Foo<A, B> { C<A>, D<B> }`.",null,null],[12,"attrs","","",97,null],[12,"vis","","",97,null],[12,"enum_token","","",97,null],[12,"ident","","",97,null],[12,"generics","","",97,null],[12,"brace_token","","",97,null],[12,"variants","","",97,null],[3,"ItemExistential","","An existential type: `existential type Iter: Iterator<Item…",null,null],[12,"attrs","","",98,null],[12,"vis","","",98,null],[12,"existential_token","","",98,null],[12,"type_token","","",98,null],[12,"ident","","",98,null],[12,"generics","","",98,null],[12,"colon_token","","",98,null],[12,"bounds","","",98,null],[12,"semi_token","","",98,null],[3,"ItemExternCrate","","An `extern crate` item: `extern crate serde`.",null,null],[12,"attrs","","",99,null],[12,"vis","","",99,null],[12,"extern_token","","",99,null],[12,"crate_token","","",99,null],[12,"ident","","",99,null],[12,"rename","","",99,null],[12,"semi_token","","",99,null],[3,"ItemFn","","A free-standing function: `fn process(n: usize) ->…",null,null],[12,"attrs","","",100,null],[12,"vis","","",100,null],[12,"constness","","",100,null],[12,"asyncness","","",100,null],[12,"unsafety","","",100,null],[12,"abi","","",100,null],[12,"ident","","",100,null],[12,"decl","","",100,null],[12,"block","","",100,null],[3,"ItemForeignMod","","A block of foreign items: `extern \"C\" { ... }`.",null,null],[12,"attrs","","",101,null],[12,"abi","","",101,null],[12,"brace_token","","",101,null],[12,"items","","",101,null],[3,"ItemImpl","","An impl block providing trait or associated items:…",null,null],[12,"attrs","","",102,null],[12,"defaultness","","",102,null],[12,"unsafety","","",102,null],[12,"impl_token","","",102,null],[12,"generics","","",102,null],[12,"trait_","","Trait this impl implements.",102,null],[12,"self_ty","","The Self type of the impl.",102,null],[12,"brace_token","","",102,null],[12,"items","","",102,null],[3,"ItemMacro","","A macro invocation, which includes `macro_rules!`…",null,null],[12,"attrs","","",103,null],[12,"ident","","The `example` in `macro_rules! example { ... }`.",103,null],[12,"mac","","",103,null],[12,"semi_token","","",103,null],[3,"ItemMacro2","","A 2.0-style declarative macro introduced by the `macro`…",null,null],[12,"attrs","","",104,null],[12,"vis","","",104,null],[12,"macro_token","","",104,null],[12,"ident","","",104,null],[12,"paren_token","","",104,null],[12,"args","","",104,null],[12,"brace_token","","",104,null],[12,"body","","",104,null],[3,"ItemMod","","A module or module declaration: `mod m` or `mod m { ... }`.",null,null],[12,"attrs","","",105,null],[12,"vis","","",105,null],[12,"mod_token","","",105,null],[12,"ident","","",105,null],[12,"content","","",105,null],[12,"semi","","",105,null],[3,"ItemStatic","","A static item: `static BIKE: Shed = Shed(42)`.",null,null],[12,"attrs","","",106,null],[12,"vis","","",106,null],[12,"static_token","","",106,null],[12,"mutability","","",106,null],[12,"ident","","",106,null],[12,"colon_token","","",106,null],[12,"ty","","",106,null],[12,"eq_token","","",106,null],[12,"expr","","",106,null],[12,"semi_token","","",106,null],[3,"ItemStruct","","A struct definition: `struct Foo<A> { x: A }`.",null,null],[12,"attrs","","",107,null],[12,"vis","","",107,null],[12,"struct_token","","",107,null],[12,"ident","","",107,null],[12,"generics","","",107,null],[12,"fields","","",107,null],[12,"semi_token","","",107,null],[3,"ItemTrait","","A trait definition: `pub trait Iterator { ... }`.",null,null],[12,"attrs","","",108,null],[12,"vis","","",108,null],[12,"unsafety","","",108,null],[12,"auto_token","","",108,null],[12,"trait_token","","",108,null],[12,"ident","","",108,null],[12,"generics","","",108,null],[12,"colon_token","","",108,null],[12,"supertraits","","",108,null],[12,"brace_token","","",108,null],[12,"items","","",108,null],[3,"ItemTraitAlias","","A trait alias: `pub trait SharableIterator = Iterator +…",null,null],[12,"attrs","","",109,null],[12,"vis","","",109,null],[12,"trait_token","","",109,null],[12,"ident","","",109,null],[12,"generics","","",109,null],[12,"eq_token","","",109,null],[12,"bounds","","",109,null],[12,"semi_token","","",109,null],[3,"ItemType","","A type alias: `type Result<T> = std::result::Result<T,…",null,null],[12,"attrs","","",110,null],[12,"vis","","",110,null],[12,"type_token","","",110,null],[12,"ident","","",110,null],[12,"generics","","",110,null],[12,"eq_token","","",110,null],[12,"ty","","",110,null],[12,"semi_token","","",110,null],[3,"ItemUnion","","A union definition: `union Foo<A, B> { x: A, y: B }`.",null,null],[12,"attrs","","",111,null],[12,"vis","","",111,null],[12,"union_token","","",111,null],[12,"ident","","",111,null],[12,"generics","","",111,null],[12,"fields","","",111,null],[3,"ItemUse","","A use declaration: `use std::collections::HashMap`.",null,null],[12,"attrs","","",112,null],[12,"vis","","",112,null],[12,"use_token","","",112,null],[12,"leading_colon","","",112,null],[12,"tree","","",112,null],[12,"semi_token","","",112,null],[3,"ItemVerbatim","","Tokens forming an item not interpreted by Syn.",null,null],[12,"tts","","",113,null],[3,"MethodSig","","A method's signature in a trait or implementation: `unsafe…",null,null],[12,"constness","","",114,null],[12,"asyncness","","",114,null],[12,"unsafety","","",114,null],[12,"abi","","",114,null],[12,"ident","","",114,null],[12,"decl","","",114,null],[3,"TraitItemConst","","An associated constant within the definition of a trait.",null,null],[12,"attrs","","",115,null],[12,"const_token","","",115,null],[12,"ident","","",115,null],[12,"colon_token","","",115,null],[12,"ty","","",115,null],[12,"default","","",115,null],[12,"semi_token","","",115,null],[3,"TraitItemMacro","","A macro invocation within the definition of a trait.",null,null],[12,"attrs","","",116,null],[12,"mac","","",116,null],[12,"semi_token","","",116,null],[3,"TraitItemMethod","","A trait method within the definition of a trait.",null,null],[12,"attrs","","",117,null],[12,"sig","","",117,null],[12,"default","","",117,null],[12,"semi_token","","",117,null],[3,"TraitItemType","","An associated type within the definition of a trait.",null,null],[12,"attrs","","",118,null],[12,"type_token","","",118,null],[12,"ident","","",118,null],[12,"generics","","",118,null],[12,"colon_token","","",118,null],[12,"bounds","","",118,null],[12,"default","","",118,null],[12,"semi_token","","",118,null],[3,"TraitItemVerbatim","","Tokens within the definition of a trait not interpreted by…",null,null],[12,"tts","","",119,null],[3,"UseGlob","","A glob import in a `use` item: `*`.",null,null],[12,"star_token","","",120,null],[3,"UseGroup","","A braced group of imports in a `use` item: `{A, B, C}`.",null,null],[12,"brace_token","","",121,null],[12,"items","","",121,null],[3,"UseName","","An identifier imported by a `use` item: `HashMap`.",null,null],[12,"ident","","",122,null],[3,"UsePath","","A path prefix of imports in a `use` item: `std::...`.",null,null],[12,"ident","","",123,null],[12,"colon2_token","","",123,null],[12,"tree","","",123,null],[3,"UseRename","","An renamed identifier imported by a `use` item: `HashMap…",null,null],[12,"ident","","",124,null],[12,"as_token","","",124,null],[12,"rename","","",124,null],[3,"File","","A complete file of Rust source code.",null,null],[12,"shebang","","",125,null],[12,"attrs","","",125,null],[12,"items","","",125,null],[3,"Lifetime","","A Rust lifetime: `'a`.",null,null],[12,"apostrophe","","",126,null],[12,"ident","","",126,null],[3,"LitBool","","A boolean literal: `true` or `false`.",null,null],[12,"value","","",127,null],[12,"span","","",127,null],[3,"LitByte","","A byte literal: `b'f'`.",null,null],[3,"LitByteStr","","A byte string literal: `b\"foo\"`.",null,null],[3,"LitChar","","A character literal: `'a'`.",null,null],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",null,null],[3,"LitInt","","An integer literal: `1` or `1u16`.",null,null],[3,"LitStr","","A UTF-8 string literal: `\"foo\"`.",null,null],[3,"LitVerbatim","","A raw token literal not interpreted by Syn, possibly…",null,null],[12,"token","","",128,null],[3,"Macro","","A macro invocation: `println!(\"{}\", mac)`.",null,null],[12,"path","","",129,null],[12,"bang_token","","",129,null],[12,"delimiter","","",129,null],[12,"tts","","",129,null],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",null,null],[12,"enum_token","","",130,null],[12,"brace_token","","",130,null],[12,"variants","","",130,null],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",null,null],[12,"struct_token","","",131,null],[12,"fields","","",131,null],[12,"semi_token","","",131,null],[3,"DataUnion","","A tagged union input to a `proc_macro_derive` macro.",null,null],[12,"union_token","","",132,null],[12,"fields","","",132,null],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",null,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",133,null],[12,"vis","","Visibility of the struct or enum.",133,null],[12,"ident","","Name of the struct or enum.",133,null],[12,"generics","","Generics required to complete the definition.",133,null],[12,"data","","Data within the struct or enum.",133,null],[3,"Abi","","The binary interface of a function: `extern \"C\"`.",null,null],[12,"extern_token","","",134,null],[12,"name","","",134,null],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize)…",null,null],[12,"name","","",135,null],[12,"ty","","",135,null],[3,"TypeArray","","A fixed size array type: `[T; n]`.",null,null],[12,"bracket_token","","",136,null],[12,"elem","","",136,null],[12,"semi_token","","",136,null],[12,"len","","",136,null],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",null,null],[12,"lifetimes","","",137,null],[12,"unsafety","","",137,null],[12,"abi","","",137,null],[12,"fn_token","","",137,null],[12,"paren_token","","",137,null],[12,"inputs","","",137,null],[12,"variadic","","",137,null],[12,"output","","",137,null],[3,"TypeGroup","","A type contained within invisible delimiters.",null,null],[12,"group_token","","",138,null],[12,"elem","","",138,null],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",null,null],[12,"impl_token","","",139,null],[12,"bounds","","",139,null],[3,"TypeInfer","","Indication that a type should be inferred by the compiler:…",null,null],[12,"underscore_token","","",140,null],[3,"TypeMacro","","A macro in the type position.",null,null],[12,"mac","","",141,null],[3,"TypeNever","","The never type: `!`.",null,null],[12,"bang_token","","",142,null],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",null,null],[12,"paren_token","","",143,null],[12,"elem","","",143,null],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with…",null,null],[12,"qself","","",144,null],[12,"path","","",144,null],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",null,null],[12,"star_token","","",145,null],[12,"const_token","","",145,null],[12,"mutability","","",145,null],[12,"elem","","",145,null],[3,"TypeReference","","A reference type: `&'a T` or `&'a mut T`.",null,null],[12,"and_token","","",146,null],[12,"lifetime","","",146,null],[12,"mutability","","",146,null],[12,"elem","","",146,null],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",null,null],[12,"bracket_token","","",147,null],[12,"elem","","",147,null],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",null,null],[12,"dyn_token","","",148,null],[12,"bounds","","",148,null],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",null,null],[12,"paren_token","","",149,null],[12,"elems","","",149,null],[3,"TypeVerbatim","","Tokens in type position not interpreted by Syn.",null,null],[12,"tts","","",150,null],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>`…",null,null],[12,"colon2_token","","",151,null],[12,"lt_token","","",151,null],[12,"args","","",151,null],[12,"gt_token","","",151,null],[3,"Binding","","A binding (equality constraint) on an associated type:…",null,null],[12,"ident","","",152,null],[12,"eq_token","","",152,null],[12,"ty","","",152,null],[3,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",null,null],[12,"ident","","",153,null],[12,"colon_token","","",153,null],[12,"bounds","","",153,null],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in…",null,null],[12,"paren_token","","",154,null],[12,"inputs","","`(A, B)`",154,null],[12,"output","","`C`",154,null],[3,"Path","","A path at which a named item is exported:…",null,null],[12,"leading_colon","","",155,null],[12,"segments","","",155,null],[3,"PathSegment","","A segment of a path together with any path arguments on…",null,null],[12,"ident","","",156,null],[12,"arguments","","",156,null],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T…",null,null],[12,"lt_token","","",157,null],[12,"ty","","",157,null],[12,"position","","",157,null],[12,"as_token","","",157,null],[12,"gt_token","","",157,null],[3,"Error","","Error returned when a Syn parser cannot parse the input…",null,null],[4,"AttrStyle","","Distinguishes between attributes that decorate an item and…",null,null],[13,"Outer","","",158,null],[13,"Inner","","",158,null],[4,"Meta","","Content of a compile-time structured attribute.",null,null],[13,"Word","","",159,null],[13,"List","","A structured list within an attribute, like `derive(Copy,…",159,null],[13,"NameValue","","A name-value pair within an attribute, like `feature =…",159,null],[4,"NestedMeta","","Element of a compile-time attribute list.",null,null],[13,"Meta","","A structured meta item, like the `Copy` in…",160,null],[13,"Literal","","A Rust literal, like the `\"new_name\"` in…",160,null],[4,"Fields","","Data stored within an enum variant or struct.",null,null],[13,"Named","","Named fields of a struct or struct variant such as `Point…",161,null],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as…",161,null],[13,"Unit","","Unit struct or unit variant such as `None`.",161,null],[4,"Visibility","","The visibility level of an item: inherited or `pub` or…",null,null],[13,"Public","","A public visibility level: `pub`.",162,null],[13,"Crate","","A crate-level visibility: `crate`.",162,null],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or…",162,null],[13,"Inherited","","An inherited visibility, which usually means private.",162,null],[4,"Expr","","A Rust expression.",null,null],[13,"Box","","A box expression: `box f`.",163,null],[13,"InPlace","","A placement expression: `place <- value`.",163,null],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",163,null],[13,"Call","","A function call expression: `invoke(a, b)`.",163,null],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",163,null],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",163,null],[13,"Binary","","A binary operation: `a + b`, `a * b`.",163,null],[13,"Unary","","A unary operation: `!x`, `*x`.",163,null],[13,"Lit","","A literal in place of an expression: `1`, `\"foo\"`.",163,null],[13,"Cast","","A cast expression: `foo as f64`.",163,null],[13,"Type","","A type ascription expression: `foo: f64`.",163,null],[13,"Let","","A `let` guard: `let Some(x) = opt`.",163,null],[13,"If","","An `if` expression with an optional `else` block: `if expr…",163,null],[13,"While","","A while loop: `while expr { ... }`.",163,null],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",163,null],[13,"Loop","","Conditionless loop: `loop { ... }`.",163,null],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {}…",163,null],[13,"Closure","","A closure expression: `|a, b| a + b`.",163,null],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",163,null],[13,"Block","","A blocked scope: `{ ... }`.",163,null],[13,"Assign","","An assignment expression: `a = compute()`.",163,null],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",163,null],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple…",163,null],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",163,null],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",163,null],[13,"Path","","A path like `std::mem::replace` possibly containing…",163,null],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",163,null],[13,"Break","","A `break`, with an optional label to break and an optional…",163,null],[13,"Continue","","A `continue`, with an optional label.",163,null],[13,"Return","","A `return`, with an optional value to be returned.",163,null],[13,"Macro","","A macro invocation expression: `format!(\"{}\", q)`.",163,null],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",163,null],[13,"Repeat","","An array literal constructed from one repeated element:…",163,null],[13,"Paren","","A parenthesized expression: `(a + b)`.",163,null],[13,"Group","","An expression contained within invisible delimiters.",163,null],[13,"Try","","A try-expression: `expr?`.",163,null],[13,"Async","","An async block: `async { ... }`.",163,null],[13,"TryBlock","","A try block: `try { ... }`.",163,null],[13,"Yield","","A yield expression: `yield expr`.",163,null],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",163,null],[4,"Member","","A struct or tuple struct field accessed in a struct…",null,null],[13,"Named","","A named field like `self.x`.",164,null],[13,"Unnamed","","An unnamed field like `self.0`.",164,null],[4,"GenericMethodArgument","","An individual generic argument to a method, like `T`.",null,null],[13,"Type","","A type argument.",165,null],[13,"Const","","A const expression. Must be inside of a block.",165,null],[4,"Pat","","A pattern in a local binding, function signature, match…",null,null],[13,"Wild","","A pattern that matches any value: `_`.",166,null],[13,"Ident","","A pattern that binds a new variable: `ref mut binding @…",166,null],[13,"Struct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",166,null],[13,"TupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",166,null],[13,"Path","","A path pattern like `Color::Red`, optionally qualified…",166,null],[13,"Tuple","","A tuple pattern: `(a, b)`.",166,null],[13,"Box","","A box pattern: `box v`.",166,null],[13,"Ref","","A reference pattern: `&mut (first, second)`.",166,null],[13,"Lit","","A literal pattern: `0`.",166,null],[13,"Range","","A range pattern: `1..=2`.",166,null],[13,"Slice","","A dynamically sized slice pattern: `[a, b, i.., y, z]`.",166,null],[13,"Macro","","A macro in expression position.",166,null],[13,"Verbatim","","Tokens in pattern position not interpreted by Syn.",166,null],[4,"RangeLimits","","Limit types of a range, inclusive or exclusive.",null,null],[13,"HalfOpen","","Inclusive at the beginning, exclusive at the end.",167,null],[13,"Closed","","Inclusive at the beginning and end.",167,null],[4,"Stmt","","A statement, usually ending in a semicolon.",null,null],[13,"Local","","A local (let) binding.",168,null],[13,"Item","","An item definition.",168,null],[13,"Expr","","Expr without trailing semicolon.",168,null],[13,"Semi","","Expression with trailing semicolon.",168,null],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T:…",null,null],[13,"Type","","A generic type parameter: `T: Into<String>`.",169,null],[13,"Lifetime","","A lifetime definition: `'a: 'b + 'c + 'd`.",169,null],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",169,null],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the…",null,null],[13,"None","","",170,null],[13,"Maybe","","",170,null],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",null,null],[13,"Trait","","",171,null],[13,"Lifetime","","",171,null],[4,"WherePredicate","","A single predicate in a `where` clause: `T:…",null,null],[13,"Type","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",172,null],[13,"Lifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",172,null],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",172,null],[4,"FnArg","","An argument in a function signature: the `n: usize` in `fn…",null,null],[13,"SelfRef","","Self captured by reference in a function signature:…",173,null],[13,"SelfValue","","Self captured by value in a function signature: `self` or…",173,null],[13,"Captured","","An explicitly typed pattern captured by a function…",173,null],[13,"Inferred","","A pattern whose type is inferred captured by a function…",173,null],[13,"Ignored","","A type not bound to any pattern in a function signature.",173,null],[4,"ForeignItem","","An item within an `extern` block.",null,null],[13,"Fn","","A foreign function in an `extern` block.",174,null],[13,"Static","","A foreign static item in an `extern` block: `static ext:…",174,null],[13,"Type","","A foreign type in an `extern` block: `type void`.",174,null],[13,"Macro","","A macro invocation within an extern block.",174,null],[13,"Verbatim","","Tokens in an `extern` block not interpreted by Syn.",174,null],[4,"ImplItem","","An item within an impl block.",null,null],[13,"Const","","An associated constant within an impl block.",175,null],[13,"Method","","A method within an impl block.",175,null],[13,"Type","","An associated type within an impl block.",175,null],[13,"Existential","","An existential type within an impl block.",175,null],[13,"Macro","","A macro invocation within an impl block.",175,null],[13,"Verbatim","","Tokens within an impl block not interpreted by Syn.",175,null],[4,"Item","","Things that can appear directly inside of a module or scope.",null,null],[13,"ExternCrate","","An `extern crate` item: `extern crate serde`.",176,null],[13,"Use","","A use declaration: `use std::collections::HashMap`.",176,null],[13,"Static","","A static item: `static BIKE: Shed = Shed(42)`.",176,null],[13,"Const","","A constant item: `const MAX: u16 = 65535`.",176,null],[13,"Fn","","A free-standing function: `fn process(n: usize) ->…",176,null],[13,"Mod","","A module or module declaration: `mod m` or `mod m { ... }`.",176,null],[13,"ForeignMod","","A block of foreign items: `extern \"C\" { ... }`.",176,null],[13,"Type","","A type alias: `type Result<T> = std::result::Result<T,…",176,null],[13,"Existential","","An existential type: `existential type Iter: Iterator<Item…",176,null],[13,"Struct","","A struct definition: `struct Foo<A> { x: A }`.",176,null],[13,"Enum","","An enum definition: `enum Foo<A, B> { C<A>, D<B> }`.",176,null],[13,"Union","","A union definition: `union Foo<A, B> { x: A, y: B }`.",176,null],[13,"Trait","","A trait definition: `pub trait Iterator { ... }`.",176,null],[13,"TraitAlias","","A trait alias: `pub trait SharableIterator = Iterator +…",176,null],[13,"Impl","","An impl block providing trait or associated items:…",176,null],[13,"Macro","","A macro invocation, which includes `macro_rules!`…",176,null],[13,"Macro2","","A 2.0-style declarative macro introduced by the `macro`…",176,null],[13,"Verbatim","","Tokens forming an item not interpreted by Syn.",176,null],[4,"TraitItem","","An item declaration within the definition of a trait.",null,null],[13,"Const","","An associated constant within the definition of a trait.",177,null],[13,"Method","","A trait method within the definition of a trait.",177,null],[13,"Type","","An associated type within the definition of a trait.",177,null],[13,"Macro","","A macro invocation within the definition of a trait.",177,null],[13,"Verbatim","","Tokens within the definition of a trait not interpreted by…",177,null],[4,"UseTree","","A suffix of an import tree in a `use` item: `Type as…",null,null],[13,"Path","","A path prefix of imports in a `use` item: `std::...`.",178,null],[13,"Name","","An identifier imported by a `use` item: `HashMap`.",178,null],[13,"Rename","","An renamed identifier imported by a `use` item: `HashMap…",178,null],[13,"Glob","","A glob import in a `use` item: `*`.",178,null],[13,"Group","","A braced group of imports in a `use` item: `{A, B, C}`.",178,null],[4,"FloatSuffix","","The suffix on a floating point literal if any, like the…",null,null],[13,"F32","","",179,null],[13,"F64","","",179,null],[13,"None","","",179,null],[4,"IntSuffix","","The suffix on an integer literal if any, like the `u8` in…",null,null],[13,"I8","","",180,null],[13,"I16","","",180,null],[13,"I32","","",180,null],[13,"I64","","",180,null],[13,"I128","","",180,null],[13,"Isize","","",180,null],[13,"U8","","",180,null],[13,"U16","","",180,null],[13,"U32","","",180,null],[13,"U64","","",180,null],[13,"U128","","",180,null],[13,"Usize","","",180,null],[13,"None","","",180,null],[4,"Lit","","A Rust literal such as a string or integer or boolean.",null,null],[13,"Str","","A UTF-8 string literal: `\"foo\"`.",181,null],[13,"ByteStr","","A byte string literal: `b\"foo\"`.",181,null],[13,"Byte","","A byte literal: `b'f'`.",181,null],[13,"Char","","A character literal: `'a'`.",181,null],[13,"Int","","An integer literal: `1` or `1u16`.",181,null],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",181,null],[13,"Bool","","A boolean literal: `true` or `false`.",181,null],[13,"Verbatim","","A raw token literal not interpreted by Syn, possibly…",181,null],[4,"StrStyle","","The style of a string literal, either plain quoted or a…",null,null],[13,"Cooked","","An ordinary string like `\"data\"`.",182,null],[13,"Raw","","A raw string like `r##\"data\"##`.",182,null],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or…",null,null],[13,"Paren","","",183,null],[13,"Brace","","",183,null],[13,"Bracket","","",183,null],[4,"Data","","The storage of a struct, enum or union data structure.",null,null],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",184,null],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",184,null],[13,"Union","","A tagged union input to a `proc_macro_derive` macro.",184,null],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",null,null],[13,"Add","","The `+` operator (addition)",185,null],[13,"Sub","","The `-` operator (subtraction)",185,null],[13,"Mul","","The `*` operator (multiplication)",185,null],[13,"Div","","The `/` operator (division)",185,null],[13,"Rem","","The `%` operator (modulus)",185,null],[13,"And","","The `&&` operator (logical and)",185,null],[13,"Or","","The `||` operator (logical or)",185,null],[13,"BitXor","","The `^` operator (bitwise xor)",185,null],[13,"BitAnd","","The `&` operator (bitwise and)",185,null],[13,"BitOr","","The `|` operator (bitwise or)",185,null],[13,"Shl","","The `<<` operator (shift left)",185,null],[13,"Shr","","The `>>` operator (shift right)",185,null],[13,"Eq","","The `==` operator (equality)",185,null],[13,"Lt","","The `<` operator (less than)",185,null],[13,"Le","","The `<=` operator (less than or equal to)",185,null],[13,"Ne","","The `!=` operator (not equal to)",185,null],[13,"Ge","","The `>=` operator (greater than or equal to)",185,null],[13,"Gt","","The `>` operator (greater than)",185,null],[13,"AddEq","","The `+=` operator",185,null],[13,"SubEq","","The `-=` operator",185,null],[13,"MulEq","","The `*=` operator",185,null],[13,"DivEq","","The `/=` operator",185,null],[13,"RemEq","","The `%=` operator",185,null],[13,"BitXorEq","","The `^=` operator",185,null],[13,"BitAndEq","","The `&=` operator",185,null],[13,"BitOrEq","","The `|=` operator",185,null],[13,"ShlEq","","The `<<=` operator",185,null],[13,"ShrEq","","The `>>=` operator",185,null],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",null,null],[13,"Deref","","The `*` operator for dereferencing",186,null],[13,"Not","","The `!` operator for logical inversion",186,null],[13,"Neg","","The `-` operator for negation",186,null],[4,"BareFnArgName","","Name of an argument in a function type: the `n` in `fn(n:…",null,null],[13,"Named","","Argument given a name.",187,null],[13,"Wild","","Argument not given a name, matched with `_`.",187,null],[4,"ReturnType","","Return type of a function signature.",null,null],[13,"Default","","Return type is not specified.",188,null],[13,"Type","","A particular type is returned.",188,null],[4,"Type","","The possible types that a Rust value could have.",null,null],[13,"Slice","","A dynamically sized slice type: `[T]`.",189,null],[13,"Array","","A fixed size array type: `[T; n]`.",189,null],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",189,null],[13,"Reference","","A reference type: `&'a T` or `&'a mut T`.",189,null],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",189,null],[13,"Never","","The never type: `!`.",189,null],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",189,null],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with…",189,null],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",189,null],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",189,null],[13,"Paren","","A parenthesized type equivalent to the inner type.",189,null],[13,"Group","","A type contained within invisible delimiters.",189,null],[13,"Infer","","Indication that a type should be inferred by the compiler:…",189,null],[13,"Macro","","A macro in the type position.",189,null],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",189,null],[4,"GenericArgument","","An individual generic argument, like `'a`, `T`, or `Item =…",null,null],[13,"Lifetime","","A lifetime argument.",190,null],[13,"Type","","A type argument.",190,null],[13,"Binding","","A binding (equality constraint) on an associated type: the…",190,null],[13,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",190,null],[13,"Const","","A const expression. Must be inside of a block.",190,null],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path…",null,null],[13,"None","","",191,null],[13,"AngleBracketed","","The `<'a, T>` in `std::slice::iter<'a, T>`.",191,null],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",191,null],[5,"parse","","Parse tokens of source code into the chosen syntax tree…",null,[[["tokenstream"]],[["parse"],["result"]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",null,[[["tokenstream"]],[["parse"],["result"]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",null,[[["str"]],[["parse"],["result"]]]],[5,"parse_file","","Parse the content of a file of Rust code.",null,[[["str"]],[["file"],["result",["file"]]]]],[0,"token","","Tokens representing Rust punctuation, keywords, and…",null,null],[3,"Underscore","syn::token","`_`",null,null],[12,"spans","","",192,null],[3,"Abstract","","`abstract`",null,null],[12,"span","","",193,null],[3,"As","","`as`",null,null],[12,"span","","",194,null],[3,"Async","","`async`",null,null],[12,"span","","",195,null],[3,"Auto","","`auto`",null,null],[12,"span","","",196,null],[3,"Become","","`become`",null,null],[12,"span","","",197,null],[3,"Box","","`box`",null,null],[12,"span","","",198,null],[3,"Break","","`break`",null,null],[12,"span","","",199,null],[3,"Const","","`const`",null,null],[12,"span","","",200,null],[3,"Continue","","`continue`",null,null],[12,"span","","",201,null],[3,"Crate","","`crate`",null,null],[12,"span","","",202,null],[3,"Default","","`default`",null,null],[12,"span","","",203,null],[3,"Do","","`do`",null,null],[12,"span","","",204,null],[3,"Dyn","","`dyn`",null,null],[12,"span","","",205,null],[3,"Else","","`else`",null,null],[12,"span","","",206,null],[3,"Enum","","`enum`",null,null],[12,"span","","",207,null],[3,"Existential","","`existential`",null,null],[12,"span","","",208,null],[3,"Extern","","`extern`",null,null],[12,"span","","",209,null],[3,"Final","","`final`",null,null],[12,"span","","",210,null],[3,"Fn","","`fn`",null,null],[12,"span","","",211,null],[3,"For","","`for`",null,null],[12,"span","","",212,null],[3,"If","","`if`",null,null],[12,"span","","",213,null],[3,"Impl","","`impl`",null,null],[12,"span","","",214,null],[3,"In","","`in`",null,null],[12,"span","","",215,null],[3,"Let","","`let`",null,null],[12,"span","","",216,null],[3,"Loop","","`loop`",null,null],[12,"span","","",217,null],[3,"Macro","","`macro`",null,null],[12,"span","","",218,null],[3,"Match","","`match`",null,null],[12,"span","","",219,null],[3,"Mod","","`mod`",null,null],[12,"span","","",220,null],[3,"Move","","`move`",null,null],[12,"span","","",221,null],[3,"Mut","","`mut`",null,null],[12,"span","","",222,null],[3,"Override","","`override`",null,null],[12,"span","","",223,null],[3,"Priv","","`priv`",null,null],[12,"span","","",224,null],[3,"Pub","","`pub`",null,null],[12,"span","","",225,null],[3,"Ref","","`ref`",null,null],[12,"span","","",226,null],[3,"Return","","`return`",null,null],[12,"span","","",227,null],[3,"SelfType","","`Self`",null,null],[12,"span","","",228,null],[3,"SelfValue","","`self`",null,null],[12,"span","","",229,null],[3,"Static","","`static`",null,null],[12,"span","","",230,null],[3,"Struct","","`struct`",null,null],[12,"span","","",231,null],[3,"Super","","`super`",null,null],[12,"span","","",232,null],[3,"Trait","","`trait`",null,null],[12,"span","","",233,null],[3,"Try","","`try`",null,null],[12,"span","","",234,null],[3,"Type","","`type`",null,null],[12,"span","","",235,null],[3,"Typeof","","`typeof`",null,null],[12,"span","","",236,null],[3,"Union","","`union`",null,null],[12,"span","","",237,null],[3,"Unsafe","","`unsafe`",null,null],[12,"span","","",238,null],[3,"Unsized","","`unsized`",null,null],[12,"span","","",239,null],[3,"Use","","`use`",null,null],[12,"span","","",240,null],[3,"Virtual","","`virtual`",null,null],[12,"span","","",241,null],[3,"Where","","`where`",null,null],[12,"span","","",242,null],[3,"While","","`while`",null,null],[12,"span","","",243,null],[3,"Yield","","`yield`",null,null],[12,"span","","",244,null],[3,"Add","","`+`",null,null],[12,"spans","","",245,null],[3,"AddEq","","`+=`",null,null],[12,"spans","","",246,null],[3,"And","","`&`",null,null],[12,"spans","","",247,null],[3,"AndAnd","","`&&`",null,null],[12,"spans","","",248,null],[3,"AndEq","","`&=`",null,null],[12,"spans","","",249,null],[3,"At","","`@`",null,null],[12,"spans","","",250,null],[3,"Bang","","`!`",null,null],[12,"spans","","",251,null],[3,"Caret","","`^`",null,null],[12,"spans","","",252,null],[3,"CaretEq","","`^=`",null,null],[12,"spans","","",253,null],[3,"Colon","","`:`",null,null],[12,"spans","","",254,null],[3,"Colon2","","`::`",null,null],[12,"spans","","",255,null],[3,"Comma","","`,`",null,null],[12,"spans","","",256,null],[3,"Div","","`/`",null,null],[12,"spans","","",257,null],[3,"DivEq","","`/=`",null,null],[12,"spans","","",258,null],[3,"Dollar","","`$`",null,null],[12,"spans","","",259,null],[3,"Dot","","`.`",null,null],[12,"spans","","",260,null],[3,"Dot2","","`..`",null,null],[12,"spans","","",261,null],[3,"Dot3","","`...`",null,null],[12,"spans","","",262,null],[3,"DotDotEq","","`..=`",null,null],[12,"spans","","",263,null],[3,"Eq","","`=`",null,null],[12,"spans","","",264,null],[3,"EqEq","","`==`",null,null],[12,"spans","","",265,null],[3,"Ge","","`>=`",null,null],[12,"spans","","",266,null],[3,"Gt","","`>`",null,null],[12,"spans","","",267,null],[3,"Le","","`<=`",null,null],[12,"spans","","",268,null],[3,"Lt","","`<`",null,null],[12,"spans","","",269,null],[3,"MulEq","","`*=`",null,null],[12,"spans","","",270,null],[3,"Ne","","`!=`",null,null],[12,"spans","","",271,null],[3,"Or","","`|`",null,null],[12,"spans","","",272,null],[3,"OrEq","","`|=`",null,null],[12,"spans","","",273,null],[3,"OrOr","","`||`",null,null],[12,"spans","","",274,null],[3,"Pound","","`#`",null,null],[12,"spans","","",275,null],[3,"Question","","`?`",null,null],[12,"spans","","",276,null],[3,"RArrow","","`->`",null,null],[12,"spans","","",277,null],[3,"LArrow","","`<-`",null,null],[12,"spans","","",278,null],[3,"Rem","","`%`",null,null],[12,"spans","","",279,null],[3,"RemEq","","`%=`",null,null],[12,"spans","","",280,null],[3,"FatArrow","","`=>`",null,null],[12,"spans","","",281,null],[3,"Semi","","`;`",null,null],[12,"spans","","",282,null],[3,"Shl","","`<<`",null,null],[12,"spans","","",283,null],[3,"ShlEq","","`<<=`",null,null],[12,"spans","","",284,null],[3,"Shr","","`>>`",null,null],[12,"spans","","",285,null],[3,"ShrEq","","`>>=`",null,null],[12,"spans","","",286,null],[3,"Star","","`*`",null,null],[12,"spans","","",287,null],[3,"Sub","","`-`",null,null],[12,"spans","","",288,null],[3,"SubEq","","`-=`",null,null],[12,"spans","","",289,null],[3,"Tilde","","`~`",null,null],[12,"spans","","",290,null],[3,"Brace","","`{...}`",null,null],[12,"span","","",291,null],[3,"Bracket","","`[...]`",null,null],[12,"span","","",292,null],[3,"Paren","","`(...)`",null,null],[12,"span","","",293,null],[3,"Group","","None-delimited group",null,null],[12,"span","","",294,null],[8,"Token","","Marker trait for types that represent single tokens.",null,null],[11,"surround","","",291,[[["tokenstream"],["self"],["f"]]]],[11,"surround","","",292,[[["tokenstream"],["self"],["f"]]]],[11,"surround","","",293,[[["tokenstream"],["self"],["f"]]]],[11,"surround","","",294,[[["tokenstream"],["self"],["f"]]]],[11,"parse_meta","syn","Parses the content of the attribute, consisting of the…",0,[[["self"]],[["meta"],["result",["meta"]]]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",0,[[["parsestream"]],[["result",["vec"]],["vec"]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",0,[[["parsestream"]],[["result",["vec"]],["vec"]]]],[11,"name","","Returns the identifier that begins this structured meta…",159,[[["self"]],["ident"]]],[11,"parse_named","","Parses a named (braced struct) field.",3,[[["parsestream"]],["result"]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",3,[[["parsestream"]],["result"]]],[11,"iter","","Get an iterator over the borrowed [`Field`] items in this…",161,[[["self"]],[["iter",["field"]],["field"]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [`Field`] items…",161,[[["self"]],[["itermut",["field"]],["field"]]]],[11,"parse_within","","Parse the body of a block as zero or more statements,…",52,[[["parsestream"]],[["result",["vec"]],["vec",["stmt"]]]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type…",73,[[["self"]],["typeparams"]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type…",73,[[["self"]],["typeparamsmut"]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime…",73,[[["self"]],["lifetimes"]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the…",73,[[["self"]],["lifetimesmut"]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant…",73,[[["self"]],["constparams"]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the…",73,[[["self"]],["constparamsmut"]]],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one…",73,[[["self"]],["whereclause"]]],[11,"split_for_impl","","Split a type's generics into the pieces required for…",73,[[["self"]]]],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like…",295,[[["self"]],["turbofish"]]],[11,"new","","",74,[[["lifetime"]],["self"]]],[11,"new","","Panics",126,[[["str"],["span"]],["self"]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",181,[[["literal"]],["self"]]],[11,"new","","",296,[[["str"],["span"]],["self"]]],[11,"value","","",296,[[["self"]],["string"]]],[11,"parse","","Parse a syntax tree node from the content of this string…",296,[[["self"]],[["parse"],["result"]]]],[11,"parse_with","","Invoke parser on the content of this string literal.",296,[[["self"],["parser"]],["result"]]],[11,"span","","",296,[[["self"]],["span"]]],[11,"set_span","","",296,[[["span"],["self"]]]],[11,"new","","",297,[[["span"]],["self"]]],[11,"value","","",297,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"span","","",297,[[["self"]],["span"]]],[11,"set_span","","",297,[[["span"],["self"]]]],[11,"new","","",298,[[["span"],["u8"]],["self"]]],[11,"value","","",298,[[["self"]],["u8"]]],[11,"span","","",298,[[["self"]],["span"]]],[11,"set_span","","",298,[[["span"],["self"]]]],[11,"new","","",299,[[["span"],["char"]],["self"]]],[11,"value","","",299,[[["self"]],["char"]]],[11,"span","","",299,[[["self"]],["span"]]],[11,"set_span","","",299,[[["span"],["self"]]]],[11,"new","","",300,[[["span"],["u64"],["intsuffix"]],["self"]]],[11,"value","","",300,[[["self"]],["u64"]]],[11,"suffix","","",300,[[["self"]],["intsuffix"]]],[11,"span","","",300,[[["self"]],["span"]]],[11,"set_span","","",300,[[["span"],["self"]]]],[11,"new","","",301,[[["floatsuffix"],["f64"],["span"]],["self"]]],[11,"value","","",301,[[["self"]],["f64"]]],[11,"suffix","","",301,[[["self"]],["floatsuffix"]]],[11,"span","","",301,[[["self"]],["span"]]],[11,"set_span","","",301,[[["span"],["self"]]]],[11,"span","","",128,[[["self"]],["span"]]],[11,"set_span","","",128,[[["span"],["self"]]]],[11,"parse_body","","Parse the tokens within the macro invocation's delimiters…",129,[[["self"]],[["parse"],["result"]]]],[11,"parse_body_with","","Parse the tokens within the macro invocation's delimiters…",129,[[["self"],["parser"]],["result"]]],[11,"without_plus","","In some positions, types may not contain the `+`…",189,[[["parsestream"]],["result"]]],[11,"without_plus","","",188,[[["parsestream"]],["result"]]],[11,"parse","","",188,[[["parsestream"],["bool"]],["result"]]],[11,"without_plus","","",148,[[["parsestream"]],["result"]]],[11,"parse","","",148,[[["parsestream"],["bool"]],["result"]]],[11,"parse_mod_style","","Parse a `Path` containing no path arguments on any of its…",155,[[["parsestream"]],["result"]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to the…",155,[[["i"],["self"]],["bool"]]],[11,"is_empty","","",191,[[["self"]],["bool"]]],[0,"buffer","","A stably addressed token buffer supporting efficient…",null,null],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times,…",null,null],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",null,null],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the…",302,[[["tokenstream"]],["tokenbuffer"]]],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the…",302,[[["tokenstream"]],["tokenbuffer"]]],[11,"begin","","Creates a cursor referencing the first token in the buffer…",302,[[["self"]],["cursor"]]],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",303,[[],["self"]]],[11,"eof","","Checks whether the cursor is currently pointing at the end…",303,[[],["bool"]]],[11,"group","","If the cursor is pointing at a `Group` with the given…",303,[[["delimiter"]],["option"]]],[11,"ident","","If the cursor is pointing at a `Ident`, returns it along…",303,[[],["option"]]],[11,"punct","","If the cursor is pointing at an `Punct`, returns it along…",303,[[],["option"]]],[11,"literal","","If the cursor is pointing at a `Literal`, return it along…",303,[[],["option"]]],[11,"lifetime","","If the cursor is pointing at a `Lifetime`, returns it…",303,[[],["option"]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into…",303,[[],["tokenstream"]]],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it…",303,[[],["option"]]],[11,"span","","Returns the `Span` of the current token, or…",303,[[],["span"]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",null,null],[8,"IdentExt","syn::ext","Additional methods for `Ident` not provided by proc-macro2…",null,null],[10,"parse_any","","Parses any identifier including keywords.",304,[[["parsestream"]],["result"]]],[18,"peek_any","","Peeks any identifier including keywords. Usage:…",304,null],[10,"unraw","","Strips the raw marker `r#`, if any, from the beginning of…",304,[[["self"]],["ident"]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by…",null,null],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T`…",null,null],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",null,null],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut…",null,null],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",null,null],[3,"IntoIter","","An iterator over owned values of type `T`.",null,null],[3,"Iter","","An iterator over borrowed values of type `&T`.",null,null],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",null,null],[4,"Pair","","A single syntax tree node of type `T` followed by its…",null,null],[13,"Punctuated","","",305,null],[13,"End","","",305,null],[11,"new","","Creates an empty punctuated sequence.",306,[[],["punctuated"]]],[11,"is_empty","","Determines whether this punctuated sequence is empty,…",306,[[["self"]],["bool"]]],[11,"len","","Returns the number of syntax tree nodes in this punctuated…",306,[[["self"]],["usize"]]],[11,"first","","Borrows the first punctuated pair in this sequence.",306,[[["self"]],[["option",["pair"]],["pair"]]]],[11,"last","","Borrows the last punctuated pair in this sequence.",306,[[["self"]],[["option",["pair"]],["pair"]]]],[11,"last_mut","","Mutably borrows the last punctuated pair in this sequence.",306,[[["self"]],[["pair"],["option",["pair"]]]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of…",306,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree…",306,[[["self"]],["itermut"]]],[11,"pairs","","Returns an iterator over the contents of this sequence as…",306,[[["self"]],["pairs"]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as…",306,[[["self"]],["pairsmut"]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as…",306,[[],["intopairs"]]],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated…",306,[[["self"],["t"]]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this…",306,[[["self"],["p"]]]],[11,"pop","","Removes the last punctuated pair from this sequence, or…",306,[[["self"]],[["option",["pair"]],["pair"]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a…",306,[[["self"]],["bool"]]],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it…",306,[[["self"]],["bool"]]],[11,"push","","Appends a syntax tree node onto the end of this punctuated…",306,[[["self"],["t"]]]],[11,"insert","","Inserts an element at position `index`.",306,[[["self"],["usize"],["t"]]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",306,[[["parsestream"]],["result"]]],[11,"parse_terminated_with","","Parses zero or more occurrences of `T` using the given…",306,[[["parsestream"]],["result"]]],[11,"parse_separated_nonempty","","Parses one or more occurrences of `T` separated by…",306,[[["parsestream"]],["result"]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of `T` using the given…",306,[[["parsestream"]],["result"]]],[11,"into_value","","Extracts the syntax tree node from this punctuated pair,…",305,[[],["t"]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",305,[[["self"]],["t"]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated…",305,[[["self"]],["t"]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless…",305,[[["self"]],[["option"],["p"]]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and an…",305,[[["t"],["option"]],["self"]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree…",305,[[]]],[0,"spanned","syn","A trait that can provide the `Span` of the complete…",null,null],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete…",null,null],[10,"span","","Returns a `Span` covering the complete contents of this…",307,[[["self"]],["span"]]],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[5,"visit_abi","syn::visit","",null,[[["abi"],["v"]]]],[5,"visit_angle_bracketed_generic_arguments","","",null,[[["v"],["anglebracketedgenericarguments"]]]],[5,"visit_arg_captured","","",null,[[["v"],["argcaptured"]]]],[5,"visit_arg_self","","",null,[[["v"],["argself"]]]],[5,"visit_arg_self_ref","","",null,[[["argselfref"],["v"]]]],[5,"visit_arm","","",null,[[["arm"],["v"]]]],[5,"visit_attr_style","","",null,[[["attrstyle"],["v"]]]],[5,"visit_attribute","","",null,[[["v"],["attribute"]]]],[5,"visit_bare_fn_arg","","",null,[[["v"],["barefnarg"]]]],[5,"visit_bare_fn_arg_name","","",null,[[["barefnargname"],["v"]]]],[5,"visit_bin_op","","",null,[[["v"],["binop"]]]],[5,"visit_binding","","",null,[[["v"],["binding"]]]],[5,"visit_block","","",null,[[["block"],["v"]]]],[5,"visit_bound_lifetimes","","",null,[[["v"],["boundlifetimes"]]]],[5,"visit_const_param","","",null,[[["constparam"],["v"]]]],[5,"visit_constraint","","",null,[[["constraint"],["v"]]]],[5,"visit_data","","",null,[[["data"],["v"]]]],[5,"visit_data_enum","","",null,[[["dataenum"],["v"]]]],[5,"visit_data_struct","","",null,[[["datastruct"],["v"]]]],[5,"visit_data_union","","",null,[[["dataunion"],["v"]]]],[5,"visit_derive_input","","",null,[[["deriveinput"],["v"]]]],[5,"visit_expr","","",null,[[["expr"],["v"]]]],[5,"visit_expr_array","","",null,[[["exprarray"],["v"]]]],[5,"visit_expr_assign","","",null,[[["exprassign"],["v"]]]],[5,"visit_expr_assign_op","","",null,[[["v"],["exprassignop"]]]],[5,"visit_expr_async","","",null,[[["v"],["exprasync"]]]],[5,"visit_expr_binary","","",null,[[["exprbinary"],["v"]]]],[5,"visit_expr_block","","",null,[[["v"],["exprblock"]]]],[5,"visit_expr_box","","",null,[[["exprbox"],["v"]]]],[5,"visit_expr_break","","",null,[[["exprbreak"],["v"]]]],[5,"visit_expr_call","","",null,[[["exprcall"],["v"]]]],[5,"visit_expr_cast","","",null,[[["exprcast"],["v"]]]],[5,"visit_expr_closure","","",null,[[["v"],["exprclosure"]]]],[5,"visit_expr_continue","","",null,[[["exprcontinue"],["v"]]]],[5,"visit_expr_field","","",null,[[["v"],["exprfield"]]]],[5,"visit_expr_for_loop","","",null,[[["v"],["exprforloop"]]]],[5,"visit_expr_group","","",null,[[["exprgroup"],["v"]]]],[5,"visit_expr_if","","",null,[[["exprif"],["v"]]]],[5,"visit_expr_in_place","","",null,[[["v"],["exprinplace"]]]],[5,"visit_expr_index","","",null,[[["v"],["exprindex"]]]],[5,"visit_expr_let","","",null,[[["v"],["exprlet"]]]],[5,"visit_expr_lit","","",null,[[["v"],["exprlit"]]]],[5,"visit_expr_loop","","",null,[[["v"],["exprloop"]]]],[5,"visit_expr_macro","","",null,[[["exprmacro"],["v"]]]],[5,"visit_expr_match","","",null,[[["v"],["exprmatch"]]]],[5,"visit_expr_method_call","","",null,[[["exprmethodcall"],["v"]]]],[5,"visit_expr_paren","","",null,[[["v"],["exprparen"]]]],[5,"visit_expr_path","","",null,[[["exprpath"],["v"]]]],[5,"visit_expr_range","","",null,[[["exprrange"],["v"]]]],[5,"visit_expr_reference","","",null,[[["exprreference"],["v"]]]],[5,"visit_expr_repeat","","",null,[[["exprrepeat"],["v"]]]],[5,"visit_expr_return","","",null,[[["v"],["exprreturn"]]]],[5,"visit_expr_struct","","",null,[[["v"],["exprstruct"]]]],[5,"visit_expr_try","","",null,[[["exprtry"],["v"]]]],[5,"visit_expr_try_block","","",null,[[["v"],["exprtryblock"]]]],[5,"visit_expr_tuple","","",null,[[["v"],["exprtuple"]]]],[5,"visit_expr_type","","",null,[[["v"],["exprtype"]]]],[5,"visit_expr_unary","","",null,[[["v"],["exprunary"]]]],[5,"visit_expr_unsafe","","",null,[[["v"],["exprunsafe"]]]],[5,"visit_expr_verbatim","","",null,[[["v"],["exprverbatim"]]]],[5,"visit_expr_while","","",null,[[["v"],["exprwhile"]]]],[5,"visit_expr_yield","","",null,[[["expryield"],["v"]]]],[5,"visit_field","","",null,[[["v"],["field"]]]],[5,"visit_field_pat","","",null,[[["v"],["fieldpat"]]]],[5,"visit_field_value","","",null,[[["fieldvalue"],["v"]]]],[5,"visit_fields","","",null,[[["fields"],["v"]]]],[5,"visit_fields_named","","",null,[[["fieldsnamed"],["v"]]]],[5,"visit_fields_unnamed","","",null,[[["v"],["fieldsunnamed"]]]],[5,"visit_file","","",null,[[["v"],["file"]]]],[5,"visit_fn_arg","","",null,[[["v"],["fnarg"]]]],[5,"visit_fn_decl","","",null,[[["v"],["fndecl"]]]],[5,"visit_foreign_item","","",null,[[["v"],["foreignitem"]]]],[5,"visit_foreign_item_fn","","",null,[[["foreignitemfn"],["v"]]]],[5,"visit_foreign_item_macro","","",null,[[["v"],["foreignitemmacro"]]]],[5,"visit_foreign_item_static","","",null,[[["foreignitemstatic"],["v"]]]],[5,"visit_foreign_item_type","","",null,[[["foreignitemtype"],["v"]]]],[5,"visit_foreign_item_verbatim","","",null,[[["foreignitemverbatim"],["v"]]]],[5,"visit_generic_argument","","",null,[[["v"],["genericargument"]]]],[5,"visit_generic_method_argument","","",null,[[["v"],["genericmethodargument"]]]],[5,"visit_generic_param","","",null,[[["v"],["genericparam"]]]],[5,"visit_generics","","",null,[[["generics"],["v"]]]],[5,"visit_impl_item","","",null,[[["v"],["implitem"]]]],[5,"visit_impl_item_const","","",null,[[["v"],["implitemconst"]]]],[5,"visit_impl_item_existential","","",null,[[["implitemexistential"],["v"]]]],[5,"visit_impl_item_macro","","",null,[[["implitemmacro"],["v"]]]],[5,"visit_impl_item_method","","",null,[[["implitemmethod"],["v"]]]],[5,"visit_impl_item_type","","",null,[[["v"],["implitemtype"]]]],[5,"visit_impl_item_verbatim","","",null,[[["v"],["implitemverbatim"]]]],[5,"visit_index","","",null,[[["v"],["index"]]]],[5,"visit_item","","",null,[[["item"],["v"]]]],[5,"visit_item_const","","",null,[[["v"],["itemconst"]]]],[5,"visit_item_enum","","",null,[[["v"],["itemenum"]]]],[5,"visit_item_existential","","",null,[[["itemexistential"],["v"]]]],[5,"visit_item_extern_crate","","",null,[[["v"],["itemexterncrate"]]]],[5,"visit_item_fn","","",null,[[["itemfn"],["v"]]]],[5,"visit_item_foreign_mod","","",null,[[["itemforeignmod"],["v"]]]],[5,"visit_item_impl","","",null,[[["v"],["itemimpl"]]]],[5,"visit_item_macro","","",null,[[["v"],["itemmacro"]]]],[5,"visit_item_macro2","","",null,[[["itemmacro2"],["v"]]]],[5,"visit_item_mod","","",null,[[["v"],["itemmod"]]]],[5,"visit_item_static","","",null,[[["itemstatic"],["v"]]]],[5,"visit_item_struct","","",null,[[["itemstruct"],["v"]]]],[5,"visit_item_trait","","",null,[[["v"],["itemtrait"]]]],[5,"visit_item_trait_alias","","",null,[[["itemtraitalias"],["v"]]]],[5,"visit_item_type","","",null,[[["itemtype"],["v"]]]],[5,"visit_item_union","","",null,[[["itemunion"],["v"]]]],[5,"visit_item_use","","",null,[[["itemuse"],["v"]]]],[5,"visit_item_verbatim","","",null,[[["v"],["itemverbatim"]]]],[5,"visit_label","","",null,[[["label"],["v"]]]],[5,"visit_lifetime","","",null,[[["v"],["lifetime"]]]],[5,"visit_lifetime_def","","",null,[[["lifetimedef"],["v"]]]],[5,"visit_lit","","",null,[[["lit"],["v"]]]],[5,"visit_lit_bool","","",null,[[["litbool"],["v"]]]],[5,"visit_lit_byte","","",null,[[["litbyte"],["v"]]]],[5,"visit_lit_byte_str","","",null,[[["v"],["litbytestr"]]]],[5,"visit_lit_char","","",null,[[["v"],["litchar"]]]],[5,"visit_lit_float","","",null,[[["v"],["litfloat"]]]],[5,"visit_lit_int","","",null,[[["v"],["litint"]]]],[5,"visit_lit_str","","",null,[[["litstr"],["v"]]]],[5,"visit_lit_verbatim","","",null,[[["litverbatim"],["v"]]]],[5,"visit_local","","",null,[[["local"],["v"]]]],[5,"visit_macro","","",null,[[["v"],["macro"]]]],[5,"visit_macro_delimiter","","",null,[[["macrodelimiter"],["v"]]]],[5,"visit_member","","",null,[[["v"],["member"]]]],[5,"visit_meta","","",null,[[["meta"],["v"]]]],[5,"visit_meta_list","","",null,[[["metalist"],["v"]]]],[5,"visit_meta_name_value","","",null,[[["metanamevalue"],["v"]]]],[5,"visit_method_sig","","",null,[[["v"],["methodsig"]]]],[5,"visit_method_turbofish","","",null,[[["methodturbofish"],["v"]]]],[5,"visit_nested_meta","","",null,[[["v"],["nestedmeta"]]]],[5,"visit_parenthesized_generic_arguments","","",null,[[["v"],["parenthesizedgenericarguments"]]]],[5,"visit_pat","","",null,[[["pat"],["v"]]]],[5,"visit_pat_box","","",null,[[["patbox"],["v"]]]],[5,"visit_pat_ident","","",null,[[["v"],["patident"]]]],[5,"visit_pat_lit","","",null,[[["patlit"],["v"]]]],[5,"visit_pat_macro","","",null,[[["patmacro"],["v"]]]],[5,"visit_pat_path","","",null,[[["patpath"],["v"]]]],[5,"visit_pat_range","","",null,[[["patrange"],["v"]]]],[5,"visit_pat_ref","","",null,[[["patref"],["v"]]]],[5,"visit_pat_slice","","",null,[[["v"],["patslice"]]]],[5,"visit_pat_struct","","",null,[[["patstruct"],["v"]]]],[5,"visit_pat_tuple","","",null,[[["pattuple"],["v"]]]],[5,"visit_pat_tuple_struct","","",null,[[["pattuplestruct"],["v"]]]],[5,"visit_pat_verbatim","","",null,[[["patverbatim"],["v"]]]],[5,"visit_pat_wild","","",null,[[["patwild"],["v"]]]],[5,"visit_path","","",null,[[["v"],["path"]]]],[5,"visit_path_arguments","","",null,[[["v"],["patharguments"]]]],[5,"visit_path_segment","","",null,[[["v"],["pathsegment"]]]],[5,"visit_predicate_eq","","",null,[[["predicateeq"],["v"]]]],[5,"visit_predicate_lifetime","","",null,[[["v"],["predicatelifetime"]]]],[5,"visit_predicate_type","","",null,[[["v"],["predicatetype"]]]],[5,"visit_qself","","",null,[[["v"],["qself"]]]],[5,"visit_range_limits","","",null,[[["rangelimits"],["v"]]]],[5,"visit_return_type","","",null,[[["returntype"],["v"]]]],[5,"visit_stmt","","",null,[[["v"],["stmt"]]]],[5,"visit_trait_bound","","",null,[[["v"],["traitbound"]]]],[5,"visit_trait_bound_modifier","","",null,[[["traitboundmodifier"],["v"]]]],[5,"visit_trait_item","","",null,[[["traititem"],["v"]]]],[5,"visit_trait_item_const","","",null,[[["traititemconst"],["v"]]]],[5,"visit_trait_item_macro","","",null,[[["traititemmacro"],["v"]]]],[5,"visit_trait_item_method","","",null,[[["v"],["traititemmethod"]]]],[5,"visit_trait_item_type","","",null,[[["v"],["traititemtype"]]]],[5,"visit_trait_item_verbatim","","",null,[[["traititemverbatim"],["v"]]]],[5,"visit_type","","",null,[[["type"],["v"]]]],[5,"visit_type_array","","",null,[[["v"],["typearray"]]]],[5,"visit_type_bare_fn","","",null,[[["typebarefn"],["v"]]]],[5,"visit_type_group","","",null,[[["typegroup"],["v"]]]],[5,"visit_type_impl_trait","","",null,[[["typeimpltrait"],["v"]]]],[5,"visit_type_infer","","",null,[[["typeinfer"],["v"]]]],[5,"visit_type_macro","","",null,[[["typemacro"],["v"]]]],[5,"visit_type_never","","",null,[[["v"],["typenever"]]]],[5,"visit_type_param","","",null,[[["typeparam"],["v"]]]],[5,"visit_type_param_bound","","",null,[[["typeparambound"],["v"]]]],[5,"visit_type_paren","","",null,[[["typeparen"],["v"]]]],[5,"visit_type_path","","",null,[[["typepath"],["v"]]]],[5,"visit_type_ptr","","",null,[[["typeptr"],["v"]]]],[5,"visit_type_reference","","",null,[[["typereference"],["v"]]]],[5,"visit_type_slice","","",null,[[["v"],["typeslice"]]]],[5,"visit_type_trait_object","","",null,[[["v"],["typetraitobject"]]]],[5,"visit_type_tuple","","",null,[[["typetuple"],["v"]]]],[5,"visit_type_verbatim","","",null,[[["v"],["typeverbatim"]]]],[5,"visit_un_op","","",null,[[["v"],["unop"]]]],[5,"visit_use_glob","","",null,[[["v"],["useglob"]]]],[5,"visit_use_group","","",null,[[["v"],["usegroup"]]]],[5,"visit_use_name","","",null,[[["usename"],["v"]]]],[5,"visit_use_path","","",null,[[["usepath"],["v"]]]],[5,"visit_use_rename","","",null,[[["v"],["userename"]]]],[5,"visit_use_tree","","",null,[[["usetree"],["v"]]]],[5,"visit_variant","","",null,[[["v"],["variant"]]]],[5,"visit_vis_crate","","",null,[[["viscrate"],["v"]]]],[5,"visit_vis_public","","",null,[[["vispublic"],["v"]]]],[5,"visit_vis_restricted","","",null,[[["v"],["visrestricted"]]]],[5,"visit_visibility","","",null,[[["v"],["visibility"]]]],[5,"visit_where_clause","","",null,[[["v"],["whereclause"]]]],[5,"visit_where_predicate","","",null,[[["wherepredicate"],["v"]]]],[5,"visit_span","","",null,[[["v"],["span"]]]],[5,"visit_ident","","",null,[[["v"],["ident"]]]],[8,"Visit","","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[11,"visit_abi","","",308,[[["abi"],["self"]]]],[11,"visit_angle_bracketed_generic_arguments","","",308,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_arg_captured","","",308,[[["self"],["argcaptured"]]]],[11,"visit_arg_self","","",308,[[["self"],["argself"]]]],[11,"visit_arg_self_ref","","",308,[[["argselfref"],["self"]]]],[11,"visit_arm","","",308,[[["arm"],["self"]]]],[11,"visit_attr_style","","",308,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",308,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",308,[[["self"],["barefnarg"]]]],[11,"visit_bare_fn_arg_name","","",308,[[["self"],["barefnargname"]]]],[11,"visit_bin_op","","",308,[[["self"],["binop"]]]],[11,"visit_binding","","",308,[[["self"],["binding"]]]],[11,"visit_block","","",308,[[["block"],["self"]]]],[11,"visit_bound_lifetimes","","",308,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param","","",308,[[["constparam"],["self"]]]],[11,"visit_constraint","","",308,[[["constraint"],["self"]]]],[11,"visit_data","","",308,[[["self"],["data"]]]],[11,"visit_data_enum","","",308,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",308,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",308,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",308,[[["deriveinput"],["self"]]]],[11,"visit_expr","","",308,[[["expr"],["self"]]]],[11,"visit_expr_array","","",308,[[["exprarray"],["self"]]]],[11,"visit_expr_assign","","",308,[[["exprassign"],["self"]]]],[11,"visit_expr_assign_op","","",308,[[["self"],["exprassignop"]]]],[11,"visit_expr_async","","",308,[[["self"],["exprasync"]]]],[11,"visit_expr_binary","","",308,[[["exprbinary"],["self"]]]],[11,"visit_expr_block","","",308,[[["self"],["exprblock"]]]],[11,"visit_expr_box","","",308,[[["exprbox"],["self"]]]],[11,"visit_expr_break","","",308,[[["exprbreak"],["self"]]]],[11,"visit_expr_call","","",308,[[["exprcall"],["self"]]]],[11,"visit_expr_cast","","",308,[[["self"],["exprcast"]]]],[11,"visit_expr_closure","","",308,[[["self"],["exprclosure"]]]],[11,"visit_expr_continue","","",308,[[["self"],["exprcontinue"]]]],[11,"visit_expr_field","","",308,[[["self"],["exprfield"]]]],[11,"visit_expr_for_loop","","",308,[[["self"],["exprforloop"]]]],[11,"visit_expr_group","","",308,[[["self"],["exprgroup"]]]],[11,"visit_expr_if","","",308,[[["self"],["exprif"]]]],[11,"visit_expr_in_place","","",308,[[["self"],["exprinplace"]]]],[11,"visit_expr_index","","",308,[[["self"],["exprindex"]]]],[11,"visit_expr_let","","",308,[[["self"],["exprlet"]]]],[11,"visit_expr_lit","","",308,[[["self"],["exprlit"]]]],[11,"visit_expr_loop","","",308,[[["self"],["exprloop"]]]],[11,"visit_expr_macro","","",308,[[["self"],["exprmacro"]]]],[11,"visit_expr_match","","",308,[[["self"],["exprmatch"]]]],[11,"visit_expr_method_call","","",308,[[["exprmethodcall"],["self"]]]],[11,"visit_expr_paren","","",308,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",308,[[["self"],["exprpath"]]]],[11,"visit_expr_range","","",308,[[["self"],["exprrange"]]]],[11,"visit_expr_reference","","",308,[[["self"],["exprreference"]]]],[11,"visit_expr_repeat","","",308,[[["self"],["exprrepeat"]]]],[11,"visit_expr_return","","",308,[[["self"],["exprreturn"]]]],[11,"visit_expr_struct","","",308,[[["self"],["exprstruct"]]]],[11,"visit_expr_try","","",308,[[["exprtry"],["self"]]]],[11,"visit_expr_try_block","","",308,[[["self"],["exprtryblock"]]]],[11,"visit_expr_tuple","","",308,[[["self"],["exprtuple"]]]],[11,"visit_expr_type","","",308,[[["self"],["exprtype"]]]],[11,"visit_expr_unary","","",308,[[["self"],["exprunary"]]]],[11,"visit_expr_unsafe","","",308,[[["self"],["exprunsafe"]]]],[11,"visit_expr_verbatim","","",308,[[["self"],["exprverbatim"]]]],[11,"visit_expr_while","","",308,[[["self"],["exprwhile"]]]],[11,"visit_expr_yield","","",308,[[["self"],["expryield"]]]],[11,"visit_field","","",308,[[["self"],["field"]]]],[11,"visit_field_pat","","",308,[[["self"],["fieldpat"]]]],[11,"visit_field_value","","",308,[[["self"],["fieldvalue"]]]],[11,"visit_fields","","",308,[[["self"],["fields"]]]],[11,"visit_fields_named","","",308,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",308,[[["self"],["fieldsunnamed"]]]],[11,"visit_file","","",308,[[["self"],["file"]]]],[11,"visit_fn_arg","","",308,[[["self"],["fnarg"]]]],[11,"visit_fn_decl","","",308,[[["self"],["fndecl"]]]],[11,"visit_foreign_item","","",308,[[["self"],["foreignitem"]]]],[11,"visit_foreign_item_fn","","",308,[[["self"],["foreignitemfn"]]]],[11,"visit_foreign_item_macro","","",308,[[["self"],["foreignitemmacro"]]]],[11,"visit_foreign_item_static","","",308,[[["foreignitemstatic"],["self"]]]],[11,"visit_foreign_item_type","","",308,[[["self"],["foreignitemtype"]]]],[11,"visit_foreign_item_verbatim","","",308,[[["self"],["foreignitemverbatim"]]]],[11,"visit_generic_argument","","",308,[[["self"],["genericargument"]]]],[11,"visit_generic_method_argument","","",308,[[["self"],["genericmethodargument"]]]],[11,"visit_generic_param","","",308,[[["self"],["genericparam"]]]],[11,"visit_generics","","",308,[[["self"],["generics"]]]],[11,"visit_impl_item","","",308,[[["self"],["implitem"]]]],[11,"visit_impl_item_const","","",308,[[["self"],["implitemconst"]]]],[11,"visit_impl_item_existential","","",308,[[["self"],["implitemexistential"]]]],[11,"visit_impl_item_macro","","",308,[[["implitemmacro"],["self"]]]],[11,"visit_impl_item_method","","",308,[[["implitemmethod"],["self"]]]],[11,"visit_impl_item_type","","",308,[[["self"],["implitemtype"]]]],[11,"visit_impl_item_verbatim","","",308,[[["self"],["implitemverbatim"]]]],[11,"visit_index","","",308,[[["self"],["index"]]]],[11,"visit_item","","",308,[[["item"],["self"]]]],[11,"visit_item_const","","",308,[[["self"],["itemconst"]]]],[11,"visit_item_enum","","",308,[[["self"],["itemenum"]]]],[11,"visit_item_existential","","",308,[[["self"],["itemexistential"]]]],[11,"visit_item_extern_crate","","",308,[[["self"],["itemexterncrate"]]]],[11,"visit_item_fn","","",308,[[["itemfn"],["self"]]]],[11,"visit_item_foreign_mod","","",308,[[["itemforeignmod"],["self"]]]],[11,"visit_item_impl","","",308,[[["self"],["itemimpl"]]]],[11,"visit_item_macro","","",308,[[["self"],["itemmacro"]]]],[11,"visit_item_macro2","","",308,[[["itemmacro2"],["self"]]]],[11,"visit_item_mod","","",308,[[["self"],["itemmod"]]]],[11,"visit_item_static","","",308,[[["itemstatic"],["self"]]]],[11,"visit_item_struct","","",308,[[["itemstruct"],["self"]]]],[11,"visit_item_trait","","",308,[[["self"],["itemtrait"]]]],[11,"visit_item_trait_alias","","",308,[[["self"],["itemtraitalias"]]]],[11,"visit_item_type","","",308,[[["self"],["itemtype"]]]],[11,"visit_item_union","","",308,[[["self"],["itemunion"]]]],[11,"visit_item_use","","",308,[[["self"],["itemuse"]]]],[11,"visit_item_verbatim","","",308,[[["self"],["itemverbatim"]]]],[11,"visit_label","","",308,[[["self"],["label"]]]],[11,"visit_lifetime","","",308,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",308,[[["lifetimedef"],["self"]]]],[11,"visit_lit","","",308,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",308,[[["litbool"],["self"]]]],[11,"visit_lit_byte","","",308,[[["self"],["litbyte"]]]],[11,"visit_lit_byte_str","","",308,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",308,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",308,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",308,[[["self"],["litint"]]]],[11,"visit_lit_str","","",308,[[["self"],["litstr"]]]],[11,"visit_lit_verbatim","","",308,[[["self"],["litverbatim"]]]],[11,"visit_local","","",308,[[["local"],["self"]]]],[11,"visit_macro","","",308,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",308,[[["macrodelimiter"],["self"]]]],[11,"visit_member","","",308,[[["self"],["member"]]]],[11,"visit_meta","","",308,[[["meta"],["self"]]]],[11,"visit_meta_list","","",308,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",308,[[["metanamevalue"],["self"]]]],[11,"visit_method_sig","","",308,[[["self"],["methodsig"]]]],[11,"visit_method_turbofish","","",308,[[["self"],["methodturbofish"]]]],[11,"visit_nested_meta","","",308,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",308,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_pat","","",308,[[["self"],["pat"]]]],[11,"visit_pat_box","","",308,[[["patbox"],["self"]]]],[11,"visit_pat_ident","","",308,[[["self"],["patident"]]]],[11,"visit_pat_lit","","",308,[[["patlit"],["self"]]]],[11,"visit_pat_macro","","",308,[[["patmacro"],["self"]]]],[11,"visit_pat_path","","",308,[[["patpath"],["self"]]]],[11,"visit_pat_range","","",308,[[["self"],["patrange"]]]],[11,"visit_pat_ref","","",308,[[["self"],["patref"]]]],[11,"visit_pat_slice","","",308,[[["self"],["patslice"]]]],[11,"visit_pat_struct","","",308,[[["patstruct"],["self"]]]],[11,"visit_pat_tuple","","",308,[[["self"],["pattuple"]]]],[11,"visit_pat_tuple_struct","","",308,[[["self"],["pattuplestruct"]]]],[11,"visit_pat_verbatim","","",308,[[["patverbatim"],["self"]]]],[11,"visit_pat_wild","","",308,[[["self"],["patwild"]]]],[11,"visit_path","","",308,[[["self"],["path"]]]],[11,"visit_path_arguments","","",308,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",308,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",308,[[["predicateeq"],["self"]]]],[11,"visit_predicate_lifetime","","",308,[[["self"],["predicatelifetime"]]]],[11,"visit_predicate_type","","",308,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",308,[[["self"],["qself"]]]],[11,"visit_range_limits","","",308,[[["self"],["rangelimits"]]]],[11,"visit_return_type","","",308,[[["self"],["returntype"]]]],[11,"visit_stmt","","",308,[[["self"],["stmt"]]]],[11,"visit_trait_bound","","",308,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier","","",308,[[["traitboundmodifier"],["self"]]]],[11,"visit_trait_item","","",308,[[["traititem"],["self"]]]],[11,"visit_trait_item_const","","",308,[[["traititemconst"],["self"]]]],[11,"visit_trait_item_macro","","",308,[[["self"],["traititemmacro"]]]],[11,"visit_trait_item_method","","",308,[[["self"],["traititemmethod"]]]],[11,"visit_trait_item_type","","",308,[[["self"],["traititemtype"]]]],[11,"visit_trait_item_verbatim","","",308,[[["traititemverbatim"],["self"]]]],[11,"visit_type","","",308,[[["self"],["type"]]]],[11,"visit_type_array","","",308,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",308,[[["typebarefn"],["self"]]]],[11,"visit_type_group","","",308,[[["typegroup"],["self"]]]],[11,"visit_type_impl_trait","","",308,[[["typeimpltrait"],["self"]]]],[11,"visit_type_infer","","",308,[[["typeinfer"],["self"]]]],[11,"visit_type_macro","","",308,[[["typemacro"],["self"]]]],[11,"visit_type_never","","",308,[[["self"],["typenever"]]]],[11,"visit_type_param","","",308,[[["typeparam"],["self"]]]],[11,"visit_type_param_bound","","",308,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",308,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",308,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",308,[[["typeptr"],["self"]]]],[11,"visit_type_reference","","",308,[[["typereference"],["self"]]]],[11,"visit_type_slice","","",308,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",308,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple","","",308,[[["typetuple"],["self"]]]],[11,"visit_type_verbatim","","",308,[[["self"],["typeverbatim"]]]],[11,"visit_un_op","","",308,[[["self"],["unop"]]]],[11,"visit_use_glob","","",308,[[["self"],["useglob"]]]],[11,"visit_use_group","","",308,[[["self"],["usegroup"]]]],[11,"visit_use_name","","",308,[[["usename"],["self"]]]],[11,"visit_use_path","","",308,[[["self"],["usepath"]]]],[11,"visit_use_rename","","",308,[[["self"],["userename"]]]],[11,"visit_use_tree","","",308,[[["usetree"],["self"]]]],[11,"visit_variant","","",308,[[["self"],["variant"]]]],[11,"visit_vis_crate","","",308,[[["viscrate"],["self"]]]],[11,"visit_vis_public","","",308,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",308,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",308,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",308,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",308,[[["self"],["wherepredicate"]]]],[11,"visit_span","","",308,[[["self"],["span"]]]],[11,"visit_ident","","",308,[[["self"],["ident"]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",null,null],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input…",null,null],[3,"Lookahead1","","Support for checking the next token in a stream to decide…",null,null],[3,"ParseBuffer","","Cursor position within a buffered token stream.",null,null],[3,"StepCursor","","Cursor state associated with speculative parsing.",null,null],[0,"discouraged","","Extensions to the parsing API with niche applicability.",null,null],[8,"Speculative","syn::parse::discouraged","Extensions to the `ParseStream` API to support speculative…",null,null],[10,"advance_to","","Advance this parse stream to the position of a forked…",309,[[["self"]]]],[6,"Result","syn::parse","The result of a Syn parser.",null,null],[6,"ParseStream","","Input to a Syn parser function.",null,null],[8,"Peek","","Types that can be parsed by looking at just one token.",null,null],[8,"Parse","","Parsing interface implemented by all types that can be…",null,null],[10,"parse","","",310,[[["parsestream"]],["result"]]],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax…",null,null],[16,"Output","","",311,null],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",311,[[["tokenstream"]],["result"]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree…",311,[[["tokenstream"]],["result"]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",311,[[["str"]],["result"]]],[11,"error","","Triggers an error at the current position of the parse…",312,[[["display"]],["error"]]],[11,"parse","","Parses a syntax tree node of type `T`, advancing the…",313,[[["self"]],[["parse"],["result"]]]],[11,"call","","Calls the given parser function to parse a syntax tree…",313,[[["self"]],["result"]]],[11,"peek","","Looks at the next token in the parse stream to determine…",313,[[["self"],["peek"]],["bool"]]],[11,"peek2","","Looks at the second-next token in the parse stream.",313,[[["self"],["peek"]],["bool"]]],[11,"peek3","","Looks at the third-next token in the parse stream.",313,[[["self"],["peek"]],["bool"]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",313,[[["self"]],[["result",["punctuated"]],["punctuated"]]]],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",313,[[["self"]],["bool"]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this…",313,[[["self"]],["lookahead1"]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either…",313,[[["self"]],["self"]]],[11,"error","","Triggers an error at the current position of the parse…",313,[[["self"],["display"]],["error"]]],[11,"step","","Speculatively parses tokens from this parse stream,…",313,[[["self"],["f"]],["result"]]],[11,"cursor","","Provides low-level access to the token representation…",313,[[["self"]],["cursor"]]],[11,"new","syn","Usually the [`ParseStream::error`] method will be used…",314,[[["span"],["display"]],["self"]]],[11,"new_spanned","","Creates an error with the specified message spanning the…",314,[[["totokens"],["display"]],["self"]]],[11,"span","","The source location of the error.",314,[[["self"]],["span"]]],[11,"to_compile_error","","Render the error as an invocation of [`compile_error!`].",314,[[["self"]],["tokenstream"]]],[6,"AttributeArgs","","Conventional argument type associated with an invocation…",null,null],[6,"Result","","The result of a Syn parser.",null,null],[14,"parenthesized","","Parse a set of parentheses and expose their content to…",null,null],[14,"braced","","Parse a set of curly braces and expose their content to…",null,null],[14,"bracketed","","Parse a set of square brackets and expose their content to…",null,null],[14,"Token","","A type-macro that expands to the name of the Rust type…",null,null],[14,"parse_quote","","Quasi-quotation macro that accepts input like the…",null,null],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a…",null,null],[14,"custom_keyword","","Define a type that supports parsing and printing a given…",null,null],[14,"custom_punctuation","","Define a type that supports parsing and printing a…",null,null],[11,"peek","","",315,[[["cursor"]],["bool"]]],[11,"display","","",315,[[],["str"]]],[11,"span","","",315,[[["self"]],["span"]]],[11,"from","","",315,[[["t"]],["t"]]],[11,"into","","",315,[[],["u"]]],[11,"to_owned","","",315,[[["self"]],["t"]]],[11,"clone_into","","",315,[[["self"],["t"]]]],[11,"to_string","","",315,[[["self"]],["string"]]],[11,"try_from","","",315,[[["u"]],["result"]]],[11,"try_into","","",315,[[],["result"]]],[11,"borrow","","",315,[[["self"]],["t"]]],[11,"borrow_mut","","",315,[[["self"]],["t"]]],[11,"type_id","","",315,[[["self"]],["typeid"]]],[11,"span","","",0,[[["self"]],["span"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"span","","",1,[[["self"]],["span"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"span","","",2,[[["self"]],["span"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"span","","",3,[[["self"]],["span"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"span","","",4,[[["self"]],["span"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"span","","",5,[[["self"]],["span"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"span","","",6,[[["self"]],["span"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"span","","",7,[[["self"]],["span"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"span","","",8,[[["self"]],["span"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"span","","",9,[[["self"]],["span"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"span","","",10,[[["self"]],["span"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"span","","",11,[[["self"]],["span"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"span","","",12,[[["self"]],["span"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"span","","",13,[[["self"]],["span"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"span","","",14,[[["self"]],["span"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"span","","",15,[[["self"]],["span"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"span","","",16,[[["self"]],["span"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"span","","",17,[[["self"]],["span"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"span","","",18,[[["self"]],["span"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"span","","",19,[[["self"]],["span"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"span","","",20,[[["self"]],["span"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"span","","",21,[[["self"]],["span"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"span","","",22,[[["self"]],["span"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"span","","",23,[[["self"]],["span"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"span","","",24,[[["self"]],["span"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"span","","",25,[[["self"]],["span"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"span","","",26,[[["self"]],["span"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"span","","",27,[[["self"]],["span"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"span","","",28,[[["self"]],["span"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"span","","",29,[[["self"]],["span"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"span","","",30,[[["self"]],["span"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"span","","",31,[[["self"]],["span"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"span","","",32,[[["self"]],["span"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"span","","",33,[[["self"]],["span"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"span","","",34,[[["self"]],["span"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"span","","",35,[[["self"]],["span"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"span","","",36,[[["self"]],["span"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"span","","",37,[[["self"]],["span"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"span","","",38,[[["self"]],["span"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"span","","",39,[[["self"]],["span"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"span","","",40,[[["self"]],["span"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"span","","",41,[[["self"]],["span"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"span","","",42,[[["self"]],["span"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"span","","",43,[[["self"]],["span"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"span","","",44,[[["self"]],["span"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"span","","",45,[[["self"]],["span"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"span","","",46,[[["self"]],["span"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"span","","",47,[[["self"]],["span"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"span","","",48,[[["self"]],["span"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"span","","",49,[[["self"]],["span"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"span","","",50,[[["self"]],["span"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"span","","",51,[[["self"]],["span"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"span","","",52,[[["self"]],["span"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"span","","",53,[[["self"]],["span"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"span","","",54,[[["self"]],["span"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"span","","",55,[[["self"]],["span"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"span","","",56,[[["self"]],["span"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"span","","",57,[[["self"]],["span"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"span","","",58,[[["self"]],["span"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"span","","",59,[[["self"]],["span"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"span","","",60,[[["self"]],["span"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"span","","",61,[[["self"]],["span"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"span","","",62,[[["self"]],["span"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"span","","",63,[[["self"]],["span"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"span","","",64,[[["self"]],["span"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"span","","",65,[[["self"]],["span"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"span","","",66,[[["self"]],["span"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"span","","",67,[[["self"]],["span"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"span","","",68,[[["self"]],["span"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"span","","",69,[[["self"]],["span"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"span","","",70,[[["self"]],["span"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"span","","",71,[[["self"]],["span"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"span","","",72,[[["self"]],["span"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"span","","",73,[[["self"]],["span"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"span","","",74,[[["self"]],["span"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"span","","",75,[[["self"]],["span"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"span","","",76,[[["self"]],["span"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"span","","",77,[[["self"]],["span"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"span","","",78,[[["self"]],["span"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"span","","",79,[[["self"]],["span"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"span","","",80,[[["self"]],["span"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"span","","",316,[[["self"]],["span"]]],[11,"from","","",316,[[["t"]],["t"]]],[11,"into","","",316,[[],["u"]]],[11,"to_owned","","",316,[[["self"]],["t"]]],[11,"clone_into","","",316,[[["self"],["t"]]]],[11,"try_from","","",316,[[["u"]],["result"]]],[11,"try_into","","",316,[[],["result"]]],[11,"borrow","","",316,[[["self"]],["t"]]],[11,"borrow_mut","","",316,[[["self"]],["t"]]],[11,"type_id","","",316,[[["self"]],["typeid"]]],[11,"span","","",317,[[["self"]],["span"]]],[11,"from","","",317,[[["t"]],["t"]]],[11,"into","","",317,[[],["u"]]],[11,"to_owned","","",317,[[["self"]],["t"]]],[11,"clone_into","","",317,[[["self"],["t"]]]],[11,"try_from","","",317,[[["u"]],["result"]]],[11,"try_into","","",317,[[],["result"]]],[11,"borrow","","",317,[[["self"]],["t"]]],[11,"borrow_mut","","",317,[[["self"]],["t"]]],[11,"type_id","","",317,[[["self"]],["typeid"]]],[11,"span","","",295,[[["self"]],["span"]]],[11,"from","","",295,[[["t"]],["t"]]],[11,"into","","",295,[[],["u"]]],[11,"to_owned","","",295,[[["self"]],["t"]]],[11,"clone_into","","",295,[[["self"],["t"]]]],[11,"try_from","","",295,[[["u"]],["result"]]],[11,"try_into","","",295,[[],["result"]]],[11,"borrow","","",295,[[["self"]],["t"]]],[11,"borrow_mut","","",295,[[["self"]],["t"]]],[11,"type_id","","",295,[[["self"]],["typeid"]]],[11,"span","","",81,[[["self"]],["span"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"span","","",82,[[["self"]],["span"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"span","","",83,[[["self"]],["span"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"span","","",85,[[["self"]],["span"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"span","","",86,[[["self"]],["span"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"span","","",87,[[["self"]],["span"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"span","","",88,[[["self"]],["span"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,[[["self"],["t"]]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"span","","",89,[[["self"]],["span"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"span","","",90,[[["self"]],["span"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"span","","",91,[[["self"]],["span"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,[[["self"],["t"]]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"span","","",92,[[["self"]],["span"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,[[["self"],["t"]]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"span","","",93,[[["self"]],["span"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,[[["self"],["t"]]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"span","","",94,[[["self"]],["span"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,[[["self"],["t"]]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"span","","",95,[[["self"]],["span"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,[[["self"],["t"]]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"span","","",96,[[["self"]],["span"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"span","","",97,[[["self"]],["span"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"span","","",98,[[["self"]],["span"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"span","","",99,[[["self"]],["span"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"span","","",100,[[["self"]],["span"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,[[["self"],["t"]]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"span","","",101,[[["self"]],["span"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,[[["self"],["t"]]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"span","","",102,[[["self"]],["span"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,[[["self"],["t"]]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"span","","",103,[[["self"]],["span"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,[[["self"],["t"]]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"span","","",104,[[["self"]],["span"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,[[["self"],["t"]]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"span","","",105,[[["self"]],["span"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,[[["self"],["t"]]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"span","","",106,[[["self"]],["span"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,[[["self"],["t"]]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"span","","",107,[[["self"]],["span"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,[[["self"],["t"]]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"span","","",108,[[["self"]],["span"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,[[["self"],["t"]]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"span","","",109,[[["self"]],["span"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,[[["self"],["t"]]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"span","","",110,[[["self"]],["span"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,[[["self"],["t"]]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"span","","",111,[[["self"]],["span"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,[[["self"],["t"]]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"span","","",112,[[["self"]],["span"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,[[["self"],["t"]]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"span","","",113,[[["self"]],["span"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,[[["self"],["t"]]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"span","","",114,[[["self"]],["span"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,[[["self"],["t"]]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"span","","",115,[[["self"]],["span"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,[[["self"],["t"]]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"span","","",116,[[["self"]],["span"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,[[["self"],["t"]]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"span","","",117,[[["self"]],["span"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,[[["self"],["t"]]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"span","","",118,[[["self"]],["span"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,[[["self"],["t"]]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"span","","",119,[[["self"]],["span"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,[[["self"],["t"]]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"span","","",120,[[["self"]],["span"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,[[["self"],["t"]]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"span","","",121,[[["self"]],["span"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,[[["self"],["t"]]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"span","","",122,[[["self"]],["span"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,[[["self"],["t"]]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"span","","",123,[[["self"]],["span"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,[[["self"],["t"]]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"span","","",124,[[["self"]],["span"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,[[["self"],["t"]]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"span","","",125,[[["self"]],["span"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,[[["self"],["t"]]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"peek","","",126,[[["cursor"]],["bool"]]],[11,"display","","",126,[[],["str"]]],[11,"span","","",126,[[["self"]],["span"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,[[["self"],["t"]]]],[11,"to_string","","",126,[[["self"]],["string"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"peek","","",127,[[["cursor"]],["bool"]]],[11,"display","","",127,[[],["str"]]],[11,"span","","",127,[[["self"]],["span"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,[[["self"],["t"]]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"peek","","",298,[[["cursor"]],["bool"]]],[11,"display","","",298,[[],["str"]]],[11,"span","","",298,[[["self"]],["span"]]],[11,"from","","",298,[[["t"]],["t"]]],[11,"into","","",298,[[],["u"]]],[11,"to_owned","","",298,[[["self"]],["t"]]],[11,"clone_into","","",298,[[["self"],["t"]]]],[11,"try_from","","",298,[[["u"]],["result"]]],[11,"try_into","","",298,[[],["result"]]],[11,"borrow","","",298,[[["self"]],["t"]]],[11,"borrow_mut","","",298,[[["self"]],["t"]]],[11,"type_id","","",298,[[["self"]],["typeid"]]],[11,"peek","","",297,[[["cursor"]],["bool"]]],[11,"display","","",297,[[],["str"]]],[11,"span","","",297,[[["self"]],["span"]]],[11,"from","","",297,[[["t"]],["t"]]],[11,"into","","",297,[[],["u"]]],[11,"to_owned","","",297,[[["self"]],["t"]]],[11,"clone_into","","",297,[[["self"],["t"]]]],[11,"try_from","","",297,[[["u"]],["result"]]],[11,"try_into","","",297,[[],["result"]]],[11,"borrow","","",297,[[["self"]],["t"]]],[11,"borrow_mut","","",297,[[["self"]],["t"]]],[11,"type_id","","",297,[[["self"]],["typeid"]]],[11,"peek","","",299,[[["cursor"]],["bool"]]],[11,"display","","",299,[[],["str"]]],[11,"span","","",299,[[["self"]],["span"]]],[11,"from","","",299,[[["t"]],["t"]]],[11,"into","","",299,[[],["u"]]],[11,"to_owned","","",299,[[["self"]],["t"]]],[11,"clone_into","","",299,[[["self"],["t"]]]],[11,"try_from","","",299,[[["u"]],["result"]]],[11,"try_into","","",299,[[],["result"]]],[11,"borrow","","",299,[[["self"]],["t"]]],[11,"borrow_mut","","",299,[[["self"]],["t"]]],[11,"type_id","","",299,[[["self"]],["typeid"]]],[11,"peek","","",301,[[["cursor"]],["bool"]]],[11,"display","","",301,[[],["str"]]],[11,"span","","",301,[[["self"]],["span"]]],[11,"from","","",301,[[["t"]],["t"]]],[11,"into","","",301,[[],["u"]]],[11,"to_owned","","",301,[[["self"]],["t"]]],[11,"clone_into","","",301,[[["self"],["t"]]]],[11,"try_from","","",301,[[["u"]],["result"]]],[11,"try_into","","",301,[[],["result"]]],[11,"borrow","","",301,[[["self"]],["t"]]],[11,"borrow_mut","","",301,[[["self"]],["t"]]],[11,"type_id","","",301,[[["self"]],["typeid"]]],[11,"peek","","",300,[[["cursor"]],["bool"]]],[11,"display","","",300,[[],["str"]]],[11,"span","","",300,[[["self"]],["span"]]],[11,"from","","",300,[[["t"]],["t"]]],[11,"into","","",300,[[],["u"]]],[11,"to_owned","","",300,[[["self"]],["t"]]],[11,"clone_into","","",300,[[["self"],["t"]]]],[11,"try_from","","",300,[[["u"]],["result"]]],[11,"try_into","","",300,[[],["result"]]],[11,"borrow","","",300,[[["self"]],["t"]]],[11,"borrow_mut","","",300,[[["self"]],["t"]]],[11,"type_id","","",300,[[["self"]],["typeid"]]],[11,"peek","","",296,[[["cursor"]],["bool"]]],[11,"display","","",296,[[],["str"]]],[11,"span","","",296,[[["self"]],["span"]]],[11,"from","","",296,[[["t"]],["t"]]],[11,"into","","",296,[[],["u"]]],[11,"to_owned","","",296,[[["self"]],["t"]]],[11,"clone_into","","",296,[[["self"],["t"]]]],[11,"try_from","","",296,[[["u"]],["result"]]],[11,"try_into","","",296,[[],["result"]]],[11,"borrow","","",296,[[["self"]],["t"]]],[11,"borrow_mut","","",296,[[["self"]],["t"]]],[11,"type_id","","",296,[[["self"]],["typeid"]]],[11,"span","","",128,[[["self"]],["span"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,[[["self"],["t"]]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"span","","",129,[[["self"]],["span"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,[[["self"],["t"]]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,[[["self"],["t"]]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,[[["self"],["t"]]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,[[["self"],["t"]]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"span","","",133,[[["self"]],["span"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,[[["self"],["t"]]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"span","","",134,[[["self"]],["span"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,[[["self"],["t"]]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"span","","",135,[[["self"]],["span"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,[[["self"],["t"]]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"span","","",136,[[["self"]],["span"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,[[["self"],["t"]]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"span","","",137,[[["self"]],["span"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,[[["self"],["t"]]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"span","","",138,[[["self"]],["span"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,[[["self"],["t"]]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"span","","",139,[[["self"]],["span"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,[[["self"],["t"]]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"span","","",140,[[["self"]],["span"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,[[["self"],["t"]]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"span","","",141,[[["self"]],["span"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,[[["self"],["t"]]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"span","","",142,[[["self"]],["span"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,[[["self"],["t"]]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"span","","",143,[[["self"]],["span"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,[[["self"],["t"]]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"span","","",144,[[["self"]],["span"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,[[["self"],["t"]]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"span","","",145,[[["self"]],["span"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,[[["self"],["t"]]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"span","","",146,[[["self"]],["span"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,[[["self"],["t"]]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"span","","",147,[[["self"]],["span"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,[[["self"],["t"]]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"span","","",148,[[["self"]],["span"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[],["u"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,[[["self"],["t"]]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"span","","",149,[[["self"]],["span"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,[[["self"],["t"]]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"span","","",150,[[["self"]],["span"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[],["u"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,[[["self"],["t"]]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"span","","",151,[[["self"]],["span"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,[[["self"],["t"]]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"span","","",152,[[["self"]],["span"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[],["u"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,[[["self"],["t"]]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"span","","",153,[[["self"]],["span"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,[[["self"],["t"]]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"span","","",154,[[["self"]],["span"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[],["u"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,[[["self"],["t"]]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"span","","",155,[[["self"]],["span"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[],["u"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,[[["self"],["t"]]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"span","","",156,[[["self"]],["span"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[],["u"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,[[["self"],["t"]]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[],["u"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,[[["self"],["t"]]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"from","","",314,[[["t"]],["t"]]],[11,"into","","",314,[[],["u"]]],[11,"to_owned","","",314,[[["self"]],["t"]]],[11,"clone_into","","",314,[[["self"],["t"]]]],[11,"to_string","","",314,[[["self"]],["string"]]],[11,"try_from","","",314,[[["u"]],["result"]]],[11,"try_into","","",314,[[],["result"]]],[11,"borrow","","",314,[[["self"]],["t"]]],[11,"borrow_mut","","",314,[[["self"]],["t"]]],[11,"type_id","","",314,[[["self"]],["typeid"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[],["u"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,[[["self"],["t"]]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"span","","",159,[[["self"]],["span"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[],["u"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,[[["self"],["t"]]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"span","","",160,[[["self"]],["span"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,[[["self"],["t"]]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"span","","",161,[[["self"]],["span"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[],["u"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,[[["self"],["t"]]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"span","","",162,[[["self"]],["span"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[],["u"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,[[["self"],["t"]]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"span","","",163,[[["self"]],["span"]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[],["u"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,[[["self"],["t"]]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"try_into","","",163,[[],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"type_id","","",163,[[["self"]],["typeid"]]],[11,"span","","",164,[[["self"]],["span"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[],["u"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,[[["self"],["t"]]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"try_into","","",164,[[],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"type_id","","",164,[[["self"]],["typeid"]]],[11,"span","","",165,[[["self"]],["span"]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[],["u"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,[[["self"],["t"]]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"try_into","","",165,[[],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"type_id","","",165,[[["self"]],["typeid"]]],[11,"span","","",166,[[["self"]],["span"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[],["u"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,[[["self"],["t"]]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[],["u"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,[[["self"],["t"]]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"try_into","","",167,[[],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"type_id","","",167,[[["self"]],["typeid"]]],[11,"span","","",168,[[["self"]],["span"]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[],["u"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,[[["self"],["t"]]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"span","","",169,[[["self"]],["span"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[],["u"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,[[["self"],["t"]]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"span","","",170,[[["self"]],["span"]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[],["u"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,[[["self"],["t"]]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"span","","",171,[[["self"]],["span"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[],["u"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,[[["self"],["t"]]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"try_into","","",171,[[],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"type_id","","",171,[[["self"]],["typeid"]]],[11,"span","","",172,[[["self"]],["span"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[],["u"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,[[["self"],["t"]]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"try_into","","",172,[[],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"type_id","","",172,[[["self"]],["typeid"]]],[11,"span","","",173,[[["self"]],["span"]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[],["u"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,[[["self"],["t"]]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"span","","",174,[[["self"]],["span"]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[],["u"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,[[["self"],["t"]]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"span","","",175,[[["self"]],["span"]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[],["u"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,[[["self"],["t"]]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"try_into","","",175,[[],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"type_id","","",175,[[["self"]],["typeid"]]],[11,"span","","",176,[[["self"]],["span"]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[],["u"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,[[["self"],["t"]]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"try_into","","",176,[[],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"type_id","","",176,[[["self"]],["typeid"]]],[11,"span","","",177,[[["self"]],["span"]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[],["u"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,[[["self"],["t"]]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"try_into","","",177,[[],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"type_id","","",177,[[["self"]],["typeid"]]],[11,"span","","",178,[[["self"]],["span"]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[],["u"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,[[["self"],["t"]]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"try_into","","",178,[[],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"type_id","","",178,[[["self"]],["typeid"]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[],["u"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,[[["self"],["t"]]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"try_into","","",179,[[],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"type_id","","",179,[[["self"]],["typeid"]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[],["u"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,[[["self"],["t"]]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"try_into","","",180,[[],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"type_id","","",180,[[["self"]],["typeid"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"span","","",181,[[["self"]],["span"]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[],["u"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,[[["self"],["t"]]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"try_into","","",181,[[],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"type_id","","",181,[[["self"]],["typeid"]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[],["u"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,[[["self"],["t"]]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"try_into","","",182,[[],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"type_id","","",182,[[["self"]],["typeid"]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"into","","",183,[[],["u"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,[[["self"],["t"]]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"try_into","","",183,[[],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"type_id","","",183,[[["self"]],["typeid"]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[],["u"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,[[["self"],["t"]]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"try_into","","",184,[[],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"type_id","","",184,[[["self"]],["typeid"]]],[11,"span","","",185,[[["self"]],["span"]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"into","","",185,[[],["u"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,[[["self"],["t"]]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"try_into","","",185,[[],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"type_id","","",185,[[["self"]],["typeid"]]],[11,"span","","",186,[[["self"]],["span"]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"into","","",186,[[],["u"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,[[["self"],["t"]]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"try_into","","",186,[[],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"type_id","","",186,[[["self"]],["typeid"]]],[11,"span","","",187,[[["self"]],["span"]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[],["u"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,[[["self"],["t"]]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"try_into","","",187,[[],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"type_id","","",187,[[["self"]],["typeid"]]],[11,"span","","",188,[[["self"]],["span"]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"into","","",188,[[],["u"]]],[11,"to_owned","","",188,[[["self"]],["t"]]],[11,"clone_into","","",188,[[["self"],["t"]]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"try_into","","",188,[[],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"type_id","","",188,[[["self"]],["typeid"]]],[11,"span","","",189,[[["self"]],["span"]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"into","","",189,[[],["u"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,[[["self"],["t"]]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"try_into","","",189,[[],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"type_id","","",189,[[["self"]],["typeid"]]],[11,"span","","",190,[[["self"]],["span"]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"into","","",190,[[],["u"]]],[11,"to_owned","","",190,[[["self"]],["t"]]],[11,"clone_into","","",190,[[["self"],["t"]]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"try_into","","",190,[[],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"type_id","","",190,[[["self"]],["typeid"]]],[11,"span","","",191,[[["self"]],["span"]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"into","","",191,[[],["u"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,[[["self"],["t"]]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"try_into","","",191,[[],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"type_id","","",191,[[["self"]],["typeid"]]],[11,"peek","syn::token","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"span","","",192,[[["self"]],["span"]]],[11,"from","","",192,[[["t"]],["t"]]],[11,"into","","",192,[[],["u"]]],[11,"to_owned","","",192,[[["self"]],["t"]]],[11,"clone_into","","",192,[[["self"],["t"]]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"try_into","","",192,[[],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"type_id","","",192,[[["self"]],["typeid"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"span","","",193,[[["self"]],["span"]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"into","","",193,[[],["u"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,[[["self"],["t"]]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"try_into","","",193,[[],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"type_id","","",193,[[["self"]],["typeid"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"span","","",194,[[["self"]],["span"]]],[11,"from","","",194,[[["t"]],["t"]]],[11,"into","","",194,[[],["u"]]],[11,"to_owned","","",194,[[["self"]],["t"]]],[11,"clone_into","","",194,[[["self"],["t"]]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"try_into","","",194,[[],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"type_id","","",194,[[["self"]],["typeid"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"span","","",195,[[["self"]],["span"]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[],["u"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,[[["self"],["t"]]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"try_into","","",195,[[],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"type_id","","",195,[[["self"]],["typeid"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"span","","",196,[[["self"]],["span"]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"into","","",196,[[],["u"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,[[["self"],["t"]]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"try_into","","",196,[[],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"type_id","","",196,[[["self"]],["typeid"]]],[11,"peek","","",197,[[["cursor"]],["bool"]]],[11,"display","","",197,[[],["str"]]],[11,"span","","",197,[[["self"]],["span"]]],[11,"from","","",197,[[["t"]],["t"]]],[11,"into","","",197,[[],["u"]]],[11,"to_owned","","",197,[[["self"]],["t"]]],[11,"clone_into","","",197,[[["self"],["t"]]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"try_into","","",197,[[],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"type_id","","",197,[[["self"]],["typeid"]]],[11,"peek","","",198,[[["cursor"]],["bool"]]],[11,"display","","",198,[[],["str"]]],[11,"span","","",198,[[["self"]],["span"]]],[11,"from","","",198,[[["t"]],["t"]]],[11,"into","","",198,[[],["u"]]],[11,"to_owned","","",198,[[["self"]],["t"]]],[11,"clone_into","","",198,[[["self"],["t"]]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"try_into","","",198,[[],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"type_id","","",198,[[["self"]],["typeid"]]],[11,"peek","","",199,[[["cursor"]],["bool"]]],[11,"display","","",199,[[],["str"]]],[11,"span","","",199,[[["self"]],["span"]]],[11,"from","","",199,[[["t"]],["t"]]],[11,"into","","",199,[[],["u"]]],[11,"to_owned","","",199,[[["self"]],["t"]]],[11,"clone_into","","",199,[[["self"],["t"]]]],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"try_into","","",199,[[],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"type_id","","",199,[[["self"]],["typeid"]]],[11,"peek","","",200,[[["cursor"]],["bool"]]],[11,"display","","",200,[[],["str"]]],[11,"span","","",200,[[["self"]],["span"]]],[11,"from","","",200,[[["t"]],["t"]]],[11,"into","","",200,[[],["u"]]],[11,"to_owned","","",200,[[["self"]],["t"]]],[11,"clone_into","","",200,[[["self"],["t"]]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"try_into","","",200,[[],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"type_id","","",200,[[["self"]],["typeid"]]],[11,"peek","","",201,[[["cursor"]],["bool"]]],[11,"display","","",201,[[],["str"]]],[11,"span","","",201,[[["self"]],["span"]]],[11,"from","","",201,[[["t"]],["t"]]],[11,"into","","",201,[[],["u"]]],[11,"to_owned","","",201,[[["self"]],["t"]]],[11,"clone_into","","",201,[[["self"],["t"]]]],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"try_into","","",201,[[],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"type_id","","",201,[[["self"]],["typeid"]]],[11,"peek","","",202,[[["cursor"]],["bool"]]],[11,"display","","",202,[[],["str"]]],[11,"span","","",202,[[["self"]],["span"]]],[11,"from","","",202,[[["t"]],["t"]]],[11,"into","","",202,[[],["u"]]],[11,"to_owned","","",202,[[["self"]],["t"]]],[11,"clone_into","","",202,[[["self"],["t"]]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"try_into","","",202,[[],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"type_id","","",202,[[["self"]],["typeid"]]],[11,"peek","","",203,[[["cursor"]],["bool"]]],[11,"display","","",203,[[],["str"]]],[11,"span","","",203,[[["self"]],["span"]]],[11,"from","","",203,[[["t"]],["t"]]],[11,"into","","",203,[[],["u"]]],[11,"to_owned","","",203,[[["self"]],["t"]]],[11,"clone_into","","",203,[[["self"],["t"]]]],[11,"try_from","","",203,[[["u"]],["result"]]],[11,"try_into","","",203,[[],["result"]]],[11,"borrow","","",203,[[["self"]],["t"]]],[11,"borrow_mut","","",203,[[["self"]],["t"]]],[11,"type_id","","",203,[[["self"]],["typeid"]]],[11,"peek","","",204,[[["cursor"]],["bool"]]],[11,"display","","",204,[[],["str"]]],[11,"span","","",204,[[["self"]],["span"]]],[11,"from","","",204,[[["t"]],["t"]]],[11,"into","","",204,[[],["u"]]],[11,"to_owned","","",204,[[["self"]],["t"]]],[11,"clone_into","","",204,[[["self"],["t"]]]],[11,"try_from","","",204,[[["u"]],["result"]]],[11,"try_into","","",204,[[],["result"]]],[11,"borrow","","",204,[[["self"]],["t"]]],[11,"borrow_mut","","",204,[[["self"]],["t"]]],[11,"type_id","","",204,[[["self"]],["typeid"]]],[11,"peek","","",205,[[["cursor"]],["bool"]]],[11,"display","","",205,[[],["str"]]],[11,"span","","",205,[[["self"]],["span"]]],[11,"from","","",205,[[["t"]],["t"]]],[11,"into","","",205,[[],["u"]]],[11,"to_owned","","",205,[[["self"]],["t"]]],[11,"clone_into","","",205,[[["self"],["t"]]]],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"try_into","","",205,[[],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"type_id","","",205,[[["self"]],["typeid"]]],[11,"peek","","",206,[[["cursor"]],["bool"]]],[11,"display","","",206,[[],["str"]]],[11,"span","","",206,[[["self"]],["span"]]],[11,"from","","",206,[[["t"]],["t"]]],[11,"into","","",206,[[],["u"]]],[11,"to_owned","","",206,[[["self"]],["t"]]],[11,"clone_into","","",206,[[["self"],["t"]]]],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"try_into","","",206,[[],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"type_id","","",206,[[["self"]],["typeid"]]],[11,"peek","","",207,[[["cursor"]],["bool"]]],[11,"display","","",207,[[],["str"]]],[11,"span","","",207,[[["self"]],["span"]]],[11,"from","","",207,[[["t"]],["t"]]],[11,"into","","",207,[[],["u"]]],[11,"to_owned","","",207,[[["self"]],["t"]]],[11,"clone_into","","",207,[[["self"],["t"]]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"try_into","","",207,[[],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"type_id","","",207,[[["self"]],["typeid"]]],[11,"peek","","",208,[[["cursor"]],["bool"]]],[11,"display","","",208,[[],["str"]]],[11,"span","","",208,[[["self"]],["span"]]],[11,"from","","",208,[[["t"]],["t"]]],[11,"into","","",208,[[],["u"]]],[11,"to_owned","","",208,[[["self"]],["t"]]],[11,"clone_into","","",208,[[["self"],["t"]]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"try_into","","",208,[[],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"type_id","","",208,[[["self"]],["typeid"]]],[11,"peek","","",209,[[["cursor"]],["bool"]]],[11,"display","","",209,[[],["str"]]],[11,"span","","",209,[[["self"]],["span"]]],[11,"from","","",209,[[["t"]],["t"]]],[11,"into","","",209,[[],["u"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,[[["self"],["t"]]]],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"try_into","","",209,[[],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"type_id","","",209,[[["self"]],["typeid"]]],[11,"peek","","",210,[[["cursor"]],["bool"]]],[11,"display","","",210,[[],["str"]]],[11,"span","","",210,[[["self"]],["span"]]],[11,"from","","",210,[[["t"]],["t"]]],[11,"into","","",210,[[],["u"]]],[11,"to_owned","","",210,[[["self"]],["t"]]],[11,"clone_into","","",210,[[["self"],["t"]]]],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"try_into","","",210,[[],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"type_id","","",210,[[["self"]],["typeid"]]],[11,"peek","","",211,[[["cursor"]],["bool"]]],[11,"display","","",211,[[],["str"]]],[11,"span","","",211,[[["self"]],["span"]]],[11,"from","","",211,[[["t"]],["t"]]],[11,"into","","",211,[[],["u"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,[[["self"],["t"]]]],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"try_into","","",211,[[],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"type_id","","",211,[[["self"]],["typeid"]]],[11,"peek","","",212,[[["cursor"]],["bool"]]],[11,"display","","",212,[[],["str"]]],[11,"span","","",212,[[["self"]],["span"]]],[11,"from","","",212,[[["t"]],["t"]]],[11,"into","","",212,[[],["u"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,[[["self"],["t"]]]],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"try_into","","",212,[[],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"type_id","","",212,[[["self"]],["typeid"]]],[11,"peek","","",213,[[["cursor"]],["bool"]]],[11,"display","","",213,[[],["str"]]],[11,"span","","",213,[[["self"]],["span"]]],[11,"from","","",213,[[["t"]],["t"]]],[11,"into","","",213,[[],["u"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,[[["self"],["t"]]]],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"try_into","","",213,[[],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"type_id","","",213,[[["self"]],["typeid"]]],[11,"peek","","",214,[[["cursor"]],["bool"]]],[11,"display","","",214,[[],["str"]]],[11,"span","","",214,[[["self"]],["span"]]],[11,"from","","",214,[[["t"]],["t"]]],[11,"into","","",214,[[],["u"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,[[["self"],["t"]]]],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"try_into","","",214,[[],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"type_id","","",214,[[["self"]],["typeid"]]],[11,"peek","","",215,[[["cursor"]],["bool"]]],[11,"display","","",215,[[],["str"]]],[11,"span","","",215,[[["self"]],["span"]]],[11,"from","","",215,[[["t"]],["t"]]],[11,"into","","",215,[[],["u"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,[[["self"],["t"]]]],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"try_into","","",215,[[],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"type_id","","",215,[[["self"]],["typeid"]]],[11,"peek","","",216,[[["cursor"]],["bool"]]],[11,"display","","",216,[[],["str"]]],[11,"span","","",216,[[["self"]],["span"]]],[11,"from","","",216,[[["t"]],["t"]]],[11,"into","","",216,[[],["u"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,[[["self"],["t"]]]],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"try_into","","",216,[[],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"type_id","","",216,[[["self"]],["typeid"]]],[11,"peek","","",217,[[["cursor"]],["bool"]]],[11,"display","","",217,[[],["str"]]],[11,"span","","",217,[[["self"]],["span"]]],[11,"from","","",217,[[["t"]],["t"]]],[11,"into","","",217,[[],["u"]]],[11,"to_owned","","",217,[[["self"]],["t"]]],[11,"clone_into","","",217,[[["self"],["t"]]]],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"try_into","","",217,[[],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"type_id","","",217,[[["self"]],["typeid"]]],[11,"peek","","",218,[[["cursor"]],["bool"]]],[11,"display","","",218,[[],["str"]]],[11,"span","","",218,[[["self"]],["span"]]],[11,"from","","",218,[[["t"]],["t"]]],[11,"into","","",218,[[],["u"]]],[11,"to_owned","","",218,[[["self"]],["t"]]],[11,"clone_into","","",218,[[["self"],["t"]]]],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"try_into","","",218,[[],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"type_id","","",218,[[["self"]],["typeid"]]],[11,"peek","","",219,[[["cursor"]],["bool"]]],[11,"display","","",219,[[],["str"]]],[11,"span","","",219,[[["self"]],["span"]]],[11,"from","","",219,[[["t"]],["t"]]],[11,"into","","",219,[[],["u"]]],[11,"to_owned","","",219,[[["self"]],["t"]]],[11,"clone_into","","",219,[[["self"],["t"]]]],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"try_into","","",219,[[],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"type_id","","",219,[[["self"]],["typeid"]]],[11,"peek","","",220,[[["cursor"]],["bool"]]],[11,"display","","",220,[[],["str"]]],[11,"span","","",220,[[["self"]],["span"]]],[11,"from","","",220,[[["t"]],["t"]]],[11,"into","","",220,[[],["u"]]],[11,"to_owned","","",220,[[["self"]],["t"]]],[11,"clone_into","","",220,[[["self"],["t"]]]],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"try_into","","",220,[[],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"type_id","","",220,[[["self"]],["typeid"]]],[11,"peek","","",221,[[["cursor"]],["bool"]]],[11,"display","","",221,[[],["str"]]],[11,"span","","",221,[[["self"]],["span"]]],[11,"from","","",221,[[["t"]],["t"]]],[11,"into","","",221,[[],["u"]]],[11,"to_owned","","",221,[[["self"]],["t"]]],[11,"clone_into","","",221,[[["self"],["t"]]]],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"try_into","","",221,[[],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"type_id","","",221,[[["self"]],["typeid"]]],[11,"peek","","",222,[[["cursor"]],["bool"]]],[11,"display","","",222,[[],["str"]]],[11,"span","","",222,[[["self"]],["span"]]],[11,"from","","",222,[[["t"]],["t"]]],[11,"into","","",222,[[],["u"]]],[11,"to_owned","","",222,[[["self"]],["t"]]],[11,"clone_into","","",222,[[["self"],["t"]]]],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"try_into","","",222,[[],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"type_id","","",222,[[["self"]],["typeid"]]],[11,"peek","","",223,[[["cursor"]],["bool"]]],[11,"display","","",223,[[],["str"]]],[11,"span","","",223,[[["self"]],["span"]]],[11,"from","","",223,[[["t"]],["t"]]],[11,"into","","",223,[[],["u"]]],[11,"to_owned","","",223,[[["self"]],["t"]]],[11,"clone_into","","",223,[[["self"],["t"]]]],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"try_into","","",223,[[],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"type_id","","",223,[[["self"]],["typeid"]]],[11,"peek","","",224,[[["cursor"]],["bool"]]],[11,"display","","",224,[[],["str"]]],[11,"span","","",224,[[["self"]],["span"]]],[11,"from","","",224,[[["t"]],["t"]]],[11,"into","","",224,[[],["u"]]],[11,"to_owned","","",224,[[["self"]],["t"]]],[11,"clone_into","","",224,[[["self"],["t"]]]],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"try_into","","",224,[[],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"type_id","","",224,[[["self"]],["typeid"]]],[11,"peek","","",225,[[["cursor"]],["bool"]]],[11,"display","","",225,[[],["str"]]],[11,"span","","",225,[[["self"]],["span"]]],[11,"from","","",225,[[["t"]],["t"]]],[11,"into","","",225,[[],["u"]]],[11,"to_owned","","",225,[[["self"]],["t"]]],[11,"clone_into","","",225,[[["self"],["t"]]]],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"try_into","","",225,[[],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"type_id","","",225,[[["self"]],["typeid"]]],[11,"peek","","",226,[[["cursor"]],["bool"]]],[11,"display","","",226,[[],["str"]]],[11,"span","","",226,[[["self"]],["span"]]],[11,"from","","",226,[[["t"]],["t"]]],[11,"into","","",226,[[],["u"]]],[11,"to_owned","","",226,[[["self"]],["t"]]],[11,"clone_into","","",226,[[["self"],["t"]]]],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"try_into","","",226,[[],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"type_id","","",226,[[["self"]],["typeid"]]],[11,"peek","","",227,[[["cursor"]],["bool"]]],[11,"display","","",227,[[],["str"]]],[11,"span","","",227,[[["self"]],["span"]]],[11,"from","","",227,[[["t"]],["t"]]],[11,"into","","",227,[[],["u"]]],[11,"to_owned","","",227,[[["self"]],["t"]]],[11,"clone_into","","",227,[[["self"],["t"]]]],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"try_into","","",227,[[],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"type_id","","",227,[[["self"]],["typeid"]]],[11,"peek","","",228,[[["cursor"]],["bool"]]],[11,"display","","",228,[[],["str"]]],[11,"span","","",228,[[["self"]],["span"]]],[11,"from","","",228,[[["t"]],["t"]]],[11,"into","","",228,[[],["u"]]],[11,"to_owned","","",228,[[["self"]],["t"]]],[11,"clone_into","","",228,[[["self"],["t"]]]],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"try_into","","",228,[[],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"type_id","","",228,[[["self"]],["typeid"]]],[11,"peek","","",229,[[["cursor"]],["bool"]]],[11,"display","","",229,[[],["str"]]],[11,"span","","",229,[[["self"]],["span"]]],[11,"from","","",229,[[["t"]],["t"]]],[11,"into","","",229,[[],["u"]]],[11,"to_owned","","",229,[[["self"]],["t"]]],[11,"clone_into","","",229,[[["self"],["t"]]]],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"try_into","","",229,[[],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"type_id","","",229,[[["self"]],["typeid"]]],[11,"peek","","",230,[[["cursor"]],["bool"]]],[11,"display","","",230,[[],["str"]]],[11,"span","","",230,[[["self"]],["span"]]],[11,"from","","",230,[[["t"]],["t"]]],[11,"into","","",230,[[],["u"]]],[11,"to_owned","","",230,[[["self"]],["t"]]],[11,"clone_into","","",230,[[["self"],["t"]]]],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"try_into","","",230,[[],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"type_id","","",230,[[["self"]],["typeid"]]],[11,"peek","","",231,[[["cursor"]],["bool"]]],[11,"display","","",231,[[],["str"]]],[11,"span","","",231,[[["self"]],["span"]]],[11,"from","","",231,[[["t"]],["t"]]],[11,"into","","",231,[[],["u"]]],[11,"to_owned","","",231,[[["self"]],["t"]]],[11,"clone_into","","",231,[[["self"],["t"]]]],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"try_into","","",231,[[],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"type_id","","",231,[[["self"]],["typeid"]]],[11,"peek","","",232,[[["cursor"]],["bool"]]],[11,"display","","",232,[[],["str"]]],[11,"span","","",232,[[["self"]],["span"]]],[11,"from","","",232,[[["t"]],["t"]]],[11,"into","","",232,[[],["u"]]],[11,"to_owned","","",232,[[["self"]],["t"]]],[11,"clone_into","","",232,[[["self"],["t"]]]],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"try_into","","",232,[[],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"type_id","","",232,[[["self"]],["typeid"]]],[11,"peek","","",233,[[["cursor"]],["bool"]]],[11,"display","","",233,[[],["str"]]],[11,"span","","",233,[[["self"]],["span"]]],[11,"from","","",233,[[["t"]],["t"]]],[11,"into","","",233,[[],["u"]]],[11,"to_owned","","",233,[[["self"]],["t"]]],[11,"clone_into","","",233,[[["self"],["t"]]]],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"try_into","","",233,[[],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"type_id","","",233,[[["self"]],["typeid"]]],[11,"peek","","",234,[[["cursor"]],["bool"]]],[11,"display","","",234,[[],["str"]]],[11,"span","","",234,[[["self"]],["span"]]],[11,"from","","",234,[[["t"]],["t"]]],[11,"into","","",234,[[],["u"]]],[11,"to_owned","","",234,[[["self"]],["t"]]],[11,"clone_into","","",234,[[["self"],["t"]]]],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"try_into","","",234,[[],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"type_id","","",234,[[["self"]],["typeid"]]],[11,"peek","","",235,[[["cursor"]],["bool"]]],[11,"display","","",235,[[],["str"]]],[11,"span","","",235,[[["self"]],["span"]]],[11,"from","","",235,[[["t"]],["t"]]],[11,"into","","",235,[[],["u"]]],[11,"to_owned","","",235,[[["self"]],["t"]]],[11,"clone_into","","",235,[[["self"],["t"]]]],[11,"try_from","","",235,[[["u"]],["result"]]],[11,"try_into","","",235,[[],["result"]]],[11,"borrow","","",235,[[["self"]],["t"]]],[11,"borrow_mut","","",235,[[["self"]],["t"]]],[11,"type_id","","",235,[[["self"]],["typeid"]]],[11,"peek","","",236,[[["cursor"]],["bool"]]],[11,"display","","",236,[[],["str"]]],[11,"span","","",236,[[["self"]],["span"]]],[11,"from","","",236,[[["t"]],["t"]]],[11,"into","","",236,[[],["u"]]],[11,"to_owned","","",236,[[["self"]],["t"]]],[11,"clone_into","","",236,[[["self"],["t"]]]],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"try_into","","",236,[[],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"type_id","","",236,[[["self"]],["typeid"]]],[11,"peek","","",237,[[["cursor"]],["bool"]]],[11,"display","","",237,[[],["str"]]],[11,"span","","",237,[[["self"]],["span"]]],[11,"from","","",237,[[["t"]],["t"]]],[11,"into","","",237,[[],["u"]]],[11,"to_owned","","",237,[[["self"]],["t"]]],[11,"clone_into","","",237,[[["self"],["t"]]]],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"try_into","","",237,[[],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"type_id","","",237,[[["self"]],["typeid"]]],[11,"peek","","",238,[[["cursor"]],["bool"]]],[11,"display","","",238,[[],["str"]]],[11,"span","","",238,[[["self"]],["span"]]],[11,"from","","",238,[[["t"]],["t"]]],[11,"into","","",238,[[],["u"]]],[11,"to_owned","","",238,[[["self"]],["t"]]],[11,"clone_into","","",238,[[["self"],["t"]]]],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"try_into","","",238,[[],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"type_id","","",238,[[["self"]],["typeid"]]],[11,"peek","","",239,[[["cursor"]],["bool"]]],[11,"display","","",239,[[],["str"]]],[11,"span","","",239,[[["self"]],["span"]]],[11,"from","","",239,[[["t"]],["t"]]],[11,"into","","",239,[[],["u"]]],[11,"to_owned","","",239,[[["self"]],["t"]]],[11,"clone_into","","",239,[[["self"],["t"]]]],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"try_into","","",239,[[],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"type_id","","",239,[[["self"]],["typeid"]]],[11,"peek","","",240,[[["cursor"]],["bool"]]],[11,"display","","",240,[[],["str"]]],[11,"span","","",240,[[["self"]],["span"]]],[11,"from","","",240,[[["t"]],["t"]]],[11,"into","","",240,[[],["u"]]],[11,"to_owned","","",240,[[["self"]],["t"]]],[11,"clone_into","","",240,[[["self"],["t"]]]],[11,"try_from","","",240,[[["u"]],["result"]]],[11,"try_into","","",240,[[],["result"]]],[11,"borrow","","",240,[[["self"]],["t"]]],[11,"borrow_mut","","",240,[[["self"]],["t"]]],[11,"type_id","","",240,[[["self"]],["typeid"]]],[11,"peek","","",241,[[["cursor"]],["bool"]]],[11,"display","","",241,[[],["str"]]],[11,"span","","",241,[[["self"]],["span"]]],[11,"from","","",241,[[["t"]],["t"]]],[11,"into","","",241,[[],["u"]]],[11,"to_owned","","",241,[[["self"]],["t"]]],[11,"clone_into","","",241,[[["self"],["t"]]]],[11,"try_from","","",241,[[["u"]],["result"]]],[11,"try_into","","",241,[[],["result"]]],[11,"borrow","","",241,[[["self"]],["t"]]],[11,"borrow_mut","","",241,[[["self"]],["t"]]],[11,"type_id","","",241,[[["self"]],["typeid"]]],[11,"peek","","",242,[[["cursor"]],["bool"]]],[11,"display","","",242,[[],["str"]]],[11,"span","","",242,[[["self"]],["span"]]],[11,"from","","",242,[[["t"]],["t"]]],[11,"into","","",242,[[],["u"]]],[11,"to_owned","","",242,[[["self"]],["t"]]],[11,"clone_into","","",242,[[["self"],["t"]]]],[11,"try_from","","",242,[[["u"]],["result"]]],[11,"try_into","","",242,[[],["result"]]],[11,"borrow","","",242,[[["self"]],["t"]]],[11,"borrow_mut","","",242,[[["self"]],["t"]]],[11,"type_id","","",242,[[["self"]],["typeid"]]],[11,"peek","","",243,[[["cursor"]],["bool"]]],[11,"display","","",243,[[],["str"]]],[11,"span","","",243,[[["self"]],["span"]]],[11,"from","","",243,[[["t"]],["t"]]],[11,"into","","",243,[[],["u"]]],[11,"to_owned","","",243,[[["self"]],["t"]]],[11,"clone_into","","",243,[[["self"],["t"]]]],[11,"try_from","","",243,[[["u"]],["result"]]],[11,"try_into","","",243,[[],["result"]]],[11,"borrow","","",243,[[["self"]],["t"]]],[11,"borrow_mut","","",243,[[["self"]],["t"]]],[11,"type_id","","",243,[[["self"]],["typeid"]]],[11,"peek","","",244,[[["cursor"]],["bool"]]],[11,"display","","",244,[[],["str"]]],[11,"span","","",244,[[["self"]],["span"]]],[11,"from","","",244,[[["t"]],["t"]]],[11,"into","","",244,[[],["u"]]],[11,"to_owned","","",244,[[["self"]],["t"]]],[11,"clone_into","","",244,[[["self"],["t"]]]],[11,"try_from","","",244,[[["u"]],["result"]]],[11,"try_into","","",244,[[],["result"]]],[11,"borrow","","",244,[[["self"]],["t"]]],[11,"borrow_mut","","",244,[[["self"]],["t"]]],[11,"type_id","","",244,[[["self"]],["typeid"]]],[11,"peek","","",245,[[["cursor"]],["bool"]]],[11,"display","","",245,[[],["str"]]],[11,"span","","",245,[[["self"]],["span"]]],[11,"from","","",245,[[["t"]],["t"]]],[11,"into","","",245,[[],["u"]]],[11,"to_owned","","",245,[[["self"]],["t"]]],[11,"clone_into","","",245,[[["self"],["t"]]]],[11,"try_from","","",245,[[["u"]],["result"]]],[11,"try_into","","",245,[[],["result"]]],[11,"borrow","","",245,[[["self"]],["t"]]],[11,"borrow_mut","","",245,[[["self"]],["t"]]],[11,"type_id","","",245,[[["self"]],["typeid"]]],[11,"peek","","",246,[[["cursor"]],["bool"]]],[11,"display","","",246,[[],["str"]]],[11,"span","","",246,[[["self"]],["span"]]],[11,"from","","",246,[[["t"]],["t"]]],[11,"into","","",246,[[],["u"]]],[11,"to_owned","","",246,[[["self"]],["t"]]],[11,"clone_into","","",246,[[["self"],["t"]]]],[11,"try_from","","",246,[[["u"]],["result"]]],[11,"try_into","","",246,[[],["result"]]],[11,"borrow","","",246,[[["self"]],["t"]]],[11,"borrow_mut","","",246,[[["self"]],["t"]]],[11,"type_id","","",246,[[["self"]],["typeid"]]],[11,"peek","","",247,[[["cursor"]],["bool"]]],[11,"display","","",247,[[],["str"]]],[11,"span","","",247,[[["self"]],["span"]]],[11,"from","","",247,[[["t"]],["t"]]],[11,"into","","",247,[[],["u"]]],[11,"to_owned","","",247,[[["self"]],["t"]]],[11,"clone_into","","",247,[[["self"],["t"]]]],[11,"try_from","","",247,[[["u"]],["result"]]],[11,"try_into","","",247,[[],["result"]]],[11,"borrow","","",247,[[["self"]],["t"]]],[11,"borrow_mut","","",247,[[["self"]],["t"]]],[11,"type_id","","",247,[[["self"]],["typeid"]]],[11,"peek","","",248,[[["cursor"]],["bool"]]],[11,"display","","",248,[[],["str"]]],[11,"span","","",248,[[["self"]],["span"]]],[11,"from","","",248,[[["t"]],["t"]]],[11,"into","","",248,[[],["u"]]],[11,"to_owned","","",248,[[["self"]],["t"]]],[11,"clone_into","","",248,[[["self"],["t"]]]],[11,"try_from","","",248,[[["u"]],["result"]]],[11,"try_into","","",248,[[],["result"]]],[11,"borrow","","",248,[[["self"]],["t"]]],[11,"borrow_mut","","",248,[[["self"]],["t"]]],[11,"type_id","","",248,[[["self"]],["typeid"]]],[11,"peek","","",249,[[["cursor"]],["bool"]]],[11,"display","","",249,[[],["str"]]],[11,"span","","",249,[[["self"]],["span"]]],[11,"from","","",249,[[["t"]],["t"]]],[11,"into","","",249,[[],["u"]]],[11,"to_owned","","",249,[[["self"]],["t"]]],[11,"clone_into","","",249,[[["self"],["t"]]]],[11,"try_from","","",249,[[["u"]],["result"]]],[11,"try_into","","",249,[[],["result"]]],[11,"borrow","","",249,[[["self"]],["t"]]],[11,"borrow_mut","","",249,[[["self"]],["t"]]],[11,"type_id","","",249,[[["self"]],["typeid"]]],[11,"peek","","",250,[[["cursor"]],["bool"]]],[11,"display","","",250,[[],["str"]]],[11,"span","","",250,[[["self"]],["span"]]],[11,"from","","",250,[[["t"]],["t"]]],[11,"into","","",250,[[],["u"]]],[11,"to_owned","","",250,[[["self"]],["t"]]],[11,"clone_into","","",250,[[["self"],["t"]]]],[11,"try_from","","",250,[[["u"]],["result"]]],[11,"try_into","","",250,[[],["result"]]],[11,"borrow","","",250,[[["self"]],["t"]]],[11,"borrow_mut","","",250,[[["self"]],["t"]]],[11,"type_id","","",250,[[["self"]],["typeid"]]],[11,"peek","","",251,[[["cursor"]],["bool"]]],[11,"display","","",251,[[],["str"]]],[11,"span","","",251,[[["self"]],["span"]]],[11,"from","","",251,[[["t"]],["t"]]],[11,"into","","",251,[[],["u"]]],[11,"to_owned","","",251,[[["self"]],["t"]]],[11,"clone_into","","",251,[[["self"],["t"]]]],[11,"try_from","","",251,[[["u"]],["result"]]],[11,"try_into","","",251,[[],["result"]]],[11,"borrow","","",251,[[["self"]],["t"]]],[11,"borrow_mut","","",251,[[["self"]],["t"]]],[11,"type_id","","",251,[[["self"]],["typeid"]]],[11,"peek","","",252,[[["cursor"]],["bool"]]],[11,"display","","",252,[[],["str"]]],[11,"span","","",252,[[["self"]],["span"]]],[11,"from","","",252,[[["t"]],["t"]]],[11,"into","","",252,[[],["u"]]],[11,"to_owned","","",252,[[["self"]],["t"]]],[11,"clone_into","","",252,[[["self"],["t"]]]],[11,"try_from","","",252,[[["u"]],["result"]]],[11,"try_into","","",252,[[],["result"]]],[11,"borrow","","",252,[[["self"]],["t"]]],[11,"borrow_mut","","",252,[[["self"]],["t"]]],[11,"type_id","","",252,[[["self"]],["typeid"]]],[11,"peek","","",253,[[["cursor"]],["bool"]]],[11,"display","","",253,[[],["str"]]],[11,"span","","",253,[[["self"]],["span"]]],[11,"from","","",253,[[["t"]],["t"]]],[11,"into","","",253,[[],["u"]]],[11,"to_owned","","",253,[[["self"]],["t"]]],[11,"clone_into","","",253,[[["self"],["t"]]]],[11,"try_from","","",253,[[["u"]],["result"]]],[11,"try_into","","",253,[[],["result"]]],[11,"borrow","","",253,[[["self"]],["t"]]],[11,"borrow_mut","","",253,[[["self"]],["t"]]],[11,"type_id","","",253,[[["self"]],["typeid"]]],[11,"peek","","",254,[[["cursor"]],["bool"]]],[11,"display","","",254,[[],["str"]]],[11,"span","","",254,[[["self"]],["span"]]],[11,"from","","",254,[[["t"]],["t"]]],[11,"into","","",254,[[],["u"]]],[11,"to_owned","","",254,[[["self"]],["t"]]],[11,"clone_into","","",254,[[["self"],["t"]]]],[11,"try_from","","",254,[[["u"]],["result"]]],[11,"try_into","","",254,[[],["result"]]],[11,"borrow","","",254,[[["self"]],["t"]]],[11,"borrow_mut","","",254,[[["self"]],["t"]]],[11,"type_id","","",254,[[["self"]],["typeid"]]],[11,"peek","","",255,[[["cursor"]],["bool"]]],[11,"display","","",255,[[],["str"]]],[11,"span","","",255,[[["self"]],["span"]]],[11,"from","","",255,[[["t"]],["t"]]],[11,"into","","",255,[[],["u"]]],[11,"to_owned","","",255,[[["self"]],["t"]]],[11,"clone_into","","",255,[[["self"],["t"]]]],[11,"try_from","","",255,[[["u"]],["result"]]],[11,"try_into","","",255,[[],["result"]]],[11,"borrow","","",255,[[["self"]],["t"]]],[11,"borrow_mut","","",255,[[["self"]],["t"]]],[11,"type_id","","",255,[[["self"]],["typeid"]]],[11,"peek","","",256,[[["cursor"]],["bool"]]],[11,"display","","",256,[[],["str"]]],[11,"span","","",256,[[["self"]],["span"]]],[11,"from","","",256,[[["t"]],["t"]]],[11,"into","","",256,[[],["u"]]],[11,"to_owned","","",256,[[["self"]],["t"]]],[11,"clone_into","","",256,[[["self"],["t"]]]],[11,"try_from","","",256,[[["u"]],["result"]]],[11,"try_into","","",256,[[],["result"]]],[11,"borrow","","",256,[[["self"]],["t"]]],[11,"borrow_mut","","",256,[[["self"]],["t"]]],[11,"type_id","","",256,[[["self"]],["typeid"]]],[11,"peek","","",257,[[["cursor"]],["bool"]]],[11,"display","","",257,[[],["str"]]],[11,"span","","",257,[[["self"]],["span"]]],[11,"from","","",257,[[["t"]],["t"]]],[11,"into","","",257,[[],["u"]]],[11,"to_owned","","",257,[[["self"]],["t"]]],[11,"clone_into","","",257,[[["self"],["t"]]]],[11,"try_from","","",257,[[["u"]],["result"]]],[11,"try_into","","",257,[[],["result"]]],[11,"borrow","","",257,[[["self"]],["t"]]],[11,"borrow_mut","","",257,[[["self"]],["t"]]],[11,"type_id","","",257,[[["self"]],["typeid"]]],[11,"peek","","",258,[[["cursor"]],["bool"]]],[11,"display","","",258,[[],["str"]]],[11,"span","","",258,[[["self"]],["span"]]],[11,"from","","",258,[[["t"]],["t"]]],[11,"into","","",258,[[],["u"]]],[11,"to_owned","","",258,[[["self"]],["t"]]],[11,"clone_into","","",258,[[["self"],["t"]]]],[11,"try_from","","",258,[[["u"]],["result"]]],[11,"try_into","","",258,[[],["result"]]],[11,"borrow","","",258,[[["self"]],["t"]]],[11,"borrow_mut","","",258,[[["self"]],["t"]]],[11,"type_id","","",258,[[["self"]],["typeid"]]],[11,"peek","","",259,[[["cursor"]],["bool"]]],[11,"display","","",259,[[],["str"]]],[11,"span","","",259,[[["self"]],["span"]]],[11,"from","","",259,[[["t"]],["t"]]],[11,"into","","",259,[[],["u"]]],[11,"to_owned","","",259,[[["self"]],["t"]]],[11,"clone_into","","",259,[[["self"],["t"]]]],[11,"try_from","","",259,[[["u"]],["result"]]],[11,"try_into","","",259,[[],["result"]]],[11,"borrow","","",259,[[["self"]],["t"]]],[11,"borrow_mut","","",259,[[["self"]],["t"]]],[11,"type_id","","",259,[[["self"]],["typeid"]]],[11,"peek","","",260,[[["cursor"]],["bool"]]],[11,"display","","",260,[[],["str"]]],[11,"span","","",260,[[["self"]],["span"]]],[11,"from","","",260,[[["t"]],["t"]]],[11,"into","","",260,[[],["u"]]],[11,"to_owned","","",260,[[["self"]],["t"]]],[11,"clone_into","","",260,[[["self"],["t"]]]],[11,"try_from","","",260,[[["u"]],["result"]]],[11,"try_into","","",260,[[],["result"]]],[11,"borrow","","",260,[[["self"]],["t"]]],[11,"borrow_mut","","",260,[[["self"]],["t"]]],[11,"type_id","","",260,[[["self"]],["typeid"]]],[11,"peek","","",261,[[["cursor"]],["bool"]]],[11,"display","","",261,[[],["str"]]],[11,"span","","",261,[[["self"]],["span"]]],[11,"from","","",261,[[["t"]],["t"]]],[11,"into","","",261,[[],["u"]]],[11,"to_owned","","",261,[[["self"]],["t"]]],[11,"clone_into","","",261,[[["self"],["t"]]]],[11,"try_from","","",261,[[["u"]],["result"]]],[11,"try_into","","",261,[[],["result"]]],[11,"borrow","","",261,[[["self"]],["t"]]],[11,"borrow_mut","","",261,[[["self"]],["t"]]],[11,"type_id","","",261,[[["self"]],["typeid"]]],[11,"peek","","",262,[[["cursor"]],["bool"]]],[11,"display","","",262,[[],["str"]]],[11,"span","","",262,[[["self"]],["span"]]],[11,"from","","",262,[[["t"]],["t"]]],[11,"into","","",262,[[],["u"]]],[11,"to_owned","","",262,[[["self"]],["t"]]],[11,"clone_into","","",262,[[["self"],["t"]]]],[11,"try_from","","",262,[[["u"]],["result"]]],[11,"try_into","","",262,[[],["result"]]],[11,"borrow","","",262,[[["self"]],["t"]]],[11,"borrow_mut","","",262,[[["self"]],["t"]]],[11,"type_id","","",262,[[["self"]],["typeid"]]],[11,"peek","","",263,[[["cursor"]],["bool"]]],[11,"display","","",263,[[],["str"]]],[11,"span","","",263,[[["self"]],["span"]]],[11,"from","","",263,[[["t"]],["t"]]],[11,"into","","",263,[[],["u"]]],[11,"to_owned","","",263,[[["self"]],["t"]]],[11,"clone_into","","",263,[[["self"],["t"]]]],[11,"try_from","","",263,[[["u"]],["result"]]],[11,"try_into","","",263,[[],["result"]]],[11,"borrow","","",263,[[["self"]],["t"]]],[11,"borrow_mut","","",263,[[["self"]],["t"]]],[11,"type_id","","",263,[[["self"]],["typeid"]]],[11,"peek","","",264,[[["cursor"]],["bool"]]],[11,"display","","",264,[[],["str"]]],[11,"span","","",264,[[["self"]],["span"]]],[11,"from","","",264,[[["t"]],["t"]]],[11,"into","","",264,[[],["u"]]],[11,"to_owned","","",264,[[["self"]],["t"]]],[11,"clone_into","","",264,[[["self"],["t"]]]],[11,"try_from","","",264,[[["u"]],["result"]]],[11,"try_into","","",264,[[],["result"]]],[11,"borrow","","",264,[[["self"]],["t"]]],[11,"borrow_mut","","",264,[[["self"]],["t"]]],[11,"type_id","","",264,[[["self"]],["typeid"]]],[11,"peek","","",265,[[["cursor"]],["bool"]]],[11,"display","","",265,[[],["str"]]],[11,"span","","",265,[[["self"]],["span"]]],[11,"from","","",265,[[["t"]],["t"]]],[11,"into","","",265,[[],["u"]]],[11,"to_owned","","",265,[[["self"]],["t"]]],[11,"clone_into","","",265,[[["self"],["t"]]]],[11,"try_from","","",265,[[["u"]],["result"]]],[11,"try_into","","",265,[[],["result"]]],[11,"borrow","","",265,[[["self"]],["t"]]],[11,"borrow_mut","","",265,[[["self"]],["t"]]],[11,"type_id","","",265,[[["self"]],["typeid"]]],[11,"peek","","",266,[[["cursor"]],["bool"]]],[11,"display","","",266,[[],["str"]]],[11,"span","","",266,[[["self"]],["span"]]],[11,"from","","",266,[[["t"]],["t"]]],[11,"into","","",266,[[],["u"]]],[11,"to_owned","","",266,[[["self"]],["t"]]],[11,"clone_into","","",266,[[["self"],["t"]]]],[11,"try_from","","",266,[[["u"]],["result"]]],[11,"try_into","","",266,[[],["result"]]],[11,"borrow","","",266,[[["self"]],["t"]]],[11,"borrow_mut","","",266,[[["self"]],["t"]]],[11,"type_id","","",266,[[["self"]],["typeid"]]],[11,"peek","","",267,[[["cursor"]],["bool"]]],[11,"display","","",267,[[],["str"]]],[11,"span","","",267,[[["self"]],["span"]]],[11,"from","","",267,[[["t"]],["t"]]],[11,"into","","",267,[[],["u"]]],[11,"to_owned","","",267,[[["self"]],["t"]]],[11,"clone_into","","",267,[[["self"],["t"]]]],[11,"try_from","","",267,[[["u"]],["result"]]],[11,"try_into","","",267,[[],["result"]]],[11,"borrow","","",267,[[["self"]],["t"]]],[11,"borrow_mut","","",267,[[["self"]],["t"]]],[11,"type_id","","",267,[[["self"]],["typeid"]]],[11,"peek","","",268,[[["cursor"]],["bool"]]],[11,"display","","",268,[[],["str"]]],[11,"span","","",268,[[["self"]],["span"]]],[11,"from","","",268,[[["t"]],["t"]]],[11,"into","","",268,[[],["u"]]],[11,"to_owned","","",268,[[["self"]],["t"]]],[11,"clone_into","","",268,[[["self"],["t"]]]],[11,"try_from","","",268,[[["u"]],["result"]]],[11,"try_into","","",268,[[],["result"]]],[11,"borrow","","",268,[[["self"]],["t"]]],[11,"borrow_mut","","",268,[[["self"]],["t"]]],[11,"type_id","","",268,[[["self"]],["typeid"]]],[11,"peek","","",269,[[["cursor"]],["bool"]]],[11,"display","","",269,[[],["str"]]],[11,"span","","",269,[[["self"]],["span"]]],[11,"from","","",269,[[["t"]],["t"]]],[11,"into","","",269,[[],["u"]]],[11,"to_owned","","",269,[[["self"]],["t"]]],[11,"clone_into","","",269,[[["self"],["t"]]]],[11,"try_from","","",269,[[["u"]],["result"]]],[11,"try_into","","",269,[[],["result"]]],[11,"borrow","","",269,[[["self"]],["t"]]],[11,"borrow_mut","","",269,[[["self"]],["t"]]],[11,"type_id","","",269,[[["self"]],["typeid"]]],[11,"peek","","",270,[[["cursor"]],["bool"]]],[11,"display","","",270,[[],["str"]]],[11,"span","","",270,[[["self"]],["span"]]],[11,"from","","",270,[[["t"]],["t"]]],[11,"into","","",270,[[],["u"]]],[11,"to_owned","","",270,[[["self"]],["t"]]],[11,"clone_into","","",270,[[["self"],["t"]]]],[11,"try_from","","",270,[[["u"]],["result"]]],[11,"try_into","","",270,[[],["result"]]],[11,"borrow","","",270,[[["self"]],["t"]]],[11,"borrow_mut","","",270,[[["self"]],["t"]]],[11,"type_id","","",270,[[["self"]],["typeid"]]],[11,"peek","","",271,[[["cursor"]],["bool"]]],[11,"display","","",271,[[],["str"]]],[11,"span","","",271,[[["self"]],["span"]]],[11,"from","","",271,[[["t"]],["t"]]],[11,"into","","",271,[[],["u"]]],[11,"to_owned","","",271,[[["self"]],["t"]]],[11,"clone_into","","",271,[[["self"],["t"]]]],[11,"try_from","","",271,[[["u"]],["result"]]],[11,"try_into","","",271,[[],["result"]]],[11,"borrow","","",271,[[["self"]],["t"]]],[11,"borrow_mut","","",271,[[["self"]],["t"]]],[11,"type_id","","",271,[[["self"]],["typeid"]]],[11,"peek","","",272,[[["cursor"]],["bool"]]],[11,"display","","",272,[[],["str"]]],[11,"span","","",272,[[["self"]],["span"]]],[11,"from","","",272,[[["t"]],["t"]]],[11,"into","","",272,[[],["u"]]],[11,"to_owned","","",272,[[["self"]],["t"]]],[11,"clone_into","","",272,[[["self"],["t"]]]],[11,"try_from","","",272,[[["u"]],["result"]]],[11,"try_into","","",272,[[],["result"]]],[11,"borrow","","",272,[[["self"]],["t"]]],[11,"borrow_mut","","",272,[[["self"]],["t"]]],[11,"type_id","","",272,[[["self"]],["typeid"]]],[11,"peek","","",273,[[["cursor"]],["bool"]]],[11,"display","","",273,[[],["str"]]],[11,"span","","",273,[[["self"]],["span"]]],[11,"from","","",273,[[["t"]],["t"]]],[11,"into","","",273,[[],["u"]]],[11,"to_owned","","",273,[[["self"]],["t"]]],[11,"clone_into","","",273,[[["self"],["t"]]]],[11,"try_from","","",273,[[["u"]],["result"]]],[11,"try_into","","",273,[[],["result"]]],[11,"borrow","","",273,[[["self"]],["t"]]],[11,"borrow_mut","","",273,[[["self"]],["t"]]],[11,"type_id","","",273,[[["self"]],["typeid"]]],[11,"peek","","",274,[[["cursor"]],["bool"]]],[11,"display","","",274,[[],["str"]]],[11,"span","","",274,[[["self"]],["span"]]],[11,"from","","",274,[[["t"]],["t"]]],[11,"into","","",274,[[],["u"]]],[11,"to_owned","","",274,[[["self"]],["t"]]],[11,"clone_into","","",274,[[["self"],["t"]]]],[11,"try_from","","",274,[[["u"]],["result"]]],[11,"try_into","","",274,[[],["result"]]],[11,"borrow","","",274,[[["self"]],["t"]]],[11,"borrow_mut","","",274,[[["self"]],["t"]]],[11,"type_id","","",274,[[["self"]],["typeid"]]],[11,"peek","","",275,[[["cursor"]],["bool"]]],[11,"display","","",275,[[],["str"]]],[11,"span","","",275,[[["self"]],["span"]]],[11,"from","","",275,[[["t"]],["t"]]],[11,"into","","",275,[[],["u"]]],[11,"to_owned","","",275,[[["self"]],["t"]]],[11,"clone_into","","",275,[[["self"],["t"]]]],[11,"try_from","","",275,[[["u"]],["result"]]],[11,"try_into","","",275,[[],["result"]]],[11,"borrow","","",275,[[["self"]],["t"]]],[11,"borrow_mut","","",275,[[["self"]],["t"]]],[11,"type_id","","",275,[[["self"]],["typeid"]]],[11,"peek","","",276,[[["cursor"]],["bool"]]],[11,"display","","",276,[[],["str"]]],[11,"span","","",276,[[["self"]],["span"]]],[11,"from","","",276,[[["t"]],["t"]]],[11,"into","","",276,[[],["u"]]],[11,"to_owned","","",276,[[["self"]],["t"]]],[11,"clone_into","","",276,[[["self"],["t"]]]],[11,"try_from","","",276,[[["u"]],["result"]]],[11,"try_into","","",276,[[],["result"]]],[11,"borrow","","",276,[[["self"]],["t"]]],[11,"borrow_mut","","",276,[[["self"]],["t"]]],[11,"type_id","","",276,[[["self"]],["typeid"]]],[11,"peek","","",277,[[["cursor"]],["bool"]]],[11,"display","","",277,[[],["str"]]],[11,"span","","",277,[[["self"]],["span"]]],[11,"from","","",277,[[["t"]],["t"]]],[11,"into","","",277,[[],["u"]]],[11,"to_owned","","",277,[[["self"]],["t"]]],[11,"clone_into","","",277,[[["self"],["t"]]]],[11,"try_from","","",277,[[["u"]],["result"]]],[11,"try_into","","",277,[[],["result"]]],[11,"borrow","","",277,[[["self"]],["t"]]],[11,"borrow_mut","","",277,[[["self"]],["t"]]],[11,"type_id","","",277,[[["self"]],["typeid"]]],[11,"peek","","",278,[[["cursor"]],["bool"]]],[11,"display","","",278,[[],["str"]]],[11,"span","","",278,[[["self"]],["span"]]],[11,"from","","",278,[[["t"]],["t"]]],[11,"into","","",278,[[],["u"]]],[11,"to_owned","","",278,[[["self"]],["t"]]],[11,"clone_into","","",278,[[["self"],["t"]]]],[11,"try_from","","",278,[[["u"]],["result"]]],[11,"try_into","","",278,[[],["result"]]],[11,"borrow","","",278,[[["self"]],["t"]]],[11,"borrow_mut","","",278,[[["self"]],["t"]]],[11,"type_id","","",278,[[["self"]],["typeid"]]],[11,"peek","","",279,[[["cursor"]],["bool"]]],[11,"display","","",279,[[],["str"]]],[11,"span","","",279,[[["self"]],["span"]]],[11,"from","","",279,[[["t"]],["t"]]],[11,"into","","",279,[[],["u"]]],[11,"to_owned","","",279,[[["self"]],["t"]]],[11,"clone_into","","",279,[[["self"],["t"]]]],[11,"try_from","","",279,[[["u"]],["result"]]],[11,"try_into","","",279,[[],["result"]]],[11,"borrow","","",279,[[["self"]],["t"]]],[11,"borrow_mut","","",279,[[["self"]],["t"]]],[11,"type_id","","",279,[[["self"]],["typeid"]]],[11,"peek","","",280,[[["cursor"]],["bool"]]],[11,"display","","",280,[[],["str"]]],[11,"span","","",280,[[["self"]],["span"]]],[11,"from","","",280,[[["t"]],["t"]]],[11,"into","","",280,[[],["u"]]],[11,"to_owned","","",280,[[["self"]],["t"]]],[11,"clone_into","","",280,[[["self"],["t"]]]],[11,"try_from","","",280,[[["u"]],["result"]]],[11,"try_into","","",280,[[],["result"]]],[11,"borrow","","",280,[[["self"]],["t"]]],[11,"borrow_mut","","",280,[[["self"]],["t"]]],[11,"type_id","","",280,[[["self"]],["typeid"]]],[11,"peek","","",281,[[["cursor"]],["bool"]]],[11,"display","","",281,[[],["str"]]],[11,"span","","",281,[[["self"]],["span"]]],[11,"from","","",281,[[["t"]],["t"]]],[11,"into","","",281,[[],["u"]]],[11,"to_owned","","",281,[[["self"]],["t"]]],[11,"clone_into","","",281,[[["self"],["t"]]]],[11,"try_from","","",281,[[["u"]],["result"]]],[11,"try_into","","",281,[[],["result"]]],[11,"borrow","","",281,[[["self"]],["t"]]],[11,"borrow_mut","","",281,[[["self"]],["t"]]],[11,"type_id","","",281,[[["self"]],["typeid"]]],[11,"peek","","",282,[[["cursor"]],["bool"]]],[11,"display","","",282,[[],["str"]]],[11,"span","","",282,[[["self"]],["span"]]],[11,"from","","",282,[[["t"]],["t"]]],[11,"into","","",282,[[],["u"]]],[11,"to_owned","","",282,[[["self"]],["t"]]],[11,"clone_into","","",282,[[["self"],["t"]]]],[11,"try_from","","",282,[[["u"]],["result"]]],[11,"try_into","","",282,[[],["result"]]],[11,"borrow","","",282,[[["self"]],["t"]]],[11,"borrow_mut","","",282,[[["self"]],["t"]]],[11,"type_id","","",282,[[["self"]],["typeid"]]],[11,"peek","","",283,[[["cursor"]],["bool"]]],[11,"display","","",283,[[],["str"]]],[11,"span","","",283,[[["self"]],["span"]]],[11,"from","","",283,[[["t"]],["t"]]],[11,"into","","",283,[[],["u"]]],[11,"to_owned","","",283,[[["self"]],["t"]]],[11,"clone_into","","",283,[[["self"],["t"]]]],[11,"try_from","","",283,[[["u"]],["result"]]],[11,"try_into","","",283,[[],["result"]]],[11,"borrow","","",283,[[["self"]],["t"]]],[11,"borrow_mut","","",283,[[["self"]],["t"]]],[11,"type_id","","",283,[[["self"]],["typeid"]]],[11,"peek","","",284,[[["cursor"]],["bool"]]],[11,"display","","",284,[[],["str"]]],[11,"span","","",284,[[["self"]],["span"]]],[11,"from","","",284,[[["t"]],["t"]]],[11,"into","","",284,[[],["u"]]],[11,"to_owned","","",284,[[["self"]],["t"]]],[11,"clone_into","","",284,[[["self"],["t"]]]],[11,"try_from","","",284,[[["u"]],["result"]]],[11,"try_into","","",284,[[],["result"]]],[11,"borrow","","",284,[[["self"]],["t"]]],[11,"borrow_mut","","",284,[[["self"]],["t"]]],[11,"type_id","","",284,[[["self"]],["typeid"]]],[11,"peek","","",285,[[["cursor"]],["bool"]]],[11,"display","","",285,[[],["str"]]],[11,"span","","",285,[[["self"]],["span"]]],[11,"from","","",285,[[["t"]],["t"]]],[11,"into","","",285,[[],["u"]]],[11,"to_owned","","",285,[[["self"]],["t"]]],[11,"clone_into","","",285,[[["self"],["t"]]]],[11,"try_from","","",285,[[["u"]],["result"]]],[11,"try_into","","",285,[[],["result"]]],[11,"borrow","","",285,[[["self"]],["t"]]],[11,"borrow_mut","","",285,[[["self"]],["t"]]],[11,"type_id","","",285,[[["self"]],["typeid"]]],[11,"peek","","",286,[[["cursor"]],["bool"]]],[11,"display","","",286,[[],["str"]]],[11,"span","","",286,[[["self"]],["span"]]],[11,"from","","",286,[[["t"]],["t"]]],[11,"into","","",286,[[],["u"]]],[11,"to_owned","","",286,[[["self"]],["t"]]],[11,"clone_into","","",286,[[["self"],["t"]]]],[11,"try_from","","",286,[[["u"]],["result"]]],[11,"try_into","","",286,[[],["result"]]],[11,"borrow","","",286,[[["self"]],["t"]]],[11,"borrow_mut","","",286,[[["self"]],["t"]]],[11,"type_id","","",286,[[["self"]],["typeid"]]],[11,"peek","","",287,[[["cursor"]],["bool"]]],[11,"display","","",287,[[],["str"]]],[11,"span","","",287,[[["self"]],["span"]]],[11,"from","","",287,[[["t"]],["t"]]],[11,"into","","",287,[[],["u"]]],[11,"to_owned","","",287,[[["self"]],["t"]]],[11,"clone_into","","",287,[[["self"],["t"]]]],[11,"try_from","","",287,[[["u"]],["result"]]],[11,"try_into","","",287,[[],["result"]]],[11,"borrow","","",287,[[["self"]],["t"]]],[11,"borrow_mut","","",287,[[["self"]],["t"]]],[11,"type_id","","",287,[[["self"]],["typeid"]]],[11,"peek","","",288,[[["cursor"]],["bool"]]],[11,"display","","",288,[[],["str"]]],[11,"span","","",288,[[["self"]],["span"]]],[11,"from","","",288,[[["t"]],["t"]]],[11,"into","","",288,[[],["u"]]],[11,"to_owned","","",288,[[["self"]],["t"]]],[11,"clone_into","","",288,[[["self"],["t"]]]],[11,"try_from","","",288,[[["u"]],["result"]]],[11,"try_into","","",288,[[],["result"]]],[11,"borrow","","",288,[[["self"]],["t"]]],[11,"borrow_mut","","",288,[[["self"]],["t"]]],[11,"type_id","","",288,[[["self"]],["typeid"]]],[11,"peek","","",289,[[["cursor"]],["bool"]]],[11,"display","","",289,[[],["str"]]],[11,"span","","",289,[[["self"]],["span"]]],[11,"from","","",289,[[["t"]],["t"]]],[11,"into","","",289,[[],["u"]]],[11,"to_owned","","",289,[[["self"]],["t"]]],[11,"clone_into","","",289,[[["self"],["t"]]]],[11,"try_from","","",289,[[["u"]],["result"]]],[11,"try_into","","",289,[[],["result"]]],[11,"borrow","","",289,[[["self"]],["t"]]],[11,"borrow_mut","","",289,[[["self"]],["t"]]],[11,"type_id","","",289,[[["self"]],["typeid"]]],[11,"peek","","",290,[[["cursor"]],["bool"]]],[11,"display","","",290,[[],["str"]]],[11,"span","","",290,[[["self"]],["span"]]],[11,"from","","",290,[[["t"]],["t"]]],[11,"into","","",290,[[],["u"]]],[11,"to_owned","","",290,[[["self"]],["t"]]],[11,"clone_into","","",290,[[["self"],["t"]]]],[11,"try_from","","",290,[[["u"]],["result"]]],[11,"try_into","","",290,[[],["result"]]],[11,"borrow","","",290,[[["self"]],["t"]]],[11,"borrow_mut","","",290,[[["self"]],["t"]]],[11,"type_id","","",290,[[["self"]],["typeid"]]],[11,"peek","","",291,[[["cursor"]],["bool"]]],[11,"display","","",291,[[],["str"]]],[11,"from","","",291,[[["t"]],["t"]]],[11,"into","","",291,[[],["u"]]],[11,"to_owned","","",291,[[["self"]],["t"]]],[11,"clone_into","","",291,[[["self"],["t"]]]],[11,"try_from","","",291,[[["u"]],["result"]]],[11,"try_into","","",291,[[],["result"]]],[11,"borrow","","",291,[[["self"]],["t"]]],[11,"borrow_mut","","",291,[[["self"]],["t"]]],[11,"type_id","","",291,[[["self"]],["typeid"]]],[11,"peek","","",292,[[["cursor"]],["bool"]]],[11,"display","","",292,[[],["str"]]],[11,"from","","",292,[[["t"]],["t"]]],[11,"into","","",292,[[],["u"]]],[11,"to_owned","","",292,[[["self"]],["t"]]],[11,"clone_into","","",292,[[["self"],["t"]]]],[11,"try_from","","",292,[[["u"]],["result"]]],[11,"try_into","","",292,[[],["result"]]],[11,"borrow","","",292,[[["self"]],["t"]]],[11,"borrow_mut","","",292,[[["self"]],["t"]]],[11,"type_id","","",292,[[["self"]],["typeid"]]],[11,"peek","","",293,[[["cursor"]],["bool"]]],[11,"display","","",293,[[],["str"]]],[11,"from","","",293,[[["t"]],["t"]]],[11,"into","","",293,[[],["u"]]],[11,"to_owned","","",293,[[["self"]],["t"]]],[11,"clone_into","","",293,[[["self"],["t"]]]],[11,"try_from","","",293,[[["u"]],["result"]]],[11,"try_into","","",293,[[],["result"]]],[11,"borrow","","",293,[[["self"]],["t"]]],[11,"borrow_mut","","",293,[[["self"]],["t"]]],[11,"type_id","","",293,[[["self"]],["typeid"]]],[11,"peek","","",294,[[["cursor"]],["bool"]]],[11,"display","","",294,[[],["str"]]],[11,"from","","",294,[[["t"]],["t"]]],[11,"into","","",294,[[],["u"]]],[11,"to_owned","","",294,[[["self"]],["t"]]],[11,"clone_into","","",294,[[["self"],["t"]]]],[11,"try_from","","",294,[[["u"]],["result"]]],[11,"try_into","","",294,[[],["result"]]],[11,"borrow","","",294,[[["self"]],["t"]]],[11,"borrow_mut","","",294,[[["self"]],["t"]]],[11,"type_id","","",294,[[["self"]],["typeid"]]],[11,"from","syn::buffer","",302,[[["t"]],["t"]]],[11,"into","","",302,[[],["u"]]],[11,"try_from","","",302,[[["u"]],["result"]]],[11,"try_into","","",302,[[],["result"]]],[11,"borrow","","",302,[[["self"]],["t"]]],[11,"borrow_mut","","",302,[[["self"]],["t"]]],[11,"type_id","","",302,[[["self"]],["typeid"]]],[11,"from","","",303,[[["t"]],["t"]]],[11,"into","","",303,[[],["u"]]],[11,"to_owned","","",303,[[["self"]],["t"]]],[11,"clone_into","","",303,[[["self"],["t"]]]],[11,"try_from","","",303,[[["u"]],["result"]]],[11,"try_into","","",303,[[],["result"]]],[11,"borrow","","",303,[[["self"]],["t"]]],[11,"borrow_mut","","",303,[[["self"]],["t"]]],[11,"type_id","","",303,[[["self"]],["typeid"]]],[11,"span","syn::punctuated","",306,[[["self"]],["span"]]],[11,"from","","",306,[[["t"]],["t"]]],[11,"into","","",306,[[],["u"]]],[11,"into_iter","","",306,[[],["i"]]],[11,"to_owned","","",306,[[["self"]],["t"]]],[11,"clone_into","","",306,[[["self"],["t"]]]],[11,"try_from","","",306,[[["u"]],["result"]]],[11,"try_into","","",306,[[],["result"]]],[11,"borrow","","",306,[[["self"]],["t"]]],[11,"borrow_mut","","",306,[[["self"]],["t"]]],[11,"type_id","","",306,[[["self"]],["typeid"]]],[11,"from","","",318,[[["t"]],["t"]]],[11,"into","","",318,[[],["u"]]],[11,"into_iter","","",318,[[],["i"]]],[11,"to_owned","","",318,[[["self"]],["t"]]],[11,"clone_into","","",318,[[["self"],["t"]]]],[11,"try_from","","",318,[[["u"]],["result"]]],[11,"try_into","","",318,[[],["result"]]],[11,"borrow","","",318,[[["self"]],["t"]]],[11,"borrow_mut","","",318,[[["self"]],["t"]]],[11,"type_id","","",318,[[["self"]],["typeid"]]],[11,"from","","",319,[[["t"]],["t"]]],[11,"into","","",319,[[],["u"]]],[11,"into_iter","","",319,[[],["i"]]],[11,"try_from","","",319,[[["u"]],["result"]]],[11,"try_into","","",319,[[],["result"]]],[11,"borrow","","",319,[[["self"]],["t"]]],[11,"borrow_mut","","",319,[[["self"]],["t"]]],[11,"type_id","","",319,[[["self"]],["typeid"]]],[11,"from","","",320,[[["t"]],["t"]]],[11,"into","","",320,[[],["u"]]],[11,"into_iter","","",320,[[],["i"]]],[11,"to_owned","","",320,[[["self"]],["t"]]],[11,"clone_into","","",320,[[["self"],["t"]]]],[11,"try_from","","",320,[[["u"]],["result"]]],[11,"try_into","","",320,[[],["result"]]],[11,"borrow","","",320,[[["self"]],["t"]]],[11,"borrow_mut","","",320,[[["self"]],["t"]]],[11,"type_id","","",320,[[["self"]],["typeid"]]],[11,"from","","",321,[[["t"]],["t"]]],[11,"into","","",321,[[],["u"]]],[11,"into_iter","","",321,[[],["i"]]],[11,"to_owned","","",321,[[["self"]],["t"]]],[11,"clone_into","","",321,[[["self"],["t"]]]],[11,"try_from","","",321,[[["u"]],["result"]]],[11,"try_into","","",321,[[],["result"]]],[11,"borrow","","",321,[[["self"]],["t"]]],[11,"borrow_mut","","",321,[[["self"]],["t"]]],[11,"type_id","","",321,[[["self"]],["typeid"]]],[11,"from","","",322,[[["t"]],["t"]]],[11,"into","","",322,[[],["u"]]],[11,"into_iter","","",322,[[],["i"]]],[11,"to_owned","","",322,[[["self"]],["t"]]],[11,"clone_into","","",322,[[["self"],["t"]]]],[11,"try_from","","",322,[[["u"]],["result"]]],[11,"try_into","","",322,[[],["result"]]],[11,"borrow","","",322,[[["self"]],["t"]]],[11,"borrow_mut","","",322,[[["self"]],["t"]]],[11,"type_id","","",322,[[["self"]],["typeid"]]],[11,"from","","",323,[[["t"]],["t"]]],[11,"into","","",323,[[],["u"]]],[11,"into_iter","","",323,[[],["i"]]],[11,"try_from","","",323,[[["u"]],["result"]]],[11,"try_into","","",323,[[],["result"]]],[11,"borrow","","",323,[[["self"]],["t"]]],[11,"borrow_mut","","",323,[[["self"]],["t"]]],[11,"type_id","","",323,[[["self"]],["typeid"]]],[11,"span","","",305,[[["self"]],["span"]]],[11,"from","","",305,[[["t"]],["t"]]],[11,"into","","",305,[[],["u"]]],[11,"to_owned","","",305,[[["self"]],["t"]]],[11,"clone_into","","",305,[[["self"],["t"]]]],[11,"try_from","","",305,[[["u"]],["result"]]],[11,"try_into","","",305,[[],["result"]]],[11,"borrow","","",305,[[["self"]],["t"]]],[11,"borrow_mut","","",305,[[["self"]],["t"]]],[11,"type_id","","",305,[[["self"]],["typeid"]]],[11,"from","syn::parse","",324,[[["t"]],["t"]]],[11,"into","","",324,[[],["u"]]],[11,"try_from","","",324,[[["u"]],["result"]]],[11,"try_into","","",324,[[],["result"]]],[11,"borrow","","",324,[[["self"]],["t"]]],[11,"borrow_mut","","",324,[[["self"]],["t"]]],[11,"type_id","","",324,[[["self"]],["typeid"]]],[11,"from","","",313,[[["t"]],["t"]]],[11,"into","","",313,[[],["u"]]],[11,"to_string","","",313,[[["self"]],["string"]]],[11,"try_from","","",313,[[["u"]],["result"]]],[11,"try_into","","",313,[[],["result"]]],[11,"borrow","","",313,[[["self"]],["t"]]],[11,"borrow_mut","","",313,[[["self"]],["t"]]],[11,"type_id","","",313,[[["self"]],["typeid"]]],[11,"from","","",312,[[["t"]],["t"]]],[11,"into","","",312,[[],["u"]]],[11,"to_owned","","",312,[[["self"]],["t"]]],[11,"clone_into","","",312,[[["self"],["t"]]]],[11,"try_from","","",312,[[["u"]],["result"]]],[11,"try_into","","",312,[[],["result"]]],[11,"borrow","","",312,[[["self"]],["t"]]],[11,"borrow_mut","","",312,[[["self"]],["t"]]],[11,"type_id","","",312,[[["self"]],["typeid"]]],[11,"fmt","syn","",315,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",315,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"cmp","","",315,[[["ident"],["self"]],["ordering"]]],[11,"clone","","",315,[[["self"]],["ident"]]],[11,"eq","","",315,[[["ident"],["self"]],["bool"]]],[11,"eq","","",315,[[["t"],["self"]],["bool"]]],[11,"hash","","",315,[[["self"],["h"]]]],[11,"partial_cmp","","",315,[[["ident"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"to_tokens","","",315,[[["tokenstream"],["self"]]]],[11,"peek","","",126,[[["cursor"]],["bool"]]],[11,"display","","",126,[[],["str"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"peek","","",296,[[["cursor"]],["bool"]]],[11,"display","","",296,[[],["str"]]],[11,"peek","","",297,[[["cursor"]],["bool"]]],[11,"display","","",297,[[],["str"]]],[11,"peek","","",298,[[["cursor"]],["bool"]]],[11,"display","","",298,[[],["str"]]],[11,"peek","","",299,[[["cursor"]],["bool"]]],[11,"display","","",299,[[],["str"]]],[11,"peek","","",300,[[["cursor"]],["bool"]]],[11,"display","","",300,[[],["str"]]],[11,"peek","","",301,[[["cursor"]],["bool"]]],[11,"display","","",301,[[],["str"]]],[11,"peek","","",127,[[["cursor"]],["bool"]]],[11,"display","","",127,[[],["str"]]],[11,"peek","syn::token","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"peek","","",293,[[["cursor"]],["bool"]]],[11,"display","","",293,[[],["str"]]],[11,"peek","","",291,[[["cursor"]],["bool"]]],[11,"display","","",291,[[],["str"]]],[11,"peek","","",292,[[["cursor"]],["bool"]]],[11,"display","","",292,[[],["str"]]],[11,"peek","","",294,[[["cursor"]],["bool"]]],[11,"display","","",294,[[],["str"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"peek","","",197,[[["cursor"]],["bool"]]],[11,"display","","",197,[[],["str"]]],[11,"peek","","",198,[[["cursor"]],["bool"]]],[11,"display","","",198,[[],["str"]]],[11,"peek","","",199,[[["cursor"]],["bool"]]],[11,"display","","",199,[[],["str"]]],[11,"peek","","",200,[[["cursor"]],["bool"]]],[11,"display","","",200,[[],["str"]]],[11,"peek","","",201,[[["cursor"]],["bool"]]],[11,"display","","",201,[[],["str"]]],[11,"peek","","",202,[[["cursor"]],["bool"]]],[11,"display","","",202,[[],["str"]]],[11,"peek","","",203,[[["cursor"]],["bool"]]],[11,"display","","",203,[[],["str"]]],[11,"peek","","",204,[[["cursor"]],["bool"]]],[11,"display","","",204,[[],["str"]]],[11,"peek","","",205,[[["cursor"]],["bool"]]],[11,"display","","",205,[[],["str"]]],[11,"peek","","",206,[[["cursor"]],["bool"]]],[11,"display","","",206,[[],["str"]]],[11,"peek","","",207,[[["cursor"]],["bool"]]],[11,"display","","",207,[[],["str"]]],[11,"peek","","",208,[[["cursor"]],["bool"]]],[11,"display","","",208,[[],["str"]]],[11,"peek","","",209,[[["cursor"]],["bool"]]],[11,"display","","",209,[[],["str"]]],[11,"peek","","",210,[[["cursor"]],["bool"]]],[11,"display","","",210,[[],["str"]]],[11,"peek","","",211,[[["cursor"]],["bool"]]],[11,"display","","",211,[[],["str"]]],[11,"peek","","",212,[[["cursor"]],["bool"]]],[11,"display","","",212,[[],["str"]]],[11,"peek","","",213,[[["cursor"]],["bool"]]],[11,"display","","",213,[[],["str"]]],[11,"peek","","",214,[[["cursor"]],["bool"]]],[11,"display","","",214,[[],["str"]]],[11,"peek","","",215,[[["cursor"]],["bool"]]],[11,"display","","",215,[[],["str"]]],[11,"peek","","",216,[[["cursor"]],["bool"]]],[11,"display","","",216,[[],["str"]]],[11,"peek","","",217,[[["cursor"]],["bool"]]],[11,"display","","",217,[[],["str"]]],[11,"peek","","",218,[[["cursor"]],["bool"]]],[11,"display","","",218,[[],["str"]]],[11,"peek","","",219,[[["cursor"]],["bool"]]],[11,"display","","",219,[[],["str"]]],[11,"peek","","",220,[[["cursor"]],["bool"]]],[11,"display","","",220,[[],["str"]]],[11,"peek","","",221,[[["cursor"]],["bool"]]],[11,"display","","",221,[[],["str"]]],[11,"peek","","",222,[[["cursor"]],["bool"]]],[11,"display","","",222,[[],["str"]]],[11,"peek","","",223,[[["cursor"]],["bool"]]],[11,"display","","",223,[[],["str"]]],[11,"peek","","",224,[[["cursor"]],["bool"]]],[11,"display","","",224,[[],["str"]]],[11,"peek","","",225,[[["cursor"]],["bool"]]],[11,"display","","",225,[[],["str"]]],[11,"peek","","",226,[[["cursor"]],["bool"]]],[11,"display","","",226,[[],["str"]]],[11,"peek","","",227,[[["cursor"]],["bool"]]],[11,"display","","",227,[[],["str"]]],[11,"peek","","",228,[[["cursor"]],["bool"]]],[11,"display","","",228,[[],["str"]]],[11,"peek","","",229,[[["cursor"]],["bool"]]],[11,"display","","",229,[[],["str"]]],[11,"peek","","",230,[[["cursor"]],["bool"]]],[11,"display","","",230,[[],["str"]]],[11,"peek","","",231,[[["cursor"]],["bool"]]],[11,"display","","",231,[[],["str"]]],[11,"peek","","",232,[[["cursor"]],["bool"]]],[11,"display","","",232,[[],["str"]]],[11,"peek","","",233,[[["cursor"]],["bool"]]],[11,"display","","",233,[[],["str"]]],[11,"peek","","",234,[[["cursor"]],["bool"]]],[11,"display","","",234,[[],["str"]]],[11,"peek","","",235,[[["cursor"]],["bool"]]],[11,"display","","",235,[[],["str"]]],[11,"peek","","",236,[[["cursor"]],["bool"]]],[11,"display","","",236,[[],["str"]]],[11,"peek","","",237,[[["cursor"]],["bool"]]],[11,"display","","",237,[[],["str"]]],[11,"peek","","",238,[[["cursor"]],["bool"]]],[11,"display","","",238,[[],["str"]]],[11,"peek","","",239,[[["cursor"]],["bool"]]],[11,"display","","",239,[[],["str"]]],[11,"peek","","",240,[[["cursor"]],["bool"]]],[11,"display","","",240,[[],["str"]]],[11,"peek","","",241,[[["cursor"]],["bool"]]],[11,"display","","",241,[[],["str"]]],[11,"peek","","",242,[[["cursor"]],["bool"]]],[11,"display","","",242,[[],["str"]]],[11,"peek","","",243,[[["cursor"]],["bool"]]],[11,"display","","",243,[[],["str"]]],[11,"peek","","",244,[[["cursor"]],["bool"]]],[11,"display","","",244,[[],["str"]]],[11,"peek","","",245,[[["cursor"]],["bool"]]],[11,"display","","",245,[[],["str"]]],[11,"peek","","",246,[[["cursor"]],["bool"]]],[11,"display","","",246,[[],["str"]]],[11,"peek","","",247,[[["cursor"]],["bool"]]],[11,"display","","",247,[[],["str"]]],[11,"peek","","",248,[[["cursor"]],["bool"]]],[11,"display","","",248,[[],["str"]]],[11,"peek","","",249,[[["cursor"]],["bool"]]],[11,"display","","",249,[[],["str"]]],[11,"peek","","",250,[[["cursor"]],["bool"]]],[11,"display","","",250,[[],["str"]]],[11,"peek","","",251,[[["cursor"]],["bool"]]],[11,"display","","",251,[[],["str"]]],[11,"peek","","",252,[[["cursor"]],["bool"]]],[11,"display","","",252,[[],["str"]]],[11,"peek","","",253,[[["cursor"]],["bool"]]],[11,"display","","",253,[[],["str"]]],[11,"peek","","",254,[[["cursor"]],["bool"]]],[11,"display","","",254,[[],["str"]]],[11,"peek","","",255,[[["cursor"]],["bool"]]],[11,"display","","",255,[[],["str"]]],[11,"peek","","",256,[[["cursor"]],["bool"]]],[11,"display","","",256,[[],["str"]]],[11,"peek","","",257,[[["cursor"]],["bool"]]],[11,"display","","",257,[[],["str"]]],[11,"peek","","",258,[[["cursor"]],["bool"]]],[11,"display","","",258,[[],["str"]]],[11,"peek","","",259,[[["cursor"]],["bool"]]],[11,"display","","",259,[[],["str"]]],[11,"peek","","",260,[[["cursor"]],["bool"]]],[11,"display","","",260,[[],["str"]]],[11,"peek","","",261,[[["cursor"]],["bool"]]],[11,"display","","",261,[[],["str"]]],[11,"peek","","",262,[[["cursor"]],["bool"]]],[11,"display","","",262,[[],["str"]]],[11,"peek","","",263,[[["cursor"]],["bool"]]],[11,"display","","",263,[[],["str"]]],[11,"peek","","",264,[[["cursor"]],["bool"]]],[11,"display","","",264,[[],["str"]]],[11,"peek","","",265,[[["cursor"]],["bool"]]],[11,"display","","",265,[[],["str"]]],[11,"peek","","",266,[[["cursor"]],["bool"]]],[11,"display","","",266,[[],["str"]]],[11,"peek","","",267,[[["cursor"]],["bool"]]],[11,"display","","",267,[[],["str"]]],[11,"peek","","",268,[[["cursor"]],["bool"]]],[11,"display","","",268,[[],["str"]]],[11,"peek","","",269,[[["cursor"]],["bool"]]],[11,"display","","",269,[[],["str"]]],[11,"peek","","",270,[[["cursor"]],["bool"]]],[11,"display","","",270,[[],["str"]]],[11,"peek","","",271,[[["cursor"]],["bool"]]],[11,"display","","",271,[[],["str"]]],[11,"peek","","",272,[[["cursor"]],["bool"]]],[11,"display","","",272,[[],["str"]]],[11,"peek","","",273,[[["cursor"]],["bool"]]],[11,"display","","",273,[[],["str"]]],[11,"peek","","",274,[[["cursor"]],["bool"]]],[11,"display","","",274,[[],["str"]]],[11,"peek","","",275,[[["cursor"]],["bool"]]],[11,"display","","",275,[[],["str"]]],[11,"peek","","",276,[[["cursor"]],["bool"]]],[11,"display","","",276,[[],["str"]]],[11,"peek","","",277,[[["cursor"]],["bool"]]],[11,"display","","",277,[[],["str"]]],[11,"peek","","",278,[[["cursor"]],["bool"]]],[11,"display","","",278,[[],["str"]]],[11,"peek","","",279,[[["cursor"]],["bool"]]],[11,"display","","",279,[[],["str"]]],[11,"peek","","",280,[[["cursor"]],["bool"]]],[11,"display","","",280,[[],["str"]]],[11,"peek","","",281,[[["cursor"]],["bool"]]],[11,"display","","",281,[[],["str"]]],[11,"peek","","",282,[[["cursor"]],["bool"]]],[11,"display","","",282,[[],["str"]]],[11,"peek","","",283,[[["cursor"]],["bool"]]],[11,"display","","",283,[[],["str"]]],[11,"peek","","",284,[[["cursor"]],["bool"]]],[11,"display","","",284,[[],["str"]]],[11,"peek","","",285,[[["cursor"]],["bool"]]],[11,"display","","",285,[[],["str"]]],[11,"peek","","",286,[[["cursor"]],["bool"]]],[11,"display","","",286,[[],["str"]]],[11,"peek","","",287,[[["cursor"]],["bool"]]],[11,"display","","",287,[[],["str"]]],[11,"peek","","",288,[[["cursor"]],["bool"]]],[11,"display","","",288,[[],["str"]]],[11,"peek","","",289,[[["cursor"]],["bool"]]],[11,"display","","",289,[[],["str"]]],[11,"peek","","",290,[[["cursor"]],["bool"]]],[11,"display","","",290,[[],["str"]]],[11,"peek","syn","",315,[[["cursor"]],["bool"]]],[11,"display","","",315,[[],["str"]]],[11,"parse_any","","",315,[[["parsestream"]],["result"]]],[11,"unraw","","",315,[[["self"]],["ident"]]],[11,"advance_to","syn::parse","",313,[[["self"]]]],[11,"parse","syn::token","",192,[[["parsestream"]],["result"]]],[11,"parse","","",193,[[["parsestream"]],["result"]]],[11,"parse","","",194,[[["parsestream"]],["result"]]],[11,"parse","","",195,[[["parsestream"]],["result"]]],[11,"parse","","",196,[[["parsestream"]],["result"]]],[11,"parse","","",197,[[["parsestream"]],["result"]]],[11,"parse","","",198,[[["parsestream"]],["result"]]],[11,"parse","","",199,[[["parsestream"]],["result"]]],[11,"parse","","",200,[[["parsestream"]],["result"]]],[11,"parse","","",201,[[["parsestream"]],["result"]]],[11,"parse","","",202,[[["parsestream"]],["result"]]],[11,"parse","","",203,[[["parsestream"]],["result"]]],[11,"parse","","",204,[[["parsestream"]],["result"]]],[11,"parse","","",205,[[["parsestream"]],["result"]]],[11,"parse","","",206,[[["parsestream"]],["result"]]],[11,"parse","","",207,[[["parsestream"]],["result"]]],[11,"parse","","",208,[[["parsestream"]],["result"]]],[11,"parse","","",209,[[["parsestream"]],["result"]]],[11,"parse","","",210,[[["parsestream"]],["result"]]],[11,"parse","","",211,[[["parsestream"]],["result"]]],[11,"parse","","",212,[[["parsestream"]],["result"]]],[11,"parse","","",213,[[["parsestream"]],["result"]]],[11,"parse","","",214,[[["parsestream"]],["result"]]],[11,"parse","","",215,[[["parsestream"]],["result"]]],[11,"parse","","",216,[[["parsestream"]],["result"]]],[11,"parse","","",217,[[["parsestream"]],["result"]]],[11,"parse","","",218,[[["parsestream"]],["result"]]],[11,"parse","","",219,[[["parsestream"]],["result"]]],[11,"parse","","",220,[[["parsestream"]],["result"]]],[11,"parse","","",221,[[["parsestream"]],["result"]]],[11,"parse","","",222,[[["parsestream"]],["result"]]],[11,"parse","","",223,[[["parsestream"]],["result"]]],[11,"parse","","",224,[[["parsestream"]],["result"]]],[11,"parse","","",225,[[["parsestream"]],["result"]]],[11,"parse","","",226,[[["parsestream"]],["result"]]],[11,"parse","","",227,[[["parsestream"]],["result"]]],[11,"parse","","",228,[[["parsestream"]],["result"]]],[11,"parse","","",229,[[["parsestream"]],["result"]]],[11,"parse","","",230,[[["parsestream"]],["result"]]],[11,"parse","","",231,[[["parsestream"]],["result"]]],[11,"parse","","",232,[[["parsestream"]],["result"]]],[11,"parse","","",233,[[["parsestream"]],["result"]]],[11,"parse","","",234,[[["parsestream"]],["result"]]],[11,"parse","","",235,[[["parsestream"]],["result"]]],[11,"parse","","",236,[[["parsestream"]],["result"]]],[11,"parse","","",237,[[["parsestream"]],["result"]]],[11,"parse","","",238,[[["parsestream"]],["result"]]],[11,"parse","","",239,[[["parsestream"]],["result"]]],[11,"parse","","",240,[[["parsestream"]],["result"]]],[11,"parse","","",241,[[["parsestream"]],["result"]]],[11,"parse","","",242,[[["parsestream"]],["result"]]],[11,"parse","","",243,[[["parsestream"]],["result"]]],[11,"parse","","",244,[[["parsestream"]],["result"]]],[11,"parse","","",245,[[["parsestream"]],["result"]]],[11,"parse","","",246,[[["parsestream"]],["result"]]],[11,"parse","","",247,[[["parsestream"]],["result"]]],[11,"parse","","",248,[[["parsestream"]],["result"]]],[11,"parse","","",249,[[["parsestream"]],["result"]]],[11,"parse","","",250,[[["parsestream"]],["result"]]],[11,"parse","","",251,[[["parsestream"]],["result"]]],[11,"parse","","",252,[[["parsestream"]],["result"]]],[11,"parse","","",253,[[["parsestream"]],["result"]]],[11,"parse","","",254,[[["parsestream"]],["result"]]],[11,"parse","","",255,[[["parsestream"]],["result"]]],[11,"parse","","",256,[[["parsestream"]],["result"]]],[11,"parse","","",257,[[["parsestream"]],["result"]]],[11,"parse","","",258,[[["parsestream"]],["result"]]],[11,"parse","","",259,[[["parsestream"]],["result"]]],[11,"parse","","",260,[[["parsestream"]],["result"]]],[11,"parse","","",261,[[["parsestream"]],["result"]]],[11,"parse","","",262,[[["parsestream"]],["result"]]],[11,"parse","","",263,[[["parsestream"]],["result"]]],[11,"parse","","",264,[[["parsestream"]],["result"]]],[11,"parse","","",265,[[["parsestream"]],["result"]]],[11,"parse","","",266,[[["parsestream"]],["result"]]],[11,"parse","","",267,[[["parsestream"]],["result"]]],[11,"parse","","",268,[[["parsestream"]],["result"]]],[11,"parse","","",269,[[["parsestream"]],["result"]]],[11,"parse","","",270,[[["parsestream"]],["result"]]],[11,"parse","","",271,[[["parsestream"]],["result"]]],[11,"parse","","",272,[[["parsestream"]],["result"]]],[11,"parse","","",273,[[["parsestream"]],["result"]]],[11,"parse","","",274,[[["parsestream"]],["result"]]],[11,"parse","","",275,[[["parsestream"]],["result"]]],[11,"parse","","",276,[[["parsestream"]],["result"]]],[11,"parse","","",277,[[["parsestream"]],["result"]]],[11,"parse","","",278,[[["parsestream"]],["result"]]],[11,"parse","","",279,[[["parsestream"]],["result"]]],[11,"parse","","",280,[[["parsestream"]],["result"]]],[11,"parse","","",281,[[["parsestream"]],["result"]]],[11,"parse","","",282,[[["parsestream"]],["result"]]],[11,"parse","","",283,[[["parsestream"]],["result"]]],[11,"parse","","",284,[[["parsestream"]],["result"]]],[11,"parse","","",285,[[["parsestream"]],["result"]]],[11,"parse","","",286,[[["parsestream"]],["result"]]],[11,"parse","","",287,[[["parsestream"]],["result"]]],[11,"parse","","",288,[[["parsestream"]],["result"]]],[11,"parse","","",289,[[["parsestream"]],["result"]]],[11,"parse","","",290,[[["parsestream"]],["result"]]],[11,"parse","syn","",315,[[["parsestream"]],["result"]]],[11,"parse","","",159,[[["parsestream"]],["result"]]],[11,"parse","","",1,[[["parsestream"]],["result"]]],[11,"parse","","",2,[[["parsestream"]],["result"]]],[11,"parse","","",160,[[["parsestream"]],["result"]]],[11,"parse","","",6,[[["parsestream"]],["result"]]],[11,"parse","","",4,[[["parsestream"]],["result"]]],[11,"parse","","",5,[[["parsestream"]],["result"]]],[11,"parse","","",162,[[["parsestream"]],["result"]]],[11,"parse","","",163,[[["parsestream"]],["result"]]],[11,"parse","","",29,[[["parsestream"]],["result"]]],[11,"parse","","",25,[[["parsestream"]],["result"]]],[11,"parse","","",23,[[["parsestream"]],["result"]]],[11,"parse","","",30,[[["parsestream"]],["result"]]],[11,"parse","","",32,[[["parsestream"]],["result"]]],[11,"parse","","",26,[[["parsestream"]],["result"]]],[11,"parse","","",16,[[["parsestream"]],["result"]]],[11,"parse","","",10,[[["parsestream"]],["result"]]],[11,"parse","","",18,[[["parsestream"]],["result"]]],[11,"parse","","",33,[[["parsestream"]],["result"]]],[11,"parse","","",43,[[["parsestream"]],["result"]]],[11,"parse","","",14,[[["parsestream"]],["result"]]],[11,"parse","","",45,[[["parsestream"]],["result"]]],[11,"parse","","",19,[[["parsestream"]],["result"]]],[11,"parse","","",44,[[["parsestream"]],["result"]]],[11,"parse","","",28,[[["parsestream"]],["result"]]],[11,"parse","","",20,[[["parsestream"]],["result"]]],[11,"parse","","",46,[[["parsestream"]],["result"]]],[11,"parse","","",15,[[["parsestream"]],["result"]]],[11,"parse","","",11,[[["parsestream"]],["result"]]],[11,"parse","","",12,[[["parsestream"]],["result"]]],[11,"parse","","",22,[[["parsestream"]],["result"]]],[11,"parse","","",27,[[["parsestream"]],["result"]]],[11,"parse","","",36,[[["parsestream"]],["result"]]],[11,"parse","","",37,[[["parsestream"]],["result"]]],[11,"parse","","",17,[[["parsestream"]],["result"]]],[11,"parse","","",21,[[["parsestream"]],["result"]]],[11,"parse","","",39,[[["parsestream"]],["result"]]],[11,"parse","","",31,[[["parsestream"]],["result"]]],[11,"parse","","",40,[[["parsestream"]],["result"]]],[11,"parse","","",38,[[["parsestream"]],["result"]]],[11,"parse","","",34,[[["parsestream"]],["result"]]],[11,"parse","","",41,[[["parsestream"]],["result"]]],[11,"parse","","",13,[[["parsestream"]],["result"]]],[11,"parse","","",42,[[["parsestream"]],["result"]]],[11,"parse","","",49,[[["parsestream"]],["result"]]],[11,"parse","","",48,[[["parsestream"]],["result"]]],[11,"parse","","",55,[[["parsestream"]],["result"]]],[11,"parse","","",54,[[["parsestream"]],["result"]]],[11,"parse","","",167,[[["parsestream"]],["result"]]],[11,"parse","","",35,[[["parsestream"]],["result"]]],[11,"parse","","",52,[[["parsestream"]],["result"]]],[11,"parse","","",168,[[["parsestream"]],["result"]]],[11,"parse","","",166,[[["parsestream"]],["result"]]],[11,"parse","","",164,[[["parsestream"]],["result"]]],[11,"parse","","",51,[[["parsestream"]],[["result",["arm"]],["arm"]]]],[11,"parse","","",50,[[["parsestream"]],["result"]]],[11,"parse","","",73,[[["parsestream"]],["result"]]],[11,"parse","","",169,[[["parsestream"]],["result"]]],[11,"parse","","",74,[[["parsestream"]],["result"]]],[11,"parse","","",71,[[["parsestream"]],["result"]]],[11,"parse","","",79,[[["parsestream"]],["result"]]],[11,"parse","","",171,[[["parsestream"]],["result"]]],[11,"parse","","",78,[[["parsestream"]],["result"]]],[11,"parse","","",170,[[["parsestream"]],["result"]]],[11,"parse","","",72,[[["parsestream"]],["result"]]],[11,"parse","","",80,[[["parsestream"]],["result"]]],[11,"parse","","",172,[[["parsestream"]],["result"]]],[11,"parse","","",176,[[["parsestream"]],["result"]]],[11,"parse","","",103,[[["parsestream"]],["result"]]],[11,"parse","","",104,[[["parsestream"]],["result"]]],[11,"parse","","",99,[[["parsestream"]],["result"]]],[11,"parse","","",112,[[["parsestream"]],["result"]]],[11,"parse","","",178,[[["parsestream"]],[["usetree"],["result",["usetree"]]]]],[11,"parse","","",106,[[["parsestream"]],["result"]]],[11,"parse","","",96,[[["parsestream"]],["result"]]],[11,"parse","","",100,[[["parsestream"]],["result"]]],[11,"parse","","",173,[[["parsestream"]],["result"]]],[11,"parse","","",105,[[["parsestream"]],["result"]]],[11,"parse","","",101,[[["parsestream"]],["result"]]],[11,"parse","","",174,[[["parsestream"]],["result"]]],[11,"parse","","",85,[[["parsestream"]],["result"]]],[11,"parse","","",87,[[["parsestream"]],["result"]]],[11,"parse","","",88,[[["parsestream"]],["result"]]],[11,"parse","","",86,[[["parsestream"]],["result"]]],[11,"parse","","",110,[[["parsestream"]],["result"]]],[11,"parse","","",98,[[["parsestream"]],["result"]]],[11,"parse","","",107,[[["parsestream"]],["result"]]],[11,"parse","","",97,[[["parsestream"]],["result"]]],[11,"parse","","",111,[[["parsestream"]],["result"]]],[11,"parse","","",108,[[["parsestream"]],["result"]]],[11,"parse","","",109,[[["parsestream"]],["result"]]],[11,"parse","","",177,[[["parsestream"]],["result"]]],[11,"parse","","",115,[[["parsestream"]],["result"]]],[11,"parse","","",117,[[["parsestream"]],["result"]]],[11,"parse","","",118,[[["parsestream"]],["result"]]],[11,"parse","","",116,[[["parsestream"]],["result"]]],[11,"parse","","",102,[[["parsestream"]],["result"]]],[11,"parse","","",175,[[["parsestream"]],["result"]]],[11,"parse","","",90,[[["parsestream"]],["result"]]],[11,"parse","","",93,[[["parsestream"]],["result"]]],[11,"parse","","",94,[[["parsestream"]],["result"]]],[11,"parse","","",91,[[["parsestream"]],["result"]]],[11,"parse","","",92,[[["parsestream"]],["result"]]],[11,"parse","","",125,[[["parsestream"]],["result"]]],[11,"parse","","",126,[[["parsestream"]],["result"]]],[11,"parse","","",181,[[["parsestream"]],["result"]]],[11,"parse","","",296,[[["parsestream"]],["result"]]],[11,"parse","","",297,[[["parsestream"]],["result"]]],[11,"parse","","",298,[[["parsestream"]],["result"]]],[11,"parse","","",299,[[["parsestream"]],["result"]]],[11,"parse","","",300,[[["parsestream"]],["result"]]],[11,"parse","","",301,[[["parsestream"]],["result"]]],[11,"parse","","",127,[[["parsestream"]],["result"]]],[11,"parse","","",129,[[["parsestream"]],["result"]]],[11,"parse","","",133,[[["parsestream"]],["result"]]],[11,"parse","","",185,[[["parsestream"]],["result"]]],[11,"parse","","",186,[[["parsestream"]],["result"]]],[11,"parse","","",189,[[["parsestream"]],["result"]]],[11,"parse","","",147,[[["parsestream"]],["result"]]],[11,"parse","","",136,[[["parsestream"]],["result"]]],[11,"parse","","",145,[[["parsestream"]],["result"]]],[11,"parse","","",146,[[["parsestream"]],["result"]]],[11,"parse","","",137,[[["parsestream"]],["result"]]],[11,"parse","","",142,[[["parsestream"]],["result"]]],[11,"parse","","",140,[[["parsestream"]],["result"]]],[11,"parse","","",149,[[["parsestream"]],["result"]]],[11,"parse","","",141,[[["parsestream"]],["result"]]],[11,"parse","","",144,[[["parsestream"]],["result"]]],[11,"parse","","",188,[[["parsestream"]],["result"]]],[11,"parse","","",148,[[["parsestream"]],["result"]]],[11,"parse","","",139,[[["parsestream"]],["result"]]],[11,"parse","","",138,[[["parsestream"]],["result"]]],[11,"parse","","",143,[[["parsestream"]],["result"]]],[11,"parse","","",135,[[["parsestream"]],["result"]]],[11,"parse","","",187,[[["parsestream"]],["result"]]],[11,"parse","","",134,[[["parsestream"]],["result"]]],[11,"parse","","",155,[[["parsestream"]],["result"]]],[11,"parse","","",190,[[["parsestream"]],["result"]]],[11,"parse","","",151,[[["parsestream"]],["result"]]],[11,"parse","","",154,[[["parsestream"]],["result"]]],[11,"parse","","",156,[[["parsestream"]],["result"]]],[11,"parse","","",152,[[["parsestream"]],["result"]]],[11,"parse","","",153,[[["parsestream"]],["result"]]],[11,"drop","syn::parse","",313,[[["self"]]]],[11,"from","syn","",315,[[["selfvalue"]],["ident"]]],[11,"from","","",315,[[["selftype"]],["ident"]]],[11,"from","","",315,[[["super"]],["ident"]]],[11,"from","","",315,[[["crate"]],["ident"]]],[11,"from","","",315,[[["extern"]],["ident"]]],[11,"from","","",315,[[["underscore"]],["ident"]]],[11,"from","","",159,[[["ident"]],["meta"]]],[11,"from","","",159,[[["metalist"]],["meta"]]],[11,"from","","",159,[[["metanamevalue"]],["meta"]]],[11,"from","","",160,[[["meta"]],["nestedmeta"]]],[11,"from","","",160,[[["lit"]],["nestedmeta"]]],[11,"from","","",161,[[["fieldsnamed"]],["fields"]]],[11,"from","","",161,[[["fieldsunnamed"]],["fields"]]],[11,"from","","",162,[[["vispublic"]],["visibility"]]],[11,"from","","",162,[[["viscrate"]],["visibility"]]],[11,"from","","",162,[[["visrestricted"]],["visibility"]]],[11,"from","","",163,[[["exprbox"]],["expr"]]],[11,"from","","",163,[[["exprinplace"]],["expr"]]],[11,"from","","",163,[[["exprarray"]],["expr"]]],[11,"from","","",163,[[["exprcall"]],["expr"]]],[11,"from","","",163,[[["exprmethodcall"]],["expr"]]],[11,"from","","",163,[[["exprtuple"]],["expr"]]],[11,"from","","",163,[[["exprbinary"]],["expr"]]],[11,"from","","",163,[[["exprunary"]],["expr"]]],[11,"from","","",163,[[["exprlit"]],["expr"]]],[11,"from","","",163,[[["exprcast"]],["expr"]]],[11,"from","","",163,[[["exprtype"]],["expr"]]],[11,"from","","",163,[[["exprlet"]],["expr"]]],[11,"from","","",163,[[["exprif"]],["expr"]]],[11,"from","","",163,[[["exprwhile"]],["expr"]]],[11,"from","","",163,[[["exprforloop"]],["expr"]]],[11,"from","","",163,[[["exprloop"]],["expr"]]],[11,"from","","",163,[[["exprmatch"]],["expr"]]],[11,"from","","",163,[[["exprclosure"]],["expr"]]],[11,"from","","",163,[[["exprunsafe"]],["expr"]]],[11,"from","","",163,[[["exprblock"]],["expr"]]],[11,"from","","",163,[[["exprassign"]],["expr"]]],[11,"from","","",163,[[["exprassignop"]],["expr"]]],[11,"from","","",163,[[["exprfield"]],["expr"]]],[11,"from","","",163,[[["exprindex"]],["expr"]]],[11,"from","","",163,[[["exprrange"]],["expr"]]],[11,"from","","",163,[[["exprpath"]],["expr"]]],[11,"from","","",163,[[["exprreference"]],["expr"]]],[11,"from","","",163,[[["exprbreak"]],["expr"]]],[11,"from","","",163,[[["exprcontinue"]],["expr"]]],[11,"from","","",163,[[["exprreturn"]],["expr"]]],[11,"from","","",163,[[["exprmacro"]],["expr"]]],[11,"from","","",163,[[["exprstruct"]],["expr"]]],[11,"from","","",163,[[["exprrepeat"]],["expr"]]],[11,"from","","",163,[[["exprparen"]],["expr"]]],[11,"from","","",163,[[["exprgroup"]],["expr"]]],[11,"from","","",163,[[["exprtry"]],["expr"]]],[11,"from","","",163,[[["exprasync"]],["expr"]]],[11,"from","","",163,[[["exprtryblock"]],["expr"]]],[11,"from","","",163,[[["expryield"]],["expr"]]],[11,"from","","",163,[[["exprverbatim"]],["expr"]]],[11,"from","","",50,[[["usize"]],["index"]]],[11,"from","","",166,[[["patwild"]],["pat"]]],[11,"from","","",166,[[["patident"]],["pat"]]],[11,"from","","",166,[[["patstruct"]],["pat"]]],[11,"from","","",166,[[["pattuplestruct"]],["pat"]]],[11,"from","","",166,[[["patpath"]],["pat"]]],[11,"from","","",166,[[["pattuple"]],["pat"]]],[11,"from","","",166,[[["patbox"]],["pat"]]],[11,"from","","",166,[[["patref"]],["pat"]]],[11,"from","","",166,[[["patlit"]],["pat"]]],[11,"from","","",166,[[["patrange"]],["pat"]]],[11,"from","","",166,[[["patslice"]],["pat"]]],[11,"from","","",166,[[["patmacro"]],["pat"]]],[11,"from","","",166,[[["patverbatim"]],["pat"]]],[11,"from","","",169,[[["typeparam"]],["genericparam"]]],[11,"from","","",169,[[["lifetimedef"]],["genericparam"]]],[11,"from","","",169,[[["constparam"]],["genericparam"]]],[11,"from","","",79,[[["ident"]],["self"]]],[11,"from","","",171,[[["traitbound"]],["typeparambound"]]],[11,"from","","",171,[[["lifetime"]],["typeparambound"]]],[11,"from","","",172,[[["predicatetype"]],["wherepredicate"]]],[11,"from","","",172,[[["predicatelifetime"]],["wherepredicate"]]],[11,"from","","",172,[[["predicateeq"]],["wherepredicate"]]],[11,"from","","",176,[[["itemexterncrate"]],["item"]]],[11,"from","","",176,[[["itemuse"]],["item"]]],[11,"from","","",176,[[["itemstatic"]],["item"]]],[11,"from","","",176,[[["itemconst"]],["item"]]],[11,"from","","",176,[[["itemfn"]],["item"]]],[11,"from","","",176,[[["itemmod"]],["item"]]],[11,"from","","",176,[[["itemforeignmod"]],["item"]]],[11,"from","","",176,[[["itemtype"]],["item"]]],[11,"from","","",176,[[["itemexistential"]],["item"]]],[11,"from","","",176,[[["itemstruct"]],["item"]]],[11,"from","","",176,[[["itemenum"]],["item"]]],[11,"from","","",176,[[["itemunion"]],["item"]]],[11,"from","","",176,[[["itemtrait"]],["item"]]],[11,"from","","",176,[[["itemtraitalias"]],["item"]]],[11,"from","","",176,[[["itemimpl"]],["item"]]],[11,"from","","",176,[[["itemmacro"]],["item"]]],[11,"from","","",176,[[["itemmacro2"]],["item"]]],[11,"from","","",176,[[["itemverbatim"]],["item"]]],[11,"from","","",176,[[["deriveinput"]],["item"]]],[11,"from","","",178,[[["usepath"]],["usetree"]]],[11,"from","","",178,[[["usename"]],["usetree"]]],[11,"from","","",178,[[["userename"]],["usetree"]]],[11,"from","","",178,[[["useglob"]],["usetree"]]],[11,"from","","",178,[[["usegroup"]],["usetree"]]],[11,"from","","",174,[[["foreignitemfn"]],["foreignitem"]]],[11,"from","","",174,[[["foreignitemstatic"]],["foreignitem"]]],[11,"from","","",174,[[["foreignitemtype"]],["foreignitem"]]],[11,"from","","",174,[[["foreignitemmacro"]],["foreignitem"]]],[11,"from","","",174,[[["foreignitemverbatim"]],["foreignitem"]]],[11,"from","","",177,[[["traititemconst"]],["traititem"]]],[11,"from","","",177,[[["traititemmethod"]],["traititem"]]],[11,"from","","",177,[[["traititemtype"]],["traititem"]]],[11,"from","","",177,[[["traititemmacro"]],["traititem"]]],[11,"from","","",177,[[["traititemverbatim"]],["traititem"]]],[11,"from","","",175,[[["implitemconst"]],["implitem"]]],[11,"from","","",175,[[["implitemmethod"]],["implitem"]]],[11,"from","","",175,[[["implitemtype"]],["implitem"]]],[11,"from","","",175,[[["implitemexistential"]],["implitem"]]],[11,"from","","",175,[[["implitemmacro"]],["implitem"]]],[11,"from","","",175,[[["implitemverbatim"]],["implitem"]]],[11,"from","","",173,[[["argselfref"]],["fnarg"]]],[11,"from","","",173,[[["argself"]],["fnarg"]]],[11,"from","","",173,[[["argcaptured"]],["fnarg"]]],[11,"from","","",173,[[["pat"]],["fnarg"]]],[11,"from","","",173,[[["type"]],["fnarg"]]],[11,"from","","",181,[[["litstr"]],["lit"]]],[11,"from","","",181,[[["litbytestr"]],["lit"]]],[11,"from","","",181,[[["litbyte"]],["lit"]]],[11,"from","","",181,[[["litchar"]],["lit"]]],[11,"from","","",181,[[["litint"]],["lit"]]],[11,"from","","",181,[[["litfloat"]],["lit"]]],[11,"from","","",181,[[["litbool"]],["lit"]]],[11,"from","","",181,[[["litverbatim"]],["lit"]]],[11,"from","","",184,[[["datastruct"]],["data"]]],[11,"from","","",184,[[["dataenum"]],["data"]]],[11,"from","","",184,[[["dataunion"]],["data"]]],[11,"from","","",189,[[["typeslice"]],["type"]]],[11,"from","","",189,[[["typearray"]],["type"]]],[11,"from","","",189,[[["typeptr"]],["type"]]],[11,"from","","",189,[[["typereference"]],["type"]]],[11,"from","","",189,[[["typebarefn"]],["type"]]],[11,"from","","",189,[[["typenever"]],["type"]]],[11,"from","","",189,[[["typetuple"]],["type"]]],[11,"from","","",189,[[["typepath"]],["type"]]],[11,"from","","",189,[[["typetraitobject"]],["type"]]],[11,"from","","",189,[[["typeimpltrait"]],["type"]]],[11,"from","","",189,[[["typeparen"]],["type"]]],[11,"from","","",189,[[["typegroup"]],["type"]]],[11,"from","","",189,[[["typeinfer"]],["type"]]],[11,"from","","",189,[[["typemacro"]],["type"]]],[11,"from","","",189,[[["typeverbatim"]],["type"]]],[11,"from","","",155,[[["t"]],["self"]]],[11,"from","","",156,[[["t"]],["self"]]],[11,"from","","",314,[[["lexerror"]],["self"]]],[11,"len","syn::punctuated","",318,[[["self"]],["usize"]]],[11,"len","","",319,[[["self"]],["usize"]]],[11,"len","","",320,[[["self"]],["usize"]]],[11,"len","","",321,[[["self"]],["usize"]]],[11,"len","","",322,[[["self"]],["usize"]]],[11,"len","","",323,[[["self"]],["usize"]]],[11,"extend","","",306,[[["self"],["intoiterator"]]]],[11,"extend","","",306,[[["intoiterator"],["self"]]]],[11,"into_iter","","",306,[[]]],[11,"next","","",318,[[["self"]],["option"]]],[11,"next","","",319,[[["self"]],["option"]]],[11,"next","","",320,[[["self"]],["option"]]],[11,"next","","",321,[[["self"]],["option"]]],[11,"next","","",322,[[["self"]],["option"]]],[11,"next","","",323,[[["self"]],["option"]]],[11,"clone","syn::token","",192,[[["self"]],["underscore"]]],[11,"clone","","",193,[[["self"]],["abstract"]]],[11,"clone","","",194,[[["self"]],["as"]]],[11,"clone","","",195,[[["self"]],["async"]]],[11,"clone","","",196,[[["self"]],["auto"]]],[11,"clone","","",197,[[["self"]],["become"]]],[11,"clone","","",198,[[["self"]],["box"]]],[11,"clone","","",199,[[["self"]],["break"]]],[11,"clone","","",200,[[["self"]],["const"]]],[11,"clone","","",201,[[["self"]],["continue"]]],[11,"clone","","",202,[[["self"]],["crate"]]],[11,"clone","","",203,[[["self"]],["default"]]],[11,"clone","","",204,[[["self"]],["do"]]],[11,"clone","","",205,[[["self"]],["dyn"]]],[11,"clone","","",206,[[["self"]],["else"]]],[11,"clone","","",207,[[["self"]],["enum"]]],[11,"clone","","",208,[[["self"]],["existential"]]],[11,"clone","","",209,[[["self"]],["extern"]]],[11,"clone","","",210,[[["self"]],["final"]]],[11,"clone","","",211,[[["self"]],["fn"]]],[11,"clone","","",212,[[["self"]],["for"]]],[11,"clone","","",213,[[["self"]],["if"]]],[11,"clone","","",214,[[["self"]],["impl"]]],[11,"clone","","",215,[[["self"]],["in"]]],[11,"clone","","",216,[[["self"]],["let"]]],[11,"clone","","",217,[[["self"]],["loop"]]],[11,"clone","","",218,[[["self"]],["macro"]]],[11,"clone","","",219,[[["self"]],["match"]]],[11,"clone","","",220,[[["self"]],["mod"]]],[11,"clone","","",221,[[["self"]],["move"]]],[11,"clone","","",222,[[["self"]],["mut"]]],[11,"clone","","",223,[[["self"]],["override"]]],[11,"clone","","",224,[[["self"]],["priv"]]],[11,"clone","","",225,[[["self"]],["pub"]]],[11,"clone","","",226,[[["self"]],["ref"]]],[11,"clone","","",227,[[["self"]],["return"]]],[11,"clone","","",228,[[["self"]],["selftype"]]],[11,"clone","","",229,[[["self"]],["selfvalue"]]],[11,"clone","","",230,[[["self"]],["static"]]],[11,"clone","","",231,[[["self"]],["struct"]]],[11,"clone","","",232,[[["self"]],["super"]]],[11,"clone","","",233,[[["self"]],["trait"]]],[11,"clone","","",234,[[["self"]],["try"]]],[11,"clone","","",235,[[["self"]],["type"]]],[11,"clone","","",236,[[["self"]],["typeof"]]],[11,"clone","","",237,[[["self"]],["union"]]],[11,"clone","","",238,[[["self"]],["unsafe"]]],[11,"clone","","",239,[[["self"]],["unsized"]]],[11,"clone","","",240,[[["self"]],["use"]]],[11,"clone","","",241,[[["self"]],["virtual"]]],[11,"clone","","",242,[[["self"]],["where"]]],[11,"clone","","",243,[[["self"]],["while"]]],[11,"clone","","",244,[[["self"]],["yield"]]],[11,"clone","","",245,[[["self"]],["add"]]],[11,"clone","","",246,[[["self"]],["addeq"]]],[11,"clone","","",247,[[["self"]],["and"]]],[11,"clone","","",248,[[["self"]],["andand"]]],[11,"clone","","",249,[[["self"]],["andeq"]]],[11,"clone","","",250,[[["self"]],["at"]]],[11,"clone","","",251,[[["self"]],["bang"]]],[11,"clone","","",252,[[["self"]],["caret"]]],[11,"clone","","",253,[[["self"]],["careteq"]]],[11,"clone","","",254,[[["self"]],["colon"]]],[11,"clone","","",255,[[["self"]],["colon2"]]],[11,"clone","","",256,[[["self"]],["comma"]]],[11,"clone","","",257,[[["self"]],["div"]]],[11,"clone","","",258,[[["self"]],["diveq"]]],[11,"clone","","",259,[[["self"]],["dollar"]]],[11,"clone","","",260,[[["self"]],["dot"]]],[11,"clone","","",261,[[["self"]],["dot2"]]],[11,"clone","","",262,[[["self"]],["dot3"]]],[11,"clone","","",263,[[["self"]],["dotdoteq"]]],[11,"clone","","",264,[[["self"]],["eq"]]],[11,"clone","","",265,[[["self"]],["eqeq"]]],[11,"clone","","",266,[[["self"]],["ge"]]],[11,"clone","","",267,[[["self"]],["gt"]]],[11,"clone","","",268,[[["self"]],["le"]]],[11,"clone","","",269,[[["self"]],["lt"]]],[11,"clone","","",270,[[["self"]],["muleq"]]],[11,"clone","","",271,[[["self"]],["ne"]]],[11,"clone","","",272,[[["self"]],["or"]]],[11,"clone","","",273,[[["self"]],["oreq"]]],[11,"clone","","",274,[[["self"]],["oror"]]],[11,"clone","","",275,[[["self"]],["pound"]]],[11,"clone","","",276,[[["self"]],["question"]]],[11,"clone","","",277,[[["self"]],["rarrow"]]],[11,"clone","","",278,[[["self"]],["larrow"]]],[11,"clone","","",279,[[["self"]],["rem"]]],[11,"clone","","",280,[[["self"]],["remeq"]]],[11,"clone","","",281,[[["self"]],["fatarrow"]]],[11,"clone","","",282,[[["self"]],["semi"]]],[11,"clone","","",283,[[["self"]],["shl"]]],[11,"clone","","",284,[[["self"]],["shleq"]]],[11,"clone","","",285,[[["self"]],["shr"]]],[11,"clone","","",286,[[["self"]],["shreq"]]],[11,"clone","","",287,[[["self"]],["star"]]],[11,"clone","","",288,[[["self"]],["sub"]]],[11,"clone","","",289,[[["self"]],["subeq"]]],[11,"clone","","",290,[[["self"]],["tilde"]]],[11,"clone","","",291,[[["self"]],["brace"]]],[11,"clone","","",292,[[["self"]],["bracket"]]],[11,"clone","","",293,[[["self"]],["paren"]]],[11,"clone","","",294,[[["self"]],["group"]]],[11,"clone","syn","",0,[[["self"]],["attribute"]]],[11,"clone","","",158,[[["self"]],["attrstyle"]]],[11,"clone","","",159,[[["self"]],["meta"]]],[11,"clone","","",1,[[["self"]],["metalist"]]],[11,"clone","","",2,[[["self"]],["metanamevalue"]]],[11,"clone","","",160,[[["self"]],["nestedmeta"]]],[11,"clone","","",6,[[["self"]],["variant"]]],[11,"clone","","",161,[[["self"]],["fields"]]],[11,"clone","","",4,[[["self"]],["fieldsnamed"]]],[11,"clone","","",5,[[["self"]],["fieldsunnamed"]]],[11,"clone","","",3,[[["self"]],["field"]]],[11,"clone","","",162,[[["self"]],["visibility"]]],[11,"clone","","",8,[[["self"]],["vispublic"]]],[11,"clone","","",7,[[["self"]],["viscrate"]]],[11,"clone","","",9,[[["self"]],["visrestricted"]]],[11,"clone","","",163,[[["self"]],["expr"]]],[11,"clone","","",16,[[["self"]],["exprbox"]]],[11,"clone","","",26,[[["self"]],["exprinplace"]]],[11,"clone","","",10,[[["self"]],["exprarray"]]],[11,"clone","","",18,[[["self"]],["exprcall"]]],[11,"clone","","",33,[[["self"]],["exprmethodcall"]]],[11,"clone","","",43,[[["self"]],["exprtuple"]]],[11,"clone","","",14,[[["self"]],["exprbinary"]]],[11,"clone","","",45,[[["self"]],["exprunary"]]],[11,"clone","","",29,[[["self"]],["exprlit"]]],[11,"clone","","",19,[[["self"]],["exprcast"]]],[11,"clone","","",44,[[["self"]],["exprtype"]]],[11,"clone","","",28,[[["self"]],["exprlet"]]],[11,"clone","","",25,[[["self"]],["exprif"]]],[11,"clone","","",48,[[["self"]],["exprwhile"]]],[11,"clone","","",23,[[["self"]],["exprforloop"]]],[11,"clone","","",30,[[["self"]],["exprloop"]]],[11,"clone","","",32,[[["self"]],["exprmatch"]]],[11,"clone","","",20,[[["self"]],["exprclosure"]]],[11,"clone","","",46,[[["self"]],["exprunsafe"]]],[11,"clone","","",15,[[["self"]],["exprblock"]]],[11,"clone","","",11,[[["self"]],["exprassign"]]],[11,"clone","","",12,[[["self"]],["exprassignop"]]],[11,"clone","","",22,[[["self"]],["exprfield"]]],[11,"clone","","",27,[[["self"]],["exprindex"]]],[11,"clone","","",36,[[["self"]],["exprrange"]]],[11,"clone","","",35,[[["self"]],["exprpath"]]],[11,"clone","","",37,[[["self"]],["exprreference"]]],[11,"clone","","",17,[[["self"]],["exprbreak"]]],[11,"clone","","",21,[[["self"]],["exprcontinue"]]],[11,"clone","","",39,[[["self"]],["exprreturn"]]],[11,"clone","","",31,[[["self"]],["exprmacro"]]],[11,"clone","","",40,[[["self"]],["exprstruct"]]],[11,"clone","","",38,[[["self"]],["exprrepeat"]]],[11,"clone","","",34,[[["self"]],["exprparen"]]],[11,"clone","","",24,[[["self"]],["exprgroup"]]],[11,"clone","","",41,[[["self"]],["exprtry"]]],[11,"clone","","",13,[[["self"]],["exprasync"]]],[11,"clone","","",42,[[["self"]],["exprtryblock"]]],[11,"clone","","",49,[[["self"]],["expryield"]]],[11,"clone","","",47,[[["self"]],["exprverbatim"]]],[11,"clone","","",164,[[["self"]],["member"]]],[11,"clone","","",50,[[["self"]],["index"]]],[11,"clone","","",57,[[["self"]],["methodturbofish"]]],[11,"clone","","",165,[[["self"]],["genericmethodargument"]]],[11,"clone","","",54,[[["self"]],["fieldvalue"]]],[11,"clone","","",55,[[["self"]],["label"]]],[11,"clone","","",52,[[["self"]],["block"]]],[11,"clone","","",168,[[["self"]],["stmt"]]],[11,"clone","","",56,[[["self"]],["local"]]],[11,"clone","","",166,[[["self"]],["pat"]]],[11,"clone","","",70,[[["self"]],["patwild"]]],[11,"clone","","",59,[[["self"]],["patident"]]],[11,"clone","","",66,[[["self"]],["patstruct"]]],[11,"clone","","",68,[[["self"]],["pattuplestruct"]]],[11,"clone","","",62,[[["self"]],["patpath"]]],[11,"clone","","",67,[[["self"]],["pattuple"]]],[11,"clone","","",58,[[["self"]],["patbox"]]],[11,"clone","","",64,[[["self"]],["patref"]]],[11,"clone","","",60,[[["self"]],["patlit"]]],[11,"clone","","",63,[[["self"]],["patrange"]]],[11,"clone","","",65,[[["self"]],["patslice"]]],[11,"clone","","",61,[[["self"]],["patmacro"]]],[11,"clone","","",69,[[["self"]],["patverbatim"]]],[11,"clone","","",51,[[["self"]],["arm"]]],[11,"clone","","",167,[[["self"]],["rangelimits"]]],[11,"clone","","",53,[[["self"]],["fieldpat"]]],[11,"clone","","",73,[[["self"]],["generics"]]],[11,"clone","","",169,[[["self"]],["genericparam"]]],[11,"clone","","",79,[[["self"]],["typeparam"]]],[11,"clone","","",74,[[["self"]],["lifetimedef"]]],[11,"clone","","",72,[[["self"]],["constparam"]]],[11,"clone","","",316,[[["self"]],["implgenerics"]]],[11,"clone","","",295,[[["self"]],["typegenerics"]]],[11,"clone","","",317,[[["self"]],["turbofish"]]],[11,"clone","","",71,[[["self"]],["boundlifetimes"]]],[11,"clone","","",171,[[["self"]],["typeparambound"]]],[11,"clone","","",78,[[["self"]],["traitbound"]]],[11,"clone","","",170,[[["self"]],["traitboundmodifier"]]],[11,"clone","","",80,[[["self"]],["whereclause"]]],[11,"clone","","",172,[[["self"]],["wherepredicate"]]],[11,"clone","","",77,[[["self"]],["predicatetype"]]],[11,"clone","","",76,[[["self"]],["predicatelifetime"]]],[11,"clone","","",75,[[["self"]],["predicateeq"]]],[11,"clone","","",176,[[["self"]],["item"]]],[11,"clone","","",99,[[["self"]],["itemexterncrate"]]],[11,"clone","","",112,[[["self"]],["itemuse"]]],[11,"clone","","",106,[[["self"]],["itemstatic"]]],[11,"clone","","",96,[[["self"]],["itemconst"]]],[11,"clone","","",100,[[["self"]],["itemfn"]]],[11,"clone","","",105,[[["self"]],["itemmod"]]],[11,"clone","","",101,[[["self"]],["itemforeignmod"]]],[11,"clone","","",110,[[["self"]],["itemtype"]]],[11,"clone","","",98,[[["self"]],["itemexistential"]]],[11,"clone","","",107,[[["self"]],["itemstruct"]]],[11,"clone","","",97,[[["self"]],["itemenum"]]],[11,"clone","","",111,[[["self"]],["itemunion"]]],[11,"clone","","",108,[[["self"]],["itemtrait"]]],[11,"clone","","",109,[[["self"]],["itemtraitalias"]]],[11,"clone","","",102,[[["self"]],["itemimpl"]]],[11,"clone","","",103,[[["self"]],["itemmacro"]]],[11,"clone","","",104,[[["self"]],["itemmacro2"]]],[11,"clone","","",113,[[["self"]],["itemverbatim"]]],[11,"clone","","",178,[[["self"]],["usetree"]]],[11,"clone","","",123,[[["self"]],["usepath"]]],[11,"clone","","",122,[[["self"]],["usename"]]],[11,"clone","","",124,[[["self"]],["userename"]]],[11,"clone","","",120,[[["self"]],["useglob"]]],[11,"clone","","",121,[[["self"]],["usegroup"]]],[11,"clone","","",174,[[["self"]],["foreignitem"]]],[11,"clone","","",85,[[["self"]],["foreignitemfn"]]],[11,"clone","","",87,[[["self"]],["foreignitemstatic"]]],[11,"clone","","",88,[[["self"]],["foreignitemtype"]]],[11,"clone","","",86,[[["self"]],["foreignitemmacro"]]],[11,"clone","","",89,[[["self"]],["foreignitemverbatim"]]],[11,"clone","","",177,[[["self"]],["traititem"]]],[11,"clone","","",115,[[["self"]],["traititemconst"]]],[11,"clone","","",117,[[["self"]],["traititemmethod"]]],[11,"clone","","",118,[[["self"]],["traititemtype"]]],[11,"clone","","",116,[[["self"]],["traititemmacro"]]],[11,"clone","","",119,[[["self"]],["traititemverbatim"]]],[11,"clone","","",175,[[["self"]],["implitem"]]],[11,"clone","","",90,[[["self"]],["implitemconst"]]],[11,"clone","","",93,[[["self"]],["implitemmethod"]]],[11,"clone","","",94,[[["self"]],["implitemtype"]]],[11,"clone","","",91,[[["self"]],["implitemexistential"]]],[11,"clone","","",92,[[["self"]],["implitemmacro"]]],[11,"clone","","",95,[[["self"]],["implitemverbatim"]]],[11,"clone","","",114,[[["self"]],["methodsig"]]],[11,"clone","","",84,[[["self"]],["fndecl"]]],[11,"clone","","",173,[[["self"]],["fnarg"]]],[11,"clone","","",83,[[["self"]],["argselfref"]]],[11,"clone","","",82,[[["self"]],["argself"]]],[11,"clone","","",81,[[["self"]],["argcaptured"]]],[11,"clone","","",125,[[["self"]],["file"]]],[11,"clone","","",126,[[["self"]],["lifetime"]]],[11,"clone","","",181,[[["self"]],["lit"]]],[11,"clone","","",296,[[["self"]],["litstr"]]],[11,"clone","","",297,[[["self"]],["litbytestr"]]],[11,"clone","","",298,[[["self"]],["litbyte"]]],[11,"clone","","",299,[[["self"]],["litchar"]]],[11,"clone","","",300,[[["self"]],["litint"]]],[11,"clone","","",301,[[["self"]],["litfloat"]]],[11,"clone","","",127,[[["self"]],["litbool"]]],[11,"clone","","",128,[[["self"]],["litverbatim"]]],[11,"clone","","",182,[[["self"]],["strstyle"]]],[11,"clone","","",180,[[["self"]],["intsuffix"]]],[11,"clone","","",179,[[["self"]],["floatsuffix"]]],[11,"clone","","",129,[[["self"]],["macro"]]],[11,"clone","","",183,[[["self"]],["macrodelimiter"]]],[11,"clone","","",133,[[["self"]],["deriveinput"]]],[11,"clone","","",184,[[["self"]],["data"]]],[11,"clone","","",131,[[["self"]],["datastruct"]]],[11,"clone","","",130,[[["self"]],["dataenum"]]],[11,"clone","","",132,[[["self"]],["dataunion"]]],[11,"clone","","",185,[[["self"]],["binop"]]],[11,"clone","","",186,[[["self"]],["unop"]]],[11,"clone","","",189,[[["self"]],["type"]]],[11,"clone","","",147,[[["self"]],["typeslice"]]],[11,"clone","","",136,[[["self"]],["typearray"]]],[11,"clone","","",145,[[["self"]],["typeptr"]]],[11,"clone","","",146,[[["self"]],["typereference"]]],[11,"clone","","",137,[[["self"]],["typebarefn"]]],[11,"clone","","",142,[[["self"]],["typenever"]]],[11,"clone","","",149,[[["self"]],["typetuple"]]],[11,"clone","","",144,[[["self"]],["typepath"]]],[11,"clone","","",148,[[["self"]],["typetraitobject"]]],[11,"clone","","",139,[[["self"]],["typeimpltrait"]]],[11,"clone","","",143,[[["self"]],["typeparen"]]],[11,"clone","","",138,[[["self"]],["typegroup"]]],[11,"clone","","",140,[[["self"]],["typeinfer"]]],[11,"clone","","",141,[[["self"]],["typemacro"]]],[11,"clone","","",150,[[["self"]],["typeverbatim"]]],[11,"clone","","",134,[[["self"]],["abi"]]],[11,"clone","","",135,[[["self"]],["barefnarg"]]],[11,"clone","","",187,[[["self"]],["barefnargname"]]],[11,"clone","","",188,[[["self"]],["returntype"]]],[11,"clone","","",155,[[["self"]],["path"]]],[11,"clone","","",156,[[["self"]],["pathsegment"]]],[11,"clone","","",191,[[["self"]],["patharguments"]]],[11,"clone","","",190,[[["self"]],["genericargument"]]],[11,"clone","","",151,[[["self"]],["anglebracketedgenericarguments"]]],[11,"clone","","",152,[[["self"]],["binding"]]],[11,"clone","","",153,[[["self"]],["constraint"]]],[11,"clone","","",154,[[["self"]],["parenthesizedgenericarguments"]]],[11,"clone","","",157,[[["self"]],["qself"]]],[11,"clone","syn::buffer","",303,[[["self"]],["cursor"]]],[11,"clone","syn::punctuated","",306,[[["self"]],["punctuated"]]],[11,"clone","","",318,[[["self"]],["self"]]],[11,"clone","","",320,[[["self"]],["intopairs"]]],[11,"clone","","",321,[[["self"]],["intoiter"]]],[11,"clone","","",322,[[["self"]],["self"]]],[11,"clone","","",305,[[["self"]],["pair"]]],[11,"clone","syn::parse","",312,[[["self"]],["stepcursor"]]],[11,"clone","syn","",314,[[["self"]],["self"]]],[11,"default","syn::token","",192,[[],["self"]]],[11,"default","","",193,[[],["self"]]],[11,"default","","",194,[[],["self"]]],[11,"default","","",195,[[],["self"]]],[11,"default","","",196,[[],["self"]]],[11,"default","","",197,[[],["self"]]],[11,"default","","",198,[[],["self"]]],[11,"default","","",199,[[],["self"]]],[11,"default","","",200,[[],["self"]]],[11,"default","","",201,[[],["self"]]],[11,"default","","",202,[[],["self"]]],[11,"default","","",203,[[],["self"]]],[11,"default","","",204,[[],["self"]]],[11,"default","","",205,[[],["self"]]],[11,"default","","",206,[[],["self"]]],[11,"default","","",207,[[],["self"]]],[11,"default","","",208,[[],["self"]]],[11,"default","","",209,[[],["self"]]],[11,"default","","",210,[[],["self"]]],[11,"default","","",211,[[],["self"]]],[11,"default","","",212,[[],["self"]]],[11,"default","","",213,[[],["self"]]],[11,"default","","",214,[[],["self"]]],[11,"default","","",215,[[],["self"]]],[11,"default","","",216,[[],["self"]]],[11,"default","","",217,[[],["self"]]],[11,"default","","",218,[[],["self"]]],[11,"default","","",219,[[],["self"]]],[11,"default","","",220,[[],["self"]]],[11,"default","","",221,[[],["self"]]],[11,"default","","",222,[[],["self"]]],[11,"default","","",223,[[],["self"]]],[11,"default","","",224,[[],["self"]]],[11,"default","","",225,[[],["self"]]],[11,"default","","",226,[[],["self"]]],[11,"default","","",227,[[],["self"]]],[11,"default","","",228,[[],["self"]]],[11,"default","","",229,[[],["self"]]],[11,"default","","",230,[[],["self"]]],[11,"default","","",231,[[],["self"]]],[11,"default","","",232,[[],["self"]]],[11,"default","","",233,[[],["self"]]],[11,"default","","",234,[[],["self"]]],[11,"default","","",235,[[],["self"]]],[11,"default","","",236,[[],["self"]]],[11,"default","","",237,[[],["self"]]],[11,"default","","",238,[[],["self"]]],[11,"default","","",239,[[],["self"]]],[11,"default","","",240,[[],["self"]]],[11,"default","","",241,[[],["self"]]],[11,"default","","",242,[[],["self"]]],[11,"default","","",243,[[],["self"]]],[11,"default","","",244,[[],["self"]]],[11,"default","","",245,[[],["self"]]],[11,"default","","",246,[[],["self"]]],[11,"default","","",247,[[],["self"]]],[11,"default","","",248,[[],["self"]]],[11,"default","","",249,[[],["self"]]],[11,"default","","",250,[[],["self"]]],[11,"default","","",251,[[],["self"]]],[11,"default","","",252,[[],["self"]]],[11,"default","","",253,[[],["self"]]],[11,"default","","",254,[[],["self"]]],[11,"default","","",255,[[],["self"]]],[11,"default","","",256,[[],["self"]]],[11,"default","","",257,[[],["self"]]],[11,"default","","",258,[[],["self"]]],[11,"default","","",259,[[],["self"]]],[11,"default","","",260,[[],["self"]]],[11,"default","","",261,[[],["self"]]],[11,"default","","",262,[[],["self"]]],[11,"default","","",263,[[],["self"]]],[11,"default","","",264,[[],["self"]]],[11,"default","","",265,[[],["self"]]],[11,"default","","",266,[[],["self"]]],[11,"default","","",267,[[],["self"]]],[11,"default","","",268,[[],["self"]]],[11,"default","","",269,[[],["self"]]],[11,"default","","",270,[[],["self"]]],[11,"default","","",271,[[],["self"]]],[11,"default","","",272,[[],["self"]]],[11,"default","","",273,[[],["self"]]],[11,"default","","",274,[[],["self"]]],[11,"default","","",275,[[],["self"]]],[11,"default","","",276,[[],["self"]]],[11,"default","","",277,[[],["self"]]],[11,"default","","",278,[[],["self"]]],[11,"default","","",279,[[],["self"]]],[11,"default","","",280,[[],["self"]]],[11,"default","","",281,[[],["self"]]],[11,"default","","",282,[[],["self"]]],[11,"default","","",283,[[],["self"]]],[11,"default","","",284,[[],["self"]]],[11,"default","","",285,[[],["self"]]],[11,"default","","",286,[[],["self"]]],[11,"default","","",287,[[],["self"]]],[11,"default","","",288,[[],["self"]]],[11,"default","","",289,[[],["self"]]],[11,"default","","",290,[[],["self"]]],[11,"default","","",291,[[],["self"]]],[11,"default","","",292,[[],["self"]]],[11,"default","","",293,[[],["self"]]],[11,"default","","",294,[[],["self"]]],[11,"default","syn","",73,[[],["generics"]]],[11,"default","","",71,[[],["boundlifetimes"]]],[11,"default","","",191,[[],["self"]]],[11,"default","syn::punctuated","",306,[[],["self"]]],[11,"cmp","syn","",126,[[["self"],["lifetime"]],["ordering"]]],[11,"eq","syn::token","",192,[[["underscore"],["self"]],["bool"]]],[11,"eq","","",193,[[["abstract"],["self"]],["bool"]]],[11,"eq","","",194,[[["self"],["as"]],["bool"]]],[11,"eq","","",195,[[["self"],["async"]],["bool"]]],[11,"eq","","",196,[[["self"],["auto"]],["bool"]]],[11,"eq","","",197,[[["become"],["self"]],["bool"]]],[11,"eq","","",198,[[["box"],["self"]],["bool"]]],[11,"eq","","",199,[[["break"],["self"]],["bool"]]],[11,"eq","","",200,[[["const"],["self"]],["bool"]]],[11,"eq","","",201,[[["self"],["continue"]],["bool"]]],[11,"eq","","",202,[[["self"],["crate"]],["bool"]]],[11,"eq","","",203,[[["default"],["self"]],["bool"]]],[11,"eq","","",204,[[["do"],["self"]],["bool"]]],[11,"eq","","",205,[[["dyn"],["self"]],["bool"]]],[11,"eq","","",206,[[["self"],["else"]],["bool"]]],[11,"eq","","",207,[[["self"],["enum"]],["bool"]]],[11,"eq","","",208,[[["existential"],["self"]],["bool"]]],[11,"eq","","",209,[[["extern"],["self"]],["bool"]]],[11,"eq","","",210,[[["self"],["final"]],["bool"]]],[11,"eq","","",211,[[["self"],["fn"]],["bool"]]],[11,"eq","","",212,[[["self"],["for"]],["bool"]]],[11,"eq","","",213,[[["self"],["if"]],["bool"]]],[11,"eq","","",214,[[["impl"],["self"]],["bool"]]],[11,"eq","","",215,[[["in"],["self"]],["bool"]]],[11,"eq","","",216,[[["let"],["self"]],["bool"]]],[11,"eq","","",217,[[["self"],["loop"]],["bool"]]],[11,"eq","","",218,[[["self"],["macro"]],["bool"]]],[11,"eq","","",219,[[["self"],["match"]],["bool"]]],[11,"eq","","",220,[[["mod"],["self"]],["bool"]]],[11,"eq","","",221,[[["self"],["move"]],["bool"]]],[11,"eq","","",222,[[["mut"],["self"]],["bool"]]],[11,"eq","","",223,[[["override"],["self"]],["bool"]]],[11,"eq","","",224,[[["self"],["priv"]],["bool"]]],[11,"eq","","",225,[[["pub"],["self"]],["bool"]]],[11,"eq","","",226,[[["self"],["ref"]],["bool"]]],[11,"eq","","",227,[[["self"],["return"]],["bool"]]],[11,"eq","","",228,[[["selftype"],["self"]],["bool"]]],[11,"eq","","",229,[[["selfvalue"],["self"]],["bool"]]],[11,"eq","","",230,[[["self"],["static"]],["bool"]]],[11,"eq","","",231,[[["self"],["struct"]],["bool"]]],[11,"eq","","",232,[[["self"],["super"]],["bool"]]],[11,"eq","","",233,[[["self"],["trait"]],["bool"]]],[11,"eq","","",234,[[["try"],["self"]],["bool"]]],[11,"eq","","",235,[[["type"],["self"]],["bool"]]],[11,"eq","","",236,[[["typeof"],["self"]],["bool"]]],[11,"eq","","",237,[[["union"],["self"]],["bool"]]],[11,"eq","","",238,[[["unsafe"],["self"]],["bool"]]],[11,"eq","","",239,[[["unsized"],["self"]],["bool"]]],[11,"eq","","",240,[[["use"],["self"]],["bool"]]],[11,"eq","","",241,[[["self"],["virtual"]],["bool"]]],[11,"eq","","",242,[[["where"],["self"]],["bool"]]],[11,"eq","","",243,[[["self"],["while"]],["bool"]]],[11,"eq","","",244,[[["self"],["yield"]],["bool"]]],[11,"eq","","",245,[[["add"],["self"]],["bool"]]],[11,"eq","","",246,[[["addeq"],["self"]],["bool"]]],[11,"eq","","",247,[[["and"],["self"]],["bool"]]],[11,"eq","","",248,[[["andand"],["self"]],["bool"]]],[11,"eq","","",249,[[["self"],["andeq"]],["bool"]]],[11,"eq","","",250,[[["self"],["at"]],["bool"]]],[11,"eq","","",251,[[["self"],["bang"]],["bool"]]],[11,"eq","","",252,[[["caret"],["self"]],["bool"]]],[11,"eq","","",253,[[["careteq"],["self"]],["bool"]]],[11,"eq","","",254,[[["colon"],["self"]],["bool"]]],[11,"eq","","",255,[[["self"],["colon2"]],["bool"]]],[11,"eq","","",256,[[["self"],["comma"]],["bool"]]],[11,"eq","","",257,[[["self"],["div"]],["bool"]]],[11,"eq","","",258,[[["diveq"],["self"]],["bool"]]],[11,"eq","","",259,[[["dollar"],["self"]],["bool"]]],[11,"eq","","",260,[[["self"],["dot"]],["bool"]]],[11,"eq","","",261,[[["dot2"],["self"]],["bool"]]],[11,"eq","","",262,[[["dot3"],["self"]],["bool"]]],[11,"eq","","",263,[[["self"],["dotdoteq"]],["bool"]]],[11,"eq","","",264,[[["eq"],["self"]],["bool"]]],[11,"eq","","",265,[[["self"],["eqeq"]],["bool"]]],[11,"eq","","",266,[[["ge"],["self"]],["bool"]]],[11,"eq","","",267,[[["self"],["gt"]],["bool"]]],[11,"eq","","",268,[[["self"],["le"]],["bool"]]],[11,"eq","","",269,[[["lt"],["self"]],["bool"]]],[11,"eq","","",270,[[["muleq"],["self"]],["bool"]]],[11,"eq","","",271,[[["self"],["ne"]],["bool"]]],[11,"eq","","",272,[[["or"],["self"]],["bool"]]],[11,"eq","","",273,[[["oreq"],["self"]],["bool"]]],[11,"eq","","",274,[[["oror"],["self"]],["bool"]]],[11,"eq","","",275,[[["pound"],["self"]],["bool"]]],[11,"eq","","",276,[[["self"],["question"]],["bool"]]],[11,"eq","","",277,[[["rarrow"],["self"]],["bool"]]],[11,"eq","","",278,[[["larrow"],["self"]],["bool"]]],[11,"eq","","",279,[[["self"],["rem"]],["bool"]]],[11,"eq","","",280,[[["remeq"],["self"]],["bool"]]],[11,"eq","","",281,[[["self"],["fatarrow"]],["bool"]]],[11,"eq","","",282,[[["semi"],["self"]],["bool"]]],[11,"eq","","",283,[[["shl"],["self"]],["bool"]]],[11,"eq","","",284,[[["shleq"],["self"]],["bool"]]],[11,"eq","","",285,[[["shr"],["self"]],["bool"]]],[11,"eq","","",286,[[["shreq"],["self"]],["bool"]]],[11,"eq","","",287,[[["self"],["star"]],["bool"]]],[11,"eq","","",288,[[["self"],["sub"]],["bool"]]],[11,"eq","","",289,[[["subeq"],["self"]],["bool"]]],[11,"eq","","",290,[[["self"],["tilde"]],["bool"]]],[11,"eq","","",291,[[["self"],["brace"]],["bool"]]],[11,"eq","","",292,[[["self"],["bracket"]],["bool"]]],[11,"eq","","",293,[[["self"],["paren"]],["bool"]]],[11,"eq","","",294,[[["group"],["self"]],["bool"]]],[11,"eq","syn","",0,[[["self"]],["bool"]]],[11,"eq","","",158,[[["self"],["attrstyle"]],["bool"]]],[11,"ne","","",158,[[["self"],["attrstyle"]],["bool"]]],[11,"eq","","",159,[[["self"],["meta"]],["bool"]]],[11,"ne","","",159,[[["self"],["meta"]],["bool"]]],[11,"eq","","",1,[[["metalist"],["self"]],["bool"]]],[11,"ne","","",1,[[["metalist"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["metanamevalue"]],["bool"]]],[11,"ne","","",2,[[["self"],["metanamevalue"]],["bool"]]],[11,"eq","","",160,[[["nestedmeta"],["self"]],["bool"]]],[11,"ne","","",160,[[["nestedmeta"],["self"]],["bool"]]],[11,"eq","","",6,[[["variant"],["self"]],["bool"]]],[11,"ne","","",6,[[["variant"],["self"]],["bool"]]],[11,"eq","","",161,[[["self"],["fields"]],["bool"]]],[11,"ne","","",161,[[["self"],["fields"]],["bool"]]],[11,"eq","","",4,[[["self"],["fieldsnamed"]],["bool"]]],[11,"ne","","",4,[[["self"],["fieldsnamed"]],["bool"]]],[11,"eq","","",5,[[["self"],["fieldsunnamed"]],["bool"]]],[11,"ne","","",5,[[["self"],["fieldsunnamed"]],["bool"]]],[11,"eq","","",3,[[["self"],["field"]],["bool"]]],[11,"ne","","",3,[[["self"],["field"]],["bool"]]],[11,"eq","","",162,[[["visibility"],["self"]],["bool"]]],[11,"ne","","",162,[[["visibility"],["self"]],["bool"]]],[11,"eq","","",8,[[["self"],["vispublic"]],["bool"]]],[11,"ne","","",8,[[["self"],["vispublic"]],["bool"]]],[11,"eq","","",7,[[["viscrate"],["self"]],["bool"]]],[11,"ne","","",7,[[["viscrate"],["self"]],["bool"]]],[11,"eq","","",9,[[["visrestricted"],["self"]],["bool"]]],[11,"ne","","",9,[[["visrestricted"],["self"]],["bool"]]],[11,"eq","","",163,[[["expr"],["self"]],["bool"]]],[11,"ne","","",163,[[["expr"],["self"]],["bool"]]],[11,"eq","","",16,[[["exprbox"],["self"]],["bool"]]],[11,"ne","","",16,[[["exprbox"],["self"]],["bool"]]],[11,"eq","","",26,[[["self"],["exprinplace"]],["bool"]]],[11,"ne","","",26,[[["self"],["exprinplace"]],["bool"]]],[11,"eq","","",10,[[["self"],["exprarray"]],["bool"]]],[11,"ne","","",10,[[["self"],["exprarray"]],["bool"]]],[11,"eq","","",18,[[["self"],["exprcall"]],["bool"]]],[11,"ne","","",18,[[["self"],["exprcall"]],["bool"]]],[11,"eq","","",33,[[["exprmethodcall"],["self"]],["bool"]]],[11,"ne","","",33,[[["exprmethodcall"],["self"]],["bool"]]],[11,"eq","","",43,[[["self"],["exprtuple"]],["bool"]]],[11,"ne","","",43,[[["self"],["exprtuple"]],["bool"]]],[11,"eq","","",14,[[["exprbinary"],["self"]],["bool"]]],[11,"ne","","",14,[[["exprbinary"],["self"]],["bool"]]],[11,"eq","","",45,[[["self"],["exprunary"]],["bool"]]],[11,"ne","","",45,[[["self"],["exprunary"]],["bool"]]],[11,"eq","","",29,[[["self"],["exprlit"]],["bool"]]],[11,"ne","","",29,[[["self"],["exprlit"]],["bool"]]],[11,"eq","","",19,[[["self"],["exprcast"]],["bool"]]],[11,"ne","","",19,[[["self"],["exprcast"]],["bool"]]],[11,"eq","","",44,[[["exprtype"],["self"]],["bool"]]],[11,"ne","","",44,[[["exprtype"],["self"]],["bool"]]],[11,"eq","","",28,[[["self"],["exprlet"]],["bool"]]],[11,"ne","","",28,[[["self"],["exprlet"]],["bool"]]],[11,"eq","","",25,[[["self"],["exprif"]],["bool"]]],[11,"ne","","",25,[[["self"],["exprif"]],["bool"]]],[11,"eq","","",48,[[["exprwhile"],["self"]],["bool"]]],[11,"ne","","",48,[[["exprwhile"],["self"]],["bool"]]],[11,"eq","","",23,[[["self"],["exprforloop"]],["bool"]]],[11,"ne","","",23,[[["self"],["exprforloop"]],["bool"]]],[11,"eq","","",30,[[["exprloop"],["self"]],["bool"]]],[11,"ne","","",30,[[["exprloop"],["self"]],["bool"]]],[11,"eq","","",32,[[["exprmatch"],["self"]],["bool"]]],[11,"ne","","",32,[[["exprmatch"],["self"]],["bool"]]],[11,"eq","","",20,[[["exprclosure"],["self"]],["bool"]]],[11,"ne","","",20,[[["exprclosure"],["self"]],["bool"]]],[11,"eq","","",46,[[["self"],["exprunsafe"]],["bool"]]],[11,"ne","","",46,[[["self"],["exprunsafe"]],["bool"]]],[11,"eq","","",15,[[["exprblock"],["self"]],["bool"]]],[11,"ne","","",15,[[["exprblock"],["self"]],["bool"]]],[11,"eq","","",11,[[["self"],["exprassign"]],["bool"]]],[11,"ne","","",11,[[["self"],["exprassign"]],["bool"]]],[11,"eq","","",12,[[["exprassignop"],["self"]],["bool"]]],[11,"ne","","",12,[[["exprassignop"],["self"]],["bool"]]],[11,"eq","","",22,[[["exprfield"],["self"]],["bool"]]],[11,"ne","","",22,[[["exprfield"],["self"]],["bool"]]],[11,"eq","","",27,[[["self"],["exprindex"]],["bool"]]],[11,"ne","","",27,[[["self"],["exprindex"]],["bool"]]],[11,"eq","","",36,[[["self"],["exprrange"]],["bool"]]],[11,"ne","","",36,[[["self"],["exprrange"]],["bool"]]],[11,"eq","","",35,[[["exprpath"],["self"]],["bool"]]],[11,"ne","","",35,[[["exprpath"],["self"]],["bool"]]],[11,"eq","","",37,[[["self"],["exprreference"]],["bool"]]],[11,"ne","","",37,[[["self"],["exprreference"]],["bool"]]],[11,"eq","","",17,[[["exprbreak"],["self"]],["bool"]]],[11,"ne","","",17,[[["exprbreak"],["self"]],["bool"]]],[11,"eq","","",21,[[["exprcontinue"],["self"]],["bool"]]],[11,"ne","","",21,[[["exprcontinue"],["self"]],["bool"]]],[11,"eq","","",39,[[["self"],["exprreturn"]],["bool"]]],[11,"ne","","",39,[[["self"],["exprreturn"]],["bool"]]],[11,"eq","","",31,[[["self"],["exprmacro"]],["bool"]]],[11,"ne","","",31,[[["self"],["exprmacro"]],["bool"]]],[11,"eq","","",40,[[["exprstruct"],["self"]],["bool"]]],[11,"ne","","",40,[[["exprstruct"],["self"]],["bool"]]],[11,"eq","","",38,[[["exprrepeat"],["self"]],["bool"]]],[11,"ne","","",38,[[["exprrepeat"],["self"]],["bool"]]],[11,"eq","","",34,[[["exprparen"],["self"]],["bool"]]],[11,"ne","","",34,[[["exprparen"],["self"]],["bool"]]],[11,"eq","","",24,[[["self"],["exprgroup"]],["bool"]]],[11,"ne","","",24,[[["self"],["exprgroup"]],["bool"]]],[11,"eq","","",41,[[["self"],["exprtry"]],["bool"]]],[11,"ne","","",41,[[["self"],["exprtry"]],["bool"]]],[11,"eq","","",13,[[["self"],["exprasync"]],["bool"]]],[11,"ne","","",13,[[["self"],["exprasync"]],["bool"]]],[11,"eq","","",42,[[["self"],["exprtryblock"]],["bool"]]],[11,"ne","","",42,[[["self"],["exprtryblock"]],["bool"]]],[11,"eq","","",49,[[["self"],["expryield"]],["bool"]]],[11,"ne","","",49,[[["self"],["expryield"]],["bool"]]],[11,"eq","","",47,[[["self"]],["bool"]]],[11,"eq","","",164,[[["self"],["member"]],["bool"]]],[11,"ne","","",164,[[["self"],["member"]],["bool"]]],[11,"eq","","",50,[[["self"]],["bool"]]],[11,"eq","","",57,[[["self"],["methodturbofish"]],["bool"]]],[11,"ne","","",57,[[["self"],["methodturbofish"]],["bool"]]],[11,"eq","","",165,[[["self"],["genericmethodargument"]],["bool"]]],[11,"ne","","",165,[[["self"],["genericmethodargument"]],["bool"]]],[11,"eq","","",54,[[["fieldvalue"],["self"]],["bool"]]],[11,"ne","","",54,[[["fieldvalue"],["self"]],["bool"]]],[11,"eq","","",55,[[["self"],["label"]],["bool"]]],[11,"ne","","",55,[[["self"],["label"]],["bool"]]],[11,"eq","","",52,[[["block"],["self"]],["bool"]]],[11,"ne","","",52,[[["block"],["self"]],["bool"]]],[11,"eq","","",168,[[["self"],["stmt"]],["bool"]]],[11,"ne","","",168,[[["self"],["stmt"]],["bool"]]],[11,"eq","","",56,[[["self"],["local"]],["bool"]]],[11,"ne","","",56,[[["self"],["local"]],["bool"]]],[11,"eq","","",166,[[["pat"],["self"]],["bool"]]],[11,"ne","","",166,[[["pat"],["self"]],["bool"]]],[11,"eq","","",70,[[["self"],["patwild"]],["bool"]]],[11,"ne","","",70,[[["self"],["patwild"]],["bool"]]],[11,"eq","","",59,[[["patident"],["self"]],["bool"]]],[11,"ne","","",59,[[["patident"],["self"]],["bool"]]],[11,"eq","","",66,[[["patstruct"],["self"]],["bool"]]],[11,"ne","","",66,[[["patstruct"],["self"]],["bool"]]],[11,"eq","","",68,[[["self"],["pattuplestruct"]],["bool"]]],[11,"ne","","",68,[[["self"],["pattuplestruct"]],["bool"]]],[11,"eq","","",62,[[["patpath"],["self"]],["bool"]]],[11,"ne","","",62,[[["patpath"],["self"]],["bool"]]],[11,"eq","","",67,[[["pattuple"],["self"]],["bool"]]],[11,"ne","","",67,[[["pattuple"],["self"]],["bool"]]],[11,"eq","","",58,[[["patbox"],["self"]],["bool"]]],[11,"ne","","",58,[[["patbox"],["self"]],["bool"]]],[11,"eq","","",64,[[["self"],["patref"]],["bool"]]],[11,"ne","","",64,[[["self"],["patref"]],["bool"]]],[11,"eq","","",60,[[["patlit"],["self"]],["bool"]]],[11,"ne","","",60,[[["patlit"],["self"]],["bool"]]],[11,"eq","","",63,[[["self"],["patrange"]],["bool"]]],[11,"ne","","",63,[[["self"],["patrange"]],["bool"]]],[11,"eq","","",65,[[["self"],["patslice"]],["bool"]]],[11,"ne","","",65,[[["self"],["patslice"]],["bool"]]],[11,"eq","","",61,[[["self"],["patmacro"]],["bool"]]],[11,"ne","","",61,[[["self"],["patmacro"]],["bool"]]],[11,"eq","","",69,[[["self"]],["bool"]]],[11,"eq","","",51,[[["arm"],["self"]],["bool"]]],[11,"ne","","",51,[[["arm"],["self"]],["bool"]]],[11,"eq","","",167,[[["self"],["rangelimits"]],["bool"]]],[11,"ne","","",167,[[["self"],["rangelimits"]],["bool"]]],[11,"eq","","",53,[[["self"],["fieldpat"]],["bool"]]],[11,"ne","","",53,[[["self"],["fieldpat"]],["bool"]]],[11,"eq","","",73,[[["self"],["generics"]],["bool"]]],[11,"ne","","",73,[[["self"],["generics"]],["bool"]]],[11,"eq","","",169,[[["self"],["genericparam"]],["bool"]]],[11,"ne","","",169,[[["self"],["genericparam"]],["bool"]]],[11,"eq","","",79,[[["typeparam"],["self"]],["bool"]]],[11,"ne","","",79,[[["typeparam"],["self"]],["bool"]]],[11,"eq","","",74,[[["self"],["lifetimedef"]],["bool"]]],[11,"ne","","",74,[[["self"],["lifetimedef"]],["bool"]]],[11,"eq","","",72,[[["constparam"],["self"]],["bool"]]],[11,"ne","","",72,[[["constparam"],["self"]],["bool"]]],[11,"eq","","",316,[[["implgenerics"],["self"]],["bool"]]],[11,"ne","","",316,[[["implgenerics"],["self"]],["bool"]]],[11,"eq","","",295,[[["self"],["typegenerics"]],["bool"]]],[11,"ne","","",295,[[["self"],["typegenerics"]],["bool"]]],[11,"eq","","",317,[[["self"],["turbofish"]],["bool"]]],[11,"ne","","",317,[[["self"],["turbofish"]],["bool"]]],[11,"eq","","",71,[[["boundlifetimes"],["self"]],["bool"]]],[11,"ne","","",71,[[["boundlifetimes"],["self"]],["bool"]]],[11,"eq","","",171,[[["self"],["typeparambound"]],["bool"]]],[11,"ne","","",171,[[["self"],["typeparambound"]],["bool"]]],[11,"eq","","",78,[[["traitbound"],["self"]],["bool"]]],[11,"ne","","",78,[[["traitbound"],["self"]],["bool"]]],[11,"eq","","",170,[[["self"],["traitboundmodifier"]],["bool"]]],[11,"ne","","",170,[[["self"],["traitboundmodifier"]],["bool"]]],[11,"eq","","",80,[[["self"],["whereclause"]],["bool"]]],[11,"ne","","",80,[[["self"],["whereclause"]],["bool"]]],[11,"eq","","",172,[[["self"],["wherepredicate"]],["bool"]]],[11,"ne","","",172,[[["self"],["wherepredicate"]],["bool"]]],[11,"eq","","",77,[[["predicatetype"],["self"]],["bool"]]],[11,"ne","","",77,[[["predicatetype"],["self"]],["bool"]]],[11,"eq","","",76,[[["self"],["predicatelifetime"]],["bool"]]],[11,"ne","","",76,[[["self"],["predicatelifetime"]],["bool"]]],[11,"eq","","",75,[[["self"],["predicateeq"]],["bool"]]],[11,"ne","","",75,[[["self"],["predicateeq"]],["bool"]]],[11,"eq","","",176,[[["item"],["self"]],["bool"]]],[11,"ne","","",176,[[["item"],["self"]],["bool"]]],[11,"eq","","",99,[[["itemexterncrate"],["self"]],["bool"]]],[11,"ne","","",99,[[["itemexterncrate"],["self"]],["bool"]]],[11,"eq","","",112,[[["self"],["itemuse"]],["bool"]]],[11,"ne","","",112,[[["self"],["itemuse"]],["bool"]]],[11,"eq","","",106,[[["itemstatic"],["self"]],["bool"]]],[11,"ne","","",106,[[["itemstatic"],["self"]],["bool"]]],[11,"eq","","",96,[[["itemconst"],["self"]],["bool"]]],[11,"ne","","",96,[[["itemconst"],["self"]],["bool"]]],[11,"eq","","",100,[[["itemfn"],["self"]],["bool"]]],[11,"ne","","",100,[[["itemfn"],["self"]],["bool"]]],[11,"eq","","",105,[[["self"],["itemmod"]],["bool"]]],[11,"ne","","",105,[[["self"],["itemmod"]],["bool"]]],[11,"eq","","",101,[[["itemforeignmod"],["self"]],["bool"]]],[11,"ne","","",101,[[["itemforeignmod"],["self"]],["bool"]]],[11,"eq","","",110,[[["itemtype"],["self"]],["bool"]]],[11,"ne","","",110,[[["itemtype"],["self"]],["bool"]]],[11,"eq","","",98,[[["self"],["itemexistential"]],["bool"]]],[11,"ne","","",98,[[["self"],["itemexistential"]],["bool"]]],[11,"eq","","",107,[[["itemstruct"],["self"]],["bool"]]],[11,"ne","","",107,[[["itemstruct"],["self"]],["bool"]]],[11,"eq","","",97,[[["itemenum"],["self"]],["bool"]]],[11,"ne","","",97,[[["itemenum"],["self"]],["bool"]]],[11,"eq","","",111,[[["self"],["itemunion"]],["bool"]]],[11,"ne","","",111,[[["self"],["itemunion"]],["bool"]]],[11,"eq","","",108,[[["itemtrait"],["self"]],["bool"]]],[11,"ne","","",108,[[["itemtrait"],["self"]],["bool"]]],[11,"eq","","",109,[[["itemtraitalias"],["self"]],["bool"]]],[11,"ne","","",109,[[["itemtraitalias"],["self"]],["bool"]]],[11,"eq","","",102,[[["itemimpl"],["self"]],["bool"]]],[11,"ne","","",102,[[["itemimpl"],["self"]],["bool"]]],[11,"eq","","",103,[[["itemmacro"],["self"]],["bool"]]],[11,"ne","","",103,[[["itemmacro"],["self"]],["bool"]]],[11,"eq","","",104,[[["self"]],["bool"]]],[11,"eq","","",113,[[["self"]],["bool"]]],[11,"eq","","",178,[[["self"],["usetree"]],["bool"]]],[11,"ne","","",178,[[["self"],["usetree"]],["bool"]]],[11,"eq","","",123,[[["usepath"],["self"]],["bool"]]],[11,"ne","","",123,[[["usepath"],["self"]],["bool"]]],[11,"eq","","",122,[[["usename"],["self"]],["bool"]]],[11,"ne","","",122,[[["usename"],["self"]],["bool"]]],[11,"eq","","",124,[[["userename"],["self"]],["bool"]]],[11,"ne","","",124,[[["userename"],["self"]],["bool"]]],[11,"eq","","",120,[[["useglob"],["self"]],["bool"]]],[11,"ne","","",120,[[["useglob"],["self"]],["bool"]]],[11,"eq","","",121,[[["self"],["usegroup"]],["bool"]]],[11,"ne","","",121,[[["self"],["usegroup"]],["bool"]]],[11,"eq","","",174,[[["self"],["foreignitem"]],["bool"]]],[11,"ne","","",174,[[["self"],["foreignitem"]],["bool"]]],[11,"eq","","",85,[[["self"],["foreignitemfn"]],["bool"]]],[11,"ne","","",85,[[["self"],["foreignitemfn"]],["bool"]]],[11,"eq","","",87,[[["foreignitemstatic"],["self"]],["bool"]]],[11,"ne","","",87,[[["foreignitemstatic"],["self"]],["bool"]]],[11,"eq","","",88,[[["self"],["foreignitemtype"]],["bool"]]],[11,"ne","","",88,[[["self"],["foreignitemtype"]],["bool"]]],[11,"eq","","",86,[[["self"],["foreignitemmacro"]],["bool"]]],[11,"ne","","",86,[[["self"],["foreignitemmacro"]],["bool"]]],[11,"eq","","",89,[[["self"]],["bool"]]],[11,"eq","","",177,[[["traititem"],["self"]],["bool"]]],[11,"ne","","",177,[[["traititem"],["self"]],["bool"]]],[11,"eq","","",115,[[["traititemconst"],["self"]],["bool"]]],[11,"ne","","",115,[[["traititemconst"],["self"]],["bool"]]],[11,"eq","","",117,[[["traititemmethod"],["self"]],["bool"]]],[11,"ne","","",117,[[["traititemmethod"],["self"]],["bool"]]],[11,"eq","","",118,[[["self"],["traititemtype"]],["bool"]]],[11,"ne","","",118,[[["self"],["traititemtype"]],["bool"]]],[11,"eq","","",116,[[["traititemmacro"],["self"]],["bool"]]],[11,"ne","","",116,[[["traititemmacro"],["self"]],["bool"]]],[11,"eq","","",119,[[["self"]],["bool"]]],[11,"eq","","",175,[[["self"],["implitem"]],["bool"]]],[11,"ne","","",175,[[["self"],["implitem"]],["bool"]]],[11,"eq","","",90,[[["self"],["implitemconst"]],["bool"]]],[11,"ne","","",90,[[["self"],["implitemconst"]],["bool"]]],[11,"eq","","",93,[[["implitemmethod"],["self"]],["bool"]]],[11,"ne","","",93,[[["implitemmethod"],["self"]],["bool"]]],[11,"eq","","",94,[[["implitemtype"],["self"]],["bool"]]],[11,"ne","","",94,[[["implitemtype"],["self"]],["bool"]]],[11,"eq","","",91,[[["self"],["implitemexistential"]],["bool"]]],[11,"ne","","",91,[[["self"],["implitemexistential"]],["bool"]]],[11,"eq","","",92,[[["implitemmacro"],["self"]],["bool"]]],[11,"ne","","",92,[[["implitemmacro"],["self"]],["bool"]]],[11,"eq","","",95,[[["self"]],["bool"]]],[11,"eq","","",114,[[["self"],["methodsig"]],["bool"]]],[11,"ne","","",114,[[["self"],["methodsig"]],["bool"]]],[11,"eq","","",84,[[["fndecl"],["self"]],["bool"]]],[11,"ne","","",84,[[["fndecl"],["self"]],["bool"]]],[11,"eq","","",173,[[["fnarg"],["self"]],["bool"]]],[11,"ne","","",173,[[["fnarg"],["self"]],["bool"]]],[11,"eq","","",83,[[["argselfref"],["self"]],["bool"]]],[11,"ne","","",83,[[["argselfref"],["self"]],["bool"]]],[11,"eq","","",82,[[["argself"],["self"]],["bool"]]],[11,"ne","","",82,[[["argself"],["self"]],["bool"]]],[11,"eq","","",81,[[["argcaptured"],["self"]],["bool"]]],[11,"ne","","",81,[[["argcaptured"],["self"]],["bool"]]],[11,"eq","","",125,[[["self"],["file"]],["bool"]]],[11,"ne","","",125,[[["self"],["file"]],["bool"]]],[11,"eq","","",126,[[["self"],["lifetime"]],["bool"]]],[11,"eq","","",181,[[["lit"],["self"]],["bool"]]],[11,"ne","","",181,[[["lit"],["self"]],["bool"]]],[11,"eq","","",296,[[["self"]],["bool"]]],[11,"eq","","",297,[[["self"]],["bool"]]],[11,"eq","","",298,[[["self"]],["bool"]]],[11,"eq","","",299,[[["self"]],["bool"]]],[11,"eq","","",300,[[["self"]],["bool"]]],[11,"eq","","",301,[[["self"]],["bool"]]],[11,"eq","","",127,[[["self"]],["bool"]]],[11,"eq","","",128,[[["self"]],["bool"]]],[11,"eq","","",182,[[["self"],["strstyle"]],["bool"]]],[11,"ne","","",182,[[["self"],["strstyle"]],["bool"]]],[11,"eq","","",180,[[["self"],["intsuffix"]],["bool"]]],[11,"eq","","",179,[[["self"],["floatsuffix"]],["bool"]]],[11,"eq","","",183,[[["macrodelimiter"],["self"]],["bool"]]],[11,"ne","","",183,[[["macrodelimiter"],["self"]],["bool"]]],[11,"eq","","",129,[[["self"]],["bool"]]],[11,"eq","","",133,[[["deriveinput"],["self"]],["bool"]]],[11,"ne","","",133,[[["deriveinput"],["self"]],["bool"]]],[11,"eq","","",184,[[["data"],["self"]],["bool"]]],[11,"ne","","",184,[[["data"],["self"]],["bool"]]],[11,"eq","","",131,[[["self"],["datastruct"]],["bool"]]],[11,"ne","","",131,[[["self"],["datastruct"]],["bool"]]],[11,"eq","","",130,[[["dataenum"],["self"]],["bool"]]],[11,"ne","","",130,[[["dataenum"],["self"]],["bool"]]],[11,"eq","","",132,[[["dataunion"],["self"]],["bool"]]],[11,"ne","","",132,[[["dataunion"],["self"]],["bool"]]],[11,"eq","","",185,[[["self"],["binop"]],["bool"]]],[11,"ne","","",185,[[["self"],["binop"]],["bool"]]],[11,"eq","","",186,[[["self"],["unop"]],["bool"]]],[11,"ne","","",186,[[["self"],["unop"]],["bool"]]],[11,"eq","","",189,[[["self"],["type"]],["bool"]]],[11,"ne","","",189,[[["self"],["type"]],["bool"]]],[11,"eq","","",147,[[["typeslice"],["self"]],["bool"]]],[11,"ne","","",147,[[["typeslice"],["self"]],["bool"]]],[11,"eq","","",136,[[["self"],["typearray"]],["bool"]]],[11,"ne","","",136,[[["self"],["typearray"]],["bool"]]],[11,"eq","","",145,[[["self"],["typeptr"]],["bool"]]],[11,"ne","","",145,[[["self"],["typeptr"]],["bool"]]],[11,"eq","","",146,[[["self"],["typereference"]],["bool"]]],[11,"ne","","",146,[[["self"],["typereference"]],["bool"]]],[11,"eq","","",137,[[["typebarefn"],["self"]],["bool"]]],[11,"ne","","",137,[[["typebarefn"],["self"]],["bool"]]],[11,"eq","","",142,[[["typenever"],["self"]],["bool"]]],[11,"ne","","",142,[[["typenever"],["self"]],["bool"]]],[11,"eq","","",149,[[["typetuple"],["self"]],["bool"]]],[11,"ne","","",149,[[["typetuple"],["self"]],["bool"]]],[11,"eq","","",144,[[["self"],["typepath"]],["bool"]]],[11,"ne","","",144,[[["self"],["typepath"]],["bool"]]],[11,"eq","","",148,[[["self"],["typetraitobject"]],["bool"]]],[11,"ne","","",148,[[["self"],["typetraitobject"]],["bool"]]],[11,"eq","","",139,[[["typeimpltrait"],["self"]],["bool"]]],[11,"ne","","",139,[[["typeimpltrait"],["self"]],["bool"]]],[11,"eq","","",143,[[["self"],["typeparen"]],["bool"]]],[11,"ne","","",143,[[["self"],["typeparen"]],["bool"]]],[11,"eq","","",138,[[["typegroup"],["self"]],["bool"]]],[11,"ne","","",138,[[["typegroup"],["self"]],["bool"]]],[11,"eq","","",140,[[["typeinfer"],["self"]],["bool"]]],[11,"ne","","",140,[[["typeinfer"],["self"]],["bool"]]],[11,"eq","","",141,[[["self"],["typemacro"]],["bool"]]],[11,"ne","","",141,[[["self"],["typemacro"]],["bool"]]],[11,"eq","","",150,[[["self"]],["bool"]]],[11,"eq","","",134,[[["abi"],["self"]],["bool"]]],[11,"ne","","",134,[[["abi"],["self"]],["bool"]]],[11,"eq","","",135,[[["barefnarg"],["self"]],["bool"]]],[11,"ne","","",135,[[["barefnarg"],["self"]],["bool"]]],[11,"eq","","",187,[[["barefnargname"],["self"]],["bool"]]],[11,"ne","","",187,[[["barefnargname"],["self"]],["bool"]]],[11,"eq","","",188,[[["returntype"],["self"]],["bool"]]],[11,"ne","","",188,[[["returntype"],["self"]],["bool"]]],[11,"eq","","",155,[[["self"],["path"]],["bool"]]],[11,"ne","","",155,[[["self"],["path"]],["bool"]]],[11,"eq","","",156,[[["self"],["pathsegment"]],["bool"]]],[11,"ne","","",156,[[["self"],["pathsegment"]],["bool"]]],[11,"eq","","",191,[[["patharguments"],["self"]],["bool"]]],[11,"ne","","",191,[[["patharguments"],["self"]],["bool"]]],[11,"eq","","",190,[[["self"],["genericargument"]],["bool"]]],[11,"ne","","",190,[[["self"],["genericargument"]],["bool"]]],[11,"eq","","",151,[[["anglebracketedgenericarguments"],["self"]],["bool"]]],[11,"ne","","",151,[[["anglebracketedgenericarguments"],["self"]],["bool"]]],[11,"eq","","",152,[[["binding"],["self"]],["bool"]]],[11,"ne","","",152,[[["binding"],["self"]],["bool"]]],[11,"eq","","",153,[[["self"],["constraint"]],["bool"]]],[11,"ne","","",153,[[["self"],["constraint"]],["bool"]]],[11,"eq","","",154,[[["self"],["parenthesizedgenericarguments"]],["bool"]]],[11,"ne","","",154,[[["self"],["parenthesizedgenericarguments"]],["bool"]]],[11,"eq","","",157,[[["qself"],["self"]],["bool"]]],[11,"ne","","",157,[[["qself"],["self"]],["bool"]]],[11,"eq","syn::buffer","",303,[[["cursor"],["self"]],["bool"]]],[11,"ne","","",303,[[["cursor"],["self"]],["bool"]]],[11,"eq","syn::punctuated","",306,[[["punctuated"],["self"]],["bool"]]],[11,"ne","","",306,[[["punctuated"],["self"]],["bool"]]],[11,"partial_cmp","syn","",126,[[["self"],["lifetime"]],[["ordering"],["option",["ordering"]]]]],[11,"deref","syn::token","",192,[[["self"]]]],[11,"deref","","",245,[[["self"]]]],[11,"deref","","",247,[[["self"]]]],[11,"deref","","",250,[[["self"]]]],[11,"deref","","",251,[[["self"]]]],[11,"deref","","",252,[[["self"]]]],[11,"deref","","",254,[[["self"]]]],[11,"deref","","",256,[[["self"]]]],[11,"deref","","",257,[[["self"]]]],[11,"deref","","",259,[[["self"]]]],[11,"deref","","",260,[[["self"]]]],[11,"deref","","",264,[[["self"]]]],[11,"deref","","",267,[[["self"]]]],[11,"deref","","",269,[[["self"]]]],[11,"deref","","",272,[[["self"]]]],[11,"deref","","",275,[[["self"]]]],[11,"deref","","",276,[[["self"]]]],[11,"deref","","",279,[[["self"]]]],[11,"deref","","",282,[[["self"]]]],[11,"deref","","",287,[[["self"]]]],[11,"deref","","",288,[[["self"]]]],[11,"deref","","",290,[[["self"]]]],[11,"deref","syn::parse","",312,[[["self"]]]],[11,"deref_mut","syn::token","",192,[[["self"]]]],[11,"deref_mut","","",245,[[["self"]]]],[11,"deref_mut","","",247,[[["self"]]]],[11,"deref_mut","","",250,[[["self"]]]],[11,"deref_mut","","",251,[[["self"]]]],[11,"deref_mut","","",252,[[["self"]]]],[11,"deref_mut","","",254,[[["self"]]]],[11,"deref_mut","","",256,[[["self"]]]],[11,"deref_mut","","",257,[[["self"]]]],[11,"deref_mut","","",259,[[["self"]]]],[11,"deref_mut","","",260,[[["self"]]]],[11,"deref_mut","","",264,[[["self"]]]],[11,"deref_mut","","",267,[[["self"]]]],[11,"deref_mut","","",269,[[["self"]]]],[11,"deref_mut","","",272,[[["self"]]]],[11,"deref_mut","","",275,[[["self"]]]],[11,"deref_mut","","",276,[[["self"]]]],[11,"deref_mut","","",279,[[["self"]]]],[11,"deref_mut","","",282,[[["self"]]]],[11,"deref_mut","","",287,[[["self"]]]],[11,"deref_mut","","",288,[[["self"]]]],[11,"deref_mut","","",290,[[["self"]]]],[11,"fmt","","",192,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",193,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",194,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",195,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",196,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",197,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",198,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",199,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",200,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",201,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",202,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",203,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",204,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",205,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",206,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",207,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",208,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",209,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",210,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",211,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",212,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",213,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",214,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",215,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",216,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",217,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",218,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",219,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",220,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",221,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",222,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",223,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",224,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",225,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",226,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",227,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",228,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",229,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",230,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",231,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",232,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",233,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",234,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",235,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",236,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",237,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",238,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",239,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",240,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",241,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",242,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",243,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",244,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",245,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",246,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",247,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",248,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",249,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",250,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",251,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",252,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",253,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",254,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",255,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",256,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",257,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",258,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",259,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",260,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",261,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",262,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",263,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",264,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",265,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",266,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",267,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",268,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",269,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",270,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",271,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",272,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",273,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",274,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",275,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",276,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",277,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",278,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",279,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",280,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",281,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",282,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",283,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",284,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",285,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",286,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",287,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",288,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",289,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",290,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",291,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",292,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",293,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",294,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",158,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",159,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",160,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",161,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",162,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",163,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",164,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",165,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",168,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",166,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",167,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",169,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",316,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",295,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",317,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",171,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",170,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",172,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",176,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",99,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",112,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",106,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",96,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",100,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",105,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",101,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",110,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",98,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",107,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",97,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",111,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",108,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",109,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",102,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",103,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",104,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",113,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",178,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",123,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",122,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",124,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",120,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",121,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",174,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",85,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",87,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",88,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",86,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",177,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",115,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",117,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",118,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",116,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",119,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",175,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",90,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",93,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",94,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",91,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",92,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",95,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",114,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",84,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",173,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",83,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",125,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",126,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",181,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",296,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",297,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",298,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",299,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",300,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",301,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",127,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",128,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",182,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",180,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",179,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",129,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",183,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",133,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",184,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",131,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",130,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",132,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",185,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",186,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",189,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",147,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",136,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",145,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",146,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",137,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",142,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",149,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",144,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",148,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",139,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",143,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",138,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",140,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",141,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",150,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",134,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",135,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",187,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",188,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",155,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",156,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",191,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",190,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",151,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",152,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",153,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",154,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",157,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn::punctuated","",306,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn::parse","",313,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn","",314,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",126,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn::parse","",313,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn","",314,[[["formatter"],["self"]],["result"]]],[11,"index","syn::punctuated","",306,[[["self"],["usize"]]]],[11,"index_mut","","",306,[[["self"],["usize"]]]],[11,"hash","syn::token","",192,[[["self"],["h"]]]],[11,"hash","","",193,[[["self"],["h"]]]],[11,"hash","","",194,[[["self"],["h"]]]],[11,"hash","","",195,[[["self"],["h"]]]],[11,"hash","","",196,[[["self"],["h"]]]],[11,"hash","","",197,[[["self"],["h"]]]],[11,"hash","","",198,[[["self"],["h"]]]],[11,"hash","","",199,[[["self"],["h"]]]],[11,"hash","","",200,[[["self"],["h"]]]],[11,"hash","","",201,[[["self"],["h"]]]],[11,"hash","","",202,[[["self"],["h"]]]],[11,"hash","","",203,[[["self"],["h"]]]],[11,"hash","","",204,[[["self"],["h"]]]],[11,"hash","","",205,[[["self"],["h"]]]],[11,"hash","","",206,[[["self"],["h"]]]],[11,"hash","","",207,[[["self"],["h"]]]],[11,"hash","","",208,[[["self"],["h"]]]],[11,"hash","","",209,[[["self"],["h"]]]],[11,"hash","","",210,[[["self"],["h"]]]],[11,"hash","","",211,[[["self"],["h"]]]],[11,"hash","","",212,[[["self"],["h"]]]],[11,"hash","","",213,[[["self"],["h"]]]],[11,"hash","","",214,[[["self"],["h"]]]],[11,"hash","","",215,[[["self"],["h"]]]],[11,"hash","","",216,[[["self"],["h"]]]],[11,"hash","","",217,[[["self"],["h"]]]],[11,"hash","","",218,[[["self"],["h"]]]],[11,"hash","","",219,[[["self"],["h"]]]],[11,"hash","","",220,[[["self"],["h"]]]],[11,"hash","","",221,[[["self"],["h"]]]],[11,"hash","","",222,[[["self"],["h"]]]],[11,"hash","","",223,[[["self"],["h"]]]],[11,"hash","","",224,[[["self"],["h"]]]],[11,"hash","","",225,[[["self"],["h"]]]],[11,"hash","","",226,[[["self"],["h"]]]],[11,"hash","","",227,[[["self"],["h"]]]],[11,"hash","","",228,[[["self"],["h"]]]],[11,"hash","","",229,[[["self"],["h"]]]],[11,"hash","","",230,[[["self"],["h"]]]],[11,"hash","","",231,[[["self"],["h"]]]],[11,"hash","","",232,[[["self"],["h"]]]],[11,"hash","","",233,[[["self"],["h"]]]],[11,"hash","","",234,[[["self"],["h"]]]],[11,"hash","","",235,[[["self"],["h"]]]],[11,"hash","","",236,[[["self"],["h"]]]],[11,"hash","","",237,[[["self"],["h"]]]],[11,"hash","","",238,[[["self"],["h"]]]],[11,"hash","","",239,[[["self"],["h"]]]],[11,"hash","","",240,[[["self"],["h"]]]],[11,"hash","","",241,[[["self"],["h"]]]],[11,"hash","","",242,[[["self"],["h"]]]],[11,"hash","","",243,[[["self"],["h"]]]],[11,"hash","","",244,[[["self"],["h"]]]],[11,"hash","","",245,[[["self"],["h"]]]],[11,"hash","","",246,[[["self"],["h"]]]],[11,"hash","","",247,[[["self"],["h"]]]],[11,"hash","","",248,[[["self"],["h"]]]],[11,"hash","","",249,[[["self"],["h"]]]],[11,"hash","","",250,[[["self"],["h"]]]],[11,"hash","","",251,[[["self"],["h"]]]],[11,"hash","","",252,[[["self"],["h"]]]],[11,"hash","","",253,[[["self"],["h"]]]],[11,"hash","","",254,[[["self"],["h"]]]],[11,"hash","","",255,[[["self"],["h"]]]],[11,"hash","","",256,[[["self"],["h"]]]],[11,"hash","","",257,[[["self"],["h"]]]],[11,"hash","","",258,[[["self"],["h"]]]],[11,"hash","","",259,[[["self"],["h"]]]],[11,"hash","","",260,[[["self"],["h"]]]],[11,"hash","","",261,[[["self"],["h"]]]],[11,"hash","","",262,[[["self"],["h"]]]],[11,"hash","","",263,[[["self"],["h"]]]],[11,"hash","","",264,[[["self"],["h"]]]],[11,"hash","","",265,[[["self"],["h"]]]],[11,"hash","","",266,[[["self"],["h"]]]],[11,"hash","","",267,[[["self"],["h"]]]],[11,"hash","","",268,[[["self"],["h"]]]],[11,"hash","","",269,[[["self"],["h"]]]],[11,"hash","","",270,[[["self"],["h"]]]],[11,"hash","","",271,[[["self"],["h"]]]],[11,"hash","","",272,[[["self"],["h"]]]],[11,"hash","","",273,[[["self"],["h"]]]],[11,"hash","","",274,[[["self"],["h"]]]],[11,"hash","","",275,[[["self"],["h"]]]],[11,"hash","","",276,[[["self"],["h"]]]],[11,"hash","","",277,[[["self"],["h"]]]],[11,"hash","","",278,[[["self"],["h"]]]],[11,"hash","","",279,[[["self"],["h"]]]],[11,"hash","","",280,[[["self"],["h"]]]],[11,"hash","","",281,[[["self"],["h"]]]],[11,"hash","","",282,[[["self"],["h"]]]],[11,"hash","","",283,[[["self"],["h"]]]],[11,"hash","","",284,[[["self"],["h"]]]],[11,"hash","","",285,[[["self"],["h"]]]],[11,"hash","","",286,[[["self"],["h"]]]],[11,"hash","","",287,[[["self"],["h"]]]],[11,"hash","","",288,[[["self"],["h"]]]],[11,"hash","","",289,[[["self"],["h"]]]],[11,"hash","","",290,[[["self"],["h"]]]],[11,"hash","","",291,[[["self"],["h"]]]],[11,"hash","","",292,[[["self"],["h"]]]],[11,"hash","","",293,[[["self"],["h"]]]],[11,"hash","","",294,[[["self"],["h"]]]],[11,"hash","syn","",0,[[["self"],["h"]]]],[11,"hash","","",158,[[["self"],["__h"]]]],[11,"hash","","",159,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"hash","","",160,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"hash","","",161,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"hash","","",5,[[["self"],["__h"]]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",162,[[["self"],["__h"]]]],[11,"hash","","",8,[[["self"],["__h"]]]],[11,"hash","","",7,[[["self"],["__h"]]]],[11,"hash","","",9,[[["self"],["__h"]]]],[11,"hash","","",163,[[["self"],["__h"]]]],[11,"hash","","",16,[[["self"],["__h"]]]],[11,"hash","","",26,[[["self"],["__h"]]]],[11,"hash","","",10,[[["self"],["__h"]]]],[11,"hash","","",18,[[["self"],["__h"]]]],[11,"hash","","",33,[[["self"],["__h"]]]],[11,"hash","","",43,[[["self"],["__h"]]]],[11,"hash","","",14,[[["self"],["__h"]]]],[11,"hash","","",45,[[["self"],["__h"]]]],[11,"hash","","",29,[[["self"],["__h"]]]],[11,"hash","","",19,[[["self"],["__h"]]]],[11,"hash","","",44,[[["self"],["__h"]]]],[11,"hash","","",28,[[["self"],["__h"]]]],[11,"hash","","",25,[[["self"],["__h"]]]],[11,"hash","","",48,[[["self"],["__h"]]]],[11,"hash","","",23,[[["self"],["__h"]]]],[11,"hash","","",30,[[["self"],["__h"]]]],[11,"hash","","",32,[[["self"],["__h"]]]],[11,"hash","","",20,[[["self"],["__h"]]]],[11,"hash","","",46,[[["self"],["__h"]]]],[11,"hash","","",15,[[["self"],["__h"]]]],[11,"hash","","",11,[[["self"],["__h"]]]],[11,"hash","","",12,[[["self"],["__h"]]]],[11,"hash","","",22,[[["self"],["__h"]]]],[11,"hash","","",27,[[["self"],["__h"]]]],[11,"hash","","",36,[[["self"],["__h"]]]],[11,"hash","","",35,[[["self"],["__h"]]]],[11,"hash","","",37,[[["self"],["__h"]]]],[11,"hash","","",17,[[["self"],["__h"]]]],[11,"hash","","",21,[[["self"],["__h"]]]],[11,"hash","","",39,[[["self"],["__h"]]]],[11,"hash","","",31,[[["self"],["__h"]]]],[11,"hash","","",40,[[["self"],["__h"]]]],[11,"hash","","",38,[[["self"],["__h"]]]],[11,"hash","","",34,[[["self"],["__h"]]]],[11,"hash","","",24,[[["self"],["__h"]]]],[11,"hash","","",41,[[["self"],["__h"]]]],[11,"hash","","",13,[[["self"],["__h"]]]],[11,"hash","","",42,[[["self"],["__h"]]]],[11,"hash","","",49,[[["self"],["__h"]]]],[11,"hash","","",47,[[["self"],["h"]]]],[11,"hash","","",164,[[["self"],["__h"]]]],[11,"hash","","",50,[[["self"],["h"]]]],[11,"hash","","",57,[[["self"],["__h"]]]],[11,"hash","","",165,[[["self"],["__h"]]]],[11,"hash","","",54,[[["self"],["__h"]]]],[11,"hash","","",55,[[["self"],["__h"]]]],[11,"hash","","",52,[[["self"],["__h"]]]],[11,"hash","","",168,[[["self"],["__h"]]]],[11,"hash","","",56,[[["self"],["__h"]]]],[11,"hash","","",166,[[["self"],["__h"]]]],[11,"hash","","",70,[[["self"],["__h"]]]],[11,"hash","","",59,[[["self"],["__h"]]]],[11,"hash","","",66,[[["self"],["__h"]]]],[11,"hash","","",68,[[["self"],["__h"]]]],[11,"hash","","",62,[[["self"],["__h"]]]],[11,"hash","","",67,[[["self"],["__h"]]]],[11,"hash","","",58,[[["self"],["__h"]]]],[11,"hash","","",64,[[["self"],["__h"]]]],[11,"hash","","",60,[[["self"],["__h"]]]],[11,"hash","","",63,[[["self"],["__h"]]]],[11,"hash","","",65,[[["self"],["__h"]]]],[11,"hash","","",61,[[["self"],["__h"]]]],[11,"hash","","",69,[[["self"],["h"]]]],[11,"hash","","",51,[[["self"],["__h"]]]],[11,"hash","","",167,[[["self"],["__h"]]]],[11,"hash","","",53,[[["self"],["__h"]]]],[11,"hash","","",73,[[["self"],["__h"]]]],[11,"hash","","",169,[[["self"],["__h"]]]],[11,"hash","","",79,[[["self"],["__h"]]]],[11,"hash","","",74,[[["self"],["__h"]]]],[11,"hash","","",72,[[["self"],["__h"]]]],[11,"hash","","",316,[[["self"],["__h"]]]],[11,"hash","","",295,[[["self"],["__h"]]]],[11,"hash","","",317,[[["self"],["__h"]]]],[11,"hash","","",71,[[["self"],["__h"]]]],[11,"hash","","",171,[[["self"],["__h"]]]],[11,"hash","","",78,[[["self"],["__h"]]]],[11,"hash","","",170,[[["self"],["__h"]]]],[11,"hash","","",80,[[["self"],["__h"]]]],[11,"hash","","",172,[[["self"],["__h"]]]],[11,"hash","","",77,[[["self"],["__h"]]]],[11,"hash","","",76,[[["self"],["__h"]]]],[11,"hash","","",75,[[["self"],["__h"]]]],[11,"hash","","",176,[[["self"],["__h"]]]],[11,"hash","","",99,[[["self"],["__h"]]]],[11,"hash","","",112,[[["self"],["__h"]]]],[11,"hash","","",106,[[["self"],["__h"]]]],[11,"hash","","",96,[[["self"],["__h"]]]],[11,"hash","","",100,[[["self"],["__h"]]]],[11,"hash","","",105,[[["self"],["__h"]]]],[11,"hash","","",101,[[["self"],["__h"]]]],[11,"hash","","",110,[[["self"],["__h"]]]],[11,"hash","","",98,[[["self"],["__h"]]]],[11,"hash","","",107,[[["self"],["__h"]]]],[11,"hash","","",97,[[["self"],["__h"]]]],[11,"hash","","",111,[[["self"],["__h"]]]],[11,"hash","","",108,[[["self"],["__h"]]]],[11,"hash","","",109,[[["self"],["__h"]]]],[11,"hash","","",102,[[["self"],["__h"]]]],[11,"hash","","",103,[[["self"],["__h"]]]],[11,"hash","","",104,[[["self"],["h"]]]],[11,"hash","","",113,[[["self"],["h"]]]],[11,"hash","","",178,[[["self"],["__h"]]]],[11,"hash","","",123,[[["self"],["__h"]]]],[11,"hash","","",122,[[["self"],["__h"]]]],[11,"hash","","",124,[[["self"],["__h"]]]],[11,"hash","","",120,[[["self"],["__h"]]]],[11,"hash","","",121,[[["self"],["__h"]]]],[11,"hash","","",174,[[["self"],["__h"]]]],[11,"hash","","",85,[[["self"],["__h"]]]],[11,"hash","","",87,[[["self"],["__h"]]]],[11,"hash","","",88,[[["self"],["__h"]]]],[11,"hash","","",86,[[["self"],["__h"]]]],[11,"hash","","",89,[[["self"],["h"]]]],[11,"hash","","",177,[[["self"],["__h"]]]],[11,"hash","","",115,[[["self"],["__h"]]]],[11,"hash","","",117,[[["self"],["__h"]]]],[11,"hash","","",118,[[["self"],["__h"]]]],[11,"hash","","",116,[[["self"],["__h"]]]],[11,"hash","","",119,[[["self"],["h"]]]],[11,"hash","","",175,[[["self"],["__h"]]]],[11,"hash","","",90,[[["self"],["__h"]]]],[11,"hash","","",93,[[["self"],["__h"]]]],[11,"hash","","",94,[[["self"],["__h"]]]],[11,"hash","","",91,[[["self"],["__h"]]]],[11,"hash","","",92,[[["self"],["__h"]]]],[11,"hash","","",95,[[["self"],["h"]]]],[11,"hash","","",114,[[["self"],["__h"]]]],[11,"hash","","",84,[[["self"],["__h"]]]],[11,"hash","","",173,[[["self"],["__h"]]]],[11,"hash","","",83,[[["self"],["__h"]]]],[11,"hash","","",82,[[["self"],["__h"]]]],[11,"hash","","",81,[[["self"],["__h"]]]],[11,"hash","","",125,[[["self"],["__h"]]]],[11,"hash","","",126,[[["self"],["h"]]]],[11,"hash","","",181,[[["self"],["__h"]]]],[11,"hash","","",296,[[["self"],["h"]]]],[11,"hash","","",297,[[["self"],["h"]]]],[11,"hash","","",298,[[["self"],["h"]]]],[11,"hash","","",299,[[["self"],["h"]]]],[11,"hash","","",300,[[["self"],["h"]]]],[11,"hash","","",301,[[["self"],["h"]]]],[11,"hash","","",127,[[["self"],["h"]]]],[11,"hash","","",128,[[["self"],["h"]]]],[11,"hash","","",182,[[["self"],["__h"]]]],[11,"hash","","",180,[[["self"],["__h"]]]],[11,"hash","","",179,[[["self"],["__h"]]]],[11,"hash","","",183,[[["self"],["__h"]]]],[11,"hash","","",129,[[["self"],["h"]]]],[11,"hash","","",133,[[["self"],["__h"]]]],[11,"hash","","",184,[[["self"],["__h"]]]],[11,"hash","","",131,[[["self"],["__h"]]]],[11,"hash","","",130,[[["self"],["__h"]]]],[11,"hash","","",132,[[["self"],["__h"]]]],[11,"hash","","",185,[[["self"],["__h"]]]],[11,"hash","","",186,[[["self"],["__h"]]]],[11,"hash","","",189,[[["self"],["__h"]]]],[11,"hash","","",147,[[["self"],["__h"]]]],[11,"hash","","",136,[[["self"],["__h"]]]],[11,"hash","","",145,[[["self"],["__h"]]]],[11,"hash","","",146,[[["self"],["__h"]]]],[11,"hash","","",137,[[["self"],["__h"]]]],[11,"hash","","",142,[[["self"],["__h"]]]],[11,"hash","","",149,[[["self"],["__h"]]]],[11,"hash","","",144,[[["self"],["__h"]]]],[11,"hash","","",148,[[["self"],["__h"]]]],[11,"hash","","",139,[[["self"],["__h"]]]],[11,"hash","","",143,[[["self"],["__h"]]]],[11,"hash","","",138,[[["self"],["__h"]]]],[11,"hash","","",140,[[["self"],["__h"]]]],[11,"hash","","",141,[[["self"],["__h"]]]],[11,"hash","","",150,[[["self"],["h"]]]],[11,"hash","","",134,[[["self"],["__h"]]]],[11,"hash","","",135,[[["self"],["__h"]]]],[11,"hash","","",187,[[["self"],["__h"]]]],[11,"hash","","",188,[[["self"],["__h"]]]],[11,"hash","","",155,[[["self"],["__h"]]]],[11,"hash","","",156,[[["self"],["__h"]]]],[11,"hash","","",191,[[["self"],["__h"]]]],[11,"hash","","",190,[[["self"],["__h"]]]],[11,"hash","","",151,[[["self"],["__h"]]]],[11,"hash","","",152,[[["self"],["__h"]]]],[11,"hash","","",153,[[["self"],["__h"]]]],[11,"hash","","",154,[[["self"],["__h"]]]],[11,"hash","","",157,[[["self"],["__h"]]]],[11,"hash","syn::punctuated","",306,[[["self"],["__h"]]]],[11,"from_iter","","",306,[[["intoiterator"]],["self"]]],[11,"from_iter","","",306,[[["intoiterator"]],["self"]]],[11,"description","syn","",314,[[["self"]],["str"]]],[11,"to_tokens","syn::token","",192,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",193,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",194,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",195,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",196,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",197,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",198,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",199,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",200,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",201,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",202,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",203,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",204,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",205,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",206,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",207,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",208,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",209,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",210,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",211,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",212,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",213,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",214,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",215,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",216,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",217,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",218,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",219,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",220,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",221,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",222,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",223,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",224,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",225,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",226,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",227,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",228,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",229,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",230,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",231,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",232,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",233,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",234,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",235,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",236,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",237,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",238,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",239,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",240,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",241,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",242,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",243,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",244,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",245,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",246,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",247,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",248,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",249,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",250,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",251,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",252,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",253,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",254,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",255,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",256,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",257,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",258,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",259,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",260,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",261,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",262,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",263,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",264,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",265,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",266,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",267,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",268,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",269,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",270,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",271,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",272,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",273,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",274,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",275,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",276,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",277,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",278,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",279,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",280,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",281,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",282,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",283,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",284,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",285,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",286,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",287,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",288,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",289,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",290,[[["tokenstream"],["self"]]]],[11,"to_tokens","syn","",159,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",160,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",0,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",1,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",2,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",161,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",162,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",6,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",4,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",5,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",3,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",8,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",7,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",9,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",163,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",166,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",16,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",26,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",10,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",18,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",33,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",57,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",165,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",43,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",14,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",45,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",29,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",19,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",44,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",28,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",25,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",48,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",23,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",30,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",32,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",13,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",42,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",49,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",20,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",46,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",15,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",11,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",12,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",22,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",164,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",50,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",27,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",36,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",35,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",37,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",17,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",21,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",39,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",31,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",40,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",38,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",24,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",34,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",41,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",47,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",55,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",54,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",51,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",70,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",59,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",66,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",68,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",62,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",67,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",58,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",64,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",60,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",63,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",65,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",61,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",69,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",53,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",52,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",168,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",56,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",169,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",171,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",172,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",73,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",316,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",295,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",317,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",71,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",74,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",79,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",78,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",170,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",72,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",80,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",77,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",76,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",75,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",176,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",178,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",174,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",177,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",175,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",173,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",99,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",112,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",106,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",96,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",100,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",105,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",101,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",110,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",98,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",97,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",107,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",111,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",108,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",109,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",102,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",103,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",104,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",113,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",123,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",122,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",124,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",120,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",121,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",115,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",117,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",118,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",116,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",119,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",90,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",93,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",94,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",91,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",92,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",95,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",85,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",87,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",88,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",86,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",89,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",114,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",83,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",82,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",81,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",125,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",126,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",181,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",296,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",297,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",298,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",299,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",300,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",301,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",127,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",128,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",129,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",133,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",185,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",186,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",189,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",147,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",136,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",145,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",146,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",137,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",142,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",149,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",144,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",148,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",139,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",138,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",143,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",140,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",141,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",150,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",188,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",135,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",187,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",134,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",155,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",156,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",191,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",190,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",151,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",152,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",153,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",154,[[["tokenstream"],["self"]]]],[11,"to_tokens","syn::punctuated","",306,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",305,[[["tokenstream"],["self"]]]],[11,"new","syn","Creates a new `Ident` with the given `string` as well as…",315,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",315,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",315,[[["span"],["self"]]]],[11,"visit_abi","syn::visit","",308,[[["abi"],["self"]]]],[11,"visit_angle_bracketed_generic_arguments","","",308,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_arg_captured","","",308,[[["self"],["argcaptured"]]]],[11,"visit_arg_self","","",308,[[["self"],["argself"]]]],[11,"visit_arg_self_ref","","",308,[[["argselfref"],["self"]]]],[11,"visit_arm","","",308,[[["arm"],["self"]]]],[11,"visit_attr_style","","",308,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",308,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",308,[[["self"],["barefnarg"]]]],[11,"visit_bare_fn_arg_name","","",308,[[["self"],["barefnargname"]]]],[11,"visit_bin_op","","",308,[[["self"],["binop"]]]],[11,"visit_binding","","",308,[[["self"],["binding"]]]],[11,"visit_block","","",308,[[["block"],["self"]]]],[11,"visit_bound_lifetimes","","",308,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param","","",308,[[["constparam"],["self"]]]],[11,"visit_constraint","","",308,[[["constraint"],["self"]]]],[11,"visit_data","","",308,[[["self"],["data"]]]],[11,"visit_data_enum","","",308,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",308,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",308,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",308,[[["deriveinput"],["self"]]]],[11,"visit_expr","","",308,[[["expr"],["self"]]]],[11,"visit_expr_array","","",308,[[["exprarray"],["self"]]]],[11,"visit_expr_assign","","",308,[[["exprassign"],["self"]]]],[11,"visit_expr_assign_op","","",308,[[["self"],["exprassignop"]]]],[11,"visit_expr_async","","",308,[[["self"],["exprasync"]]]],[11,"visit_expr_binary","","",308,[[["exprbinary"],["self"]]]],[11,"visit_expr_block","","",308,[[["self"],["exprblock"]]]],[11,"visit_expr_box","","",308,[[["exprbox"],["self"]]]],[11,"visit_expr_break","","",308,[[["exprbreak"],["self"]]]],[11,"visit_expr_call","","",308,[[["exprcall"],["self"]]]],[11,"visit_expr_cast","","",308,[[["self"],["exprcast"]]]],[11,"visit_expr_closure","","",308,[[["self"],["exprclosure"]]]],[11,"visit_expr_continue","","",308,[[["self"],["exprcontinue"]]]],[11,"visit_expr_field","","",308,[[["self"],["exprfield"]]]],[11,"visit_expr_for_loop","","",308,[[["self"],["exprforloop"]]]],[11,"visit_expr_group","","",308,[[["self"],["exprgroup"]]]],[11,"visit_expr_if","","",308,[[["self"],["exprif"]]]],[11,"visit_expr_in_place","","",308,[[["self"],["exprinplace"]]]],[11,"visit_expr_index","","",308,[[["self"],["exprindex"]]]],[11,"visit_expr_let","","",308,[[["self"],["exprlet"]]]],[11,"visit_expr_lit","","",308,[[["self"],["exprlit"]]]],[11,"visit_expr_loop","","",308,[[["self"],["exprloop"]]]],[11,"visit_expr_macro","","",308,[[["self"],["exprmacro"]]]],[11,"visit_expr_match","","",308,[[["self"],["exprmatch"]]]],[11,"visit_expr_method_call","","",308,[[["exprmethodcall"],["self"]]]],[11,"visit_expr_paren","","",308,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",308,[[["self"],["exprpath"]]]],[11,"visit_expr_range","","",308,[[["self"],["exprrange"]]]],[11,"visit_expr_reference","","",308,[[["self"],["exprreference"]]]],[11,"visit_expr_repeat","","",308,[[["self"],["exprrepeat"]]]],[11,"visit_expr_return","","",308,[[["self"],["exprreturn"]]]],[11,"visit_expr_struct","","",308,[[["self"],["exprstruct"]]]],[11,"visit_expr_try","","",308,[[["exprtry"],["self"]]]],[11,"visit_expr_try_block","","",308,[[["self"],["exprtryblock"]]]],[11,"visit_expr_tuple","","",308,[[["self"],["exprtuple"]]]],[11,"visit_expr_type","","",308,[[["self"],["exprtype"]]]],[11,"visit_expr_unary","","",308,[[["self"],["exprunary"]]]],[11,"visit_expr_unsafe","","",308,[[["self"],["exprunsafe"]]]],[11,"visit_expr_verbatim","","",308,[[["self"],["exprverbatim"]]]],[11,"visit_expr_while","","",308,[[["self"],["exprwhile"]]]],[11,"visit_expr_yield","","",308,[[["self"],["expryield"]]]],[11,"visit_field","","",308,[[["self"],["field"]]]],[11,"visit_field_pat","","",308,[[["self"],["fieldpat"]]]],[11,"visit_field_value","","",308,[[["self"],["fieldvalue"]]]],[11,"visit_fields","","",308,[[["self"],["fields"]]]],[11,"visit_fields_named","","",308,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",308,[[["self"],["fieldsunnamed"]]]],[11,"visit_file","","",308,[[["self"],["file"]]]],[11,"visit_fn_arg","","",308,[[["self"],["fnarg"]]]],[11,"visit_fn_decl","","",308,[[["self"],["fndecl"]]]],[11,"visit_foreign_item","","",308,[[["self"],["foreignitem"]]]],[11,"visit_foreign_item_fn","","",308,[[["self"],["foreignitemfn"]]]],[11,"visit_foreign_item_macro","","",308,[[["self"],["foreignitemmacro"]]]],[11,"visit_foreign_item_static","","",308,[[["foreignitemstatic"],["self"]]]],[11,"visit_foreign_item_type","","",308,[[["self"],["foreignitemtype"]]]],[11,"visit_foreign_item_verbatim","","",308,[[["self"],["foreignitemverbatim"]]]],[11,"visit_generic_argument","","",308,[[["self"],["genericargument"]]]],[11,"visit_generic_method_argument","","",308,[[["self"],["genericmethodargument"]]]],[11,"visit_generic_param","","",308,[[["self"],["genericparam"]]]],[11,"visit_generics","","",308,[[["self"],["generics"]]]],[11,"visit_impl_item","","",308,[[["self"],["implitem"]]]],[11,"visit_impl_item_const","","",308,[[["self"],["implitemconst"]]]],[11,"visit_impl_item_existential","","",308,[[["self"],["implitemexistential"]]]],[11,"visit_impl_item_macro","","",308,[[["implitemmacro"],["self"]]]],[11,"visit_impl_item_method","","",308,[[["implitemmethod"],["self"]]]],[11,"visit_impl_item_type","","",308,[[["self"],["implitemtype"]]]],[11,"visit_impl_item_verbatim","","",308,[[["self"],["implitemverbatim"]]]],[11,"visit_index","","",308,[[["self"],["index"]]]],[11,"visit_item","","",308,[[["item"],["self"]]]],[11,"visit_item_const","","",308,[[["self"],["itemconst"]]]],[11,"visit_item_enum","","",308,[[["self"],["itemenum"]]]],[11,"visit_item_existential","","",308,[[["self"],["itemexistential"]]]],[11,"visit_item_extern_crate","","",308,[[["self"],["itemexterncrate"]]]],[11,"visit_item_fn","","",308,[[["itemfn"],["self"]]]],[11,"visit_item_foreign_mod","","",308,[[["itemforeignmod"],["self"]]]],[11,"visit_item_impl","","",308,[[["self"],["itemimpl"]]]],[11,"visit_item_macro","","",308,[[["self"],["itemmacro"]]]],[11,"visit_item_macro2","","",308,[[["itemmacro2"],["self"]]]],[11,"visit_item_mod","","",308,[[["self"],["itemmod"]]]],[11,"visit_item_static","","",308,[[["itemstatic"],["self"]]]],[11,"visit_item_struct","","",308,[[["itemstruct"],["self"]]]],[11,"visit_item_trait","","",308,[[["self"],["itemtrait"]]]],[11,"visit_item_trait_alias","","",308,[[["self"],["itemtraitalias"]]]],[11,"visit_item_type","","",308,[[["self"],["itemtype"]]]],[11,"visit_item_union","","",308,[[["self"],["itemunion"]]]],[11,"visit_item_use","","",308,[[["self"],["itemuse"]]]],[11,"visit_item_verbatim","","",308,[[["self"],["itemverbatim"]]]],[11,"visit_label","","",308,[[["self"],["label"]]]],[11,"visit_lifetime","","",308,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",308,[[["lifetimedef"],["self"]]]],[11,"visit_lit","","",308,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",308,[[["litbool"],["self"]]]],[11,"visit_lit_byte","","",308,[[["self"],["litbyte"]]]],[11,"visit_lit_byte_str","","",308,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",308,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",308,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",308,[[["self"],["litint"]]]],[11,"visit_lit_str","","",308,[[["self"],["litstr"]]]],[11,"visit_lit_verbatim","","",308,[[["self"],["litverbatim"]]]],[11,"visit_local","","",308,[[["local"],["self"]]]],[11,"visit_macro","","",308,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",308,[[["macrodelimiter"],["self"]]]],[11,"visit_member","","",308,[[["self"],["member"]]]],[11,"visit_meta","","",308,[[["meta"],["self"]]]],[11,"visit_meta_list","","",308,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",308,[[["metanamevalue"],["self"]]]],[11,"visit_method_sig","","",308,[[["self"],["methodsig"]]]],[11,"visit_method_turbofish","","",308,[[["self"],["methodturbofish"]]]],[11,"visit_nested_meta","","",308,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",308,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_pat","","",308,[[["self"],["pat"]]]],[11,"visit_pat_box","","",308,[[["patbox"],["self"]]]],[11,"visit_pat_ident","","",308,[[["self"],["patident"]]]],[11,"visit_pat_lit","","",308,[[["patlit"],["self"]]]],[11,"visit_pat_macro","","",308,[[["patmacro"],["self"]]]],[11,"visit_pat_path","","",308,[[["patpath"],["self"]]]],[11,"visit_pat_range","","",308,[[["self"],["patrange"]]]],[11,"visit_pat_ref","","",308,[[["self"],["patref"]]]],[11,"visit_pat_slice","","",308,[[["self"],["patslice"]]]],[11,"visit_pat_struct","","",308,[[["patstruct"],["self"]]]],[11,"visit_pat_tuple","","",308,[[["self"],["pattuple"]]]],[11,"visit_pat_tuple_struct","","",308,[[["self"],["pattuplestruct"]]]],[11,"visit_pat_verbatim","","",308,[[["patverbatim"],["self"]]]],[11,"visit_pat_wild","","",308,[[["self"],["patwild"]]]],[11,"visit_path","","",308,[[["self"],["path"]]]],[11,"visit_path_arguments","","",308,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",308,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",308,[[["predicateeq"],["self"]]]],[11,"visit_predicate_lifetime","","",308,[[["self"],["predicatelifetime"]]]],[11,"visit_predicate_type","","",308,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",308,[[["self"],["qself"]]]],[11,"visit_range_limits","","",308,[[["self"],["rangelimits"]]]],[11,"visit_return_type","","",308,[[["self"],["returntype"]]]],[11,"visit_stmt","","",308,[[["self"],["stmt"]]]],[11,"visit_trait_bound","","",308,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier","","",308,[[["traitboundmodifier"],["self"]]]],[11,"visit_trait_item","","",308,[[["traititem"],["self"]]]],[11,"visit_trait_item_const","","",308,[[["traititemconst"],["self"]]]],[11,"visit_trait_item_macro","","",308,[[["self"],["traititemmacro"]]]],[11,"visit_trait_item_method","","",308,[[["self"],["traititemmethod"]]]],[11,"visit_trait_item_type","","",308,[[["self"],["traititemtype"]]]],[11,"visit_trait_item_verbatim","","",308,[[["traititemverbatim"],["self"]]]],[11,"visit_type","","",308,[[["self"],["type"]]]],[11,"visit_type_array","","",308,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",308,[[["typebarefn"],["self"]]]],[11,"visit_type_group","","",308,[[["typegroup"],["self"]]]],[11,"visit_type_impl_trait","","",308,[[["typeimpltrait"],["self"]]]],[11,"visit_type_infer","","",308,[[["typeinfer"],["self"]]]],[11,"visit_type_macro","","",308,[[["typemacro"],["self"]]]],[11,"visit_type_never","","",308,[[["self"],["typenever"]]]],[11,"visit_type_param","","",308,[[["typeparam"],["self"]]]],[11,"visit_type_param_bound","","",308,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",308,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",308,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",308,[[["typeptr"],["self"]]]],[11,"visit_type_reference","","",308,[[["typereference"],["self"]]]],[11,"visit_type_slice","","",308,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",308,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple","","",308,[[["typetuple"],["self"]]]],[11,"visit_type_verbatim","","",308,[[["self"],["typeverbatim"]]]],[11,"visit_un_op","","",308,[[["self"],["unop"]]]],[11,"visit_use_glob","","",308,[[["self"],["useglob"]]]],[11,"visit_use_group","","",308,[[["self"],["usegroup"]]]],[11,"visit_use_name","","",308,[[["usename"],["self"]]]],[11,"visit_use_path","","",308,[[["self"],["usepath"]]]],[11,"visit_use_rename","","",308,[[["self"],["userename"]]]],[11,"visit_use_tree","","",308,[[["usetree"],["self"]]]],[11,"visit_variant","","",308,[[["self"],["variant"]]]],[11,"visit_vis_crate","","",308,[[["viscrate"],["self"]]]],[11,"visit_vis_public","","",308,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",308,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",308,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",308,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",308,[[["self"],["wherepredicate"]]]],[11,"visit_span","","",308,[[["self"],["span"]]]],[11,"visit_ident","","",308,[[["self"],["ident"]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine…",324,[[["self"],["peek"]],["bool"]]],[11,"error","","Triggers an error at the current position of the parse…",324,[[],["error"]]]],"p":[[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Field"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprInPlace"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprVerbatim"],[3,"ExprWhile"],[3,"ExprYield"],[3,"Index"],[3,"Arm"],[3,"Block"],[3,"FieldPat"],[3,"FieldValue"],[3,"Label"],[3,"Local"],[3,"MethodTurbofish"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatPath"],[3,"PatRange"],[3,"PatRef"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatVerbatim"],[3,"PatWild"],[3,"BoundLifetimes"],[3,"ConstParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[3,"TypeParam"],[3,"WhereClause"],[3,"ArgCaptured"],[3,"ArgSelf"],[3,"ArgSelfRef"],[3,"FnDecl"],[3,"ForeignItemFn"],[3,"ForeignItemMacro"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[3,"ForeignItemVerbatim"],[3,"ImplItemConst"],[3,"ImplItemExistential"],[3,"ImplItemMacro"],[3,"ImplItemMethod"],[3,"ImplItemType"],[3,"ImplItemVerbatim"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExistential"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemForeignMod"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"ItemVerbatim"],[3,"MethodSig"],[3,"TraitItemConst"],[3,"TraitItemMacro"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"TraitItemVerbatim"],[3,"UseGlob"],[3,"UseGroup"],[3,"UseName"],[3,"UsePath"],[3,"UseRename"],[3,"File"],[3,"Lifetime"],[3,"LitBool"],[3,"LitVerbatim"],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"TypeVerbatim"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[3,"PathSegment"],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"Expr"],[4,"Member"],[4,"GenericMethodArgument"],[4,"Pat"],[4,"RangeLimits"],[4,"Stmt"],[4,"GenericParam"],[4,"TraitBoundModifier"],[4,"TypeParamBound"],[4,"WherePredicate"],[4,"FnArg"],[4,"ForeignItem"],[4,"ImplItem"],[4,"Item"],[4,"TraitItem"],[4,"UseTree"],[4,"FloatSuffix"],[4,"IntSuffix"],[4,"Lit"],[4,"StrStyle"],[4,"MacroDelimiter"],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,"BareFnArgName"],[4,"ReturnType"],[4,"Type"],[4,"GenericArgument"],[4,"PathArguments"],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Existential"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TypeGenerics"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,"Punctuated"],[8,"Spanned"],[8,"Visit"],[8,"Speculative"],[8,"Parse"],[8,"Parser"],[3,"StepCursor"],[3,"ParseBuffer"],[3,"Error"],[3,"Ident"],[3,"ImplGenerics"],[3,"Turbofish"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"]]};
searchIndex["syn_mid"] = {"doc":"Providing the features between \"full\" and \"derive\" of syn.","i":[[3,"Receiver","syn_mid","The `self` argument of an associated method, whether taken…",null,null],[12,"attrs","","",0,null],[12,"reference","","",0,null],[12,"mutability","","",0,null],[12,"self_token","","",0,null],[3,"PatIdent","","A pattern that binds a new variable: `ref mut binding @…",null,null],[12,"attrs","","",1,null],[12,"by_ref","","",1,null],[12,"mutability","","",1,null],[12,"ident","","",1,null],[3,"PatPath","","A path pattern like `Color::Red`.",null,null],[12,"attrs","","",2,null],[12,"path","","",2,null],[3,"PatReference","","A reference pattern: `&mut var`.",null,null],[12,"attrs","","",3,null],[12,"and_token","","",3,null],[12,"mutability","","",3,null],[12,"pat","","",3,null],[3,"PatStruct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",null,null],[12,"attrs","","",4,null],[12,"path","","",4,null],[12,"brace_token","","",4,null],[12,"fields","","",4,null],[12,"dot2_token","","",4,null],[3,"PatTuple","","A tuple pattern: `(a, b)`.",null,null],[12,"attrs","","",5,null],[12,"paren_token","","",5,null],[12,"elems","","",5,null],[3,"PatTupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",null,null],[12,"attrs","","",6,null],[12,"path","","",6,null],[12,"pat","","",6,null],[3,"PatType","","A type ascription pattern: `foo: f64`.",null,null],[12,"attrs","","",7,null],[12,"pat","","",7,null],[12,"colon_token","","",7,null],[12,"ty","","",7,null],[3,"PatWild","","A pattern that matches any value: `_`.",null,null],[12,"attrs","","",8,null],[12,"underscore_token","","",8,null],[3,"FieldPat","","A single field in a struct pattern.",null,null],[12,"attrs","","",9,null],[12,"member","","",9,null],[12,"colon_token","","",9,null],[12,"pat","","",9,null],[3,"Block","","A braced block containing Rust statements.",null,null],[12,"brace_token","","",10,null],[12,"stmts","","Statements in a block",10,null],[3,"ItemFn","","A free-standing function: `fn process(n: usize) ->…",null,null],[12,"attrs","","",11,null],[12,"vis","","",11,null],[12,"sig","","",11,null],[12,"block","","",11,null],[3,"Signature","","A function signature in a trait or implementation: `unsafe…",null,null],[12,"constness","","",12,null],[12,"asyncness","","",12,null],[12,"unsafety","","",12,null],[12,"abi","","",12,null],[12,"fn_token","","",12,null],[12,"ident","","",12,null],[12,"generics","","",12,null],[12,"paren_token","","",12,null],[12,"inputs","","",12,null],[12,"variadic","","",12,null],[12,"output","","",12,null],[4,"FnArg","","An argument in a function signature: the `n: usize` in `fn…",null,null],[13,"Receiver","","The `self` argument of an associated method, whether taken…",13,null],[13,"Typed","","A function argument accepted by pattern and type.",13,null],[4,"Pat","","A pattern in a local binding, function signature, match…",null,null],[13,"Ident","","A pattern that binds a new variable: `ref mut binding @…",14,null],[13,"Path","","A path pattern like `Color::Red`.",14,null],[13,"Reference","","A reference pattern: `&mut var`.",14,null],[13,"Struct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",14,null],[13,"Tuple","","A tuple pattern: `(a, b)`.",14,null],[13,"TupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",14,null],[13,"Type","","A type ascription pattern: `foo: f64`.",14,null],[13,"Wild","","A pattern that matches any value: `_`.",14,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"span","","",0,[[["self"]],["span"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"span","","",1,[[["self"]],["span"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"span","","",2,[[["self"]],["span"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"span","","",3,[[["self"]],["span"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"span","","",4,[[["self"]],["span"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"span","","",5,[[["self"]],["span"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"span","","",6,[[["self"]],["span"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"span","","",7,[[["self"]],["span"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"span","","",8,[[["self"]],["span"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"span","","",9,[[["self"]],["span"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"span","","",10,[[["self"]],["span"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"span","","",11,[[["self"]],["span"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"span","","",12,[[["self"]],["span"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"span","","",13,[[["self"]],["span"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"span","","",14,[[["self"]],["span"]]],[11,"from","","",13,[[["receiver"]],["fnarg"]]],[11,"from","","",13,[[["pattype"]],["fnarg"]]],[11,"from","","",14,[[["patident"]],["pat"]]],[11,"from","","",14,[[["patpath"]],["pat"]]],[11,"from","","",14,[[["patreference"]],["pat"]]],[11,"from","","",14,[[["patstruct"]],["pat"]]],[11,"from","","",14,[[["pattuple"]],["pat"]]],[11,"from","","",14,[[["pattuplestruct"]],["pat"]]],[11,"from","","",14,[[["pattype"]],["pat"]]],[11,"from","","",14,[[["patwild"]],["pat"]]],[11,"to_tokens","","",13,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",0,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",14,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",8,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",1,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",4,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",6,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",7,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",2,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",5,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",3,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",9,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",10,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",12,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",11,[[["tokenstream"],["self"]]]],[11,"parse","","",13,[[["parsestream"]],["result"]]],[11,"parse","","",0,[[["parsestream"]],["result"]]],[11,"parse","","",14,[[["parsestream"]],["result"]]],[11,"parse","","",10,[[["parsestream"]],["result"]]],[11,"parse","","",11,[[["parsestream"]],["result"]]]],"p":[[3,"Receiver"],[3,"PatIdent"],[3,"PatPath"],[3,"PatReference"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatType"],[3,"PatWild"],[3,"FieldPat"],[3,"Block"],[3,"ItemFn"],[3,"Signature"],[4,"FnArg"],[4,"Pat"]]};
searchIndex["tar"] = {"doc":"A library for reading and writing TAR archives","i":[[3,"Archive","tar","A top-level representation of an archive file.",null,null],[3,"Entries","","An iterator over the entries of an archive.",null,null],[3,"Builder","","A structure for building archives",null,null],[3,"Entry","","A read-only view into an entry of an archive.",null,null],[3,"GnuExtSparseHeader","","Representation of the entry found to represent extended…",null,null],[12,"sparse","","",0,null],[12,"isextended","","",0,null],[12,"padding","","",0,null],[3,"GnuHeader","","Representation of the header of an entry in an archive",null,null],[12,"name","","",1,null],[12,"mode","","",1,null],[12,"uid","","",1,null],[12,"gid","","",1,null],[12,"size","","",1,null],[12,"mtime","","",1,null],[12,"cksum","","",1,null],[12,"typeflag","","",1,null],[12,"linkname","","",1,null],[12,"magic","","",1,null],[12,"version","","",1,null],[12,"uname","","",1,null],[12,"gname","","",1,null],[12,"dev_major","","",1,null],[12,"dev_minor","","",1,null],[12,"atime","","",1,null],[12,"ctime","","",1,null],[12,"offset","","",1,null],[12,"longnames","","",1,null],[12,"unused","","",1,null],[12,"sparse","","",1,null],[12,"isextended","","",1,null],[12,"realsize","","",1,null],[12,"pad","","",1,null],[3,"GnuSparseHeader","","Description of the header of a spare entry.",null,null],[12,"offset","","",2,null],[12,"numbytes","","",2,null],[3,"Header","","Representation of the header of an entry in an archive",null,null],[3,"OldHeader","","Representation of the header of an entry in an archive",null,null],[12,"name","","",3,null],[12,"mode","","",3,null],[12,"uid","","",3,null],[12,"gid","","",3,null],[12,"size","","",3,null],[12,"mtime","","",3,null],[12,"cksum","","",3,null],[12,"linkflag","","",3,null],[12,"linkname","","",3,null],[12,"pad","","",3,null],[3,"UstarHeader","","Representation of the header of an entry in an archive",null,null],[12,"name","","",4,null],[12,"mode","","",4,null],[12,"uid","","",4,null],[12,"gid","","",4,null],[12,"size","","",4,null],[12,"mtime","","",4,null],[12,"cksum","","",4,null],[12,"typeflag","","",4,null],[12,"linkname","","",4,null],[12,"magic","","",4,null],[12,"version","","",4,null],[12,"uname","","",4,null],[12,"gname","","",4,null],[12,"dev_major","","",4,null],[12,"dev_minor","","",4,null],[12,"prefix","","",4,null],[12,"pad","","",4,null],[3,"PaxExtension","","A key/value pair corresponding to a pax extension.",null,null],[3,"PaxExtensions","","An iterator over the pax extensions in an archive entry.",null,null],[4,"Unpacked","","When unpacking items the unpacked thing is returned to…",null,null],[13,"File","","A file was unpacked.",5,null],[4,"EntryType","","Indicate for the type of file described by a header.",null,null],[13,"Regular","","Regular file",6,null],[13,"Link","","Hard link",6,null],[13,"Symlink","","Symbolic link",6,null],[13,"Char","","Character device",6,null],[13,"Block","","Block device",6,null],[13,"Directory","","Directory",6,null],[13,"Fifo","","Named pipe (fifo)",6,null],[13,"Continuous","","Implementation-defined 'high-performance' type, treated as…",6,null],[13,"GNULongName","","GNU extension - long file name",6,null],[13,"GNULongLink","","GNU extension - long link name (link target)",6,null],[13,"GNUSparse","","GNU extension - sparse file",6,null],[13,"XGlobalHeader","","Global extended header",6,null],[13,"XHeader","","Extended Header",6,null],[4,"HeaderMode","","Declares the information that should be included when…",null,null],[13,"Complete","","All supported metadata, including mod/access times and…",7,null],[13,"Deterministic","","Only metadata that is directly relevant to the identity of…",7,null],[11,"new","","Create a new archive with the underlying object as the…",8,[[["r"]],["archive"]]],[11,"into_inner","","Unwrap this archive, returning the underlying object.",8,[[],["r"]]],[11,"entries","","Construct an iterator over the entries in this archive.",8,[[["self"]],[["result",["entries"]],["entries"]]]],[11,"unpack","","Unpacks the contents tarball into the specified `dst`.",8,[[["path"],["self"],["asref",["path"]]],["result"]]],[11,"set_unpack_xattrs","","Indicate whether extended file attributes (xattrs on Unix)…",8,[[["self"],["bool"]]]],[11,"set_preserve_permissions","","Indicate whether extended permissions (like suid on Unix)…",8,[[["self"],["bool"]]]],[11,"set_preserve_mtime","","Indicate whether access time information is preserved when…",8,[[["self"],["bool"]]]],[11,"set_ignore_zeros","","Ignore zeroed headers, which would otherwise indicate to…",8,[[["self"],["bool"]]]],[11,"raw","","Indicates whether this iterator will return raw entries or…",9,[[["bool"]],["entries"]]],[11,"new","","Create a new archive builder with the underlying object as…",10,[[["w"]],["builder"]]],[11,"mode","","Changes the HeaderMode that will be used when reading fs…",10,[[["headermode"],["self"]]]],[11,"follow_symlinks","","Follow symlinks, archiving the contents of the file they…",10,[[["self"],["bool"]]]],[11,"get_ref","","Gets shared reference to the underlying object.",10,[[["self"]],["w"]]],[11,"get_mut","","Gets mutable reference to the underlying object.",10,[[["self"]],["w"]]],[11,"into_inner","","Unwrap this archive, returning the underlying object.",10,[[],["result"]]],[11,"append","","Adds a new entry to this archive.",10,[[["header"],["self"],["read"]],["result"]]],[11,"append_data","","Adds a new entry to this archive with the specified path.",10,[[["asref",["path"]],["header"],["self"],["path"],["read"]],["result"]]],[11,"append_path","","Adds a file on the local filesystem to this archive.",10,[[["path"],["self"],["asref",["path"]]],["result"]]],[11,"append_path_with_name","","Adds a file on the local filesystem to this archive under…",10,[[["path"],["asref",["path"]],["self"]],["result"]]],[11,"append_file","","Adds a file to this archive with the given path as the…",10,[[["file"],["path"],["asref",["path"]],["self"]],["result"]]],[11,"append_dir","","Adds a directory to this archive with the given path as…",10,[[["self"],["q"],["p"]],["result"]]],[11,"append_dir_all","","Adds a directory and all of its contents (recursively) to…",10,[[["self"],["q"],["p"]],["result"]]],[11,"finish","","Finish writing this archive, emitting the termination…",10,[[["self"]],["result"]]],[11,"path","","Returns the path name for this entry.",11,[[["self"]],[["cow",["path"]],["result",["cow"]]]]],[11,"path_bytes","","Returns the raw bytes listed for this entry.",11,[[["self"]],["cow"]]],[11,"link_name","","Returns the link name for this entry, if any is found.",11,[[["self"]],[["option",["cow"]],["result",["option"]]]]],[11,"link_name_bytes","","Returns the link name for this entry, in bytes, if listed.",11,[[["self"]],[["option",["cow"]],["cow"]]]],[11,"pax_extensions","","Returns an iterator over the pax extensions contained in…",11,[[["self"]],[["result",["option"]],["option",["paxextensions"]]]]],[11,"header","","Returns access to the header of this entry in the archive.",11,[[["self"]],["header"]]],[11,"raw_header_position","","Returns the starting position, in bytes, of the header of…",11,[[["self"]],["u64"]]],[11,"raw_file_position","","Returns the starting position, in bytes, of the file of…",11,[[["self"]],["u64"]]],[11,"unpack","","Writes this file to the specified location.",11,[[["path"],["self"],["asref",["path"]]],[["unpacked"],["result",["unpacked"]]]]],[11,"unpack_in","","Extracts this file under the specified path, avoiding…",11,[[["path"],["self"],["asref",["path"]]],[["result",["bool"]],["bool"]]]],[11,"set_unpack_xattrs","","Indicate whether extended file attributes (xattrs on Unix)…",11,[[["self"],["bool"]]]],[11,"set_preserve_permissions","","Indicate whether extended permissions (like suid on Unix)…",11,[[["self"],["bool"]]]],[11,"set_preserve_mtime","","Indicate whether access time information is preserved when…",11,[[["self"],["bool"]]]],[11,"new","","Creates a new entry type from a raw byte.",6,[[["u8"]],["entrytype"]]],[11,"as_byte","","Returns the raw underlying byte that this entry type…",6,[[["self"]],["u8"]]],[11,"file","","Creates a new entry type representing a regular file.",6,[[],["entrytype"]]],[11,"hard_link","","Creates a new entry type representing a hard link.",6,[[],["entrytype"]]],[11,"symlink","","Creates a new entry type representing a symlink.",6,[[],["entrytype"]]],[11,"character_special","","Creates a new entry type representing a character special…",6,[[],["entrytype"]]],[11,"block_special","","Creates a new entry type representing a block special…",6,[[],["entrytype"]]],[11,"dir","","Creates a new entry type representing a directory.",6,[[],["entrytype"]]],[11,"fifo","","Creates a new entry type representing a FIFO.",6,[[],["entrytype"]]],[11,"contiguous","","Creates a new entry type representing a contiguous file.",6,[[],["entrytype"]]],[11,"is_file","","Returns whether this type represents a regular file.",6,[[["self"]],["bool"]]],[11,"is_hard_link","","Returns whether this type represents a hard link.",6,[[["self"]],["bool"]]],[11,"is_symlink","","Returns whether this type represents a symlink.",6,[[["self"]],["bool"]]],[11,"is_character_special","","Returns whether this type represents a character special…",6,[[["self"]],["bool"]]],[11,"is_block_special","","Returns whether this type represents a block special device.",6,[[["self"]],["bool"]]],[11,"is_dir","","Returns whether this type represents a directory.",6,[[["self"]],["bool"]]],[11,"is_fifo","","Returns whether this type represents a FIFO.",6,[[["self"]],["bool"]]],[11,"is_contiguous","","Returns whether this type represents a contiguous file.",6,[[["self"]],["bool"]]],[11,"is_gnu_longname","","Returns whether this type represents a GNU long name header.",6,[[["self"]],["bool"]]],[11,"is_gnu_sparse","","Returns whether this type represents a GNU sparse header.",6,[[["self"]],["bool"]]],[11,"is_gnu_longlink","","Returns whether this type represents a GNU long link header.",6,[[["self"]],["bool"]]],[11,"is_pax_global_extensions","","Returns whether this type represents a GNU long name header.",6,[[["self"]],["bool"]]],[11,"is_pax_local_extensions","","Returns whether this type represents a GNU long link header.",6,[[["self"]],["bool"]]],[11,"new_gnu","","Creates a new blank GNU header.",12,[[],["header"]]],[11,"new_ustar","","Creates a new blank UStar header.",12,[[],["header"]]],[11,"new_old","","Creates a new blank old header.",12,[[],["header"]]],[11,"as_old","","View this archive header as a raw \"old\" archive header.",12,[[["self"]],["oldheader"]]],[11,"as_old_mut","","Same as `as_old`, but the mutable version.",12,[[["self"]],["oldheader"]]],[11,"as_ustar","","View this archive header as a raw UStar archive header.",12,[[["self"]],[["ustarheader"],["option",["ustarheader"]]]]],[11,"as_ustar_mut","","Same as `as_ustar_mut`, but the mutable version.",12,[[["self"]],[["ustarheader"],["option",["ustarheader"]]]]],[11,"as_gnu","","View this archive header as a raw GNU archive header.",12,[[["self"]],[["gnuheader"],["option",["gnuheader"]]]]],[11,"as_gnu_mut","","Same as `as_gnu`, but the mutable version.",12,[[["self"]],[["option",["gnuheader"]],["gnuheader"]]]],[11,"from_byte_slice","","Treats the given byte slice as a header.",12,[[],["header"]]],[11,"as_bytes","","Returns a view into this header as a byte array.",12,[[["self"]]]],[11,"as_mut_bytes","","Returns a view into this header as a byte array.",12,[[["self"]]]],[11,"set_metadata","","Blanket sets the metadata in this header from the metadata…",12,[[["self"],["metadata"]]]],[11,"set_metadata_in_mode","","Sets only the metadata relevant to the given HeaderMode in…",12,[[["headermode"],["self"],["metadata"]]]],[11,"entry_size","","Returns the size of entry's data this header represents.",12,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"size","","Returns the file size this header represents.",12,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"set_size","","Encodes the `size` argument into the size field of this…",12,[[["self"],["u64"]]]],[11,"path","","Returns the raw path name stored in this header.",12,[[["self"]],[["cow",["path"]],["result",["cow"]]]]],[11,"path_bytes","","Returns the pathname stored in this header as a byte array.",12,[[["self"]],["cow"]]],[11,"set_path","","Sets the path name for this header.",12,[[["path"],["self"],["asref",["path"]]],["result"]]],[11,"link_name","","Returns the link name stored in this header, if any is…",12,[[["self"]],[["option",["cow"]],["result",["option"]]]]],[11,"link_name_bytes","","Returns the link name stored in this header as a byte…",12,[[["self"]],[["option",["cow"]],["cow"]]]],[11,"set_link_name","","Sets the link name for this header.",12,[[["path"],["self"],["asref",["path"]]],["result"]]],[11,"mode","","Returns the mode bits for this file",12,[[["self"]],[["u32"],["result",["u32"]]]]],[11,"set_mode","","Encodes the `mode` provided into this header.",12,[[["self"],["u32"]]]],[11,"uid","","Returns the value of the owner's user ID field",12,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"set_uid","","Encodes the `uid` provided into this header.",12,[[["self"],["u64"]]]],[11,"gid","","Returns the value of the group's user ID field",12,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"set_gid","","Encodes the `gid` provided into this header.",12,[[["self"],["u64"]]]],[11,"mtime","","Returns the last modification time in Unix time format",12,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"set_mtime","","Encodes the `mtime` provided into this header.",12,[[["self"],["u64"]]]],[11,"username","","Return the user name of the owner of this file.",12,[[["self"]],[["result",["option","utf8error"]],["utf8error"],["option",["str"]]]]],[11,"username_bytes","","Returns the user name of the owner of this file, if present.",12,[[["self"]],["option"]]],[11,"set_username","","Sets the username inside this header.",12,[[["str"],["self"]],["result"]]],[11,"groupname","","Return the group name of the owner of this file.",12,[[["self"]],[["result",["option","utf8error"]],["utf8error"],["option",["str"]]]]],[11,"groupname_bytes","","Returns the group name of the owner of this file, if…",12,[[["self"]],["option"]]],[11,"set_groupname","","Sets the group name inside this header.",12,[[["str"],["self"]],["result"]]],[11,"device_major","","Returns the device major number, if present.",12,[[["self"]],[["result",["option"]],["option",["u32"]]]]],[11,"set_device_major","","Encodes the value `major` into the dev_major field of this…",12,[[["self"],["u32"]],["result"]]],[11,"device_minor","","Returns the device minor number, if present.",12,[[["self"]],[["result",["option"]],["option",["u32"]]]]],[11,"set_device_minor","","Encodes the value `minor` into the dev_minor field of this…",12,[[["self"],["u32"]],["result"]]],[11,"entry_type","","Returns the type of file described by this header.",12,[[["self"]],["entrytype"]]],[11,"set_entry_type","","Sets the type of file that will be described by this header.",12,[[["self"],["entrytype"]]]],[11,"cksum","","Returns the checksum field of this header.",12,[[["self"]],[["u32"],["result",["u32"]]]]],[11,"set_cksum","","Sets the checksum field of this header based on the…",12,[[["self"]]]],[11,"as_header","","Views this as a normal `Header`",3,[[["self"]],["header"]]],[11,"as_header_mut","","Views this as a normal `Header`",3,[[["self"]],["header"]]],[11,"path_bytes","","See `Header::path_bytes`",4,[[["self"]],["cow"]]],[11,"set_path","","See `Header::set_path`",4,[[["path"],["self"],["asref",["path"]]],["result"]]],[11,"username_bytes","","See `Header::username_bytes`",4,[[["self"]]]],[11,"set_username","","See `Header::set_username`",4,[[["str"],["self"]],["result"]]],[11,"groupname_bytes","","See `Header::groupname_bytes`",4,[[["self"]]]],[11,"set_groupname","","See `Header::set_groupname`",4,[[["str"],["self"]],["result"]]],[11,"device_major","","See `Header::device_major`",4,[[["self"]],[["u32"],["result",["u32"]]]]],[11,"set_device_major","","See `Header::set_device_major`",4,[[["self"],["u32"]]]],[11,"device_minor","","See `Header::device_minor`",4,[[["self"]],[["u32"],["result",["u32"]]]]],[11,"set_device_minor","","See `Header::set_device_minor`",4,[[["self"],["u32"]]]],[11,"as_header","","Views this as a normal `Header`",4,[[["self"]],["header"]]],[11,"as_header_mut","","Views this as a normal `Header`",4,[[["self"]],["header"]]],[11,"username_bytes","","See `Header::username_bytes`",1,[[["self"]]]],[11,"set_username","","See `Header::set_username`",1,[[["str"],["self"]],["result"]]],[11,"groupname_bytes","","See `Header::groupname_bytes`",1,[[["self"]]]],[11,"set_groupname","","See `Header::set_groupname`",1,[[["str"],["self"]],["result"]]],[11,"device_major","","See `Header::device_major`",1,[[["self"]],[["u32"],["result",["u32"]]]]],[11,"set_device_major","","See `Header::set_device_major`",1,[[["self"],["u32"]]]],[11,"device_minor","","See `Header::device_minor`",1,[[["self"]],[["u32"],["result",["u32"]]]]],[11,"set_device_minor","","See `Header::set_device_minor`",1,[[["self"],["u32"]]]],[11,"atime","","Returns the last modification time in Unix time format",1,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"set_atime","","Encodes the `atime` provided into this header.",1,[[["self"],["u64"]]]],[11,"ctime","","Returns the last modification time in Unix time format",1,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"set_ctime","","Encodes the `ctime` provided into this header.",1,[[["self"],["u64"]]]],[11,"real_size","","Returns the \"real size\" of the file this header represents.",1,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"is_extended","","Indicates whether this header will be followed by…",1,[[["self"]],["bool"]]],[11,"as_header","","Views this as a normal `Header`",1,[[["self"]],["header"]]],[11,"as_header_mut","","Views this as a normal `Header`",1,[[["self"]],["header"]]],[11,"is_empty","","Returns true if block is empty",2,[[["self"]],["bool"]]],[11,"offset","","Offset of the block from the start of the file",2,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"length","","Length of the block",2,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"new","","Crates a new zero'd out sparse header entry.",0,[[],["gnuextsparseheader"]]],[11,"as_bytes","","Returns a view into this header as a byte array.",0,[[["self"]]]],[11,"as_mut_bytes","","Returns a view into this header as a byte array.",0,[[["self"]]]],[11,"sparse","","Returns a slice of the underlying sparse headers.",0,[[["self"]]]],[11,"is_extended","","Indicates if another sparse header should be following…",0,[[["self"]],["bool"]]],[11,"key","","Returns the key for this key/value pair parsed as a string.",13,[[["self"]],[["utf8error"],["str"],["result",["str","utf8error"]]]]],[11,"key_bytes","","Returns the underlying raw bytes for the key of this…",13,[[["self"]]]],[11,"value","","Returns the value for this key/value pair parsed as a…",13,[[["self"]],[["utf8error"],["str"],["result",["str","utf8error"]]]]],[11,"value_bytes","","Returns the underlying raw bytes for this value of this…",13,[[["self"]]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"into_iter","","",9,[[],["i"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"into_iter","","",14,[[],["i"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"drop","","",10,[[["self"]]]],[11,"next","","",9,[[["self"]],[["result",["entry"]],["option",["result"]]]]],[11,"next","","",14,[[["self"]],[["option",["result"]],["result",["paxextension"]]]]],[11,"clone","","",6,[[["self"]],["entrytype"]]],[11,"clone","","",7,[[["self"]],["headermode"]]],[11,"clone","","",12,[[["self"]],["header"]]],[11,"default","","",0,[[],["self"]]],[11,"eq","","",6,[[["self"],["entrytype"]],["bool"]]],[11,"ne","","",6,[[["self"],["entrytype"]],["bool"]]],[11,"eq","","",7,[[["self"],["headermode"]],["bool"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"read","","",11,[[["self"]],[["result",["usize"]],["usize"]]]]],"p":[[3,"GnuExtSparseHeader"],[3,"GnuHeader"],[3,"GnuSparseHeader"],[3,"OldHeader"],[3,"UstarHeader"],[4,"Unpacked"],[4,"EntryType"],[4,"HeaderMode"],[3,"Archive"],[3,"Entries"],[3,"Builder"],[3,"Entry"],[3,"Header"],[3,"PaxExtension"],[3,"PaxExtensions"]]};
searchIndex["target_spec"] = {"doc":"Evaluate `Cargo.toml` target specifications against…","i":[[3,"TargetSpec","target_spec","A parsed target specification or triple, as found in a…",null,null],[3,"Platform","","A platform to evaluate target specs against.",null,null],[4,"EvalError","","An error that occurred during target evaluation.",null,null],[13,"InvalidSpec","","An invalid target spec was specified.",0,null],[13,"PlatformNotFound","","The platform was not found in the database.",0,null],[4,"ParseError","","An error that occurred while attempting to parse a target…",null,null],[13,"InvalidCfg","","This `cfg()` expression was invalid and could not be parsed.",1,null],[13,"UnknownTriple","","The provided target triple was unknown.",1,null],[13,"UnknownPredicate","","The provided `cfg()` expression parsed correctly, but it…",1,null],[4,"TargetFeatures","","A set of target features to match.",null,null],[13,"Unknown","","The target features are unknown.",2,null],[13,"Features","","Only match the specified features.",2,null],[13,"All","","Match all features.",2,null],[5,"eval","","Evaluates the given spec against the provided target and…",null,[[["str"]],[["option",["bool"]],["evalerror"],["result",["option","evalerror"]]]]],[11,"eval","","Evaluates this specification against the given platform…",3,[[["platform"],["self"]],[["bool"],["option",["bool"]]]]],[11,"new","","Creates a new `Platform` from the given triple and target…",4,[[["targetfeatures"]],["option"]]],[11,"add_flags","","Adds a set of flags to accept.",4,[[["self"]]]],[11,"triple","","Returns the target triple for this platform.",4,[[["self"]],["str"]]],[11,"has_flag","","Returns true if this flag was set with `add_flags`.",4,[[["self"]],["bool"]]],[11,"target_features","","Returns the set of target features for this platform.",4,[[["self"]],["targetfeatures"]]],[11,"current","","Returns the current platform, as detected at build time.",4,[[],["option"]]],[11,"features","","Creates a new `TargetFeatures` which matches some features.",2,[[],["self"]]],[11,"none","","Creates a new `TargetFeatures` which doesn't match any…",2,[[],["self"]]],[11,"matches","","Returns `Some(true)` if this feature is a match,…",2,[[["str"],["self"]],[["bool"],["option",["bool"]]]]],[11,"strategy","","Given a way to generate `TargetFeatures` instances, this…",4,[[]]],[11,"filtered_strategy","","A version of `strategy` that allows target triples to be…",4,[[]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"clone","","",3,[[["self"]],["targetspec"]]],[11,"clone","","",1,[[["self"]],["parseerror"]]],[11,"clone","","",4,[[["self"]],["platform"]]],[11,"clone","","",2,[[["self"]],["targetfeatures"]]],[11,"eq","","",0,[[["evalerror"],["self"]],["bool"]]],[11,"ne","","",0,[[["evalerror"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["parseerror"]],["bool"]]],[11,"ne","","",1,[[["self"],["parseerror"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"from_str","","",3,[[["str"]],["result"]]],[11,"source","","",0,[[["self"]],[["error"],["option",["error"]]]]]],"p":[[4,"EvalError"],[4,"ParseError"],[4,"TargetFeatures"],[3,"TargetSpec"],[3,"Platform"]]};
searchIndex["tempfile"] = {"doc":"Temporary files and directories.","i":[[3,"TempDir","tempfile","A directory in the filesystem that is automatically…",null,null],[3,"NamedTempFile","","A named temporary file.",null,null],[3,"PathPersistError","","Error returned when persisting a temporary file path fails.",null,null],[12,"error","","The underlying IO error.",0,null],[12,"path","","The temporary file path that couldn't be persisted.",0,null],[3,"PersistError","","Error returned when persisting a temporary file fails.",null,null],[12,"error","","The underlying IO error.",1,null],[12,"file","","The temporary file that couldn't be persisted.",1,null],[3,"TempPath","","A path to a named temporary file without an open file…",null,null],[3,"SpooledTempFile","","An object that behaves like a regular temporary file, but…",null,null],[3,"Builder","","Create a new temporary file or directory with custom…",null,null],[5,"tempdir","","Create a new temporary directory.",null,[[],[["result",["tempdir"]],["tempdir"]]]],[5,"tempdir_in","","Create a new temporary directory.",null,[[["path"],["asref",["path"]]],[["result",["tempdir"]],["tempdir"]]]],[5,"tempfile","","Create a new temporary file.",null,[[],[["result",["file"]],["file"]]]],[5,"tempfile_in","","Create a new temporary file in the specified directory.",null,[[["path"],["asref",["path"]]],[["result",["file"]],["file"]]]],[5,"spooled_tempfile","","Create a new spooled temporary file.",null,[[["usize"]],["spooledtempfile"]]],[11,"new","","Attempts to make a temporary directory inside of…",2,[[],[["result",["tempdir"]],["tempdir"]]]],[11,"new_in","","Attempts to make a temporary directory inside of `dir`.…",2,[[["path"],["asref",["path"]]],[["result",["tempdir"]],["tempdir"]]]],[11,"path","","Accesses the [`Path`] to the temporary directory.",2,[[["self"]],["path"]]],[11,"into_path","","Persist the temporary directory to disk, returning the…",2,[[],["pathbuf"]]],[11,"close","","Closes and removes the temporary directory, returing a…",2,[[],["result"]]],[11,"close","","Close and remove the temporary file.",3,[[],["result"]]],[11,"persist","","Persist the temporary file at the target path.",3,[[["path"],["asref",["path"]]],[["result",["pathpersisterror"]],["pathpersisterror"]]]],[11,"persist_noclobber","","Persist the temporary file at the target path iff no file…",3,[[["path"],["asref",["path"]]],[["result",["pathpersisterror"]],["pathpersisterror"]]]],[11,"keep","","Keep the temporary file from being deleted. This function…",3,[[],[["pathbuf"],["result",["pathbuf","pathpersisterror"]],["pathpersisterror"]]]],[11,"new","","Create a new named temporary file.",4,[[],[["result",["namedtempfile"]],["namedtempfile"]]]],[11,"new_in","","Create a new named temporary file in the specified…",4,[[["path"],["asref",["path"]]],[["result",["namedtempfile"]],["namedtempfile"]]]],[11,"path","","Get the temporary file's path.",4,[[["self"]],["path"]]],[11,"close","","Close and remove the temporary file.",4,[[],["result"]]],[11,"persist","","Persist the temporary file at the target path.",4,[[["path"],["asref",["path"]]],[["persisterror"],["result",["file","persisterror"]],["file"]]]],[11,"persist_noclobber","","Persist the temporary file at the target path iff no file…",4,[[["path"],["asref",["path"]]],[["persisterror"],["result",["file","persisterror"]],["file"]]]],[11,"keep","","Keep the temporary file from being deleted. This function…",4,[[],[["result",["persisterror"]],["persisterror"]]]],[11,"reopen","","Securely reopen the temporary file.",4,[[["self"]],[["result",["file"]],["file"]]]],[11,"as_file","","Get a reference to the underlying file.",4,[[["self"]],["file"]]],[11,"as_file_mut","","Get a mutable reference to the underlying file.",4,[[["self"]],["file"]]],[11,"into_file","","Convert the temporary file into a `std::fs::File`.",4,[[],["file"]]],[11,"into_temp_path","","Closes the file, leaving only the temporary file path.",4,[[],["temppath"]]],[11,"into_parts","","Converts the named temporary file into its constituent…",4,[[]]],[11,"new","","",5,[[["usize"]],["spooledtempfile"]]],[11,"is_rolled","","Returns true if the file has been rolled over to disk.",5,[[["self"]],["bool"]]],[11,"roll","","Rolls over to a file on disk, regardless of current size.…",5,[[["self"]],["result"]]],[11,"set_len","","",5,[[["self"],["u64"]],[["result",["error"]],["error"]]]],[11,"new","","Create a new `Builder`.",6,[[],["self"]]],[11,"prefix","","Set a custom filename prefix.",6,[[["self"],["s"]],["self"]]],[11,"suffix","","Set a custom filename suffix.",6,[[["self"],["s"]],["self"]]],[11,"rand_bytes","","Set the number of random bytes.",6,[[["self"],["usize"]],["self"]]],[11,"append","","Set the file to be opened in append mode.",6,[[["self"],["bool"]],["self"]]],[11,"tempfile","","Create the named temporary file.",6,[[["self"]],[["result",["namedtempfile"]],["namedtempfile"]]]],[11,"tempfile_in","","Create the named temporary file in the specified directory.",6,[[["path"],["self"],["asref",["path"]]],[["result",["namedtempfile"]],["namedtempfile"]]]],[11,"tempdir","","Attempts to make a temporary directory inside of…",6,[[["self"]],[["result",["tempdir"]],["tempdir"]]]],[11,"tempdir_in","","Attempts to make a temporary directory inside of `dir`.…",6,[[["path"],["self"],["asref",["path"]]],[["result",["tempdir"]],["tempdir"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"drop","","",2,[[["self"]]]],[11,"drop","","",3,[[["self"]]]],[11,"as_ref","","",2,[[["self"]],["path"]]],[11,"as_ref","","",3,[[["self"]],["path"]]],[11,"as_ref","","",3,[[["self"]],["osstr"]]],[11,"as_ref","","",4,[[["self"]],["path"]]],[11,"from","","",3,[[["pathpersisterror"]],["temppath"]]],[11,"from","","",4,[[["persisterror"]],["namedtempfile"]]],[11,"clone","","",6,[[["self"]],["builder"]]],[11,"default","","",6,[[],["self"]]],[11,"eq","","",6,[[["builder"],["self"]],["bool"]]],[11,"ne","","",6,[[["builder"],["self"]],["bool"]]],[11,"deref","","",3,[[["self"]],["path"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"source","","",0,[[["self"]],[["error"],["option",["error"]]]]],[11,"source","","",1,[[["self"]],[["error"],["option",["error"]]]]],[11,"read","","",4,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read","","",5,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"seek","","",4,[[["self"],["seekfrom"]],[["result",["u64"]],["u64"]]]],[11,"seek","","",5,[[["self"],["seekfrom"]],[["result",["u64"]],["u64"]]]],[11,"write","","",4,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",4,[[["self"]],["result"]]],[11,"write","","",5,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",5,[[["self"]],["result"]]],[11,"as_raw_fd","","",4,[[["self"]],["rawfd"]]]],"p":[[3,"PathPersistError"],[3,"PersistError"],[3,"TempDir"],[3,"TempPath"],[3,"NamedTempFile"],[3,"SpooledTempFile"],[3,"Builder"]]};
searchIndex["termcolor"] = {"doc":"This crate provides a cross platform abstraction for…","i":[[3,"StandardStream","termcolor","Satisfies `io::Write` and `WriteColor`, and supports…",null,null],[3,"StandardStreamLock","","`StandardStreamLock` is a locked reference to a…",null,null],[3,"BufferedStandardStream","","Like `StandardStream`, but does buffered writing.",null,null],[3,"BufferWriter","","Writes colored buffers to stdout or stderr.",null,null],[3,"Buffer","","Write colored text to memory.",null,null],[3,"NoColor","","Satisfies `WriteColor` but ignores all color options.",null,null],[3,"Ansi","","Satisfies `WriteColor` using standard ANSI escape sequences.",null,null],[3,"ColorSpec","","A color specification.",null,null],[3,"ParseColorError","","An error from parsing an invalid color specification.",null,null],[4,"ColorChoice","","ColorChoice represents the color preferences of an end user.",null,null],[13,"Always","","Try very hard to emit colors. This includes emitting ANSI…",0,null],[13,"AlwaysAnsi","","AlwaysAnsi is like Always, except it never tries to use…",0,null],[13,"Auto","","Try to use colors, but don't force the issue. If the…",0,null],[13,"Never","","Never emit colors.",0,null],[4,"Color","","The set of available colors for the terminal…",null,null],[13,"Black","","",1,null],[13,"Blue","","",1,null],[13,"Green","","",1,null],[13,"Red","","",1,null],[13,"Cyan","","",1,null],[13,"Magenta","","",1,null],[13,"Yellow","","",1,null],[13,"White","","",1,null],[13,"Ansi256","","",1,null],[13,"Rgb","","",1,null],[8,"WriteColor","","This trait describes the behavior of writers that support…",null,null],[10,"supports_color","","Returns true if and only if the underlying writer supports…",2,[[["self"]],["bool"]]],[10,"set_color","","Set the color settings of the writer.",2,[[["self"],["colorspec"]],["result"]]],[10,"reset","","Reset the current color settings to their original settings.",2,[[["self"]],["result"]]],[11,"is_synchronous","","Returns true if and only if the underlying writer must…",2,[[["self"]],["bool"]]],[11,"stdout","","Create a new `StandardStream` with the given color…",3,[[["colorchoice"]],["standardstream"]]],[11,"stderr","","Create a new `StandardStream` with the given color…",3,[[["colorchoice"]],["standardstream"]]],[11,"lock","","Lock the underlying writer.",3,[[["self"]],["standardstreamlock"]]],[11,"stdout","","Create a new `BufferedStandardStream` with the given color…",4,[[["colorchoice"]],["bufferedstandardstream"]]],[11,"stderr","","Create a new `BufferedStandardStream` with the given color…",4,[[["colorchoice"]],["bufferedstandardstream"]]],[11,"stdout","","Create a new `BufferWriter` that writes to stdout with the…",5,[[["colorchoice"]],["bufferwriter"]]],[11,"stderr","","Create a new `BufferWriter` that writes to stderr with the…",5,[[["colorchoice"]],["bufferwriter"]]],[11,"separator","","If set, the separator given is printed between buffers. By…",5,[[["option",["vec"]],["self"],["vec",["u8"]]]]],[11,"buffer","","Creates a new `Buffer` with the current color preferences.",5,[[["self"]],["buffer"]]],[11,"print","","Prints the contents of the given buffer.",5,[[["buffer"],["self"]],["result"]]],[11,"no_color","","Create a buffer that drops all color information.",6,[[],["buffer"]]],[11,"ansi","","Create a buffer that uses ANSI escape sequences.",6,[[],["buffer"]]],[11,"is_empty","","Returns true if and only if this buffer is empty.",6,[[["self"]],["bool"]]],[11,"len","","Returns the length of this buffer in bytes.",6,[[["self"]],["usize"]]],[11,"clear","","Clears this buffer.",6,[[["self"]]]],[11,"into_inner","","Consume this buffer and return the underlying raw data.",6,[[],[["vec",["u8"]],["u8"]]]],[11,"as_slice","","Return the underlying data of the buffer.",6,[[["self"]]]],[11,"as_mut_slice","","Return the underlying data of the buffer as a mutable slice.",6,[[["self"]]]],[11,"new","","Create a new writer that satisfies `WriteColor` but drops…",7,[[["w"]],["nocolor"]]],[11,"into_inner","","Consume this `NoColor` value and return the inner writer.",7,[[],["w"]]],[11,"get_ref","","Return a reference to the inner writer.",7,[[["self"]],["w"]]],[11,"get_mut","","Return a mutable reference to the inner writer.",7,[[["self"]],["w"]]],[11,"new","","Create a new writer that satisfies `WriteColor` using…",8,[[["w"]],["ansi"]]],[11,"into_inner","","Consume this `Ansi` value and return the inner writer.",8,[[],["w"]]],[11,"get_ref","","Return a reference to the inner writer.",8,[[["self"]],["w"]]],[11,"get_mut","","Return a mutable reference to the inner writer.",8,[[["self"]],["w"]]],[11,"new","","Create a new color specification that has no colors or…",9,[[],["colorspec"]]],[11,"fg","","Get the foreground color.",9,[[["self"]],[["option",["color"]],["color"]]]],[11,"set_fg","","Set the foreground color.",9,[[["color"],["self"],["option",["color"]]],["colorspec"]]],[11,"bg","","Get the background color.",9,[[["self"]],[["option",["color"]],["color"]]]],[11,"set_bg","","Set the background color.",9,[[["color"],["self"],["option",["color"]]],["colorspec"]]],[11,"bold","","Get whether this is bold or not.",9,[[["self"]],["bool"]]],[11,"set_bold","","Set whether the text is bolded or not.",9,[[["self"],["bool"]],["colorspec"]]],[11,"italic","","Get whether this is italic or not.",9,[[["self"]],["bool"]]],[11,"set_italic","","Set whether the text is italicized or not.",9,[[["self"],["bool"]],["colorspec"]]],[11,"underline","","Get whether this is underline or not.",9,[[["self"]],["bool"]]],[11,"set_underline","","Set whether the text is underlined or not.",9,[[["self"],["bool"]],["colorspec"]]],[11,"reset","","Get whether reset is enabled or not.",9,[[["self"]],["bool"]]],[11,"set_reset","","Set whether to reset the terminal whenever color settings…",9,[[["self"],["bool"]],["colorspec"]]],[11,"intense","","Get whether this is intense or not.",9,[[["self"]],["bool"]]],[11,"set_intense","","Set whether the text is intense or not.",9,[[["self"],["bool"]],["colorspec"]]],[11,"is_none","","Returns true if this color specification has no colors or…",9,[[["self"]],["bool"]]],[11,"clear","","Clears this color specification so that it has no…",9,[[["self"]]]],[11,"invalid","","Return the string that couldn't be parsed as a valid color.",10,[[["self"]],["str"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"supports_color","","",3,[[["self"]],["bool"]]],[11,"set_color","","",3,[[["self"],["colorspec"]],["result"]]],[11,"reset","","",3,[[["self"]],["result"]]],[11,"is_synchronous","","",3,[[["self"]],["bool"]]],[11,"supports_color","","",11,[[["self"]],["bool"]]],[11,"set_color","","",11,[[["self"],["colorspec"]],["result"]]],[11,"reset","","",11,[[["self"]],["result"]]],[11,"is_synchronous","","",11,[[["self"]],["bool"]]],[11,"supports_color","","",4,[[["self"]],["bool"]]],[11,"set_color","","",4,[[["self"],["colorspec"]],["result"]]],[11,"reset","","",4,[[["self"]],["result"]]],[11,"is_synchronous","","",4,[[["self"]],["bool"]]],[11,"supports_color","","",6,[[["self"]],["bool"]]],[11,"set_color","","",6,[[["self"],["colorspec"]],["result"]]],[11,"reset","","",6,[[["self"]],["result"]]],[11,"is_synchronous","","",6,[[["self"]],["bool"]]],[11,"supports_color","","",7,[[["self"]],["bool"]]],[11,"set_color","","",7,[[["self"],["colorspec"]],["result"]]],[11,"reset","","",7,[[["self"]],["result"]]],[11,"is_synchronous","","",7,[[["self"]],["bool"]]],[11,"supports_color","","",8,[[["self"]],["bool"]]],[11,"set_color","","",8,[[["self"],["colorspec"]],["result"]]],[11,"reset","","",8,[[["self"]],["result"]]],[11,"is_synchronous","","",8,[[["self"]],["bool"]]],[11,"clone","","",0,[[["self"]],["colorchoice"]]],[11,"clone","","",9,[[["self"]],["colorspec"]]],[11,"clone","","",1,[[["self"]],["color"]]],[11,"clone","","",10,[[["self"]],["parsecolorerror"]]],[11,"default","","",9,[[],["colorspec"]]],[11,"eq","","",0,[[["colorchoice"],["self"]],["bool"]]],[11,"eq","","",9,[[["self"],["colorspec"]],["bool"]]],[11,"ne","","",9,[[["self"],["colorspec"]],["bool"]]],[11,"eq","","",1,[[["self"],["color"]],["bool"]]],[11,"ne","","",1,[[["self"],["color"]],["bool"]]],[11,"eq","","",10,[[["self"],["parsecolorerror"]],["bool"]]],[11,"ne","","",10,[[["self"],["parsecolorerror"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"from_str","","",1,[[["str"]],[["color"],["parsecolorerror"],["result",["color","parsecolorerror"]]]]],[11,"description","","",10,[[["self"]],["str"]]],[11,"write","","",3,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",3,[[["self"]],["result"]]],[11,"write","","",11,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",11,[[["self"]],["result"]]],[11,"write","","",4,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",4,[[["self"]],["result"]]],[11,"write","","",6,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",6,[[["self"]],["result"]]],[11,"write","","",7,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",7,[[["self"]],["result"]]],[11,"write","","",8,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",8,[[["self"]],["result"]]]],"p":[[4,"ColorChoice"],[4,"Color"],[8,"WriteColor"],[3,"StandardStream"],[3,"BufferedStandardStream"],[3,"BufferWriter"],[3,"Buffer"],[3,"NoColor"],[3,"Ansi"],[3,"ColorSpec"],[3,"ParseColorError"],[3,"StandardStreamLock"]]};
searchIndex["textwrap"] = {"doc":"`textwrap` provides functions for word wrapping and…","i":[[3,"HyphenSplitter","textwrap","Simple and default way to split words: splitting on…",null,null],[3,"NoHyphenation","","Use this as a [`Wrapper.splitter`] to avoid any kind of…",null,null],[3,"Wrapper","","A Wrapper holds settings for wrapping and filling text.…",null,null],[12,"width","","The width in columns at which the text will be wrapped.",0,null],[12,"initial_indent","","Indentation used for the first line of output.",0,null],[12,"subsequent_indent","","Indentation used for subsequent lines of output.",0,null],[12,"break_words","","Allow long words to be broken if they cannot fit on a…",0,null],[12,"splitter","","The method for splitting words. If the `hyphenation`…",0,null],[3,"IntoWrapIter","","An iterator over the lines of the input string which owns…",null,null],[3,"WrapIter","","An iterator over the lines of the input string which…",null,null],[5,"dedent","","Removes common leading whitespace from each line.",null,[[["str"]],["string"]]],[5,"indent","","Add prefix to each non-empty line.",null,[[["str"]],["string"]]],[5,"fill","","Fill a line of text at `width` characters. Strings are…",null,[[["str"],["usize"]],["string"]]],[5,"wrap","","Wrap a line of text at `width` characters. Strings are…",null,[[["str"],["usize"]],[["vec",["cow"]],["cow",["str"]]]]],[5,"wrap_iter","","Lazily wrap a line of text at `width` characters. Strings…",null,[[["str"],["usize"]],[["hyphensplitter"],["intowrapiter",["hyphensplitter"]]]]],[8,"WordSplitter","","An interface for splitting words.",null,null],[10,"split","","Return all possible splits of word. Each split is a triple…",1,[[["self"],["str"]],["vec"]]],[11,"new","","Create a new Wrapper for wrapping at the specified width.…",0,[[["usize"]],[["wrapper",["hyphensplitter"]],["hyphensplitter"]]]],[11,"with_splitter","","Use the given [`WordSplitter`] to create a new Wrapper for…",0,[[["s"],["usize"]],["wrapper"]]],[11,"initial_indent","","Change [`self.initial_indent`]. The initial indentation is…",0,[[["str"]],["wrapper"]]],[11,"subsequent_indent","","Change [`self.subsequent_indent`]. The subsequent…",0,[[["str"]],["wrapper"]]],[11,"break_words","","Change [`self.break_words`]. This controls if words longer…",0,[[["bool"]],["wrapper"]]],[11,"fill","","Fill a line of text at `self.width` characters. Strings…",0,[[["str"],["self"]],["string"]]],[11,"wrap","","Wrap a line of text at `self.width` characters. Strings…",0,[[["str"],["self"]],[["vec",["cow"]],["cow",["str"]]]]],[11,"wrap_iter","","Lazily wrap a line of text at `self.width` characters.…",0,[[["str"],["self"]],["wrapiter"]]],[11,"into_wrap_iter","","Lazily wrap a line of text at `self.width` characters.…",0,[[["str"]],["intowrapiter"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"split","","",3,[[["self"],["str"]],["vec"]]],[11,"split","","",2,[[["self"],["str"]],["vec"]]],[11,"next","","",4,[[["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"next","","",5,[[["self"]],[["option",["cow"]],["cow",["str"]]]]],[11,"clone","","",3,[[["self"]],["nohyphenation"]]],[11,"clone","","",2,[[["self"]],["hyphensplitter"]]],[11,"clone","","",0,[[["self"]],["wrapper"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Wrapper"],[8,"WordSplitter"],[3,"HyphenSplitter"],[3,"NoHyphenation"],[3,"IntoWrapIter"],[3,"WrapIter"]]};
searchIndex["thread_local"] = {"doc":"Per-object thread-local storage","i":[[3,"CachedIntoIter","thread_local","An iterator that moves out of a `CachedThreadLocal`.",null,null],[3,"CachedIterMut","","Mutable iterator over the contents of a `CachedThreadLocal`.",null,null],[3,"CachedThreadLocal","","Wrapper around `ThreadLocal` which adds a fast path for a…",null,null],[3,"ThreadLocal","","Thread-local variable wrapper",null,null],[3,"IterMut","","Mutable iterator over the contents of a `ThreadLocal`.",null,null],[3,"IntoIter","","An iterator that moves out of a `ThreadLocal`.",null,null],[11,"new","","Creates a new empty `CachedThreadLocal`.",0,[[],["cachedthreadlocal"]]],[11,"get","","Returns the element for the current thread, if it exists.",0,[[["self"]],[["t"],["option"]]]],[11,"get_or","","Returns the element for the current thread, or creates it…",0,[[["self"],["f"]],["t"]]],[11,"get_or_try","","Returns the element for the current thread, or creates it…",0,[[["self"],["f"]],[["t"],["result"]]]],[11,"iter_mut","","Returns a mutable iterator over the local values of all…",0,[[["self"]],["cacheditermut"]]],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`,…",0,[[["self"]]]],[11,"get_or_default","","Returns the element for the current thread, or creates a…",0,[[["self"]],["t"]]],[11,"new","","Creates a new empty `ThreadLocal`.",1,[[],["threadlocal"]]],[11,"get","","Returns the element for the current thread, if it exists.",1,[[["self"]],[["t"],["option"]]]],[11,"get_or","","Returns the element for the current thread, or creates it…",1,[[["self"],["f"]],["t"]]],[11,"get_or_try","","Returns the element for the current thread, or creates it…",1,[[["self"],["f"]],[["t"],["result"]]]],[11,"iter_mut","","Returns a mutable iterator over the local values of all…",1,[[["self"]],["itermut"]]],[11,"clear","","Removes all thread-specific values from the `ThreadLocal`,…",1,[[["self"]]]],[11,"get_or_default","","Returns the element for the current thread, or creates a…",1,[[["self"]],["t"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"drop","","",1,[[["self"]]]],[11,"into_iter","","",0,[[],["cachedintoiter"]]],[11,"into_iter","","",1,[[],["intoiter"]]],[11,"next","","",3,[[["self"]],[["option"],["t"]]]],[11,"size_hint","","",3,[[["self"]]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"size_hint","","",2,[[["self"]]]],[11,"next","","",4,[[["self"]],[["option"],["t"]]]],[11,"size_hint","","",4,[[["self"]]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,[[["self"]]]],[11,"default","","",0,[[],["cachedthreadlocal"]]],[11,"default","","",1,[[],["threadlocal"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]]],"p":[[3,"CachedThreadLocal"],[3,"ThreadLocal"],[3,"CachedIntoIter"],[3,"CachedIterMut"],[3,"IterMut"],[3,"IntoIter"]]};
searchIndex["toml"] = {"doc":"A [TOML]-parsing library","i":[[3,"Spanned","toml","A spanned value, indicating the range at which it is…",null,null],[0,"map","","A map of String to toml::Value.",null,null],[3,"Map","toml::map","Represents a JSON key/value type.",null,null],[3,"VacantEntry","","A vacant Entry. It is part of the [`Entry`] enum.",null,null],[3,"OccupiedEntry","","An occupied Entry. It is part of the [`Entry`] enum.",null,null],[3,"Iter","","An iterator over a toml::Map's entries.",null,null],[3,"IterMut","","A mutable iterator over a toml::Map's entries.",null,null],[3,"IntoIter","","An owning iterator over a toml::Map's entries.",null,null],[3,"Keys","","An iterator over a toml::Map's keys.",null,null],[3,"Values","","An iterator over a toml::Map's values.",null,null],[4,"Entry","","A view into a single entry in a map, which may either be…",null,null],[13,"Vacant","","A vacant Entry.",0,null],[13,"Occupied","","An occupied Entry.",0,null],[11,"new","","Makes a new empty Map.",1,[[],["self"]]],[11,"with_capacity","","Makes a new empty Map with the given initial capacity.",1,[[["usize"]],["self"]]],[11,"clear","","Clears the map, removing all values.",1,[[["self"]]]],[11,"get","","Returns a reference to the value corresponding to the key.",1,[[["self"],["q"]],[["value"],["option",["value"]]]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",1,[[["self"],["q"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",1,[[["self"],["q"]],[["option",["value"]],["value"]]]],[11,"insert","","Inserts a key-value pair into the map.",1,[[["value"],["self"],["string"]],[["option",["value"]],["value"]]]],[11,"remove","","Removes a key from the map, returning the value at the key…",1,[[["self"],["q"]],[["option",["value"]],["value"]]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",1,[[["self"],["s"]],["entry"]]],[11,"len","","Returns the number of elements in the map.",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",1,[[["self"]],["bool"]]],[11,"iter","","Gets an iterator over the entries of the map.",1,[[["self"]],["iter"]]],[11,"iter_mut","","Gets a mutable iterator over the entries of the map.",1,[[["self"]],["itermut"]]],[11,"keys","","Gets an iterator over the keys of the map.",1,[[["self"]],["keys"]]],[11,"values","","Gets an iterator over the values of the map.",1,[[["self"]],["values"]]],[11,"key","","Returns a reference to this entry's key.",0,[[["self"]],["string"]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",0,[[["value"]],["value"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",0,[[["f"]],["value"]]],[11,"key","","Gets a reference to the key that would be used when…",2,[[["self"]],["string"]]],[11,"insert","","Sets the value of the entry with the VacantEntry's key,…",2,[[["value"]],["value"]]],[11,"key","","Gets a reference to the key in the entry.",3,[[["self"]],["string"]]],[11,"get","","Gets a reference to the value in the entry.",3,[[["self"]],["value"]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",3,[[["self"]],["value"]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",3,[[],["value"]]],[11,"insert","","Sets the value of the entry with the `OccupiedEntry`'s…",3,[[["self"],["value"]],["value"]]],[11,"remove","","Takes the value of the entry out of the map, and returns it.",3,[[],["value"]]],[0,"value","toml","Definition of a TOML value",null,null],[3,"Datetime","toml::value","A parsed TOML datetime value",null,null],[3,"DatetimeParseError","","Error returned from parsing a `Datetime` in the `FromStr`…",null,null],[4,"Value","","Representation of a TOML value.",null,null],[13,"String","","Represents a TOML string",4,null],[13,"Integer","","Represents a TOML integer",4,null],[13,"Float","","Represents a TOML float",4,null],[13,"Boolean","","Represents a TOML boolean",4,null],[13,"Datetime","","Represents a TOML datetime",4,null],[13,"Array","","Represents a TOML array",4,null],[13,"Table","","Represents a TOML table",4,null],[6,"Array","","Type representing a TOML array, payload of the…",null,null],[6,"Table","","Type representing a TOML table, payload of the…",null,null],[8,"Index","","Types that can be used to index a `toml::Value`",null,null],[11,"try_from","","Convert a `T` into `toml::Value` which is an enum that can…",4,[[["t"]],[["error"],["result",["value","error"]],["value"]]]],[11,"try_into","","Interpret a `toml::Value` as an instance of type `T`.",4,[[],[["result",["error"]],["error"]]]],[11,"get","","Index into a TOML array or map. A string index can be used…",4,[[["self"],["index"]],[["value"],["option",["value"]]]]],[11,"get_mut","","Mutably index into a TOML array or map. A string index can…",4,[[["self"],["index"]],[["option",["value"]],["value"]]]],[11,"as_integer","","Extracts the integer value if it is an integer.",4,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"is_integer","","Tests whether this value is an integer.",4,[[["self"]],["bool"]]],[11,"as_float","","Extracts the float value if it is a float.",4,[[["self"]],[["f64"],["option",["f64"]]]]],[11,"is_float","","Tests whether this value is a float.",4,[[["self"]],["bool"]]],[11,"as_bool","","Extracts the boolean value if it is a boolean.",4,[[["self"]],[["bool"],["option",["bool"]]]]],[11,"is_bool","","Tests whether this value is a boolean.",4,[[["self"]],["bool"]]],[11,"as_str","","Extracts the string of this value if it is a string.",4,[[["self"]],[["str"],["option",["str"]]]]],[11,"is_str","","Tests if this value is a string.",4,[[["self"]],["bool"]]],[11,"as_datetime","","Extracts the datetime value if it is a datetime.",4,[[["self"]],[["option",["datetime"]],["datetime"]]]],[11,"is_datetime","","Tests whether this value is a datetime.",4,[[["self"]],["bool"]]],[11,"as_array","","Extracts the array value if it is an array.",4,[[["self"]],[["vec"],["option",["vec"]]]]],[11,"as_array_mut","","Extracts the array value if it is an array.",4,[[["self"]],[["vec"],["option",["vec"]]]]],[11,"is_array","","Tests whether this value is an array.",4,[[["self"]],["bool"]]],[11,"as_table","","Extracts the table value if it is a table.",4,[[["self"]],[["table"],["option",["table"]]]]],[11,"as_table_mut","","Extracts the table value if it is a table.",4,[[["self"]],[["table"],["option",["table"]]]]],[11,"is_table","","Tests whether this value is a table.",4,[[["self"]],["bool"]]],[11,"same_type","","Tests whether this and another value have the same type.",4,[[["self"],["value"]],["bool"]]],[11,"type_str","","Returns a human-readable representation of the type of…",4,[[["self"]],["str"]]],[0,"ser","toml","Serializing Rust structures into TOML.",null,null],[3,"Serializer","toml::ser","Serialization implementation for TOML.",null,null],[4,"Error","","Errors that can occur when serializing a type.",null,null],[13,"UnsupportedType","","Indicates that a Rust type was requested to be serialized…",5,null],[13,"KeyNotString","","The key of all TOML maps must be strings, but…",5,null],[13,"ValueAfterTable","","All values in a TOML table must be emitted before further…",5,null],[13,"DateInvalid","","A serialized date was invalid.",5,null],[13,"NumberInvalid","","A serialized number was invalid.",5,null],[13,"UnsupportedNone","","None was attempted to be serialized, but it's not supported.",5,null],[13,"Custom","","A custom error which could be generated when serializing a…",5,null],[5,"to_vec","","Serialize the given data structure as a TOML byte vector.",null,[[["t"]],[["error"],["vec",["u8"]],["result",["vec","error"]]]]],[5,"to_string","","Serialize the given data structure as a String of TOML.",null,[[["t"]],[["result",["string","error"]],["error"],["string"]]]],[5,"to_string_pretty","","Serialize the given data structure as a \"pretty\" String of…",null,[[["t"]],[["result",["string","error"]],["error"],["string"]]]],[5,"tables_last","","Convenience function to serialize items in a map in an…",null,[[["i"],["s"]],["result"]]],[11,"new","","Creates a new serializer which will emit TOML into the…",6,[[["string"]],["serializer"]]],[11,"pretty","","Instantiate a \"pretty\" formatter",6,[[["string"]],["serializer"]]],[11,"pretty_string","","Enable or Disable pretty strings",6,[[["self"],["bool"]],["self"]]],[11,"pretty_string_literal","","Enable or Disable Literal strings for pretty strings",6,[[["self"],["bool"]],["self"]]],[11,"pretty_array","","Enable or Disable pretty arrays",6,[[["self"],["bool"]],["self"]]],[11,"pretty_array_indent","","Set the indent for pretty arrays",6,[[["self"],["usize"]],["self"]]],[11,"pretty_array_trailing_comma","","Specify whether to use a trailing comma when serializing…",6,[[["self"],["bool"]],["self"]]],[0,"de","toml","Deserializing TOML into Rust structures.",null,null],[3,"Error","toml::de","Errors that can occur when deserializing a type.",null,null],[3,"Deserializer","","Deserialization implementation for TOML.",null,null],[5,"from_slice","","Deserializes a byte slice into a type.",null,[[],[["result",["error"]],["error"]]]],[5,"from_str","","Deserializes a string into a type.",null,[[["str"]],[["result",["error"]],["error"]]]],[11,"new","","Creates a new deserializer which will be deserializing the…",7,[[["str"]],["deserializer"]]],[11,"end","","The `Deserializer::end` method should be called after a…",7,[[["self"]],[["error"],["result",["error"]]]]],[11,"set_require_newline_after_table","","Historical versions of toml-rs accidentally allowed a…",7,[[["self"],["bool"]]]],[11,"set_allow_duplicate_after_longer_table","","Historical versions of toml-rs accidentally allowed a…",7,[[["self"],["bool"]]]],[11,"line_col","","Produces a (line, column) pair of the position of the…",8,[[["self"]],["option"]]],[11,"start","toml","Access the start of the span of the contained value.",9,[[["self"]],["usize"]]],[11,"end","","Access the end of the span of the contained value.",9,[[["self"]],["usize"]]],[11,"span","","Get the span of the contained value.",9,[[["self"]]]],[11,"into_inner","","Consumes the spanned value and returns the contained value.",9,[[],["t"]]],[11,"get_ref","","Returns a reference to the contained value.",9,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the contained value.",9,[[["self"]],["t"]]],[14,"toml","","Construct a [`toml::Value`] from TOML syntax.",null,null],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","toml::map","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"into_iter","","",11,[[],["i"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"into_iter","","",12,[[],["i"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"into_iter","","",13,[[],["i"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"into_iter","","",14,[[],["i"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","toml::value","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"to_string","","",16,[[["self"]],["string"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","toml::ser","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","toml::de","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","toml::value","",4,[[["str"]],["value"]]],[11,"from","","",4,[[["vec"]],["value"]]],[11,"from","","",4,[[["btreemap"]],["value"]]],[11,"from","","",4,[[["hashmap"]],["value"]]],[11,"from","","",4,[[["string"]],["value"]]],[11,"from","","",4,[[["i64"]],["value"]]],[11,"from","","",4,[[["i32"]],["value"]]],[11,"from","","",4,[[["i8"]],["value"]]],[11,"from","","",4,[[["u8"]],["value"]]],[11,"from","","",4,[[["u32"]],["value"]]],[11,"from","","",4,[[["f64"]],["value"]]],[11,"from","","",4,[[["f32"]],["value"]]],[11,"from","","",4,[[["bool"]],["value"]]],[11,"from","","",4,[[["datetime"]],["value"]]],[11,"from","","",4,[[["table"]],["value"]]],[11,"next_back","toml::map","",10,[[["self"]],["option"]]],[11,"next_back","","",11,[[["self"]],["option"]]],[11,"next_back","","",12,[[["self"]],["option"]]],[11,"next_back","","",13,[[["self"]],["option"]]],[11,"next_back","","",14,[[["self"]],["option"]]],[11,"len","","",10,[[["self"]],["usize"]]],[11,"len","","",11,[[["self"]],["usize"]]],[11,"len","","",12,[[["self"]],["usize"]]],[11,"len","","",13,[[["self"]],["usize"]]],[11,"len","","",14,[[["self"]],["usize"]]],[11,"extend","","",1,[[["self"],["t"]]]],[11,"into_iter","","",1,[[]]],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,[[["self"]]]],[11,"next","","",11,[[["self"]],["option"]]],[11,"size_hint","","",11,[[["self"]]]],[11,"next","","",12,[[["self"]],["option"]]],[11,"size_hint","","",12,[[["self"]]]],[11,"next","","",13,[[["self"]],["option"]]],[11,"size_hint","","",13,[[["self"]]]],[11,"next","","",14,[[["self"]],["option"]]],[11,"size_hint","","",14,[[["self"]]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone","toml::value","",4,[[["self"]],["value"]]],[11,"clone","","",15,[[["self"]],["datetime"]]],[11,"clone","","",16,[[["self"]],["datetimeparseerror"]]],[11,"clone","toml::ser","",5,[[["self"]],["error"]]],[11,"clone","toml::de","",8,[[["self"]],["error"]]],[11,"clone","toml","",9,[[["self"]],["spanned"]]],[11,"default","toml::map","",1,[[],["self"]]],[11,"cmp","toml","",9,[[["self"]],["ordering"]]],[11,"eq","toml::map","",1,[[["self"]],["bool"]]],[11,"eq","toml::value","",4,[[["self"],["value"]],["bool"]]],[11,"ne","","",4,[[["self"],["value"]],["bool"]]],[11,"eq","","",15,[[["self"],["datetime"]],["bool"]]],[11,"ne","","",15,[[["self"],["datetime"]],["bool"]]],[11,"eq","toml::ser","",5,[[["self"],["error"]],["bool"]]],[11,"ne","","",5,[[["self"],["error"]],["bool"]]],[11,"eq","toml::de","",8,[[["error"],["self"]],["bool"]]],[11,"ne","","",8,[[["error"],["self"]],["bool"]]],[11,"eq","toml","",9,[[["self"]],["bool"]]],[11,"partial_cmp","","",9,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","toml::map","",1,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","toml::value","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","toml::ser","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","toml::de","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","toml","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","toml::value","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","toml::ser","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","toml::de","",8,[[["formatter"],["self"]],["result"]]],[11,"index","toml::map","",1,[[["self"],["q"]],["value"]]],[11,"index","toml::value","",4,[[["i"],["self"]],["value"]]],[11,"index_mut","toml::map","",1,[[["self"],["q"]],["value"]]],[11,"index_mut","toml::value","",4,[[["self"],["i"]],["value"]]],[11,"hash","toml","",9,[[["self"],["h"]]]],[11,"from_iter","toml::map","",1,[[["t"]],["self"]]],[11,"from_str","toml::value","",4,[[["str"]],[["result",["value"]],["value"]]]],[11,"from_str","","",15,[[["str"]],[["datetime"],["result",["datetime","datetimeparseerror"]],["datetimeparseerror"]]]],[11,"borrow","toml","",9,[[["self"]],["str"]]],[11,"deserialize_any","toml::value","",4,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_enum","","",4,[[["str"],["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_option","","",4,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_newtype_struct","","",4,[[["str"],["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_bool","","",4,[[["v"]],["result"]]],[11,"deserialize_u8","","",4,[[["v"]],["result"]]],[11,"deserialize_u16","","",4,[[["v"]],["result"]]],[11,"deserialize_u32","","",4,[[["v"]],["result"]]],[11,"deserialize_u64","","",4,[[["v"]],["result"]]],[11,"deserialize_i8","","",4,[[["v"]],["result"]]],[11,"deserialize_i16","","",4,[[["v"]],["result"]]],[11,"deserialize_i32","","",4,[[["v"]],["result"]]],[11,"deserialize_i64","","",4,[[["v"]],["result"]]],[11,"deserialize_f32","","",4,[[["v"]],["result"]]],[11,"deserialize_f64","","",4,[[["v"]],["result"]]],[11,"deserialize_char","","",4,[[["v"]],["result"]]],[11,"deserialize_str","","",4,[[["v"]],["result"]]],[11,"deserialize_string","","",4,[[["v"]],["result"]]],[11,"deserialize_unit","","",4,[[["v"]],["result"]]],[11,"deserialize_seq","","",4,[[["v"]],["result"]]],[11,"deserialize_bytes","","",4,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",4,[[["v"]],["result"]]],[11,"deserialize_map","","",4,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",4,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_tuple","","",4,[[["usize"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",4,[[["v"]],["result"]]],[11,"deserialize_identifier","","",4,[[["v"]],["result"]]],[11,"into_deserializer","","",4,[[],["self"]]],[11,"custom","toml::ser","",5,[[["display"]],["error"]]],[11,"serialize","toml::map","",1,[[["s"],["self"]],["result"]]],[11,"serialize","toml::value","",4,[[["s"],["self"]],["result"]]],[11,"serialize","","",15,[[["s"],["self"]],["result"]]],[11,"serialize","toml","",9,[[["s"],["self"]],["result"]]],[11,"deserialize","toml::map","",1,[[["d"]],["result"]]],[11,"deserialize","toml::value","",4,[[["d"]],[["result",["value"]],["value"]]]],[11,"deserialize","","",15,[[["d"]],[["datetime"],["result",["datetime"]]]]],[11,"deserialize","toml","",9,[[["d"]],[["result",["spanned"]],["spanned"]]]],[11,"custom","toml::de","",8,[[["display"]],["error"]]]],"p":[[4,"Entry"],[3,"Map"],[3,"VacantEntry"],[3,"OccupiedEntry"],[4,"Value"],[4,"Error"],[3,"Serializer"],[3,"Deserializer"],[3,"Error"],[3,"Spanned"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"Datetime"],[3,"DatetimeParseError"]]};
searchIndex["typenum"] = {"doc":"This crate provides type-level numbers evaluated at…","i":[[3,"Greater","typenum","A potential output from `Cmp`, this is the type equivalent…",null,null],[3,"Less","","A potential output from `Cmp`, this is the type equivalent…",null,null],[3,"Equal","","A potential output from `Cmp`, this is the type equivalent…",null,null],[0,"bit","","Type-level bits.",null,null],[3,"B0","typenum::bit","The type-level bit 0.",null,null],[3,"B1","","The type-level bit 1.",null,null],[11,"new","","Instantiates a singleton representing this bit.",0,[[],["b0"]]],[11,"new","","Instantiates a singleton representing this bit.",1,[[],["b1"]]],[0,"int","typenum","Type-level signed integers.",null,null],[3,"PInt","typenum::int","Type-level signed integers with positive sign.",null,null],[3,"NInt","","Type-level signed integers with negative sign.",null,null],[3,"Z0","","The type-level signed integer 0.",null,null],[11,"new","","Instantiates a singleton representing this strictly…",2,[[],["pint"]]],[11,"new","","Instantiates a singleton representing this strictly…",3,[[],["nint"]]],[11,"new","","Instantiates a singleton representing the integer 0.",4,[[],["z0"]]],[0,"marker_traits","typenum","All of the marker traits used in typenum.",null,null],[8,"NonZero","typenum::marker_traits","A marker trait to designate that a type is not zero. All…",null,null],[8,"Ord","","A Marker trait for the types `Greater`, `Equal`, and `Less`.",null,null],[10,"to_ordering","","",5,[[],["ordering"]]],[8,"Bit","","The marker trait for compile time bits.",null,null],[18,"U8","","",6,null],[18,"BOOL","","",6,null],[10,"to_u8","","",6,[[],["u8"]]],[10,"to_bool","","",6,[[],["bool"]]],[8,"Unsigned","","The marker trait for compile time unsigned integers.",null,null],[18,"U8","","",7,null],[18,"U16","","",7,null],[18,"U32","","",7,null],[18,"U64","","",7,null],[18,"USIZE","","",7,null],[18,"I8","","",7,null],[18,"I16","","",7,null],[18,"I32","","",7,null],[18,"I64","","",7,null],[18,"ISIZE","","",7,null],[10,"to_u8","","",7,[[],["u8"]]],[10,"to_u16","","",7,[[],["u16"]]],[10,"to_u32","","",7,[[],["u32"]]],[10,"to_u64","","",7,[[],["u64"]]],[10,"to_usize","","",7,[[],["usize"]]],[10,"to_i8","","",7,[[],["i8"]]],[10,"to_i16","","",7,[[],["i16"]]],[10,"to_i32","","",7,[[],["i32"]]],[10,"to_i64","","",7,[[],["i64"]]],[10,"to_isize","","",7,[[],["isize"]]],[8,"Integer","","The marker trait for compile time signed integers.",null,null],[18,"I8","","",8,null],[18,"I16","","",8,null],[18,"I32","","",8,null],[18,"I64","","",8,null],[18,"ISIZE","","",8,null],[10,"to_i8","","",8,[[],["i8"]]],[10,"to_i16","","",8,[[],["i16"]]],[10,"to_i32","","",8,[[],["i32"]]],[10,"to_i64","","",8,[[],["i64"]]],[10,"to_isize","","",8,[[],["isize"]]],[8,"TypeArray","","The marker trait for type-level arrays of type-level…",null,null],[8,"PowerOfTwo","","The marker trait for type-level numbers which are a power…",null,null],[0,"operator_aliases","typenum","Aliases for the type operators used in this crate. Their…",null,null],[6,"And","typenum::operator_aliases","Alias for the associated type of `BitAnd`: `And<A, B> = <A…",null,null],[6,"Or","","Alias for the associated type of `BitOr`: `Or<A, B> = <A…",null,null],[6,"Xor","","Alias for the associated type of `BitXor`: `Xor<A, B> = <A…",null,null],[6,"Shleft","","Alias for the associated type of `Shl`: `Shleft<A, B> = <A…",null,null],[6,"Shright","","Alias for the associated type of `Shr`: `Shright<A, B> =…",null,null],[6,"Sum","","Alias for the associated type of `Add`: `Sum<A, B> = <A as…",null,null],[6,"Diff","","Alias for the associated type of `Sub`: `Diff<A, B> = <A…",null,null],[6,"Prod","","Alias for the associated type of `Mul`: `Prod<A, B> = <A…",null,null],[6,"Quot","","Alias for the associated type of `Div`: `Quot<A, B> = <A…",null,null],[6,"Mod","","Alias for the associated type of `Rem`: `Mod<A, B> = <A as…",null,null],[6,"PartialQuot","","Alias for the associated type of `PartialDiv`:…",null,null],[6,"Negate","","Alias for the associated type of `Neg`: `Negate<A> = <A as…",null,null],[6,"AbsVal","","Alias for the associated type of `Abs`: `AbsVal<A> = <A as…",null,null],[6,"Exp","","Alias for the associated type of `Pow`: `Exp<A, B> = <A as…",null,null],[6,"Gcf","","Alias for the associated type of `Gcd`: `Gcf<A, B> = <A as…",null,null],[6,"Add1","","Alias to make it easy to add 1: `Add1<A> = <A as…",null,null],[6,"Sub1","","Alias to make it easy to subtract 1: `Sub1<A> = <A as…",null,null],[6,"Double","","Alias to make it easy to multiply by 2. `Double<A> =…",null,null],[6,"Square","","Alias to make it easy to square. `Square<A> = <A as…",null,null],[6,"Cube","","Alias to make it easy to cube. `Cube<A> = <Square<A> as…",null,null],[6,"Sqrt","","Alias for the associated type of `SquareRoot`: `Sqrt<A> =…",null,null],[6,"Compare","","Alias for the associated type of `Cmp`: `Compare<A, B> =…",null,null],[6,"Length","","Alias for the associated type of `Len`: `Length<A> = <A as…",null,null],[6,"Minimum","","Alias for the associated type of `Min`: `Minimum<A, B> =…",null,null],[6,"Maximum","","Alias for the associated type of `Max`: `Maximum<A, B> =…",null,null],[6,"Le","","Alias for the associated type of `IsLess`: `Le<A, B> = <A…",null,null],[6,"Eq","","Alias for the associated type of `IsEqual`: `Eq<A, B> = <A…",null,null],[6,"Gr","","Alias for the associated type of `IsGreater`: `Gr<A, B> =…",null,null],[6,"GrEq","","Alias for the associated type of `IsGreaterOrEqual`:…",null,null],[6,"LeEq","","Alias for the associated type of `IsLessOrEqual`: `LeEq<A,…",null,null],[6,"NotEq","","Alias for the associated type of `IsNotEqual`: `NotEq<A,…",null,null],[6,"Log2","","Alias for the associated type of `Logarithm2`: `Log2<A> =…",null,null],[0,"type_operators","typenum","Useful type operators that are not defined in `core::ops`.",null,null],[8,"Same","typenum::type_operators","A type operator that ensures that `Rhs` is the same as…",null,null],[16,"Output","","Should always be `Self`",9,null],[8,"Abs","","A type operator that returns the absolute value.",null,null],[16,"Output","","The absolute value.",10,null],[8,"Pow","","A type operator that provides exponentiation by repeated…",null,null],[16,"Output","","The result of the exponentiation.",11,null],[10,"powi","","This function isn't used in this crate, but may be useful…",11,[[["exp"]]]],[8,"Cmp","","A type operator for comparing `Self` and `Rhs`. It…",null,null],[16,"Output","","The result of the comparison. It should only ever be one…",12,null],[8,"Len","","A type operator that gives the length of an `Array` or the…",null,null],[16,"Output","","The length as a type-level unsigned integer.",13,null],[10,"len","","This function isn't used in this crate, but may be useful…",13,[[["self"]]]],[8,"PartialDiv","","Division as a partial function. This type operator…",null,null],[16,"Output","","The type of the result of the division",14,null],[10,"partial_div","","Method for performing the division",14,[[["rhs"]]]],[8,"Min","","A type operator that returns the minimum of `Self` and…",null,null],[16,"Output","","The type of the minimum of `Self` and `Rhs`",15,null],[10,"min","","Method returning the minimum",15,[[["rhs"]]]],[8,"Max","","A type operator that returns the maximum of `Self` and…",null,null],[16,"Output","","The type of the maximum of `Self` and `Rhs`",16,null],[10,"max","","Method returning the maximum",16,[[["rhs"]]]],[8,"IsLess","","A type operator that returns `True` if `Self < Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",17,null],[10,"is_less","","Method returning `True` or `False`.",17,[[["rhs"]]]],[8,"IsEqual","","A type operator that returns `True` if `Self == Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",18,null],[10,"is_equal","","Method returning `True` or `False`.",18,[[["rhs"]]]],[8,"IsGreater","","A type operator that returns `True` if `Self > Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",19,null],[10,"is_greater","","Method returning `True` or `False`.",19,[[["rhs"]]]],[8,"IsLessOrEqual","","A type operator that returns `True` if `Self <= Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",20,null],[10,"is_less_or_equal","","Method returning `True` or `False`.",20,[[["rhs"]]]],[8,"IsNotEqual","","A type operator that returns `True` if `Self != Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",21,null],[10,"is_not_equal","","Method returning `True` or `False`.",21,[[["rhs"]]]],[8,"IsGreaterOrEqual","","A type operator that returns `True` if `Self >= Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",22,null],[10,"is_greater_or_equal","","Method returning `True` or `False`.",22,[[["rhs"]]]],[8,"SquareRoot","","A type operator for taking the integer square root of…",null,null],[16,"Output","","The result of the integer square root.",23,null],[8,"Logarithm2","","A type operator for taking the integer binary logarithm of…",null,null],[16,"Output","","The result of the integer binary logarithm.",24,null],[8,"Gcd","","A type operator that computes the [greatest common…",null,null],[16,"Output","","The greatest common divisor.",25,null],[0,"uint","typenum","Type-level unsigned integers.",null,null],[3,"UTerm","typenum::uint","The terminating type for `UInt`; it always comes after the…",null,null],[3,"UInt","","`UInt` is defined recursively, where `B` is the least…",null,null],[6,"GetBitOut","","",null,null],[6,"SetBitOut","","Alias for the result of calling `SetBit`: `SetBitOut<N, I,…",null,null],[8,"GetBit","","",null,null],[16,"Output","","",26,null],[8,"SetBit","","A type operator that, when implemented for unsigned…",null,null],[16,"Output","","",27,null],[11,"new","","Instantiates a singleton representing this unsigned integer.",28,[[],["uterm"]]],[11,"new","","Instantiates a singleton representing this unsigned integer.",29,[[],["uint"]]],[0,"array","typenum","A type-level array of type-level numbers.",null,null],[3,"ATerm","typenum::array","The terminating type for type arrays.",null,null],[3,"TArr","","`TArr` is a type that acts as an array of types. It is…",null,null],[0,"consts","typenum","Type aliases for many constants.",null,null],[6,"True","typenum::consts","",null,null],[6,"False","","",null,null],[6,"U0","","",null,null],[6,"U1","","",null,null],[6,"P1","","",null,null],[6,"N1","","",null,null],[6,"U2","","",null,null],[6,"P2","","",null,null],[6,"N2","","",null,null],[6,"U3","","",null,null],[6,"P3","","",null,null],[6,"N3","","",null,null],[6,"U4","","",null,null],[6,"P4","","",null,null],[6,"N4","","",null,null],[6,"U5","","",null,null],[6,"P5","","",null,null],[6,"N5","","",null,null],[6,"U6","","",null,null],[6,"P6","","",null,null],[6,"N6","","",null,null],[6,"U7","","",null,null],[6,"P7","","",null,null],[6,"N7","","",null,null],[6,"U8","","",null,null],[6,"P8","","",null,null],[6,"N8","","",null,null],[6,"U9","","",null,null],[6,"P9","","",null,null],[6,"N9","","",null,null],[6,"U10","","",null,null],[6,"P10","","",null,null],[6,"N10","","",null,null],[6,"U11","","",null,null],[6,"P11","","",null,null],[6,"N11","","",null,null],[6,"U12","","",null,null],[6,"P12","","",null,null],[6,"N12","","",null,null],[6,"U13","","",null,null],[6,"P13","","",null,null],[6,"N13","","",null,null],[6,"U14","","",null,null],[6,"P14","","",null,null],[6,"N14","","",null,null],[6,"U15","","",null,null],[6,"P15","","",null,null],[6,"N15","","",null,null],[6,"U16","","",null,null],[6,"P16","","",null,null],[6,"N16","","",null,null],[6,"U17","","",null,null],[6,"P17","","",null,null],[6,"N17","","",null,null],[6,"U18","","",null,null],[6,"P18","","",null,null],[6,"N18","","",null,null],[6,"U19","","",null,null],[6,"P19","","",null,null],[6,"N19","","",null,null],[6,"U20","","",null,null],[6,"P20","","",null,null],[6,"N20","","",null,null],[6,"U21","","",null,null],[6,"P21","","",null,null],[6,"N21","","",null,null],[6,"U22","","",null,null],[6,"P22","","",null,null],[6,"N22","","",null,null],[6,"U23","","",null,null],[6,"P23","","",null,null],[6,"N23","","",null,null],[6,"U24","","",null,null],[6,"P24","","",null,null],[6,"N24","","",null,null],[6,"U25","","",null,null],[6,"P25","","",null,null],[6,"N25","","",null,null],[6,"U26","","",null,null],[6,"P26","","",null,null],[6,"N26","","",null,null],[6,"U27","","",null,null],[6,"P27","","",null,null],[6,"N27","","",null,null],[6,"U28","","",null,null],[6,"P28","","",null,null],[6,"N28","","",null,null],[6,"U29","","",null,null],[6,"P29","","",null,null],[6,"N29","","",null,null],[6,"U30","","",null,null],[6,"P30","","",null,null],[6,"N30","","",null,null],[6,"U31","","",null,null],[6,"P31","","",null,null],[6,"N31","","",null,null],[6,"U32","","",null,null],[6,"P32","","",null,null],[6,"N32","","",null,null],[6,"U33","","",null,null],[6,"P33","","",null,null],[6,"N33","","",null,null],[6,"U34","","",null,null],[6,"P34","","",null,null],[6,"N34","","",null,null],[6,"U35","","",null,null],[6,"P35","","",null,null],[6,"N35","","",null,null],[6,"U36","","",null,null],[6,"P36","","",null,null],[6,"N36","","",null,null],[6,"U37","","",null,null],[6,"P37","","",null,null],[6,"N37","","",null,null],[6,"U38","","",null,null],[6,"P38","","",null,null],[6,"N38","","",null,null],[6,"U39","","",null,null],[6,"P39","","",null,null],[6,"N39","","",null,null],[6,"U40","","",null,null],[6,"P40","","",null,null],[6,"N40","","",null,null],[6,"U41","","",null,null],[6,"P41","","",null,null],[6,"N41","","",null,null],[6,"U42","","",null,null],[6,"P42","","",null,null],[6,"N42","","",null,null],[6,"U43","","",null,null],[6,"P43","","",null,null],[6,"N43","","",null,null],[6,"U44","","",null,null],[6,"P44","","",null,null],[6,"N44","","",null,null],[6,"U45","","",null,null],[6,"P45","","",null,null],[6,"N45","","",null,null],[6,"U46","","",null,null],[6,"P46","","",null,null],[6,"N46","","",null,null],[6,"U47","","",null,null],[6,"P47","","",null,null],[6,"N47","","",null,null],[6,"U48","","",null,null],[6,"P48","","",null,null],[6,"N48","","",null,null],[6,"U49","","",null,null],[6,"P49","","",null,null],[6,"N49","","",null,null],[6,"U50","","",null,null],[6,"P50","","",null,null],[6,"N50","","",null,null],[6,"U51","","",null,null],[6,"P51","","",null,null],[6,"N51","","",null,null],[6,"U52","","",null,null],[6,"P52","","",null,null],[6,"N52","","",null,null],[6,"U53","","",null,null],[6,"P53","","",null,null],[6,"N53","","",null,null],[6,"U54","","",null,null],[6,"P54","","",null,null],[6,"N54","","",null,null],[6,"U55","","",null,null],[6,"P55","","",null,null],[6,"N55","","",null,null],[6,"U56","","",null,null],[6,"P56","","",null,null],[6,"N56","","",null,null],[6,"U57","","",null,null],[6,"P57","","",null,null],[6,"N57","","",null,null],[6,"U58","","",null,null],[6,"P58","","",null,null],[6,"N58","","",null,null],[6,"U59","","",null,null],[6,"P59","","",null,null],[6,"N59","","",null,null],[6,"U60","","",null,null],[6,"P60","","",null,null],[6,"N60","","",null,null],[6,"U61","","",null,null],[6,"P61","","",null,null],[6,"N61","","",null,null],[6,"U62","","",null,null],[6,"P62","","",null,null],[6,"N62","","",null,null],[6,"U63","","",null,null],[6,"P63","","",null,null],[6,"N63","","",null,null],[6,"U64","","",null,null],[6,"P64","","",null,null],[6,"N64","","",null,null],[6,"U65","","",null,null],[6,"P65","","",null,null],[6,"N65","","",null,null],[6,"U66","","",null,null],[6,"P66","","",null,null],[6,"N66","","",null,null],[6,"U67","","",null,null],[6,"P67","","",null,null],[6,"N67","","",null,null],[6,"U68","","",null,null],[6,"P68","","",null,null],[6,"N68","","",null,null],[6,"U69","","",null,null],[6,"P69","","",null,null],[6,"N69","","",null,null],[6,"U70","","",null,null],[6,"P70","","",null,null],[6,"N70","","",null,null],[6,"U71","","",null,null],[6,"P71","","",null,null],[6,"N71","","",null,null],[6,"U72","","",null,null],[6,"P72","","",null,null],[6,"N72","","",null,null],[6,"U73","","",null,null],[6,"P73","","",null,null],[6,"N73","","",null,null],[6,"U74","","",null,null],[6,"P74","","",null,null],[6,"N74","","",null,null],[6,"U75","","",null,null],[6,"P75","","",null,null],[6,"N75","","",null,null],[6,"U76","","",null,null],[6,"P76","","",null,null],[6,"N76","","",null,null],[6,"U77","","",null,null],[6,"P77","","",null,null],[6,"N77","","",null,null],[6,"U78","","",null,null],[6,"P78","","",null,null],[6,"N78","","",null,null],[6,"U79","","",null,null],[6,"P79","","",null,null],[6,"N79","","",null,null],[6,"U80","","",null,null],[6,"P80","","",null,null],[6,"N80","","",null,null],[6,"U81","","",null,null],[6,"P81","","",null,null],[6,"N81","","",null,null],[6,"U82","","",null,null],[6,"P82","","",null,null],[6,"N82","","",null,null],[6,"U83","","",null,null],[6,"P83","","",null,null],[6,"N83","","",null,null],[6,"U84","","",null,null],[6,"P84","","",null,null],[6,"N84","","",null,null],[6,"U85","","",null,null],[6,"P85","","",null,null],[6,"N85","","",null,null],[6,"U86","","",null,null],[6,"P86","","",null,null],[6,"N86","","",null,null],[6,"U87","","",null,null],[6,"P87","","",null,null],[6,"N87","","",null,null],[6,"U88","","",null,null],[6,"P88","","",null,null],[6,"N88","","",null,null],[6,"U89","","",null,null],[6,"P89","","",null,null],[6,"N89","","",null,null],[6,"U90","","",null,null],[6,"P90","","",null,null],[6,"N90","","",null,null],[6,"U91","","",null,null],[6,"P91","","",null,null],[6,"N91","","",null,null],[6,"U92","","",null,null],[6,"P92","","",null,null],[6,"N92","","",null,null],[6,"U93","","",null,null],[6,"P93","","",null,null],[6,"N93","","",null,null],[6,"U94","","",null,null],[6,"P94","","",null,null],[6,"N94","","",null,null],[6,"U95","","",null,null],[6,"P95","","",null,null],[6,"N95","","",null,null],[6,"U96","","",null,null],[6,"P96","","",null,null],[6,"N96","","",null,null],[6,"U97","","",null,null],[6,"P97","","",null,null],[6,"N97","","",null,null],[6,"U98","","",null,null],[6,"P98","","",null,null],[6,"N98","","",null,null],[6,"U99","","",null,null],[6,"P99","","",null,null],[6,"N99","","",null,null],[6,"U100","","",null,null],[6,"P100","","",null,null],[6,"N100","","",null,null],[6,"U101","","",null,null],[6,"P101","","",null,null],[6,"N101","","",null,null],[6,"U102","","",null,null],[6,"P102","","",null,null],[6,"N102","","",null,null],[6,"U103","","",null,null],[6,"P103","","",null,null],[6,"N103","","",null,null],[6,"U104","","",null,null],[6,"P104","","",null,null],[6,"N104","","",null,null],[6,"U105","","",null,null],[6,"P105","","",null,null],[6,"N105","","",null,null],[6,"U106","","",null,null],[6,"P106","","",null,null],[6,"N106","","",null,null],[6,"U107","","",null,null],[6,"P107","","",null,null],[6,"N107","","",null,null],[6,"U108","","",null,null],[6,"P108","","",null,null],[6,"N108","","",null,null],[6,"U109","","",null,null],[6,"P109","","",null,null],[6,"N109","","",null,null],[6,"U110","","",null,null],[6,"P110","","",null,null],[6,"N110","","",null,null],[6,"U111","","",null,null],[6,"P111","","",null,null],[6,"N111","","",null,null],[6,"U112","","",null,null],[6,"P112","","",null,null],[6,"N112","","",null,null],[6,"U113","","",null,null],[6,"P113","","",null,null],[6,"N113","","",null,null],[6,"U114","","",null,null],[6,"P114","","",null,null],[6,"N114","","",null,null],[6,"U115","","",null,null],[6,"P115","","",null,null],[6,"N115","","",null,null],[6,"U116","","",null,null],[6,"P116","","",null,null],[6,"N116","","",null,null],[6,"U117","","",null,null],[6,"P117","","",null,null],[6,"N117","","",null,null],[6,"U118","","",null,null],[6,"P118","","",null,null],[6,"N118","","",null,null],[6,"U119","","",null,null],[6,"P119","","",null,null],[6,"N119","","",null,null],[6,"U120","","",null,null],[6,"P120","","",null,null],[6,"N120","","",null,null],[6,"U121","","",null,null],[6,"P121","","",null,null],[6,"N121","","",null,null],[6,"U122","","",null,null],[6,"P122","","",null,null],[6,"N122","","",null,null],[6,"U123","","",null,null],[6,"P123","","",null,null],[6,"N123","","",null,null],[6,"U124","","",null,null],[6,"P124","","",null,null],[6,"N124","","",null,null],[6,"U125","","",null,null],[6,"P125","","",null,null],[6,"N125","","",null,null],[6,"U126","","",null,null],[6,"P126","","",null,null],[6,"N126","","",null,null],[6,"U127","","",null,null],[6,"P127","","",null,null],[6,"N127","","",null,null],[6,"U128","","",null,null],[6,"P128","","",null,null],[6,"N128","","",null,null],[6,"U129","","",null,null],[6,"P129","","",null,null],[6,"N129","","",null,null],[6,"U130","","",null,null],[6,"P130","","",null,null],[6,"N130","","",null,null],[6,"U131","","",null,null],[6,"P131","","",null,null],[6,"N131","","",null,null],[6,"U132","","",null,null],[6,"P132","","",null,null],[6,"N132","","",null,null],[6,"U133","","",null,null],[6,"P133","","",null,null],[6,"N133","","",null,null],[6,"U134","","",null,null],[6,"P134","","",null,null],[6,"N134","","",null,null],[6,"U135","","",null,null],[6,"P135","","",null,null],[6,"N135","","",null,null],[6,"U136","","",null,null],[6,"P136","","",null,null],[6,"N136","","",null,null],[6,"U137","","",null,null],[6,"P137","","",null,null],[6,"N137","","",null,null],[6,"U138","","",null,null],[6,"P138","","",null,null],[6,"N138","","",null,null],[6,"U139","","",null,null],[6,"P139","","",null,null],[6,"N139","","",null,null],[6,"U140","","",null,null],[6,"P140","","",null,null],[6,"N140","","",null,null],[6,"U141","","",null,null],[6,"P141","","",null,null],[6,"N141","","",null,null],[6,"U142","","",null,null],[6,"P142","","",null,null],[6,"N142","","",null,null],[6,"U143","","",null,null],[6,"P143","","",null,null],[6,"N143","","",null,null],[6,"U144","","",null,null],[6,"P144","","",null,null],[6,"N144","","",null,null],[6,"U145","","",null,null],[6,"P145","","",null,null],[6,"N145","","",null,null],[6,"U146","","",null,null],[6,"P146","","",null,null],[6,"N146","","",null,null],[6,"U147","","",null,null],[6,"P147","","",null,null],[6,"N147","","",null,null],[6,"U148","","",null,null],[6,"P148","","",null,null],[6,"N148","","",null,null],[6,"U149","","",null,null],[6,"P149","","",null,null],[6,"N149","","",null,null],[6,"U150","","",null,null],[6,"P150","","",null,null],[6,"N150","","",null,null],[6,"U151","","",null,null],[6,"P151","","",null,null],[6,"N151","","",null,null],[6,"U152","","",null,null],[6,"P152","","",null,null],[6,"N152","","",null,null],[6,"U153","","",null,null],[6,"P153","","",null,null],[6,"N153","","",null,null],[6,"U154","","",null,null],[6,"P154","","",null,null],[6,"N154","","",null,null],[6,"U155","","",null,null],[6,"P155","","",null,null],[6,"N155","","",null,null],[6,"U156","","",null,null],[6,"P156","","",null,null],[6,"N156","","",null,null],[6,"U157","","",null,null],[6,"P157","","",null,null],[6,"N157","","",null,null],[6,"U158","","",null,null],[6,"P158","","",null,null],[6,"N158","","",null,null],[6,"U159","","",null,null],[6,"P159","","",null,null],[6,"N159","","",null,null],[6,"U160","","",null,null],[6,"P160","","",null,null],[6,"N160","","",null,null],[6,"U161","","",null,null],[6,"P161","","",null,null],[6,"N161","","",null,null],[6,"U162","","",null,null],[6,"P162","","",null,null],[6,"N162","","",null,null],[6,"U163","","",null,null],[6,"P163","","",null,null],[6,"N163","","",null,null],[6,"U164","","",null,null],[6,"P164","","",null,null],[6,"N164","","",null,null],[6,"U165","","",null,null],[6,"P165","","",null,null],[6,"N165","","",null,null],[6,"U166","","",null,null],[6,"P166","","",null,null],[6,"N166","","",null,null],[6,"U167","","",null,null],[6,"P167","","",null,null],[6,"N167","","",null,null],[6,"U168","","",null,null],[6,"P168","","",null,null],[6,"N168","","",null,null],[6,"U169","","",null,null],[6,"P169","","",null,null],[6,"N169","","",null,null],[6,"U170","","",null,null],[6,"P170","","",null,null],[6,"N170","","",null,null],[6,"U171","","",null,null],[6,"P171","","",null,null],[6,"N171","","",null,null],[6,"U172","","",null,null],[6,"P172","","",null,null],[6,"N172","","",null,null],[6,"U173","","",null,null],[6,"P173","","",null,null],[6,"N173","","",null,null],[6,"U174","","",null,null],[6,"P174","","",null,null],[6,"N174","","",null,null],[6,"U175","","",null,null],[6,"P175","","",null,null],[6,"N175","","",null,null],[6,"U176","","",null,null],[6,"P176","","",null,null],[6,"N176","","",null,null],[6,"U177","","",null,null],[6,"P177","","",null,null],[6,"N177","","",null,null],[6,"U178","","",null,null],[6,"P178","","",null,null],[6,"N178","","",null,null],[6,"U179","","",null,null],[6,"P179","","",null,null],[6,"N179","","",null,null],[6,"U180","","",null,null],[6,"P180","","",null,null],[6,"N180","","",null,null],[6,"U181","","",null,null],[6,"P181","","",null,null],[6,"N181","","",null,null],[6,"U182","","",null,null],[6,"P182","","",null,null],[6,"N182","","",null,null],[6,"U183","","",null,null],[6,"P183","","",null,null],[6,"N183","","",null,null],[6,"U184","","",null,null],[6,"P184","","",null,null],[6,"N184","","",null,null],[6,"U185","","",null,null],[6,"P185","","",null,null],[6,"N185","","",null,null],[6,"U186","","",null,null],[6,"P186","","",null,null],[6,"N186","","",null,null],[6,"U187","","",null,null],[6,"P187","","",null,null],[6,"N187","","",null,null],[6,"U188","","",null,null],[6,"P188","","",null,null],[6,"N188","","",null,null],[6,"U189","","",null,null],[6,"P189","","",null,null],[6,"N189","","",null,null],[6,"U190","","",null,null],[6,"P190","","",null,null],[6,"N190","","",null,null],[6,"U191","","",null,null],[6,"P191","","",null,null],[6,"N191","","",null,null],[6,"U192","","",null,null],[6,"P192","","",null,null],[6,"N192","","",null,null],[6,"U193","","",null,null],[6,"P193","","",null,null],[6,"N193","","",null,null],[6,"U194","","",null,null],[6,"P194","","",null,null],[6,"N194","","",null,null],[6,"U195","","",null,null],[6,"P195","","",null,null],[6,"N195","","",null,null],[6,"U196","","",null,null],[6,"P196","","",null,null],[6,"N196","","",null,null],[6,"U197","","",null,null],[6,"P197","","",null,null],[6,"N197","","",null,null],[6,"U198","","",null,null],[6,"P198","","",null,null],[6,"N198","","",null,null],[6,"U199","","",null,null],[6,"P199","","",null,null],[6,"N199","","",null,null],[6,"U200","","",null,null],[6,"P200","","",null,null],[6,"N200","","",null,null],[6,"U201","","",null,null],[6,"P201","","",null,null],[6,"N201","","",null,null],[6,"U202","","",null,null],[6,"P202","","",null,null],[6,"N202","","",null,null],[6,"U203","","",null,null],[6,"P203","","",null,null],[6,"N203","","",null,null],[6,"U204","","",null,null],[6,"P204","","",null,null],[6,"N204","","",null,null],[6,"U205","","",null,null],[6,"P205","","",null,null],[6,"N205","","",null,null],[6,"U206","","",null,null],[6,"P206","","",null,null],[6,"N206","","",null,null],[6,"U207","","",null,null],[6,"P207","","",null,null],[6,"N207","","",null,null],[6,"U208","","",null,null],[6,"P208","","",null,null],[6,"N208","","",null,null],[6,"U209","","",null,null],[6,"P209","","",null,null],[6,"N209","","",null,null],[6,"U210","","",null,null],[6,"P210","","",null,null],[6,"N210","","",null,null],[6,"U211","","",null,null],[6,"P211","","",null,null],[6,"N211","","",null,null],[6,"U212","","",null,null],[6,"P212","","",null,null],[6,"N212","","",null,null],[6,"U213","","",null,null],[6,"P213","","",null,null],[6,"N213","","",null,null],[6,"U214","","",null,null],[6,"P214","","",null,null],[6,"N214","","",null,null],[6,"U215","","",null,null],[6,"P215","","",null,null],[6,"N215","","",null,null],[6,"U216","","",null,null],[6,"P216","","",null,null],[6,"N216","","",null,null],[6,"U217","","",null,null],[6,"P217","","",null,null],[6,"N217","","",null,null],[6,"U218","","",null,null],[6,"P218","","",null,null],[6,"N218","","",null,null],[6,"U219","","",null,null],[6,"P219","","",null,null],[6,"N219","","",null,null],[6,"U220","","",null,null],[6,"P220","","",null,null],[6,"N220","","",null,null],[6,"U221","","",null,null],[6,"P221","","",null,null],[6,"N221","","",null,null],[6,"U222","","",null,null],[6,"P222","","",null,null],[6,"N222","","",null,null],[6,"U223","","",null,null],[6,"P223","","",null,null],[6,"N223","","",null,null],[6,"U224","","",null,null],[6,"P224","","",null,null],[6,"N224","","",null,null],[6,"U225","","",null,null],[6,"P225","","",null,null],[6,"N225","","",null,null],[6,"U226","","",null,null],[6,"P226","","",null,null],[6,"N226","","",null,null],[6,"U227","","",null,null],[6,"P227","","",null,null],[6,"N227","","",null,null],[6,"U228","","",null,null],[6,"P228","","",null,null],[6,"N228","","",null,null],[6,"U229","","",null,null],[6,"P229","","",null,null],[6,"N229","","",null,null],[6,"U230","","",null,null],[6,"P230","","",null,null],[6,"N230","","",null,null],[6,"U231","","",null,null],[6,"P231","","",null,null],[6,"N231","","",null,null],[6,"U232","","",null,null],[6,"P232","","",null,null],[6,"N232","","",null,null],[6,"U233","","",null,null],[6,"P233","","",null,null],[6,"N233","","",null,null],[6,"U234","","",null,null],[6,"P234","","",null,null],[6,"N234","","",null,null],[6,"U235","","",null,null],[6,"P235","","",null,null],[6,"N235","","",null,null],[6,"U236","","",null,null],[6,"P236","","",null,null],[6,"N236","","",null,null],[6,"U237","","",null,null],[6,"P237","","",null,null],[6,"N237","","",null,null],[6,"U238","","",null,null],[6,"P238","","",null,null],[6,"N238","","",null,null],[6,"U239","","",null,null],[6,"P239","","",null,null],[6,"N239","","",null,null],[6,"U240","","",null,null],[6,"P240","","",null,null],[6,"N240","","",null,null],[6,"U241","","",null,null],[6,"P241","","",null,null],[6,"N241","","",null,null],[6,"U242","","",null,null],[6,"P242","","",null,null],[6,"N242","","",null,null],[6,"U243","","",null,null],[6,"P243","","",null,null],[6,"N243","","",null,null],[6,"U244","","",null,null],[6,"P244","","",null,null],[6,"N244","","",null,null],[6,"U245","","",null,null],[6,"P245","","",null,null],[6,"N245","","",null,null],[6,"U246","","",null,null],[6,"P246","","",null,null],[6,"N246","","",null,null],[6,"U247","","",null,null],[6,"P247","","",null,null],[6,"N247","","",null,null],[6,"U248","","",null,null],[6,"P248","","",null,null],[6,"N248","","",null,null],[6,"U249","","",null,null],[6,"P249","","",null,null],[6,"N249","","",null,null],[6,"U250","","",null,null],[6,"P250","","",null,null],[6,"N250","","",null,null],[6,"U251","","",null,null],[6,"P251","","",null,null],[6,"N251","","",null,null],[6,"U252","","",null,null],[6,"P252","","",null,null],[6,"N252","","",null,null],[6,"U253","","",null,null],[6,"P253","","",null,null],[6,"N253","","",null,null],[6,"U254","","",null,null],[6,"P254","","",null,null],[6,"N254","","",null,null],[6,"U255","","",null,null],[6,"P255","","",null,null],[6,"N255","","",null,null],[6,"U256","","",null,null],[6,"P256","","",null,null],[6,"N256","","",null,null],[6,"U257","","",null,null],[6,"P257","","",null,null],[6,"N257","","",null,null],[6,"U258","","",null,null],[6,"P258","","",null,null],[6,"N258","","",null,null],[6,"U259","","",null,null],[6,"P259","","",null,null],[6,"N259","","",null,null],[6,"U260","","",null,null],[6,"P260","","",null,null],[6,"N260","","",null,null],[6,"U261","","",null,null],[6,"P261","","",null,null],[6,"N261","","",null,null],[6,"U262","","",null,null],[6,"P262","","",null,null],[6,"N262","","",null,null],[6,"U263","","",null,null],[6,"P263","","",null,null],[6,"N263","","",null,null],[6,"U264","","",null,null],[6,"P264","","",null,null],[6,"N264","","",null,null],[6,"U265","","",null,null],[6,"P265","","",null,null],[6,"N265","","",null,null],[6,"U266","","",null,null],[6,"P266","","",null,null],[6,"N266","","",null,null],[6,"U267","","",null,null],[6,"P267","","",null,null],[6,"N267","","",null,null],[6,"U268","","",null,null],[6,"P268","","",null,null],[6,"N268","","",null,null],[6,"U269","","",null,null],[6,"P269","","",null,null],[6,"N269","","",null,null],[6,"U270","","",null,null],[6,"P270","","",null,null],[6,"N270","","",null,null],[6,"U271","","",null,null],[6,"P271","","",null,null],[6,"N271","","",null,null],[6,"U272","","",null,null],[6,"P272","","",null,null],[6,"N272","","",null,null],[6,"U273","","",null,null],[6,"P273","","",null,null],[6,"N273","","",null,null],[6,"U274","","",null,null],[6,"P274","","",null,null],[6,"N274","","",null,null],[6,"U275","","",null,null],[6,"P275","","",null,null],[6,"N275","","",null,null],[6,"U276","","",null,null],[6,"P276","","",null,null],[6,"N276","","",null,null],[6,"U277","","",null,null],[6,"P277","","",null,null],[6,"N277","","",null,null],[6,"U278","","",null,null],[6,"P278","","",null,null],[6,"N278","","",null,null],[6,"U279","","",null,null],[6,"P279","","",null,null],[6,"N279","","",null,null],[6,"U280","","",null,null],[6,"P280","","",null,null],[6,"N280","","",null,null],[6,"U281","","",null,null],[6,"P281","","",null,null],[6,"N281","","",null,null],[6,"U282","","",null,null],[6,"P282","","",null,null],[6,"N282","","",null,null],[6,"U283","","",null,null],[6,"P283","","",null,null],[6,"N283","","",null,null],[6,"U284","","",null,null],[6,"P284","","",null,null],[6,"N284","","",null,null],[6,"U285","","",null,null],[6,"P285","","",null,null],[6,"N285","","",null,null],[6,"U286","","",null,null],[6,"P286","","",null,null],[6,"N286","","",null,null],[6,"U287","","",null,null],[6,"P287","","",null,null],[6,"N287","","",null,null],[6,"U288","","",null,null],[6,"P288","","",null,null],[6,"N288","","",null,null],[6,"U289","","",null,null],[6,"P289","","",null,null],[6,"N289","","",null,null],[6,"U290","","",null,null],[6,"P290","","",null,null],[6,"N290","","",null,null],[6,"U291","","",null,null],[6,"P291","","",null,null],[6,"N291","","",null,null],[6,"U292","","",null,null],[6,"P292","","",null,null],[6,"N292","","",null,null],[6,"U293","","",null,null],[6,"P293","","",null,null],[6,"N293","","",null,null],[6,"U294","","",null,null],[6,"P294","","",null,null],[6,"N294","","",null,null],[6,"U295","","",null,null],[6,"P295","","",null,null],[6,"N295","","",null,null],[6,"U296","","",null,null],[6,"P296","","",null,null],[6,"N296","","",null,null],[6,"U297","","",null,null],[6,"P297","","",null,null],[6,"N297","","",null,null],[6,"U298","","",null,null],[6,"P298","","",null,null],[6,"N298","","",null,null],[6,"U299","","",null,null],[6,"P299","","",null,null],[6,"N299","","",null,null],[6,"U300","","",null,null],[6,"P300","","",null,null],[6,"N300","","",null,null],[6,"U301","","",null,null],[6,"P301","","",null,null],[6,"N301","","",null,null],[6,"U302","","",null,null],[6,"P302","","",null,null],[6,"N302","","",null,null],[6,"U303","","",null,null],[6,"P303","","",null,null],[6,"N303","","",null,null],[6,"U304","","",null,null],[6,"P304","","",null,null],[6,"N304","","",null,null],[6,"U305","","",null,null],[6,"P305","","",null,null],[6,"N305","","",null,null],[6,"U306","","",null,null],[6,"P306","","",null,null],[6,"N306","","",null,null],[6,"U307","","",null,null],[6,"P307","","",null,null],[6,"N307","","",null,null],[6,"U308","","",null,null],[6,"P308","","",null,null],[6,"N308","","",null,null],[6,"U309","","",null,null],[6,"P309","","",null,null],[6,"N309","","",null,null],[6,"U310","","",null,null],[6,"P310","","",null,null],[6,"N310","","",null,null],[6,"U311","","",null,null],[6,"P311","","",null,null],[6,"N311","","",null,null],[6,"U312","","",null,null],[6,"P312","","",null,null],[6,"N312","","",null,null],[6,"U313","","",null,null],[6,"P313","","",null,null],[6,"N313","","",null,null],[6,"U314","","",null,null],[6,"P314","","",null,null],[6,"N314","","",null,null],[6,"U315","","",null,null],[6,"P315","","",null,null],[6,"N315","","",null,null],[6,"U316","","",null,null],[6,"P316","","",null,null],[6,"N316","","",null,null],[6,"U317","","",null,null],[6,"P317","","",null,null],[6,"N317","","",null,null],[6,"U318","","",null,null],[6,"P318","","",null,null],[6,"N318","","",null,null],[6,"U319","","",null,null],[6,"P319","","",null,null],[6,"N319","","",null,null],[6,"U320","","",null,null],[6,"P320","","",null,null],[6,"N320","","",null,null],[6,"U321","","",null,null],[6,"P321","","",null,null],[6,"N321","","",null,null],[6,"U322","","",null,null],[6,"P322","","",null,null],[6,"N322","","",null,null],[6,"U323","","",null,null],[6,"P323","","",null,null],[6,"N323","","",null,null],[6,"U324","","",null,null],[6,"P324","","",null,null],[6,"N324","","",null,null],[6,"U325","","",null,null],[6,"P325","","",null,null],[6,"N325","","",null,null],[6,"U326","","",null,null],[6,"P326","","",null,null],[6,"N326","","",null,null],[6,"U327","","",null,null],[6,"P327","","",null,null],[6,"N327","","",null,null],[6,"U328","","",null,null],[6,"P328","","",null,null],[6,"N328","","",null,null],[6,"U329","","",null,null],[6,"P329","","",null,null],[6,"N329","","",null,null],[6,"U330","","",null,null],[6,"P330","","",null,null],[6,"N330","","",null,null],[6,"U331","","",null,null],[6,"P331","","",null,null],[6,"N331","","",null,null],[6,"U332","","",null,null],[6,"P332","","",null,null],[6,"N332","","",null,null],[6,"U333","","",null,null],[6,"P333","","",null,null],[6,"N333","","",null,null],[6,"U334","","",null,null],[6,"P334","","",null,null],[6,"N334","","",null,null],[6,"U335","","",null,null],[6,"P335","","",null,null],[6,"N335","","",null,null],[6,"U336","","",null,null],[6,"P336","","",null,null],[6,"N336","","",null,null],[6,"U337","","",null,null],[6,"P337","","",null,null],[6,"N337","","",null,null],[6,"U338","","",null,null],[6,"P338","","",null,null],[6,"N338","","",null,null],[6,"U339","","",null,null],[6,"P339","","",null,null],[6,"N339","","",null,null],[6,"U340","","",null,null],[6,"P340","","",null,null],[6,"N340","","",null,null],[6,"U341","","",null,null],[6,"P341","","",null,null],[6,"N341","","",null,null],[6,"U342","","",null,null],[6,"P342","","",null,null],[6,"N342","","",null,null],[6,"U343","","",null,null],[6,"P343","","",null,null],[6,"N343","","",null,null],[6,"U344","","",null,null],[6,"P344","","",null,null],[6,"N344","","",null,null],[6,"U345","","",null,null],[6,"P345","","",null,null],[6,"N345","","",null,null],[6,"U346","","",null,null],[6,"P346","","",null,null],[6,"N346","","",null,null],[6,"U347","","",null,null],[6,"P347","","",null,null],[6,"N347","","",null,null],[6,"U348","","",null,null],[6,"P348","","",null,null],[6,"N348","","",null,null],[6,"U349","","",null,null],[6,"P349","","",null,null],[6,"N349","","",null,null],[6,"U350","","",null,null],[6,"P350","","",null,null],[6,"N350","","",null,null],[6,"U351","","",null,null],[6,"P351","","",null,null],[6,"N351","","",null,null],[6,"U352","","",null,null],[6,"P352","","",null,null],[6,"N352","","",null,null],[6,"U353","","",null,null],[6,"P353","","",null,null],[6,"N353","","",null,null],[6,"U354","","",null,null],[6,"P354","","",null,null],[6,"N354","","",null,null],[6,"U355","","",null,null],[6,"P355","","",null,null],[6,"N355","","",null,null],[6,"U356","","",null,null],[6,"P356","","",null,null],[6,"N356","","",null,null],[6,"U357","","",null,null],[6,"P357","","",null,null],[6,"N357","","",null,null],[6,"U358","","",null,null],[6,"P358","","",null,null],[6,"N358","","",null,null],[6,"U359","","",null,null],[6,"P359","","",null,null],[6,"N359","","",null,null],[6,"U360","","",null,null],[6,"P360","","",null,null],[6,"N360","","",null,null],[6,"U361","","",null,null],[6,"P361","","",null,null],[6,"N361","","",null,null],[6,"U362","","",null,null],[6,"P362","","",null,null],[6,"N362","","",null,null],[6,"U363","","",null,null],[6,"P363","","",null,null],[6,"N363","","",null,null],[6,"U364","","",null,null],[6,"P364","","",null,null],[6,"N364","","",null,null],[6,"U365","","",null,null],[6,"P365","","",null,null],[6,"N365","","",null,null],[6,"U366","","",null,null],[6,"P366","","",null,null],[6,"N366","","",null,null],[6,"U367","","",null,null],[6,"P367","","",null,null],[6,"N367","","",null,null],[6,"U368","","",null,null],[6,"P368","","",null,null],[6,"N368","","",null,null],[6,"U369","","",null,null],[6,"P369","","",null,null],[6,"N369","","",null,null],[6,"U370","","",null,null],[6,"P370","","",null,null],[6,"N370","","",null,null],[6,"U371","","",null,null],[6,"P371","","",null,null],[6,"N371","","",null,null],[6,"U372","","",null,null],[6,"P372","","",null,null],[6,"N372","","",null,null],[6,"U373","","",null,null],[6,"P373","","",null,null],[6,"N373","","",null,null],[6,"U374","","",null,null],[6,"P374","","",null,null],[6,"N374","","",null,null],[6,"U375","","",null,null],[6,"P375","","",null,null],[6,"N375","","",null,null],[6,"U376","","",null,null],[6,"P376","","",null,null],[6,"N376","","",null,null],[6,"U377","","",null,null],[6,"P377","","",null,null],[6,"N377","","",null,null],[6,"U378","","",null,null],[6,"P378","","",null,null],[6,"N378","","",null,null],[6,"U379","","",null,null],[6,"P379","","",null,null],[6,"N379","","",null,null],[6,"U380","","",null,null],[6,"P380","","",null,null],[6,"N380","","",null,null],[6,"U381","","",null,null],[6,"P381","","",null,null],[6,"N381","","",null,null],[6,"U382","","",null,null],[6,"P382","","",null,null],[6,"N382","","",null,null],[6,"U383","","",null,null],[6,"P383","","",null,null],[6,"N383","","",null,null],[6,"U384","","",null,null],[6,"P384","","",null,null],[6,"N384","","",null,null],[6,"U385","","",null,null],[6,"P385","","",null,null],[6,"N385","","",null,null],[6,"U386","","",null,null],[6,"P386","","",null,null],[6,"N386","","",null,null],[6,"U387","","",null,null],[6,"P387","","",null,null],[6,"N387","","",null,null],[6,"U388","","",null,null],[6,"P388","","",null,null],[6,"N388","","",null,null],[6,"U389","","",null,null],[6,"P389","","",null,null],[6,"N389","","",null,null],[6,"U390","","",null,null],[6,"P390","","",null,null],[6,"N390","","",null,null],[6,"U391","","",null,null],[6,"P391","","",null,null],[6,"N391","","",null,null],[6,"U392","","",null,null],[6,"P392","","",null,null],[6,"N392","","",null,null],[6,"U393","","",null,null],[6,"P393","","",null,null],[6,"N393","","",null,null],[6,"U394","","",null,null],[6,"P394","","",null,null],[6,"N394","","",null,null],[6,"U395","","",null,null],[6,"P395","","",null,null],[6,"N395","","",null,null],[6,"U396","","",null,null],[6,"P396","","",null,null],[6,"N396","","",null,null],[6,"U397","","",null,null],[6,"P397","","",null,null],[6,"N397","","",null,null],[6,"U398","","",null,null],[6,"P398","","",null,null],[6,"N398","","",null,null],[6,"U399","","",null,null],[6,"P399","","",null,null],[6,"N399","","",null,null],[6,"U400","","",null,null],[6,"P400","","",null,null],[6,"N400","","",null,null],[6,"U401","","",null,null],[6,"P401","","",null,null],[6,"N401","","",null,null],[6,"U402","","",null,null],[6,"P402","","",null,null],[6,"N402","","",null,null],[6,"U403","","",null,null],[6,"P403","","",null,null],[6,"N403","","",null,null],[6,"U404","","",null,null],[6,"P404","","",null,null],[6,"N404","","",null,null],[6,"U405","","",null,null],[6,"P405","","",null,null],[6,"N405","","",null,null],[6,"U406","","",null,null],[6,"P406","","",null,null],[6,"N406","","",null,null],[6,"U407","","",null,null],[6,"P407","","",null,null],[6,"N407","","",null,null],[6,"U408","","",null,null],[6,"P408","","",null,null],[6,"N408","","",null,null],[6,"U409","","",null,null],[6,"P409","","",null,null],[6,"N409","","",null,null],[6,"U410","","",null,null],[6,"P410","","",null,null],[6,"N410","","",null,null],[6,"U411","","",null,null],[6,"P411","","",null,null],[6,"N411","","",null,null],[6,"U412","","",null,null],[6,"P412","","",null,null],[6,"N412","","",null,null],[6,"U413","","",null,null],[6,"P413","","",null,null],[6,"N413","","",null,null],[6,"U414","","",null,null],[6,"P414","","",null,null],[6,"N414","","",null,null],[6,"U415","","",null,null],[6,"P415","","",null,null],[6,"N415","","",null,null],[6,"U416","","",null,null],[6,"P416","","",null,null],[6,"N416","","",null,null],[6,"U417","","",null,null],[6,"P417","","",null,null],[6,"N417","","",null,null],[6,"U418","","",null,null],[6,"P418","","",null,null],[6,"N418","","",null,null],[6,"U419","","",null,null],[6,"P419","","",null,null],[6,"N419","","",null,null],[6,"U420","","",null,null],[6,"P420","","",null,null],[6,"N420","","",null,null],[6,"U421","","",null,null],[6,"P421","","",null,null],[6,"N421","","",null,null],[6,"U422","","",null,null],[6,"P422","","",null,null],[6,"N422","","",null,null],[6,"U423","","",null,null],[6,"P423","","",null,null],[6,"N423","","",null,null],[6,"U424","","",null,null],[6,"P424","","",null,null],[6,"N424","","",null,null],[6,"U425","","",null,null],[6,"P425","","",null,null],[6,"N425","","",null,null],[6,"U426","","",null,null],[6,"P426","","",null,null],[6,"N426","","",null,null],[6,"U427","","",null,null],[6,"P427","","",null,null],[6,"N427","","",null,null],[6,"U428","","",null,null],[6,"P428","","",null,null],[6,"N428","","",null,null],[6,"U429","","",null,null],[6,"P429","","",null,null],[6,"N429","","",null,null],[6,"U430","","",null,null],[6,"P430","","",null,null],[6,"N430","","",null,null],[6,"U431","","",null,null],[6,"P431","","",null,null],[6,"N431","","",null,null],[6,"U432","","",null,null],[6,"P432","","",null,null],[6,"N432","","",null,null],[6,"U433","","",null,null],[6,"P433","","",null,null],[6,"N433","","",null,null],[6,"U434","","",null,null],[6,"P434","","",null,null],[6,"N434","","",null,null],[6,"U435","","",null,null],[6,"P435","","",null,null],[6,"N435","","",null,null],[6,"U436","","",null,null],[6,"P436","","",null,null],[6,"N436","","",null,null],[6,"U437","","",null,null],[6,"P437","","",null,null],[6,"N437","","",null,null],[6,"U438","","",null,null],[6,"P438","","",null,null],[6,"N438","","",null,null],[6,"U439","","",null,null],[6,"P439","","",null,null],[6,"N439","","",null,null],[6,"U440","","",null,null],[6,"P440","","",null,null],[6,"N440","","",null,null],[6,"U441","","",null,null],[6,"P441","","",null,null],[6,"N441","","",null,null],[6,"U442","","",null,null],[6,"P442","","",null,null],[6,"N442","","",null,null],[6,"U443","","",null,null],[6,"P443","","",null,null],[6,"N443","","",null,null],[6,"U444","","",null,null],[6,"P444","","",null,null],[6,"N444","","",null,null],[6,"U445","","",null,null],[6,"P445","","",null,null],[6,"N445","","",null,null],[6,"U446","","",null,null],[6,"P446","","",null,null],[6,"N446","","",null,null],[6,"U447","","",null,null],[6,"P447","","",null,null],[6,"N447","","",null,null],[6,"U448","","",null,null],[6,"P448","","",null,null],[6,"N448","","",null,null],[6,"U449","","",null,null],[6,"P449","","",null,null],[6,"N449","","",null,null],[6,"U450","","",null,null],[6,"P450","","",null,null],[6,"N450","","",null,null],[6,"U451","","",null,null],[6,"P451","","",null,null],[6,"N451","","",null,null],[6,"U452","","",null,null],[6,"P452","","",null,null],[6,"N452","","",null,null],[6,"U453","","",null,null],[6,"P453","","",null,null],[6,"N453","","",null,null],[6,"U454","","",null,null],[6,"P454","","",null,null],[6,"N454","","",null,null],[6,"U455","","",null,null],[6,"P455","","",null,null],[6,"N455","","",null,null],[6,"U456","","",null,null],[6,"P456","","",null,null],[6,"N456","","",null,null],[6,"U457","","",null,null],[6,"P457","","",null,null],[6,"N457","","",null,null],[6,"U458","","",null,null],[6,"P458","","",null,null],[6,"N458","","",null,null],[6,"U459","","",null,null],[6,"P459","","",null,null],[6,"N459","","",null,null],[6,"U460","","",null,null],[6,"P460","","",null,null],[6,"N460","","",null,null],[6,"U461","","",null,null],[6,"P461","","",null,null],[6,"N461","","",null,null],[6,"U462","","",null,null],[6,"P462","","",null,null],[6,"N462","","",null,null],[6,"U463","","",null,null],[6,"P463","","",null,null],[6,"N463","","",null,null],[6,"U464","","",null,null],[6,"P464","","",null,null],[6,"N464","","",null,null],[6,"U465","","",null,null],[6,"P465","","",null,null],[6,"N465","","",null,null],[6,"U466","","",null,null],[6,"P466","","",null,null],[6,"N466","","",null,null],[6,"U467","","",null,null],[6,"P467","","",null,null],[6,"N467","","",null,null],[6,"U468","","",null,null],[6,"P468","","",null,null],[6,"N468","","",null,null],[6,"U469","","",null,null],[6,"P469","","",null,null],[6,"N469","","",null,null],[6,"U470","","",null,null],[6,"P470","","",null,null],[6,"N470","","",null,null],[6,"U471","","",null,null],[6,"P471","","",null,null],[6,"N471","","",null,null],[6,"U472","","",null,null],[6,"P472","","",null,null],[6,"N472","","",null,null],[6,"U473","","",null,null],[6,"P473","","",null,null],[6,"N473","","",null,null],[6,"U474","","",null,null],[6,"P474","","",null,null],[6,"N474","","",null,null],[6,"U475","","",null,null],[6,"P475","","",null,null],[6,"N475","","",null,null],[6,"U476","","",null,null],[6,"P476","","",null,null],[6,"N476","","",null,null],[6,"U477","","",null,null],[6,"P477","","",null,null],[6,"N477","","",null,null],[6,"U478","","",null,null],[6,"P478","","",null,null],[6,"N478","","",null,null],[6,"U479","","",null,null],[6,"P479","","",null,null],[6,"N479","","",null,null],[6,"U480","","",null,null],[6,"P480","","",null,null],[6,"N480","","",null,null],[6,"U481","","",null,null],[6,"P481","","",null,null],[6,"N481","","",null,null],[6,"U482","","",null,null],[6,"P482","","",null,null],[6,"N482","","",null,null],[6,"U483","","",null,null],[6,"P483","","",null,null],[6,"N483","","",null,null],[6,"U484","","",null,null],[6,"P484","","",null,null],[6,"N484","","",null,null],[6,"U485","","",null,null],[6,"P485","","",null,null],[6,"N485","","",null,null],[6,"U486","","",null,null],[6,"P486","","",null,null],[6,"N486","","",null,null],[6,"U487","","",null,null],[6,"P487","","",null,null],[6,"N487","","",null,null],[6,"U488","","",null,null],[6,"P488","","",null,null],[6,"N488","","",null,null],[6,"U489","","",null,null],[6,"P489","","",null,null],[6,"N489","","",null,null],[6,"U490","","",null,null],[6,"P490","","",null,null],[6,"N490","","",null,null],[6,"U491","","",null,null],[6,"P491","","",null,null],[6,"N491","","",null,null],[6,"U492","","",null,null],[6,"P492","","",null,null],[6,"N492","","",null,null],[6,"U493","","",null,null],[6,"P493","","",null,null],[6,"N493","","",null,null],[6,"U494","","",null,null],[6,"P494","","",null,null],[6,"N494","","",null,null],[6,"U495","","",null,null],[6,"P495","","",null,null],[6,"N495","","",null,null],[6,"U496","","",null,null],[6,"P496","","",null,null],[6,"N496","","",null,null],[6,"U497","","",null,null],[6,"P497","","",null,null],[6,"N497","","",null,null],[6,"U498","","",null,null],[6,"P498","","",null,null],[6,"N498","","",null,null],[6,"U499","","",null,null],[6,"P499","","",null,null],[6,"N499","","",null,null],[6,"U500","","",null,null],[6,"P500","","",null,null],[6,"N500","","",null,null],[6,"U501","","",null,null],[6,"P501","","",null,null],[6,"N501","","",null,null],[6,"U502","","",null,null],[6,"P502","","",null,null],[6,"N502","","",null,null],[6,"U503","","",null,null],[6,"P503","","",null,null],[6,"N503","","",null,null],[6,"U504","","",null,null],[6,"P504","","",null,null],[6,"N504","","",null,null],[6,"U505","","",null,null],[6,"P505","","",null,null],[6,"N505","","",null,null],[6,"U506","","",null,null],[6,"P506","","",null,null],[6,"N506","","",null,null],[6,"U507","","",null,null],[6,"P507","","",null,null],[6,"N507","","",null,null],[6,"U508","","",null,null],[6,"P508","","",null,null],[6,"N508","","",null,null],[6,"U509","","",null,null],[6,"P509","","",null,null],[6,"N509","","",null,null],[6,"U510","","",null,null],[6,"P510","","",null,null],[6,"N510","","",null,null],[6,"U511","","",null,null],[6,"P511","","",null,null],[6,"N511","","",null,null],[6,"U512","","",null,null],[6,"P512","","",null,null],[6,"N512","","",null,null],[6,"U513","","",null,null],[6,"P513","","",null,null],[6,"N513","","",null,null],[6,"U514","","",null,null],[6,"P514","","",null,null],[6,"N514","","",null,null],[6,"U515","","",null,null],[6,"P515","","",null,null],[6,"N515","","",null,null],[6,"U516","","",null,null],[6,"P516","","",null,null],[6,"N516","","",null,null],[6,"U517","","",null,null],[6,"P517","","",null,null],[6,"N517","","",null,null],[6,"U518","","",null,null],[6,"P518","","",null,null],[6,"N518","","",null,null],[6,"U519","","",null,null],[6,"P519","","",null,null],[6,"N519","","",null,null],[6,"U520","","",null,null],[6,"P520","","",null,null],[6,"N520","","",null,null],[6,"U521","","",null,null],[6,"P521","","",null,null],[6,"N521","","",null,null],[6,"U522","","",null,null],[6,"P522","","",null,null],[6,"N522","","",null,null],[6,"U523","","",null,null],[6,"P523","","",null,null],[6,"N523","","",null,null],[6,"U524","","",null,null],[6,"P524","","",null,null],[6,"N524","","",null,null],[6,"U525","","",null,null],[6,"P525","","",null,null],[6,"N525","","",null,null],[6,"U526","","",null,null],[6,"P526","","",null,null],[6,"N526","","",null,null],[6,"U527","","",null,null],[6,"P527","","",null,null],[6,"N527","","",null,null],[6,"U528","","",null,null],[6,"P528","","",null,null],[6,"N528","","",null,null],[6,"U529","","",null,null],[6,"P529","","",null,null],[6,"N529","","",null,null],[6,"U530","","",null,null],[6,"P530","","",null,null],[6,"N530","","",null,null],[6,"U531","","",null,null],[6,"P531","","",null,null],[6,"N531","","",null,null],[6,"U532","","",null,null],[6,"P532","","",null,null],[6,"N532","","",null,null],[6,"U533","","",null,null],[6,"P533","","",null,null],[6,"N533","","",null,null],[6,"U534","","",null,null],[6,"P534","","",null,null],[6,"N534","","",null,null],[6,"U535","","",null,null],[6,"P535","","",null,null],[6,"N535","","",null,null],[6,"U536","","",null,null],[6,"P536","","",null,null],[6,"N536","","",null,null],[6,"U537","","",null,null],[6,"P537","","",null,null],[6,"N537","","",null,null],[6,"U538","","",null,null],[6,"P538","","",null,null],[6,"N538","","",null,null],[6,"U539","","",null,null],[6,"P539","","",null,null],[6,"N539","","",null,null],[6,"U540","","",null,null],[6,"P540","","",null,null],[6,"N540","","",null,null],[6,"U541","","",null,null],[6,"P541","","",null,null],[6,"N541","","",null,null],[6,"U542","","",null,null],[6,"P542","","",null,null],[6,"N542","","",null,null],[6,"U543","","",null,null],[6,"P543","","",null,null],[6,"N543","","",null,null],[6,"U544","","",null,null],[6,"P544","","",null,null],[6,"N544","","",null,null],[6,"U545","","",null,null],[6,"P545","","",null,null],[6,"N545","","",null,null],[6,"U546","","",null,null],[6,"P546","","",null,null],[6,"N546","","",null,null],[6,"U547","","",null,null],[6,"P547","","",null,null],[6,"N547","","",null,null],[6,"U548","","",null,null],[6,"P548","","",null,null],[6,"N548","","",null,null],[6,"U549","","",null,null],[6,"P549","","",null,null],[6,"N549","","",null,null],[6,"U550","","",null,null],[6,"P550","","",null,null],[6,"N550","","",null,null],[6,"U551","","",null,null],[6,"P551","","",null,null],[6,"N551","","",null,null],[6,"U552","","",null,null],[6,"P552","","",null,null],[6,"N552","","",null,null],[6,"U553","","",null,null],[6,"P553","","",null,null],[6,"N553","","",null,null],[6,"U554","","",null,null],[6,"P554","","",null,null],[6,"N554","","",null,null],[6,"U555","","",null,null],[6,"P555","","",null,null],[6,"N555","","",null,null],[6,"U556","","",null,null],[6,"P556","","",null,null],[6,"N556","","",null,null],[6,"U557","","",null,null],[6,"P557","","",null,null],[6,"N557","","",null,null],[6,"U558","","",null,null],[6,"P558","","",null,null],[6,"N558","","",null,null],[6,"U559","","",null,null],[6,"P559","","",null,null],[6,"N559","","",null,null],[6,"U560","","",null,null],[6,"P560","","",null,null],[6,"N560","","",null,null],[6,"U561","","",null,null],[6,"P561","","",null,null],[6,"N561","","",null,null],[6,"U562","","",null,null],[6,"P562","","",null,null],[6,"N562","","",null,null],[6,"U563","","",null,null],[6,"P563","","",null,null],[6,"N563","","",null,null],[6,"U564","","",null,null],[6,"P564","","",null,null],[6,"N564","","",null,null],[6,"U565","","",null,null],[6,"P565","","",null,null],[6,"N565","","",null,null],[6,"U566","","",null,null],[6,"P566","","",null,null],[6,"N566","","",null,null],[6,"U567","","",null,null],[6,"P567","","",null,null],[6,"N567","","",null,null],[6,"U568","","",null,null],[6,"P568","","",null,null],[6,"N568","","",null,null],[6,"U569","","",null,null],[6,"P569","","",null,null],[6,"N569","","",null,null],[6,"U570","","",null,null],[6,"P570","","",null,null],[6,"N570","","",null,null],[6,"U571","","",null,null],[6,"P571","","",null,null],[6,"N571","","",null,null],[6,"U572","","",null,null],[6,"P572","","",null,null],[6,"N572","","",null,null],[6,"U573","","",null,null],[6,"P573","","",null,null],[6,"N573","","",null,null],[6,"U574","","",null,null],[6,"P574","","",null,null],[6,"N574","","",null,null],[6,"U575","","",null,null],[6,"P575","","",null,null],[6,"N575","","",null,null],[6,"U576","","",null,null],[6,"P576","","",null,null],[6,"N576","","",null,null],[6,"U577","","",null,null],[6,"P577","","",null,null],[6,"N577","","",null,null],[6,"U578","","",null,null],[6,"P578","","",null,null],[6,"N578","","",null,null],[6,"U579","","",null,null],[6,"P579","","",null,null],[6,"N579","","",null,null],[6,"U580","","",null,null],[6,"P580","","",null,null],[6,"N580","","",null,null],[6,"U581","","",null,null],[6,"P581","","",null,null],[6,"N581","","",null,null],[6,"U582","","",null,null],[6,"P582","","",null,null],[6,"N582","","",null,null],[6,"U583","","",null,null],[6,"P583","","",null,null],[6,"N583","","",null,null],[6,"U584","","",null,null],[6,"P584","","",null,null],[6,"N584","","",null,null],[6,"U585","","",null,null],[6,"P585","","",null,null],[6,"N585","","",null,null],[6,"U586","","",null,null],[6,"P586","","",null,null],[6,"N586","","",null,null],[6,"U587","","",null,null],[6,"P587","","",null,null],[6,"N587","","",null,null],[6,"U588","","",null,null],[6,"P588","","",null,null],[6,"N588","","",null,null],[6,"U589","","",null,null],[6,"P589","","",null,null],[6,"N589","","",null,null],[6,"U590","","",null,null],[6,"P590","","",null,null],[6,"N590","","",null,null],[6,"U591","","",null,null],[6,"P591","","",null,null],[6,"N591","","",null,null],[6,"U592","","",null,null],[6,"P592","","",null,null],[6,"N592","","",null,null],[6,"U593","","",null,null],[6,"P593","","",null,null],[6,"N593","","",null,null],[6,"U594","","",null,null],[6,"P594","","",null,null],[6,"N594","","",null,null],[6,"U595","","",null,null],[6,"P595","","",null,null],[6,"N595","","",null,null],[6,"U596","","",null,null],[6,"P596","","",null,null],[6,"N596","","",null,null],[6,"U597","","",null,null],[6,"P597","","",null,null],[6,"N597","","",null,null],[6,"U598","","",null,null],[6,"P598","","",null,null],[6,"N598","","",null,null],[6,"U599","","",null,null],[6,"P599","","",null,null],[6,"N599","","",null,null],[6,"U600","","",null,null],[6,"P600","","",null,null],[6,"N600","","",null,null],[6,"U601","","",null,null],[6,"P601","","",null,null],[6,"N601","","",null,null],[6,"U602","","",null,null],[6,"P602","","",null,null],[6,"N602","","",null,null],[6,"U603","","",null,null],[6,"P603","","",null,null],[6,"N603","","",null,null],[6,"U604","","",null,null],[6,"P604","","",null,null],[6,"N604","","",null,null],[6,"U605","","",null,null],[6,"P605","","",null,null],[6,"N605","","",null,null],[6,"U606","","",null,null],[6,"P606","","",null,null],[6,"N606","","",null,null],[6,"U607","","",null,null],[6,"P607","","",null,null],[6,"N607","","",null,null],[6,"U608","","",null,null],[6,"P608","","",null,null],[6,"N608","","",null,null],[6,"U609","","",null,null],[6,"P609","","",null,null],[6,"N609","","",null,null],[6,"U610","","",null,null],[6,"P610","","",null,null],[6,"N610","","",null,null],[6,"U611","","",null,null],[6,"P611","","",null,null],[6,"N611","","",null,null],[6,"U612","","",null,null],[6,"P612","","",null,null],[6,"N612","","",null,null],[6,"U613","","",null,null],[6,"P613","","",null,null],[6,"N613","","",null,null],[6,"U614","","",null,null],[6,"P614","","",null,null],[6,"N614","","",null,null],[6,"U615","","",null,null],[6,"P615","","",null,null],[6,"N615","","",null,null],[6,"U616","","",null,null],[6,"P616","","",null,null],[6,"N616","","",null,null],[6,"U617","","",null,null],[6,"P617","","",null,null],[6,"N617","","",null,null],[6,"U618","","",null,null],[6,"P618","","",null,null],[6,"N618","","",null,null],[6,"U619","","",null,null],[6,"P619","","",null,null],[6,"N619","","",null,null],[6,"U620","","",null,null],[6,"P620","","",null,null],[6,"N620","","",null,null],[6,"U621","","",null,null],[6,"P621","","",null,null],[6,"N621","","",null,null],[6,"U622","","",null,null],[6,"P622","","",null,null],[6,"N622","","",null,null],[6,"U623","","",null,null],[6,"P623","","",null,null],[6,"N623","","",null,null],[6,"U624","","",null,null],[6,"P624","","",null,null],[6,"N624","","",null,null],[6,"U625","","",null,null],[6,"P625","","",null,null],[6,"N625","","",null,null],[6,"U626","","",null,null],[6,"P626","","",null,null],[6,"N626","","",null,null],[6,"U627","","",null,null],[6,"P627","","",null,null],[6,"N627","","",null,null],[6,"U628","","",null,null],[6,"P628","","",null,null],[6,"N628","","",null,null],[6,"U629","","",null,null],[6,"P629","","",null,null],[6,"N629","","",null,null],[6,"U630","","",null,null],[6,"P630","","",null,null],[6,"N630","","",null,null],[6,"U631","","",null,null],[6,"P631","","",null,null],[6,"N631","","",null,null],[6,"U632","","",null,null],[6,"P632","","",null,null],[6,"N632","","",null,null],[6,"U633","","",null,null],[6,"P633","","",null,null],[6,"N633","","",null,null],[6,"U634","","",null,null],[6,"P634","","",null,null],[6,"N634","","",null,null],[6,"U635","","",null,null],[6,"P635","","",null,null],[6,"N635","","",null,null],[6,"U636","","",null,null],[6,"P636","","",null,null],[6,"N636","","",null,null],[6,"U637","","",null,null],[6,"P637","","",null,null],[6,"N637","","",null,null],[6,"U638","","",null,null],[6,"P638","","",null,null],[6,"N638","","",null,null],[6,"U639","","",null,null],[6,"P639","","",null,null],[6,"N639","","",null,null],[6,"U640","","",null,null],[6,"P640","","",null,null],[6,"N640","","",null,null],[6,"U641","","",null,null],[6,"P641","","",null,null],[6,"N641","","",null,null],[6,"U642","","",null,null],[6,"P642","","",null,null],[6,"N642","","",null,null],[6,"U643","","",null,null],[6,"P643","","",null,null],[6,"N643","","",null,null],[6,"U644","","",null,null],[6,"P644","","",null,null],[6,"N644","","",null,null],[6,"U645","","",null,null],[6,"P645","","",null,null],[6,"N645","","",null,null],[6,"U646","","",null,null],[6,"P646","","",null,null],[6,"N646","","",null,null],[6,"U647","","",null,null],[6,"P647","","",null,null],[6,"N647","","",null,null],[6,"U648","","",null,null],[6,"P648","","",null,null],[6,"N648","","",null,null],[6,"U649","","",null,null],[6,"P649","","",null,null],[6,"N649","","",null,null],[6,"U650","","",null,null],[6,"P650","","",null,null],[6,"N650","","",null,null],[6,"U651","","",null,null],[6,"P651","","",null,null],[6,"N651","","",null,null],[6,"U652","","",null,null],[6,"P652","","",null,null],[6,"N652","","",null,null],[6,"U653","","",null,null],[6,"P653","","",null,null],[6,"N653","","",null,null],[6,"U654","","",null,null],[6,"P654","","",null,null],[6,"N654","","",null,null],[6,"U655","","",null,null],[6,"P655","","",null,null],[6,"N655","","",null,null],[6,"U656","","",null,null],[6,"P656","","",null,null],[6,"N656","","",null,null],[6,"U657","","",null,null],[6,"P657","","",null,null],[6,"N657","","",null,null],[6,"U658","","",null,null],[6,"P658","","",null,null],[6,"N658","","",null,null],[6,"U659","","",null,null],[6,"P659","","",null,null],[6,"N659","","",null,null],[6,"U660","","",null,null],[6,"P660","","",null,null],[6,"N660","","",null,null],[6,"U661","","",null,null],[6,"P661","","",null,null],[6,"N661","","",null,null],[6,"U662","","",null,null],[6,"P662","","",null,null],[6,"N662","","",null,null],[6,"U663","","",null,null],[6,"P663","","",null,null],[6,"N663","","",null,null],[6,"U664","","",null,null],[6,"P664","","",null,null],[6,"N664","","",null,null],[6,"U665","","",null,null],[6,"P665","","",null,null],[6,"N665","","",null,null],[6,"U666","","",null,null],[6,"P666","","",null,null],[6,"N666","","",null,null],[6,"U667","","",null,null],[6,"P667","","",null,null],[6,"N667","","",null,null],[6,"U668","","",null,null],[6,"P668","","",null,null],[6,"N668","","",null,null],[6,"U669","","",null,null],[6,"P669","","",null,null],[6,"N669","","",null,null],[6,"U670","","",null,null],[6,"P670","","",null,null],[6,"N670","","",null,null],[6,"U671","","",null,null],[6,"P671","","",null,null],[6,"N671","","",null,null],[6,"U672","","",null,null],[6,"P672","","",null,null],[6,"N672","","",null,null],[6,"U673","","",null,null],[6,"P673","","",null,null],[6,"N673","","",null,null],[6,"U674","","",null,null],[6,"P674","","",null,null],[6,"N674","","",null,null],[6,"U675","","",null,null],[6,"P675","","",null,null],[6,"N675","","",null,null],[6,"U676","","",null,null],[6,"P676","","",null,null],[6,"N676","","",null,null],[6,"U677","","",null,null],[6,"P677","","",null,null],[6,"N677","","",null,null],[6,"U678","","",null,null],[6,"P678","","",null,null],[6,"N678","","",null,null],[6,"U679","","",null,null],[6,"P679","","",null,null],[6,"N679","","",null,null],[6,"U680","","",null,null],[6,"P680","","",null,null],[6,"N680","","",null,null],[6,"U681","","",null,null],[6,"P681","","",null,null],[6,"N681","","",null,null],[6,"U682","","",null,null],[6,"P682","","",null,null],[6,"N682","","",null,null],[6,"U683","","",null,null],[6,"P683","","",null,null],[6,"N683","","",null,null],[6,"U684","","",null,null],[6,"P684","","",null,null],[6,"N684","","",null,null],[6,"U685","","",null,null],[6,"P685","","",null,null],[6,"N685","","",null,null],[6,"U686","","",null,null],[6,"P686","","",null,null],[6,"N686","","",null,null],[6,"U687","","",null,null],[6,"P687","","",null,null],[6,"N687","","",null,null],[6,"U688","","",null,null],[6,"P688","","",null,null],[6,"N688","","",null,null],[6,"U689","","",null,null],[6,"P689","","",null,null],[6,"N689","","",null,null],[6,"U690","","",null,null],[6,"P690","","",null,null],[6,"N690","","",null,null],[6,"U691","","",null,null],[6,"P691","","",null,null],[6,"N691","","",null,null],[6,"U692","","",null,null],[6,"P692","","",null,null],[6,"N692","","",null,null],[6,"U693","","",null,null],[6,"P693","","",null,null],[6,"N693","","",null,null],[6,"U694","","",null,null],[6,"P694","","",null,null],[6,"N694","","",null,null],[6,"U695","","",null,null],[6,"P695","","",null,null],[6,"N695","","",null,null],[6,"U696","","",null,null],[6,"P696","","",null,null],[6,"N696","","",null,null],[6,"U697","","",null,null],[6,"P697","","",null,null],[6,"N697","","",null,null],[6,"U698","","",null,null],[6,"P698","","",null,null],[6,"N698","","",null,null],[6,"U699","","",null,null],[6,"P699","","",null,null],[6,"N699","","",null,null],[6,"U700","","",null,null],[6,"P700","","",null,null],[6,"N700","","",null,null],[6,"U701","","",null,null],[6,"P701","","",null,null],[6,"N701","","",null,null],[6,"U702","","",null,null],[6,"P702","","",null,null],[6,"N702","","",null,null],[6,"U703","","",null,null],[6,"P703","","",null,null],[6,"N703","","",null,null],[6,"U704","","",null,null],[6,"P704","","",null,null],[6,"N704","","",null,null],[6,"U705","","",null,null],[6,"P705","","",null,null],[6,"N705","","",null,null],[6,"U706","","",null,null],[6,"P706","","",null,null],[6,"N706","","",null,null],[6,"U707","","",null,null],[6,"P707","","",null,null],[6,"N707","","",null,null],[6,"U708","","",null,null],[6,"P708","","",null,null],[6,"N708","","",null,null],[6,"U709","","",null,null],[6,"P709","","",null,null],[6,"N709","","",null,null],[6,"U710","","",null,null],[6,"P710","","",null,null],[6,"N710","","",null,null],[6,"U711","","",null,null],[6,"P711","","",null,null],[6,"N711","","",null,null],[6,"U712","","",null,null],[6,"P712","","",null,null],[6,"N712","","",null,null],[6,"U713","","",null,null],[6,"P713","","",null,null],[6,"N713","","",null,null],[6,"U714","","",null,null],[6,"P714","","",null,null],[6,"N714","","",null,null],[6,"U715","","",null,null],[6,"P715","","",null,null],[6,"N715","","",null,null],[6,"U716","","",null,null],[6,"P716","","",null,null],[6,"N716","","",null,null],[6,"U717","","",null,null],[6,"P717","","",null,null],[6,"N717","","",null,null],[6,"U718","","",null,null],[6,"P718","","",null,null],[6,"N718","","",null,null],[6,"U719","","",null,null],[6,"P719","","",null,null],[6,"N719","","",null,null],[6,"U720","","",null,null],[6,"P720","","",null,null],[6,"N720","","",null,null],[6,"U721","","",null,null],[6,"P721","","",null,null],[6,"N721","","",null,null],[6,"U722","","",null,null],[6,"P722","","",null,null],[6,"N722","","",null,null],[6,"U723","","",null,null],[6,"P723","","",null,null],[6,"N723","","",null,null],[6,"U724","","",null,null],[6,"P724","","",null,null],[6,"N724","","",null,null],[6,"U725","","",null,null],[6,"P725","","",null,null],[6,"N725","","",null,null],[6,"U726","","",null,null],[6,"P726","","",null,null],[6,"N726","","",null,null],[6,"U727","","",null,null],[6,"P727","","",null,null],[6,"N727","","",null,null],[6,"U728","","",null,null],[6,"P728","","",null,null],[6,"N728","","",null,null],[6,"U729","","",null,null],[6,"P729","","",null,null],[6,"N729","","",null,null],[6,"U730","","",null,null],[6,"P730","","",null,null],[6,"N730","","",null,null],[6,"U731","","",null,null],[6,"P731","","",null,null],[6,"N731","","",null,null],[6,"U732","","",null,null],[6,"P732","","",null,null],[6,"N732","","",null,null],[6,"U733","","",null,null],[6,"P733","","",null,null],[6,"N733","","",null,null],[6,"U734","","",null,null],[6,"P734","","",null,null],[6,"N734","","",null,null],[6,"U735","","",null,null],[6,"P735","","",null,null],[6,"N735","","",null,null],[6,"U736","","",null,null],[6,"P736","","",null,null],[6,"N736","","",null,null],[6,"U737","","",null,null],[6,"P737","","",null,null],[6,"N737","","",null,null],[6,"U738","","",null,null],[6,"P738","","",null,null],[6,"N738","","",null,null],[6,"U739","","",null,null],[6,"P739","","",null,null],[6,"N739","","",null,null],[6,"U740","","",null,null],[6,"P740","","",null,null],[6,"N740","","",null,null],[6,"U741","","",null,null],[6,"P741","","",null,null],[6,"N741","","",null,null],[6,"U742","","",null,null],[6,"P742","","",null,null],[6,"N742","","",null,null],[6,"U743","","",null,null],[6,"P743","","",null,null],[6,"N743","","",null,null],[6,"U744","","",null,null],[6,"P744","","",null,null],[6,"N744","","",null,null],[6,"U745","","",null,null],[6,"P745","","",null,null],[6,"N745","","",null,null],[6,"U746","","",null,null],[6,"P746","","",null,null],[6,"N746","","",null,null],[6,"U747","","",null,null],[6,"P747","","",null,null],[6,"N747","","",null,null],[6,"U748","","",null,null],[6,"P748","","",null,null],[6,"N748","","",null,null],[6,"U749","","",null,null],[6,"P749","","",null,null],[6,"N749","","",null,null],[6,"U750","","",null,null],[6,"P750","","",null,null],[6,"N750","","",null,null],[6,"U751","","",null,null],[6,"P751","","",null,null],[6,"N751","","",null,null],[6,"U752","","",null,null],[6,"P752","","",null,null],[6,"N752","","",null,null],[6,"U753","","",null,null],[6,"P753","","",null,null],[6,"N753","","",null,null],[6,"U754","","",null,null],[6,"P754","","",null,null],[6,"N754","","",null,null],[6,"U755","","",null,null],[6,"P755","","",null,null],[6,"N755","","",null,null],[6,"U756","","",null,null],[6,"P756","","",null,null],[6,"N756","","",null,null],[6,"U757","","",null,null],[6,"P757","","",null,null],[6,"N757","","",null,null],[6,"U758","","",null,null],[6,"P758","","",null,null],[6,"N758","","",null,null],[6,"U759","","",null,null],[6,"P759","","",null,null],[6,"N759","","",null,null],[6,"U760","","",null,null],[6,"P760","","",null,null],[6,"N760","","",null,null],[6,"U761","","",null,null],[6,"P761","","",null,null],[6,"N761","","",null,null],[6,"U762","","",null,null],[6,"P762","","",null,null],[6,"N762","","",null,null],[6,"U763","","",null,null],[6,"P763","","",null,null],[6,"N763","","",null,null],[6,"U764","","",null,null],[6,"P764","","",null,null],[6,"N764","","",null,null],[6,"U765","","",null,null],[6,"P765","","",null,null],[6,"N765","","",null,null],[6,"U766","","",null,null],[6,"P766","","",null,null],[6,"N766","","",null,null],[6,"U767","","",null,null],[6,"P767","","",null,null],[6,"N767","","",null,null],[6,"U768","","",null,null],[6,"P768","","",null,null],[6,"N768","","",null,null],[6,"U769","","",null,null],[6,"P769","","",null,null],[6,"N769","","",null,null],[6,"U770","","",null,null],[6,"P770","","",null,null],[6,"N770","","",null,null],[6,"U771","","",null,null],[6,"P771","","",null,null],[6,"N771","","",null,null],[6,"U772","","",null,null],[6,"P772","","",null,null],[6,"N772","","",null,null],[6,"U773","","",null,null],[6,"P773","","",null,null],[6,"N773","","",null,null],[6,"U774","","",null,null],[6,"P774","","",null,null],[6,"N774","","",null,null],[6,"U775","","",null,null],[6,"P775","","",null,null],[6,"N775","","",null,null],[6,"U776","","",null,null],[6,"P776","","",null,null],[6,"N776","","",null,null],[6,"U777","","",null,null],[6,"P777","","",null,null],[6,"N777","","",null,null],[6,"U778","","",null,null],[6,"P778","","",null,null],[6,"N778","","",null,null],[6,"U779","","",null,null],[6,"P779","","",null,null],[6,"N779","","",null,null],[6,"U780","","",null,null],[6,"P780","","",null,null],[6,"N780","","",null,null],[6,"U781","","",null,null],[6,"P781","","",null,null],[6,"N781","","",null,null],[6,"U782","","",null,null],[6,"P782","","",null,null],[6,"N782","","",null,null],[6,"U783","","",null,null],[6,"P783","","",null,null],[6,"N783","","",null,null],[6,"U784","","",null,null],[6,"P784","","",null,null],[6,"N784","","",null,null],[6,"U785","","",null,null],[6,"P785","","",null,null],[6,"N785","","",null,null],[6,"U786","","",null,null],[6,"P786","","",null,null],[6,"N786","","",null,null],[6,"U787","","",null,null],[6,"P787","","",null,null],[6,"N787","","",null,null],[6,"U788","","",null,null],[6,"P788","","",null,null],[6,"N788","","",null,null],[6,"U789","","",null,null],[6,"P789","","",null,null],[6,"N789","","",null,null],[6,"U790","","",null,null],[6,"P790","","",null,null],[6,"N790","","",null,null],[6,"U791","","",null,null],[6,"P791","","",null,null],[6,"N791","","",null,null],[6,"U792","","",null,null],[6,"P792","","",null,null],[6,"N792","","",null,null],[6,"U793","","",null,null],[6,"P793","","",null,null],[6,"N793","","",null,null],[6,"U794","","",null,null],[6,"P794","","",null,null],[6,"N794","","",null,null],[6,"U795","","",null,null],[6,"P795","","",null,null],[6,"N795","","",null,null],[6,"U796","","",null,null],[6,"P796","","",null,null],[6,"N796","","",null,null],[6,"U797","","",null,null],[6,"P797","","",null,null],[6,"N797","","",null,null],[6,"U798","","",null,null],[6,"P798","","",null,null],[6,"N798","","",null,null],[6,"U799","","",null,null],[6,"P799","","",null,null],[6,"N799","","",null,null],[6,"U800","","",null,null],[6,"P800","","",null,null],[6,"N800","","",null,null],[6,"U801","","",null,null],[6,"P801","","",null,null],[6,"N801","","",null,null],[6,"U802","","",null,null],[6,"P802","","",null,null],[6,"N802","","",null,null],[6,"U803","","",null,null],[6,"P803","","",null,null],[6,"N803","","",null,null],[6,"U804","","",null,null],[6,"P804","","",null,null],[6,"N804","","",null,null],[6,"U805","","",null,null],[6,"P805","","",null,null],[6,"N805","","",null,null],[6,"U806","","",null,null],[6,"P806","","",null,null],[6,"N806","","",null,null],[6,"U807","","",null,null],[6,"P807","","",null,null],[6,"N807","","",null,null],[6,"U808","","",null,null],[6,"P808","","",null,null],[6,"N808","","",null,null],[6,"U809","","",null,null],[6,"P809","","",null,null],[6,"N809","","",null,null],[6,"U810","","",null,null],[6,"P810","","",null,null],[6,"N810","","",null,null],[6,"U811","","",null,null],[6,"P811","","",null,null],[6,"N811","","",null,null],[6,"U812","","",null,null],[6,"P812","","",null,null],[6,"N812","","",null,null],[6,"U813","","",null,null],[6,"P813","","",null,null],[6,"N813","","",null,null],[6,"U814","","",null,null],[6,"P814","","",null,null],[6,"N814","","",null,null],[6,"U815","","",null,null],[6,"P815","","",null,null],[6,"N815","","",null,null],[6,"U816","","",null,null],[6,"P816","","",null,null],[6,"N816","","",null,null],[6,"U817","","",null,null],[6,"P817","","",null,null],[6,"N817","","",null,null],[6,"U818","","",null,null],[6,"P818","","",null,null],[6,"N818","","",null,null],[6,"U819","","",null,null],[6,"P819","","",null,null],[6,"N819","","",null,null],[6,"U820","","",null,null],[6,"P820","","",null,null],[6,"N820","","",null,null],[6,"U821","","",null,null],[6,"P821","","",null,null],[6,"N821","","",null,null],[6,"U822","","",null,null],[6,"P822","","",null,null],[6,"N822","","",null,null],[6,"U823","","",null,null],[6,"P823","","",null,null],[6,"N823","","",null,null],[6,"U824","","",null,null],[6,"P824","","",null,null],[6,"N824","","",null,null],[6,"U825","","",null,null],[6,"P825","","",null,null],[6,"N825","","",null,null],[6,"U826","","",null,null],[6,"P826","","",null,null],[6,"N826","","",null,null],[6,"U827","","",null,null],[6,"P827","","",null,null],[6,"N827","","",null,null],[6,"U828","","",null,null],[6,"P828","","",null,null],[6,"N828","","",null,null],[6,"U829","","",null,null],[6,"P829","","",null,null],[6,"N829","","",null,null],[6,"U830","","",null,null],[6,"P830","","",null,null],[6,"N830","","",null,null],[6,"U831","","",null,null],[6,"P831","","",null,null],[6,"N831","","",null,null],[6,"U832","","",null,null],[6,"P832","","",null,null],[6,"N832","","",null,null],[6,"U833","","",null,null],[6,"P833","","",null,null],[6,"N833","","",null,null],[6,"U834","","",null,null],[6,"P834","","",null,null],[6,"N834","","",null,null],[6,"U835","","",null,null],[6,"P835","","",null,null],[6,"N835","","",null,null],[6,"U836","","",null,null],[6,"P836","","",null,null],[6,"N836","","",null,null],[6,"U837","","",null,null],[6,"P837","","",null,null],[6,"N837","","",null,null],[6,"U838","","",null,null],[6,"P838","","",null,null],[6,"N838","","",null,null],[6,"U839","","",null,null],[6,"P839","","",null,null],[6,"N839","","",null,null],[6,"U840","","",null,null],[6,"P840","","",null,null],[6,"N840","","",null,null],[6,"U841","","",null,null],[6,"P841","","",null,null],[6,"N841","","",null,null],[6,"U842","","",null,null],[6,"P842","","",null,null],[6,"N842","","",null,null],[6,"U843","","",null,null],[6,"P843","","",null,null],[6,"N843","","",null,null],[6,"U844","","",null,null],[6,"P844","","",null,null],[6,"N844","","",null,null],[6,"U845","","",null,null],[6,"P845","","",null,null],[6,"N845","","",null,null],[6,"U846","","",null,null],[6,"P846","","",null,null],[6,"N846","","",null,null],[6,"U847","","",null,null],[6,"P847","","",null,null],[6,"N847","","",null,null],[6,"U848","","",null,null],[6,"P848","","",null,null],[6,"N848","","",null,null],[6,"U849","","",null,null],[6,"P849","","",null,null],[6,"N849","","",null,null],[6,"U850","","",null,null],[6,"P850","","",null,null],[6,"N850","","",null,null],[6,"U851","","",null,null],[6,"P851","","",null,null],[6,"N851","","",null,null],[6,"U852","","",null,null],[6,"P852","","",null,null],[6,"N852","","",null,null],[6,"U853","","",null,null],[6,"P853","","",null,null],[6,"N853","","",null,null],[6,"U854","","",null,null],[6,"P854","","",null,null],[6,"N854","","",null,null],[6,"U855","","",null,null],[6,"P855","","",null,null],[6,"N855","","",null,null],[6,"U856","","",null,null],[6,"P856","","",null,null],[6,"N856","","",null,null],[6,"U857","","",null,null],[6,"P857","","",null,null],[6,"N857","","",null,null],[6,"U858","","",null,null],[6,"P858","","",null,null],[6,"N858","","",null,null],[6,"U859","","",null,null],[6,"P859","","",null,null],[6,"N859","","",null,null],[6,"U860","","",null,null],[6,"P860","","",null,null],[6,"N860","","",null,null],[6,"U861","","",null,null],[6,"P861","","",null,null],[6,"N861","","",null,null],[6,"U862","","",null,null],[6,"P862","","",null,null],[6,"N862","","",null,null],[6,"U863","","",null,null],[6,"P863","","",null,null],[6,"N863","","",null,null],[6,"U864","","",null,null],[6,"P864","","",null,null],[6,"N864","","",null,null],[6,"U865","","",null,null],[6,"P865","","",null,null],[6,"N865","","",null,null],[6,"U866","","",null,null],[6,"P866","","",null,null],[6,"N866","","",null,null],[6,"U867","","",null,null],[6,"P867","","",null,null],[6,"N867","","",null,null],[6,"U868","","",null,null],[6,"P868","","",null,null],[6,"N868","","",null,null],[6,"U869","","",null,null],[6,"P869","","",null,null],[6,"N869","","",null,null],[6,"U870","","",null,null],[6,"P870","","",null,null],[6,"N870","","",null,null],[6,"U871","","",null,null],[6,"P871","","",null,null],[6,"N871","","",null,null],[6,"U872","","",null,null],[6,"P872","","",null,null],[6,"N872","","",null,null],[6,"U873","","",null,null],[6,"P873","","",null,null],[6,"N873","","",null,null],[6,"U874","","",null,null],[6,"P874","","",null,null],[6,"N874","","",null,null],[6,"U875","","",null,null],[6,"P875","","",null,null],[6,"N875","","",null,null],[6,"U876","","",null,null],[6,"P876","","",null,null],[6,"N876","","",null,null],[6,"U877","","",null,null],[6,"P877","","",null,null],[6,"N877","","",null,null],[6,"U878","","",null,null],[6,"P878","","",null,null],[6,"N878","","",null,null],[6,"U879","","",null,null],[6,"P879","","",null,null],[6,"N879","","",null,null],[6,"U880","","",null,null],[6,"P880","","",null,null],[6,"N880","","",null,null],[6,"U881","","",null,null],[6,"P881","","",null,null],[6,"N881","","",null,null],[6,"U882","","",null,null],[6,"P882","","",null,null],[6,"N882","","",null,null],[6,"U883","","",null,null],[6,"P883","","",null,null],[6,"N883","","",null,null],[6,"U884","","",null,null],[6,"P884","","",null,null],[6,"N884","","",null,null],[6,"U885","","",null,null],[6,"P885","","",null,null],[6,"N885","","",null,null],[6,"U886","","",null,null],[6,"P886","","",null,null],[6,"N886","","",null,null],[6,"U887","","",null,null],[6,"P887","","",null,null],[6,"N887","","",null,null],[6,"U888","","",null,null],[6,"P888","","",null,null],[6,"N888","","",null,null],[6,"U889","","",null,null],[6,"P889","","",null,null],[6,"N889","","",null,null],[6,"U890","","",null,null],[6,"P890","","",null,null],[6,"N890","","",null,null],[6,"U891","","",null,null],[6,"P891","","",null,null],[6,"N891","","",null,null],[6,"U892","","",null,null],[6,"P892","","",null,null],[6,"N892","","",null,null],[6,"U893","","",null,null],[6,"P893","","",null,null],[6,"N893","","",null,null],[6,"U894","","",null,null],[6,"P894","","",null,null],[6,"N894","","",null,null],[6,"U895","","",null,null],[6,"P895","","",null,null],[6,"N895","","",null,null],[6,"U896","","",null,null],[6,"P896","","",null,null],[6,"N896","","",null,null],[6,"U897","","",null,null],[6,"P897","","",null,null],[6,"N897","","",null,null],[6,"U898","","",null,null],[6,"P898","","",null,null],[6,"N898","","",null,null],[6,"U899","","",null,null],[6,"P899","","",null,null],[6,"N899","","",null,null],[6,"U900","","",null,null],[6,"P900","","",null,null],[6,"N900","","",null,null],[6,"U901","","",null,null],[6,"P901","","",null,null],[6,"N901","","",null,null],[6,"U902","","",null,null],[6,"P902","","",null,null],[6,"N902","","",null,null],[6,"U903","","",null,null],[6,"P903","","",null,null],[6,"N903","","",null,null],[6,"U904","","",null,null],[6,"P904","","",null,null],[6,"N904","","",null,null],[6,"U905","","",null,null],[6,"P905","","",null,null],[6,"N905","","",null,null],[6,"U906","","",null,null],[6,"P906","","",null,null],[6,"N906","","",null,null],[6,"U907","","",null,null],[6,"P907","","",null,null],[6,"N907","","",null,null],[6,"U908","","",null,null],[6,"P908","","",null,null],[6,"N908","","",null,null],[6,"U909","","",null,null],[6,"P909","","",null,null],[6,"N909","","",null,null],[6,"U910","","",null,null],[6,"P910","","",null,null],[6,"N910","","",null,null],[6,"U911","","",null,null],[6,"P911","","",null,null],[6,"N911","","",null,null],[6,"U912","","",null,null],[6,"P912","","",null,null],[6,"N912","","",null,null],[6,"U913","","",null,null],[6,"P913","","",null,null],[6,"N913","","",null,null],[6,"U914","","",null,null],[6,"P914","","",null,null],[6,"N914","","",null,null],[6,"U915","","",null,null],[6,"P915","","",null,null],[6,"N915","","",null,null],[6,"U916","","",null,null],[6,"P916","","",null,null],[6,"N916","","",null,null],[6,"U917","","",null,null],[6,"P917","","",null,null],[6,"N917","","",null,null],[6,"U918","","",null,null],[6,"P918","","",null,null],[6,"N918","","",null,null],[6,"U919","","",null,null],[6,"P919","","",null,null],[6,"N919","","",null,null],[6,"U920","","",null,null],[6,"P920","","",null,null],[6,"N920","","",null,null],[6,"U921","","",null,null],[6,"P921","","",null,null],[6,"N921","","",null,null],[6,"U922","","",null,null],[6,"P922","","",null,null],[6,"N922","","",null,null],[6,"U923","","",null,null],[6,"P923","","",null,null],[6,"N923","","",null,null],[6,"U924","","",null,null],[6,"P924","","",null,null],[6,"N924","","",null,null],[6,"U925","","",null,null],[6,"P925","","",null,null],[6,"N925","","",null,null],[6,"U926","","",null,null],[6,"P926","","",null,null],[6,"N926","","",null,null],[6,"U927","","",null,null],[6,"P927","","",null,null],[6,"N927","","",null,null],[6,"U928","","",null,null],[6,"P928","","",null,null],[6,"N928","","",null,null],[6,"U929","","",null,null],[6,"P929","","",null,null],[6,"N929","","",null,null],[6,"U930","","",null,null],[6,"P930","","",null,null],[6,"N930","","",null,null],[6,"U931","","",null,null],[6,"P931","","",null,null],[6,"N931","","",null,null],[6,"U932","","",null,null],[6,"P932","","",null,null],[6,"N932","","",null,null],[6,"U933","","",null,null],[6,"P933","","",null,null],[6,"N933","","",null,null],[6,"U934","","",null,null],[6,"P934","","",null,null],[6,"N934","","",null,null],[6,"U935","","",null,null],[6,"P935","","",null,null],[6,"N935","","",null,null],[6,"U936","","",null,null],[6,"P936","","",null,null],[6,"N936","","",null,null],[6,"U937","","",null,null],[6,"P937","","",null,null],[6,"N937","","",null,null],[6,"U938","","",null,null],[6,"P938","","",null,null],[6,"N938","","",null,null],[6,"U939","","",null,null],[6,"P939","","",null,null],[6,"N939","","",null,null],[6,"U940","","",null,null],[6,"P940","","",null,null],[6,"N940","","",null,null],[6,"U941","","",null,null],[6,"P941","","",null,null],[6,"N941","","",null,null],[6,"U942","","",null,null],[6,"P942","","",null,null],[6,"N942","","",null,null],[6,"U943","","",null,null],[6,"P943","","",null,null],[6,"N943","","",null,null],[6,"U944","","",null,null],[6,"P944","","",null,null],[6,"N944","","",null,null],[6,"U945","","",null,null],[6,"P945","","",null,null],[6,"N945","","",null,null],[6,"U946","","",null,null],[6,"P946","","",null,null],[6,"N946","","",null,null],[6,"U947","","",null,null],[6,"P947","","",null,null],[6,"N947","","",null,null],[6,"U948","","",null,null],[6,"P948","","",null,null],[6,"N948","","",null,null],[6,"U949","","",null,null],[6,"P949","","",null,null],[6,"N949","","",null,null],[6,"U950","","",null,null],[6,"P950","","",null,null],[6,"N950","","",null,null],[6,"U951","","",null,null],[6,"P951","","",null,null],[6,"N951","","",null,null],[6,"U952","","",null,null],[6,"P952","","",null,null],[6,"N952","","",null,null],[6,"U953","","",null,null],[6,"P953","","",null,null],[6,"N953","","",null,null],[6,"U954","","",null,null],[6,"P954","","",null,null],[6,"N954","","",null,null],[6,"U955","","",null,null],[6,"P955","","",null,null],[6,"N955","","",null,null],[6,"U956","","",null,null],[6,"P956","","",null,null],[6,"N956","","",null,null],[6,"U957","","",null,null],[6,"P957","","",null,null],[6,"N957","","",null,null],[6,"U958","","",null,null],[6,"P958","","",null,null],[6,"N958","","",null,null],[6,"U959","","",null,null],[6,"P959","","",null,null],[6,"N959","","",null,null],[6,"U960","","",null,null],[6,"P960","","",null,null],[6,"N960","","",null,null],[6,"U961","","",null,null],[6,"P961","","",null,null],[6,"N961","","",null,null],[6,"U962","","",null,null],[6,"P962","","",null,null],[6,"N962","","",null,null],[6,"U963","","",null,null],[6,"P963","","",null,null],[6,"N963","","",null,null],[6,"U964","","",null,null],[6,"P964","","",null,null],[6,"N964","","",null,null],[6,"U965","","",null,null],[6,"P965","","",null,null],[6,"N965","","",null,null],[6,"U966","","",null,null],[6,"P966","","",null,null],[6,"N966","","",null,null],[6,"U967","","",null,null],[6,"P967","","",null,null],[6,"N967","","",null,null],[6,"U968","","",null,null],[6,"P968","","",null,null],[6,"N968","","",null,null],[6,"U969","","",null,null],[6,"P969","","",null,null],[6,"N969","","",null,null],[6,"U970","","",null,null],[6,"P970","","",null,null],[6,"N970","","",null,null],[6,"U971","","",null,null],[6,"P971","","",null,null],[6,"N971","","",null,null],[6,"U972","","",null,null],[6,"P972","","",null,null],[6,"N972","","",null,null],[6,"U973","","",null,null],[6,"P973","","",null,null],[6,"N973","","",null,null],[6,"U974","","",null,null],[6,"P974","","",null,null],[6,"N974","","",null,null],[6,"U975","","",null,null],[6,"P975","","",null,null],[6,"N975","","",null,null],[6,"U976","","",null,null],[6,"P976","","",null,null],[6,"N976","","",null,null],[6,"U977","","",null,null],[6,"P977","","",null,null],[6,"N977","","",null,null],[6,"U978","","",null,null],[6,"P978","","",null,null],[6,"N978","","",null,null],[6,"U979","","",null,null],[6,"P979","","",null,null],[6,"N979","","",null,null],[6,"U980","","",null,null],[6,"P980","","",null,null],[6,"N980","","",null,null],[6,"U981","","",null,null],[6,"P981","","",null,null],[6,"N981","","",null,null],[6,"U982","","",null,null],[6,"P982","","",null,null],[6,"N982","","",null,null],[6,"U983","","",null,null],[6,"P983","","",null,null],[6,"N983","","",null,null],[6,"U984","","",null,null],[6,"P984","","",null,null],[6,"N984","","",null,null],[6,"U985","","",null,null],[6,"P985","","",null,null],[6,"N985","","",null,null],[6,"U986","","",null,null],[6,"P986","","",null,null],[6,"N986","","",null,null],[6,"U987","","",null,null],[6,"P987","","",null,null],[6,"N987","","",null,null],[6,"U988","","",null,null],[6,"P988","","",null,null],[6,"N988","","",null,null],[6,"U989","","",null,null],[6,"P989","","",null,null],[6,"N989","","",null,null],[6,"U990","","",null,null],[6,"P990","","",null,null],[6,"N990","","",null,null],[6,"U991","","",null,null],[6,"P991","","",null,null],[6,"N991","","",null,null],[6,"U992","","",null,null],[6,"P992","","",null,null],[6,"N992","","",null,null],[6,"U993","","",null,null],[6,"P993","","",null,null],[6,"N993","","",null,null],[6,"U994","","",null,null],[6,"P994","","",null,null],[6,"N994","","",null,null],[6,"U995","","",null,null],[6,"P995","","",null,null],[6,"N995","","",null,null],[6,"U996","","",null,null],[6,"P996","","",null,null],[6,"N996","","",null,null],[6,"U997","","",null,null],[6,"P997","","",null,null],[6,"N997","","",null,null],[6,"U998","","",null,null],[6,"P998","","",null,null],[6,"N998","","",null,null],[6,"U999","","",null,null],[6,"P999","","",null,null],[6,"N999","","",null,null],[6,"U1000","","",null,null],[6,"P1000","","",null,null],[6,"N1000","","",null,null],[6,"U1001","","",null,null],[6,"P1001","","",null,null],[6,"N1001","","",null,null],[6,"U1002","","",null,null],[6,"P1002","","",null,null],[6,"N1002","","",null,null],[6,"U1003","","",null,null],[6,"P1003","","",null,null],[6,"N1003","","",null,null],[6,"U1004","","",null,null],[6,"P1004","","",null,null],[6,"N1004","","",null,null],[6,"U1005","","",null,null],[6,"P1005","","",null,null],[6,"N1005","","",null,null],[6,"U1006","","",null,null],[6,"P1006","","",null,null],[6,"N1006","","",null,null],[6,"U1007","","",null,null],[6,"P1007","","",null,null],[6,"N1007","","",null,null],[6,"U1008","","",null,null],[6,"P1008","","",null,null],[6,"N1008","","",null,null],[6,"U1009","","",null,null],[6,"P1009","","",null,null],[6,"N1009","","",null,null],[6,"U1010","","",null,null],[6,"P1010","","",null,null],[6,"N1010","","",null,null],[6,"U1011","","",null,null],[6,"P1011","","",null,null],[6,"N1011","","",null,null],[6,"U1012","","",null,null],[6,"P1012","","",null,null],[6,"N1012","","",null,null],[6,"U1013","","",null,null],[6,"P1013","","",null,null],[6,"N1013","","",null,null],[6,"U1014","","",null,null],[6,"P1014","","",null,null],[6,"N1014","","",null,null],[6,"U1015","","",null,null],[6,"P1015","","",null,null],[6,"N1015","","",null,null],[6,"U1016","","",null,null],[6,"P1016","","",null,null],[6,"N1016","","",null,null],[6,"U1017","","",null,null],[6,"P1017","","",null,null],[6,"N1017","","",null,null],[6,"U1018","","",null,null],[6,"P1018","","",null,null],[6,"N1018","","",null,null],[6,"U1019","","",null,null],[6,"P1019","","",null,null],[6,"N1019","","",null,null],[6,"U1020","","",null,null],[6,"P1020","","",null,null],[6,"N1020","","",null,null],[6,"U1021","","",null,null],[6,"P1021","","",null,null],[6,"N1021","","",null,null],[6,"U1022","","",null,null],[6,"P1022","","",null,null],[6,"N1022","","",null,null],[6,"U1023","","",null,null],[6,"P1023","","",null,null],[6,"N1023","","",null,null],[6,"U1024","","",null,null],[6,"P1024","","",null,null],[6,"N1024","","",null,null],[6,"U2048","","",null,null],[6,"P2048","","",null,null],[6,"N2048","","",null,null],[6,"U4096","","",null,null],[6,"P4096","","",null,null],[6,"N4096","","",null,null],[6,"U8192","","",null,null],[6,"P8192","","",null,null],[6,"N8192","","",null,null],[6,"U16384","","",null,null],[6,"P16384","","",null,null],[6,"N16384","","",null,null],[6,"U32768","","",null,null],[6,"P32768","","",null,null],[6,"N32768","","",null,null],[6,"U65536","","",null,null],[6,"P65536","","",null,null],[6,"N65536","","",null,null],[6,"U131072","","",null,null],[6,"P131072","","",null,null],[6,"N131072","","",null,null],[6,"U262144","","",null,null],[6,"P262144","","",null,null],[6,"N262144","","",null,null],[6,"U524288","","",null,null],[6,"P524288","","",null,null],[6,"N524288","","",null,null],[6,"U1048576","","",null,null],[6,"P1048576","","",null,null],[6,"N1048576","","",null,null],[6,"U2097152","","",null,null],[6,"P2097152","","",null,null],[6,"N2097152","","",null,null],[6,"U4194304","","",null,null],[6,"P4194304","","",null,null],[6,"N4194304","","",null,null],[6,"U8388608","","",null,null],[6,"P8388608","","",null,null],[6,"N8388608","","",null,null],[6,"U16777216","","",null,null],[6,"P16777216","","",null,null],[6,"N16777216","","",null,null],[6,"U33554432","","",null,null],[6,"P33554432","","",null,null],[6,"N33554432","","",null,null],[6,"U67108864","","",null,null],[6,"P67108864","","",null,null],[6,"N67108864","","",null,null],[6,"U134217728","","",null,null],[6,"P134217728","","",null,null],[6,"N134217728","","",null,null],[6,"U268435456","","",null,null],[6,"P268435456","","",null,null],[6,"N268435456","","",null,null],[6,"U536870912","","",null,null],[6,"P536870912","","",null,null],[6,"N536870912","","",null,null],[6,"U1073741824","","",null,null],[6,"P1073741824","","",null,null],[6,"N1073741824","","",null,null],[6,"U2147483648","","",null,null],[6,"P2147483648","","",null,null],[6,"N2147483648","","",null,null],[6,"U4294967296","","",null,null],[6,"P4294967296","","",null,null],[6,"N4294967296","","",null,null],[6,"U8589934592","","",null,null],[6,"P8589934592","","",null,null],[6,"N8589934592","","",null,null],[6,"U17179869184","","",null,null],[6,"P17179869184","","",null,null],[6,"N17179869184","","",null,null],[6,"U34359738368","","",null,null],[6,"P34359738368","","",null,null],[6,"N34359738368","","",null,null],[6,"U68719476736","","",null,null],[6,"P68719476736","","",null,null],[6,"N68719476736","","",null,null],[6,"U137438953472","","",null,null],[6,"P137438953472","","",null,null],[6,"N137438953472","","",null,null],[6,"U274877906944","","",null,null],[6,"P274877906944","","",null,null],[6,"N274877906944","","",null,null],[6,"U549755813888","","",null,null],[6,"P549755813888","","",null,null],[6,"N549755813888","","",null,null],[6,"U1099511627776","","",null,null],[6,"P1099511627776","","",null,null],[6,"N1099511627776","","",null,null],[6,"U2199023255552","","",null,null],[6,"P2199023255552","","",null,null],[6,"N2199023255552","","",null,null],[6,"U4398046511104","","",null,null],[6,"P4398046511104","","",null,null],[6,"N4398046511104","","",null,null],[6,"U8796093022208","","",null,null],[6,"P8796093022208","","",null,null],[6,"N8796093022208","","",null,null],[6,"U17592186044416","","",null,null],[6,"P17592186044416","","",null,null],[6,"N17592186044416","","",null,null],[6,"U35184372088832","","",null,null],[6,"P35184372088832","","",null,null],[6,"N35184372088832","","",null,null],[6,"U70368744177664","","",null,null],[6,"P70368744177664","","",null,null],[6,"N70368744177664","","",null,null],[6,"U140737488355328","","",null,null],[6,"P140737488355328","","",null,null],[6,"N140737488355328","","",null,null],[6,"U281474976710656","","",null,null],[6,"P281474976710656","","",null,null],[6,"N281474976710656","","",null,null],[6,"U562949953421312","","",null,null],[6,"P562949953421312","","",null,null],[6,"N562949953421312","","",null,null],[6,"U1125899906842624","","",null,null],[6,"P1125899906842624","","",null,null],[6,"N1125899906842624","","",null,null],[6,"U2251799813685248","","",null,null],[6,"P2251799813685248","","",null,null],[6,"N2251799813685248","","",null,null],[6,"U4503599627370496","","",null,null],[6,"P4503599627370496","","",null,null],[6,"N4503599627370496","","",null,null],[6,"U9007199254740992","","",null,null],[6,"P9007199254740992","","",null,null],[6,"N9007199254740992","","",null,null],[6,"U18014398509481984","","",null,null],[6,"P18014398509481984","","",null,null],[6,"N18014398509481984","","",null,null],[6,"U36028797018963968","","",null,null],[6,"P36028797018963968","","",null,null],[6,"N36028797018963968","","",null,null],[6,"U72057594037927936","","",null,null],[6,"P72057594037927936","","",null,null],[6,"N72057594037927936","","",null,null],[6,"U144115188075855872","","",null,null],[6,"P144115188075855872","","",null,null],[6,"N144115188075855872","","",null,null],[6,"U288230376151711744","","",null,null],[6,"P288230376151711744","","",null,null],[6,"N288230376151711744","","",null,null],[6,"U576460752303423488","","",null,null],[6,"P576460752303423488","","",null,null],[6,"N576460752303423488","","",null,null],[6,"U1152921504606846976","","",null,null],[6,"P1152921504606846976","","",null,null],[6,"N1152921504606846976","","",null,null],[6,"U2305843009213693952","","",null,null],[6,"P2305843009213693952","","",null,null],[6,"N2305843009213693952","","",null,null],[6,"U4611686018427387904","","",null,null],[6,"P4611686018427387904","","",null,null],[6,"N4611686018427387904","","",null,null],[6,"U9223372036854775808","","",null,null],[6,"U10000","","",null,null],[6,"P10000","","",null,null],[6,"N10000","","",null,null],[6,"U100000","","",null,null],[6,"P100000","","",null,null],[6,"N100000","","",null,null],[6,"U1000000","","",null,null],[6,"P1000000","","",null,null],[6,"N1000000","","",null,null],[6,"U10000000","","",null,null],[6,"P10000000","","",null,null],[6,"N10000000","","",null,null],[6,"U100000000","","",null,null],[6,"P100000000","","",null,null],[6,"N100000000","","",null,null],[6,"U1000000000","","",null,null],[6,"P1000000000","","",null,null],[6,"N1000000000","","",null,null],[6,"U10000000000","","",null,null],[6,"P10000000000","","",null,null],[6,"N10000000000","","",null,null],[6,"U100000000000","","",null,null],[6,"P100000000000","","",null,null],[6,"N100000000000","","",null,null],[6,"U1000000000000","","",null,null],[6,"P1000000000000","","",null,null],[6,"N1000000000000","","",null,null],[6,"U10000000000000","","",null,null],[6,"P10000000000000","","",null,null],[6,"N10000000000000","","",null,null],[6,"U100000000000000","","",null,null],[6,"P100000000000000","","",null,null],[6,"N100000000000000","","",null,null],[6,"U1000000000000000","","",null,null],[6,"P1000000000000000","","",null,null],[6,"N1000000000000000","","",null,null],[6,"U10000000000000000","","",null,null],[6,"P10000000000000000","","",null,null],[6,"N10000000000000000","","",null,null],[6,"U100000000000000000","","",null,null],[6,"P100000000000000000","","",null,null],[6,"N100000000000000000","","",null,null],[6,"U1000000000000000000","","",null,null],[6,"P1000000000000000000","","",null,null],[6,"N1000000000000000000","","",null,null],[6,"U10000000000000000000","","",null,null],[6,"True","typenum","",null,null],[6,"False","","",null,null],[6,"U0","","",null,null],[6,"U1","","",null,null],[6,"P1","","",null,null],[6,"N1","","",null,null],[6,"U2","","",null,null],[6,"P2","","",null,null],[6,"N2","","",null,null],[6,"U3","","",null,null],[6,"P3","","",null,null],[6,"N3","","",null,null],[6,"U4","","",null,null],[6,"P4","","",null,null],[6,"N4","","",null,null],[6,"U5","","",null,null],[6,"P5","","",null,null],[6,"N5","","",null,null],[6,"U6","","",null,null],[6,"P6","","",null,null],[6,"N6","","",null,null],[6,"U7","","",null,null],[6,"P7","","",null,null],[6,"N7","","",null,null],[6,"U8","","",null,null],[6,"P8","","",null,null],[6,"N8","","",null,null],[6,"U9","","",null,null],[6,"P9","","",null,null],[6,"N9","","",null,null],[6,"U10","","",null,null],[6,"P10","","",null,null],[6,"N10","","",null,null],[6,"U11","","",null,null],[6,"P11","","",null,null],[6,"N11","","",null,null],[6,"U12","","",null,null],[6,"P12","","",null,null],[6,"N12","","",null,null],[6,"U13","","",null,null],[6,"P13","","",null,null],[6,"N13","","",null,null],[6,"U14","","",null,null],[6,"P14","","",null,null],[6,"N14","","",null,null],[6,"U15","","",null,null],[6,"P15","","",null,null],[6,"N15","","",null,null],[6,"U16","","",null,null],[6,"P16","","",null,null],[6,"N16","","",null,null],[6,"U17","","",null,null],[6,"P17","","",null,null],[6,"N17","","",null,null],[6,"U18","","",null,null],[6,"P18","","",null,null],[6,"N18","","",null,null],[6,"U19","","",null,null],[6,"P19","","",null,null],[6,"N19","","",null,null],[6,"U20","","",null,null],[6,"P20","","",null,null],[6,"N20","","",null,null],[6,"U21","","",null,null],[6,"P21","","",null,null],[6,"N21","","",null,null],[6,"U22","","",null,null],[6,"P22","","",null,null],[6,"N22","","",null,null],[6,"U23","","",null,null],[6,"P23","","",null,null],[6,"N23","","",null,null],[6,"U24","","",null,null],[6,"P24","","",null,null],[6,"N24","","",null,null],[6,"U25","","",null,null],[6,"P25","","",null,null],[6,"N25","","",null,null],[6,"U26","","",null,null],[6,"P26","","",null,null],[6,"N26","","",null,null],[6,"U27","","",null,null],[6,"P27","","",null,null],[6,"N27","","",null,null],[6,"U28","","",null,null],[6,"P28","","",null,null],[6,"N28","","",null,null],[6,"U29","","",null,null],[6,"P29","","",null,null],[6,"N29","","",null,null],[6,"U30","","",null,null],[6,"P30","","",null,null],[6,"N30","","",null,null],[6,"U31","","",null,null],[6,"P31","","",null,null],[6,"N31","","",null,null],[6,"U32","","",null,null],[6,"P32","","",null,null],[6,"N32","","",null,null],[6,"U33","","",null,null],[6,"P33","","",null,null],[6,"N33","","",null,null],[6,"U34","","",null,null],[6,"P34","","",null,null],[6,"N34","","",null,null],[6,"U35","","",null,null],[6,"P35","","",null,null],[6,"N35","","",null,null],[6,"U36","","",null,null],[6,"P36","","",null,null],[6,"N36","","",null,null],[6,"U37","","",null,null],[6,"P37","","",null,null],[6,"N37","","",null,null],[6,"U38","","",null,null],[6,"P38","","",null,null],[6,"N38","","",null,null],[6,"U39","","",null,null],[6,"P39","","",null,null],[6,"N39","","",null,null],[6,"U40","","",null,null],[6,"P40","","",null,null],[6,"N40","","",null,null],[6,"U41","","",null,null],[6,"P41","","",null,null],[6,"N41","","",null,null],[6,"U42","","",null,null],[6,"P42","","",null,null],[6,"N42","","",null,null],[6,"U43","","",null,null],[6,"P43","","",null,null],[6,"N43","","",null,null],[6,"U44","","",null,null],[6,"P44","","",null,null],[6,"N44","","",null,null],[6,"U45","","",null,null],[6,"P45","","",null,null],[6,"N45","","",null,null],[6,"U46","","",null,null],[6,"P46","","",null,null],[6,"N46","","",null,null],[6,"U47","","",null,null],[6,"P47","","",null,null],[6,"N47","","",null,null],[6,"U48","","",null,null],[6,"P48","","",null,null],[6,"N48","","",null,null],[6,"U49","","",null,null],[6,"P49","","",null,null],[6,"N49","","",null,null],[6,"U50","","",null,null],[6,"P50","","",null,null],[6,"N50","","",null,null],[6,"U51","","",null,null],[6,"P51","","",null,null],[6,"N51","","",null,null],[6,"U52","","",null,null],[6,"P52","","",null,null],[6,"N52","","",null,null],[6,"U53","","",null,null],[6,"P53","","",null,null],[6,"N53","","",null,null],[6,"U54","","",null,null],[6,"P54","","",null,null],[6,"N54","","",null,null],[6,"U55","","",null,null],[6,"P55","","",null,null],[6,"N55","","",null,null],[6,"U56","","",null,null],[6,"P56","","",null,null],[6,"N56","","",null,null],[6,"U57","","",null,null],[6,"P57","","",null,null],[6,"N57","","",null,null],[6,"U58","","",null,null],[6,"P58","","",null,null],[6,"N58","","",null,null],[6,"U59","","",null,null],[6,"P59","","",null,null],[6,"N59","","",null,null],[6,"U60","","",null,null],[6,"P60","","",null,null],[6,"N60","","",null,null],[6,"U61","","",null,null],[6,"P61","","",null,null],[6,"N61","","",null,null],[6,"U62","","",null,null],[6,"P62","","",null,null],[6,"N62","","",null,null],[6,"U63","","",null,null],[6,"P63","","",null,null],[6,"N63","","",null,null],[6,"U64","","",null,null],[6,"P64","","",null,null],[6,"N64","","",null,null],[6,"U65","","",null,null],[6,"P65","","",null,null],[6,"N65","","",null,null],[6,"U66","","",null,null],[6,"P66","","",null,null],[6,"N66","","",null,null],[6,"U67","","",null,null],[6,"P67","","",null,null],[6,"N67","","",null,null],[6,"U68","","",null,null],[6,"P68","","",null,null],[6,"N68","","",null,null],[6,"U69","","",null,null],[6,"P69","","",null,null],[6,"N69","","",null,null],[6,"U70","","",null,null],[6,"P70","","",null,null],[6,"N70","","",null,null],[6,"U71","","",null,null],[6,"P71","","",null,null],[6,"N71","","",null,null],[6,"U72","","",null,null],[6,"P72","","",null,null],[6,"N72","","",null,null],[6,"U73","","",null,null],[6,"P73","","",null,null],[6,"N73","","",null,null],[6,"U74","","",null,null],[6,"P74","","",null,null],[6,"N74","","",null,null],[6,"U75","","",null,null],[6,"P75","","",null,null],[6,"N75","","",null,null],[6,"U76","","",null,null],[6,"P76","","",null,null],[6,"N76","","",null,null],[6,"U77","","",null,null],[6,"P77","","",null,null],[6,"N77","","",null,null],[6,"U78","","",null,null],[6,"P78","","",null,null],[6,"N78","","",null,null],[6,"U79","","",null,null],[6,"P79","","",null,null],[6,"N79","","",null,null],[6,"U80","","",null,null],[6,"P80","","",null,null],[6,"N80","","",null,null],[6,"U81","","",null,null],[6,"P81","","",null,null],[6,"N81","","",null,null],[6,"U82","","",null,null],[6,"P82","","",null,null],[6,"N82","","",null,null],[6,"U83","","",null,null],[6,"P83","","",null,null],[6,"N83","","",null,null],[6,"U84","","",null,null],[6,"P84","","",null,null],[6,"N84","","",null,null],[6,"U85","","",null,null],[6,"P85","","",null,null],[6,"N85","","",null,null],[6,"U86","","",null,null],[6,"P86","","",null,null],[6,"N86","","",null,null],[6,"U87","","",null,null],[6,"P87","","",null,null],[6,"N87","","",null,null],[6,"U88","","",null,null],[6,"P88","","",null,null],[6,"N88","","",null,null],[6,"U89","","",null,null],[6,"P89","","",null,null],[6,"N89","","",null,null],[6,"U90","","",null,null],[6,"P90","","",null,null],[6,"N90","","",null,null],[6,"U91","","",null,null],[6,"P91","","",null,null],[6,"N91","","",null,null],[6,"U92","","",null,null],[6,"P92","","",null,null],[6,"N92","","",null,null],[6,"U93","","",null,null],[6,"P93","","",null,null],[6,"N93","","",null,null],[6,"U94","","",null,null],[6,"P94","","",null,null],[6,"N94","","",null,null],[6,"U95","","",null,null],[6,"P95","","",null,null],[6,"N95","","",null,null],[6,"U96","","",null,null],[6,"P96","","",null,null],[6,"N96","","",null,null],[6,"U97","","",null,null],[6,"P97","","",null,null],[6,"N97","","",null,null],[6,"U98","","",null,null],[6,"P98","","",null,null],[6,"N98","","",null,null],[6,"U99","","",null,null],[6,"P99","","",null,null],[6,"N99","","",null,null],[6,"U100","","",null,null],[6,"P100","","",null,null],[6,"N100","","",null,null],[6,"U101","","",null,null],[6,"P101","","",null,null],[6,"N101","","",null,null],[6,"U102","","",null,null],[6,"P102","","",null,null],[6,"N102","","",null,null],[6,"U103","","",null,null],[6,"P103","","",null,null],[6,"N103","","",null,null],[6,"U104","","",null,null],[6,"P104","","",null,null],[6,"N104","","",null,null],[6,"U105","","",null,null],[6,"P105","","",null,null],[6,"N105","","",null,null],[6,"U106","","",null,null],[6,"P106","","",null,null],[6,"N106","","",null,null],[6,"U107","","",null,null],[6,"P107","","",null,null],[6,"N107","","",null,null],[6,"U108","","",null,null],[6,"P108","","",null,null],[6,"N108","","",null,null],[6,"U109","","",null,null],[6,"P109","","",null,null],[6,"N109","","",null,null],[6,"U110","","",null,null],[6,"P110","","",null,null],[6,"N110","","",null,null],[6,"U111","","",null,null],[6,"P111","","",null,null],[6,"N111","","",null,null],[6,"U112","","",null,null],[6,"P112","","",null,null],[6,"N112","","",null,null],[6,"U113","","",null,null],[6,"P113","","",null,null],[6,"N113","","",null,null],[6,"U114","","",null,null],[6,"P114","","",null,null],[6,"N114","","",null,null],[6,"U115","","",null,null],[6,"P115","","",null,null],[6,"N115","","",null,null],[6,"U116","","",null,null],[6,"P116","","",null,null],[6,"N116","","",null,null],[6,"U117","","",null,null],[6,"P117","","",null,null],[6,"N117","","",null,null],[6,"U118","","",null,null],[6,"P118","","",null,null],[6,"N118","","",null,null],[6,"U119","","",null,null],[6,"P119","","",null,null],[6,"N119","","",null,null],[6,"U120","","",null,null],[6,"P120","","",null,null],[6,"N120","","",null,null],[6,"U121","","",null,null],[6,"P121","","",null,null],[6,"N121","","",null,null],[6,"U122","","",null,null],[6,"P122","","",null,null],[6,"N122","","",null,null],[6,"U123","","",null,null],[6,"P123","","",null,null],[6,"N123","","",null,null],[6,"U124","","",null,null],[6,"P124","","",null,null],[6,"N124","","",null,null],[6,"U125","","",null,null],[6,"P125","","",null,null],[6,"N125","","",null,null],[6,"U126","","",null,null],[6,"P126","","",null,null],[6,"N126","","",null,null],[6,"U127","","",null,null],[6,"P127","","",null,null],[6,"N127","","",null,null],[6,"U128","","",null,null],[6,"P128","","",null,null],[6,"N128","","",null,null],[6,"U129","","",null,null],[6,"P129","","",null,null],[6,"N129","","",null,null],[6,"U130","","",null,null],[6,"P130","","",null,null],[6,"N130","","",null,null],[6,"U131","","",null,null],[6,"P131","","",null,null],[6,"N131","","",null,null],[6,"U132","","",null,null],[6,"P132","","",null,null],[6,"N132","","",null,null],[6,"U133","","",null,null],[6,"P133","","",null,null],[6,"N133","","",null,null],[6,"U134","","",null,null],[6,"P134","","",null,null],[6,"N134","","",null,null],[6,"U135","","",null,null],[6,"P135","","",null,null],[6,"N135","","",null,null],[6,"U136","","",null,null],[6,"P136","","",null,null],[6,"N136","","",null,null],[6,"U137","","",null,null],[6,"P137","","",null,null],[6,"N137","","",null,null],[6,"U138","","",null,null],[6,"P138","","",null,null],[6,"N138","","",null,null],[6,"U139","","",null,null],[6,"P139","","",null,null],[6,"N139","","",null,null],[6,"U140","","",null,null],[6,"P140","","",null,null],[6,"N140","","",null,null],[6,"U141","","",null,null],[6,"P141","","",null,null],[6,"N141","","",null,null],[6,"U142","","",null,null],[6,"P142","","",null,null],[6,"N142","","",null,null],[6,"U143","","",null,null],[6,"P143","","",null,null],[6,"N143","","",null,null],[6,"U144","","",null,null],[6,"P144","","",null,null],[6,"N144","","",null,null],[6,"U145","","",null,null],[6,"P145","","",null,null],[6,"N145","","",null,null],[6,"U146","","",null,null],[6,"P146","","",null,null],[6,"N146","","",null,null],[6,"U147","","",null,null],[6,"P147","","",null,null],[6,"N147","","",null,null],[6,"U148","","",null,null],[6,"P148","","",null,null],[6,"N148","","",null,null],[6,"U149","","",null,null],[6,"P149","","",null,null],[6,"N149","","",null,null],[6,"U150","","",null,null],[6,"P150","","",null,null],[6,"N150","","",null,null],[6,"U151","","",null,null],[6,"P151","","",null,null],[6,"N151","","",null,null],[6,"U152","","",null,null],[6,"P152","","",null,null],[6,"N152","","",null,null],[6,"U153","","",null,null],[6,"P153","","",null,null],[6,"N153","","",null,null],[6,"U154","","",null,null],[6,"P154","","",null,null],[6,"N154","","",null,null],[6,"U155","","",null,null],[6,"P155","","",null,null],[6,"N155","","",null,null],[6,"U156","","",null,null],[6,"P156","","",null,null],[6,"N156","","",null,null],[6,"U157","","",null,null],[6,"P157","","",null,null],[6,"N157","","",null,null],[6,"U158","","",null,null],[6,"P158","","",null,null],[6,"N158","","",null,null],[6,"U159","","",null,null],[6,"P159","","",null,null],[6,"N159","","",null,null],[6,"U160","","",null,null],[6,"P160","","",null,null],[6,"N160","","",null,null],[6,"U161","","",null,null],[6,"P161","","",null,null],[6,"N161","","",null,null],[6,"U162","","",null,null],[6,"P162","","",null,null],[6,"N162","","",null,null],[6,"U163","","",null,null],[6,"P163","","",null,null],[6,"N163","","",null,null],[6,"U164","","",null,null],[6,"P164","","",null,null],[6,"N164","","",null,null],[6,"U165","","",null,null],[6,"P165","","",null,null],[6,"N165","","",null,null],[6,"U166","","",null,null],[6,"P166","","",null,null],[6,"N166","","",null,null],[6,"U167","","",null,null],[6,"P167","","",null,null],[6,"N167","","",null,null],[6,"U168","","",null,null],[6,"P168","","",null,null],[6,"N168","","",null,null],[6,"U169","","",null,null],[6,"P169","","",null,null],[6,"N169","","",null,null],[6,"U170","","",null,null],[6,"P170","","",null,null],[6,"N170","","",null,null],[6,"U171","","",null,null],[6,"P171","","",null,null],[6,"N171","","",null,null],[6,"U172","","",null,null],[6,"P172","","",null,null],[6,"N172","","",null,null],[6,"U173","","",null,null],[6,"P173","","",null,null],[6,"N173","","",null,null],[6,"U174","","",null,null],[6,"P174","","",null,null],[6,"N174","","",null,null],[6,"U175","","",null,null],[6,"P175","","",null,null],[6,"N175","","",null,null],[6,"U176","","",null,null],[6,"P176","","",null,null],[6,"N176","","",null,null],[6,"U177","","",null,null],[6,"P177","","",null,null],[6,"N177","","",null,null],[6,"U178","","",null,null],[6,"P178","","",null,null],[6,"N178","","",null,null],[6,"U179","","",null,null],[6,"P179","","",null,null],[6,"N179","","",null,null],[6,"U180","","",null,null],[6,"P180","","",null,null],[6,"N180","","",null,null],[6,"U181","","",null,null],[6,"P181","","",null,null],[6,"N181","","",null,null],[6,"U182","","",null,null],[6,"P182","","",null,null],[6,"N182","","",null,null],[6,"U183","","",null,null],[6,"P183","","",null,null],[6,"N183","","",null,null],[6,"U184","","",null,null],[6,"P184","","",null,null],[6,"N184","","",null,null],[6,"U185","","",null,null],[6,"P185","","",null,null],[6,"N185","","",null,null],[6,"U186","","",null,null],[6,"P186","","",null,null],[6,"N186","","",null,null],[6,"U187","","",null,null],[6,"P187","","",null,null],[6,"N187","","",null,null],[6,"U188","","",null,null],[6,"P188","","",null,null],[6,"N188","","",null,null],[6,"U189","","",null,null],[6,"P189","","",null,null],[6,"N189","","",null,null],[6,"U190","","",null,null],[6,"P190","","",null,null],[6,"N190","","",null,null],[6,"U191","","",null,null],[6,"P191","","",null,null],[6,"N191","","",null,null],[6,"U192","","",null,null],[6,"P192","","",null,null],[6,"N192","","",null,null],[6,"U193","","",null,null],[6,"P193","","",null,null],[6,"N193","","",null,null],[6,"U194","","",null,null],[6,"P194","","",null,null],[6,"N194","","",null,null],[6,"U195","","",null,null],[6,"P195","","",null,null],[6,"N195","","",null,null],[6,"U196","","",null,null],[6,"P196","","",null,null],[6,"N196","","",null,null],[6,"U197","","",null,null],[6,"P197","","",null,null],[6,"N197","","",null,null],[6,"U198","","",null,null],[6,"P198","","",null,null],[6,"N198","","",null,null],[6,"U199","","",null,null],[6,"P199","","",null,null],[6,"N199","","",null,null],[6,"U200","","",null,null],[6,"P200","","",null,null],[6,"N200","","",null,null],[6,"U201","","",null,null],[6,"P201","","",null,null],[6,"N201","","",null,null],[6,"U202","","",null,null],[6,"P202","","",null,null],[6,"N202","","",null,null],[6,"U203","","",null,null],[6,"P203","","",null,null],[6,"N203","","",null,null],[6,"U204","","",null,null],[6,"P204","","",null,null],[6,"N204","","",null,null],[6,"U205","","",null,null],[6,"P205","","",null,null],[6,"N205","","",null,null],[6,"U206","","",null,null],[6,"P206","","",null,null],[6,"N206","","",null,null],[6,"U207","","",null,null],[6,"P207","","",null,null],[6,"N207","","",null,null],[6,"U208","","",null,null],[6,"P208","","",null,null],[6,"N208","","",null,null],[6,"U209","","",null,null],[6,"P209","","",null,null],[6,"N209","","",null,null],[6,"U210","","",null,null],[6,"P210","","",null,null],[6,"N210","","",null,null],[6,"U211","","",null,null],[6,"P211","","",null,null],[6,"N211","","",null,null],[6,"U212","","",null,null],[6,"P212","","",null,null],[6,"N212","","",null,null],[6,"U213","","",null,null],[6,"P213","","",null,null],[6,"N213","","",null,null],[6,"U214","","",null,null],[6,"P214","","",null,null],[6,"N214","","",null,null],[6,"U215","","",null,null],[6,"P215","","",null,null],[6,"N215","","",null,null],[6,"U216","","",null,null],[6,"P216","","",null,null],[6,"N216","","",null,null],[6,"U217","","",null,null],[6,"P217","","",null,null],[6,"N217","","",null,null],[6,"U218","","",null,null],[6,"P218","","",null,null],[6,"N218","","",null,null],[6,"U219","","",null,null],[6,"P219","","",null,null],[6,"N219","","",null,null],[6,"U220","","",null,null],[6,"P220","","",null,null],[6,"N220","","",null,null],[6,"U221","","",null,null],[6,"P221","","",null,null],[6,"N221","","",null,null],[6,"U222","","",null,null],[6,"P222","","",null,null],[6,"N222","","",null,null],[6,"U223","","",null,null],[6,"P223","","",null,null],[6,"N223","","",null,null],[6,"U224","","",null,null],[6,"P224","","",null,null],[6,"N224","","",null,null],[6,"U225","","",null,null],[6,"P225","","",null,null],[6,"N225","","",null,null],[6,"U226","","",null,null],[6,"P226","","",null,null],[6,"N226","","",null,null],[6,"U227","","",null,null],[6,"P227","","",null,null],[6,"N227","","",null,null],[6,"U228","","",null,null],[6,"P228","","",null,null],[6,"N228","","",null,null],[6,"U229","","",null,null],[6,"P229","","",null,null],[6,"N229","","",null,null],[6,"U230","","",null,null],[6,"P230","","",null,null],[6,"N230","","",null,null],[6,"U231","","",null,null],[6,"P231","","",null,null],[6,"N231","","",null,null],[6,"U232","","",null,null],[6,"P232","","",null,null],[6,"N232","","",null,null],[6,"U233","","",null,null],[6,"P233","","",null,null],[6,"N233","","",null,null],[6,"U234","","",null,null],[6,"P234","","",null,null],[6,"N234","","",null,null],[6,"U235","","",null,null],[6,"P235","","",null,null],[6,"N235","","",null,null],[6,"U236","","",null,null],[6,"P236","","",null,null],[6,"N236","","",null,null],[6,"U237","","",null,null],[6,"P237","","",null,null],[6,"N237","","",null,null],[6,"U238","","",null,null],[6,"P238","","",null,null],[6,"N238","","",null,null],[6,"U239","","",null,null],[6,"P239","","",null,null],[6,"N239","","",null,null],[6,"U240","","",null,null],[6,"P240","","",null,null],[6,"N240","","",null,null],[6,"U241","","",null,null],[6,"P241","","",null,null],[6,"N241","","",null,null],[6,"U242","","",null,null],[6,"P242","","",null,null],[6,"N242","","",null,null],[6,"U243","","",null,null],[6,"P243","","",null,null],[6,"N243","","",null,null],[6,"U244","","",null,null],[6,"P244","","",null,null],[6,"N244","","",null,null],[6,"U245","","",null,null],[6,"P245","","",null,null],[6,"N245","","",null,null],[6,"U246","","",null,null],[6,"P246","","",null,null],[6,"N246","","",null,null],[6,"U247","","",null,null],[6,"P247","","",null,null],[6,"N247","","",null,null],[6,"U248","","",null,null],[6,"P248","","",null,null],[6,"N248","","",null,null],[6,"U249","","",null,null],[6,"P249","","",null,null],[6,"N249","","",null,null],[6,"U250","","",null,null],[6,"P250","","",null,null],[6,"N250","","",null,null],[6,"U251","","",null,null],[6,"P251","","",null,null],[6,"N251","","",null,null],[6,"U252","","",null,null],[6,"P252","","",null,null],[6,"N252","","",null,null],[6,"U253","","",null,null],[6,"P253","","",null,null],[6,"N253","","",null,null],[6,"U254","","",null,null],[6,"P254","","",null,null],[6,"N254","","",null,null],[6,"U255","","",null,null],[6,"P255","","",null,null],[6,"N255","","",null,null],[6,"U256","","",null,null],[6,"P256","","",null,null],[6,"N256","","",null,null],[6,"U257","","",null,null],[6,"P257","","",null,null],[6,"N257","","",null,null],[6,"U258","","",null,null],[6,"P258","","",null,null],[6,"N258","","",null,null],[6,"U259","","",null,null],[6,"P259","","",null,null],[6,"N259","","",null,null],[6,"U260","","",null,null],[6,"P260","","",null,null],[6,"N260","","",null,null],[6,"U261","","",null,null],[6,"P261","","",null,null],[6,"N261","","",null,null],[6,"U262","","",null,null],[6,"P262","","",null,null],[6,"N262","","",null,null],[6,"U263","","",null,null],[6,"P263","","",null,null],[6,"N263","","",null,null],[6,"U264","","",null,null],[6,"P264","","",null,null],[6,"N264","","",null,null],[6,"U265","","",null,null],[6,"P265","","",null,null],[6,"N265","","",null,null],[6,"U266","","",null,null],[6,"P266","","",null,null],[6,"N266","","",null,null],[6,"U267","","",null,null],[6,"P267","","",null,null],[6,"N267","","",null,null],[6,"U268","","",null,null],[6,"P268","","",null,null],[6,"N268","","",null,null],[6,"U269","","",null,null],[6,"P269","","",null,null],[6,"N269","","",null,null],[6,"U270","","",null,null],[6,"P270","","",null,null],[6,"N270","","",null,null],[6,"U271","","",null,null],[6,"P271","","",null,null],[6,"N271","","",null,null],[6,"U272","","",null,null],[6,"P272","","",null,null],[6,"N272","","",null,null],[6,"U273","","",null,null],[6,"P273","","",null,null],[6,"N273","","",null,null],[6,"U274","","",null,null],[6,"P274","","",null,null],[6,"N274","","",null,null],[6,"U275","","",null,null],[6,"P275","","",null,null],[6,"N275","","",null,null],[6,"U276","","",null,null],[6,"P276","","",null,null],[6,"N276","","",null,null],[6,"U277","","",null,null],[6,"P277","","",null,null],[6,"N277","","",null,null],[6,"U278","","",null,null],[6,"P278","","",null,null],[6,"N278","","",null,null],[6,"U279","","",null,null],[6,"P279","","",null,null],[6,"N279","","",null,null],[6,"U280","","",null,null],[6,"P280","","",null,null],[6,"N280","","",null,null],[6,"U281","","",null,null],[6,"P281","","",null,null],[6,"N281","","",null,null],[6,"U282","","",null,null],[6,"P282","","",null,null],[6,"N282","","",null,null],[6,"U283","","",null,null],[6,"P283","","",null,null],[6,"N283","","",null,null],[6,"U284","","",null,null],[6,"P284","","",null,null],[6,"N284","","",null,null],[6,"U285","","",null,null],[6,"P285","","",null,null],[6,"N285","","",null,null],[6,"U286","","",null,null],[6,"P286","","",null,null],[6,"N286","","",null,null],[6,"U287","","",null,null],[6,"P287","","",null,null],[6,"N287","","",null,null],[6,"U288","","",null,null],[6,"P288","","",null,null],[6,"N288","","",null,null],[6,"U289","","",null,null],[6,"P289","","",null,null],[6,"N289","","",null,null],[6,"U290","","",null,null],[6,"P290","","",null,null],[6,"N290","","",null,null],[6,"U291","","",null,null],[6,"P291","","",null,null],[6,"N291","","",null,null],[6,"U292","","",null,null],[6,"P292","","",null,null],[6,"N292","","",null,null],[6,"U293","","",null,null],[6,"P293","","",null,null],[6,"N293","","",null,null],[6,"U294","","",null,null],[6,"P294","","",null,null],[6,"N294","","",null,null],[6,"U295","","",null,null],[6,"P295","","",null,null],[6,"N295","","",null,null],[6,"U296","","",null,null],[6,"P296","","",null,null],[6,"N296","","",null,null],[6,"U297","","",null,null],[6,"P297","","",null,null],[6,"N297","","",null,null],[6,"U298","","",null,null],[6,"P298","","",null,null],[6,"N298","","",null,null],[6,"U299","","",null,null],[6,"P299","","",null,null],[6,"N299","","",null,null],[6,"U300","","",null,null],[6,"P300","","",null,null],[6,"N300","","",null,null],[6,"U301","","",null,null],[6,"P301","","",null,null],[6,"N301","","",null,null],[6,"U302","","",null,null],[6,"P302","","",null,null],[6,"N302","","",null,null],[6,"U303","","",null,null],[6,"P303","","",null,null],[6,"N303","","",null,null],[6,"U304","","",null,null],[6,"P304","","",null,null],[6,"N304","","",null,null],[6,"U305","","",null,null],[6,"P305","","",null,null],[6,"N305","","",null,null],[6,"U306","","",null,null],[6,"P306","","",null,null],[6,"N306","","",null,null],[6,"U307","","",null,null],[6,"P307","","",null,null],[6,"N307","","",null,null],[6,"U308","","",null,null],[6,"P308","","",null,null],[6,"N308","","",null,null],[6,"U309","","",null,null],[6,"P309","","",null,null],[6,"N309","","",null,null],[6,"U310","","",null,null],[6,"P310","","",null,null],[6,"N310","","",null,null],[6,"U311","","",null,null],[6,"P311","","",null,null],[6,"N311","","",null,null],[6,"U312","","",null,null],[6,"P312","","",null,null],[6,"N312","","",null,null],[6,"U313","","",null,null],[6,"P313","","",null,null],[6,"N313","","",null,null],[6,"U314","","",null,null],[6,"P314","","",null,null],[6,"N314","","",null,null],[6,"U315","","",null,null],[6,"P315","","",null,null],[6,"N315","","",null,null],[6,"U316","","",null,null],[6,"P316","","",null,null],[6,"N316","","",null,null],[6,"U317","","",null,null],[6,"P317","","",null,null],[6,"N317","","",null,null],[6,"U318","","",null,null],[6,"P318","","",null,null],[6,"N318","","",null,null],[6,"U319","","",null,null],[6,"P319","","",null,null],[6,"N319","","",null,null],[6,"U320","","",null,null],[6,"P320","","",null,null],[6,"N320","","",null,null],[6,"U321","","",null,null],[6,"P321","","",null,null],[6,"N321","","",null,null],[6,"U322","","",null,null],[6,"P322","","",null,null],[6,"N322","","",null,null],[6,"U323","","",null,null],[6,"P323","","",null,null],[6,"N323","","",null,null],[6,"U324","","",null,null],[6,"P324","","",null,null],[6,"N324","","",null,null],[6,"U325","","",null,null],[6,"P325","","",null,null],[6,"N325","","",null,null],[6,"U326","","",null,null],[6,"P326","","",null,null],[6,"N326","","",null,null],[6,"U327","","",null,null],[6,"P327","","",null,null],[6,"N327","","",null,null],[6,"U328","","",null,null],[6,"P328","","",null,null],[6,"N328","","",null,null],[6,"U329","","",null,null],[6,"P329","","",null,null],[6,"N329","","",null,null],[6,"U330","","",null,null],[6,"P330","","",null,null],[6,"N330","","",null,null],[6,"U331","","",null,null],[6,"P331","","",null,null],[6,"N331","","",null,null],[6,"U332","","",null,null],[6,"P332","","",null,null],[6,"N332","","",null,null],[6,"U333","","",null,null],[6,"P333","","",null,null],[6,"N333","","",null,null],[6,"U334","","",null,null],[6,"P334","","",null,null],[6,"N334","","",null,null],[6,"U335","","",null,null],[6,"P335","","",null,null],[6,"N335","","",null,null],[6,"U336","","",null,null],[6,"P336","","",null,null],[6,"N336","","",null,null],[6,"U337","","",null,null],[6,"P337","","",null,null],[6,"N337","","",null,null],[6,"U338","","",null,null],[6,"P338","","",null,null],[6,"N338","","",null,null],[6,"U339","","",null,null],[6,"P339","","",null,null],[6,"N339","","",null,null],[6,"U340","","",null,null],[6,"P340","","",null,null],[6,"N340","","",null,null],[6,"U341","","",null,null],[6,"P341","","",null,null],[6,"N341","","",null,null],[6,"U342","","",null,null],[6,"P342","","",null,null],[6,"N342","","",null,null],[6,"U343","","",null,null],[6,"P343","","",null,null],[6,"N343","","",null,null],[6,"U344","","",null,null],[6,"P344","","",null,null],[6,"N344","","",null,null],[6,"U345","","",null,null],[6,"P345","","",null,null],[6,"N345","","",null,null],[6,"U346","","",null,null],[6,"P346","","",null,null],[6,"N346","","",null,null],[6,"U347","","",null,null],[6,"P347","","",null,null],[6,"N347","","",null,null],[6,"U348","","",null,null],[6,"P348","","",null,null],[6,"N348","","",null,null],[6,"U349","","",null,null],[6,"P349","","",null,null],[6,"N349","","",null,null],[6,"U350","","",null,null],[6,"P350","","",null,null],[6,"N350","","",null,null],[6,"U351","","",null,null],[6,"P351","","",null,null],[6,"N351","","",null,null],[6,"U352","","",null,null],[6,"P352","","",null,null],[6,"N352","","",null,null],[6,"U353","","",null,null],[6,"P353","","",null,null],[6,"N353","","",null,null],[6,"U354","","",null,null],[6,"P354","","",null,null],[6,"N354","","",null,null],[6,"U355","","",null,null],[6,"P355","","",null,null],[6,"N355","","",null,null],[6,"U356","","",null,null],[6,"P356","","",null,null],[6,"N356","","",null,null],[6,"U357","","",null,null],[6,"P357","","",null,null],[6,"N357","","",null,null],[6,"U358","","",null,null],[6,"P358","","",null,null],[6,"N358","","",null,null],[6,"U359","","",null,null],[6,"P359","","",null,null],[6,"N359","","",null,null],[6,"U360","","",null,null],[6,"P360","","",null,null],[6,"N360","","",null,null],[6,"U361","","",null,null],[6,"P361","","",null,null],[6,"N361","","",null,null],[6,"U362","","",null,null],[6,"P362","","",null,null],[6,"N362","","",null,null],[6,"U363","","",null,null],[6,"P363","","",null,null],[6,"N363","","",null,null],[6,"U364","","",null,null],[6,"P364","","",null,null],[6,"N364","","",null,null],[6,"U365","","",null,null],[6,"P365","","",null,null],[6,"N365","","",null,null],[6,"U366","","",null,null],[6,"P366","","",null,null],[6,"N366","","",null,null],[6,"U367","","",null,null],[6,"P367","","",null,null],[6,"N367","","",null,null],[6,"U368","","",null,null],[6,"P368","","",null,null],[6,"N368","","",null,null],[6,"U369","","",null,null],[6,"P369","","",null,null],[6,"N369","","",null,null],[6,"U370","","",null,null],[6,"P370","","",null,null],[6,"N370","","",null,null],[6,"U371","","",null,null],[6,"P371","","",null,null],[6,"N371","","",null,null],[6,"U372","","",null,null],[6,"P372","","",null,null],[6,"N372","","",null,null],[6,"U373","","",null,null],[6,"P373","","",null,null],[6,"N373","","",null,null],[6,"U374","","",null,null],[6,"P374","","",null,null],[6,"N374","","",null,null],[6,"U375","","",null,null],[6,"P375","","",null,null],[6,"N375","","",null,null],[6,"U376","","",null,null],[6,"P376","","",null,null],[6,"N376","","",null,null],[6,"U377","","",null,null],[6,"P377","","",null,null],[6,"N377","","",null,null],[6,"U378","","",null,null],[6,"P378","","",null,null],[6,"N378","","",null,null],[6,"U379","","",null,null],[6,"P379","","",null,null],[6,"N379","","",null,null],[6,"U380","","",null,null],[6,"P380","","",null,null],[6,"N380","","",null,null],[6,"U381","","",null,null],[6,"P381","","",null,null],[6,"N381","","",null,null],[6,"U382","","",null,null],[6,"P382","","",null,null],[6,"N382","","",null,null],[6,"U383","","",null,null],[6,"P383","","",null,null],[6,"N383","","",null,null],[6,"U384","","",null,null],[6,"P384","","",null,null],[6,"N384","","",null,null],[6,"U385","","",null,null],[6,"P385","","",null,null],[6,"N385","","",null,null],[6,"U386","","",null,null],[6,"P386","","",null,null],[6,"N386","","",null,null],[6,"U387","","",null,null],[6,"P387","","",null,null],[6,"N387","","",null,null],[6,"U388","","",null,null],[6,"P388","","",null,null],[6,"N388","","",null,null],[6,"U389","","",null,null],[6,"P389","","",null,null],[6,"N389","","",null,null],[6,"U390","","",null,null],[6,"P390","","",null,null],[6,"N390","","",null,null],[6,"U391","","",null,null],[6,"P391","","",null,null],[6,"N391","","",null,null],[6,"U392","","",null,null],[6,"P392","","",null,null],[6,"N392","","",null,null],[6,"U393","","",null,null],[6,"P393","","",null,null],[6,"N393","","",null,null],[6,"U394","","",null,null],[6,"P394","","",null,null],[6,"N394","","",null,null],[6,"U395","","",null,null],[6,"P395","","",null,null],[6,"N395","","",null,null],[6,"U396","","",null,null],[6,"P396","","",null,null],[6,"N396","","",null,null],[6,"U397","","",null,null],[6,"P397","","",null,null],[6,"N397","","",null,null],[6,"U398","","",null,null],[6,"P398","","",null,null],[6,"N398","","",null,null],[6,"U399","","",null,null],[6,"P399","","",null,null],[6,"N399","","",null,null],[6,"U400","","",null,null],[6,"P400","","",null,null],[6,"N400","","",null,null],[6,"U401","","",null,null],[6,"P401","","",null,null],[6,"N401","","",null,null],[6,"U402","","",null,null],[6,"P402","","",null,null],[6,"N402","","",null,null],[6,"U403","","",null,null],[6,"P403","","",null,null],[6,"N403","","",null,null],[6,"U404","","",null,null],[6,"P404","","",null,null],[6,"N404","","",null,null],[6,"U405","","",null,null],[6,"P405","","",null,null],[6,"N405","","",null,null],[6,"U406","","",null,null],[6,"P406","","",null,null],[6,"N406","","",null,null],[6,"U407","","",null,null],[6,"P407","","",null,null],[6,"N407","","",null,null],[6,"U408","","",null,null],[6,"P408","","",null,null],[6,"N408","","",null,null],[6,"U409","","",null,null],[6,"P409","","",null,null],[6,"N409","","",null,null],[6,"U410","","",null,null],[6,"P410","","",null,null],[6,"N410","","",null,null],[6,"U411","","",null,null],[6,"P411","","",null,null],[6,"N411","","",null,null],[6,"U412","","",null,null],[6,"P412","","",null,null],[6,"N412","","",null,null],[6,"U413","","",null,null],[6,"P413","","",null,null],[6,"N413","","",null,null],[6,"U414","","",null,null],[6,"P414","","",null,null],[6,"N414","","",null,null],[6,"U415","","",null,null],[6,"P415","","",null,null],[6,"N415","","",null,null],[6,"U416","","",null,null],[6,"P416","","",null,null],[6,"N416","","",null,null],[6,"U417","","",null,null],[6,"P417","","",null,null],[6,"N417","","",null,null],[6,"U418","","",null,null],[6,"P418","","",null,null],[6,"N418","","",null,null],[6,"U419","","",null,null],[6,"P419","","",null,null],[6,"N419","","",null,null],[6,"U420","","",null,null],[6,"P420","","",null,null],[6,"N420","","",null,null],[6,"U421","","",null,null],[6,"P421","","",null,null],[6,"N421","","",null,null],[6,"U422","","",null,null],[6,"P422","","",null,null],[6,"N422","","",null,null],[6,"U423","","",null,null],[6,"P423","","",null,null],[6,"N423","","",null,null],[6,"U424","","",null,null],[6,"P424","","",null,null],[6,"N424","","",null,null],[6,"U425","","",null,null],[6,"P425","","",null,null],[6,"N425","","",null,null],[6,"U426","","",null,null],[6,"P426","","",null,null],[6,"N426","","",null,null],[6,"U427","","",null,null],[6,"P427","","",null,null],[6,"N427","","",null,null],[6,"U428","","",null,null],[6,"P428","","",null,null],[6,"N428","","",null,null],[6,"U429","","",null,null],[6,"P429","","",null,null],[6,"N429","","",null,null],[6,"U430","","",null,null],[6,"P430","","",null,null],[6,"N430","","",null,null],[6,"U431","","",null,null],[6,"P431","","",null,null],[6,"N431","","",null,null],[6,"U432","","",null,null],[6,"P432","","",null,null],[6,"N432","","",null,null],[6,"U433","","",null,null],[6,"P433","","",null,null],[6,"N433","","",null,null],[6,"U434","","",null,null],[6,"P434","","",null,null],[6,"N434","","",null,null],[6,"U435","","",null,null],[6,"P435","","",null,null],[6,"N435","","",null,null],[6,"U436","","",null,null],[6,"P436","","",null,null],[6,"N436","","",null,null],[6,"U437","","",null,null],[6,"P437","","",null,null],[6,"N437","","",null,null],[6,"U438","","",null,null],[6,"P438","","",null,null],[6,"N438","","",null,null],[6,"U439","","",null,null],[6,"P439","","",null,null],[6,"N439","","",null,null],[6,"U440","","",null,null],[6,"P440","","",null,null],[6,"N440","","",null,null],[6,"U441","","",null,null],[6,"P441","","",null,null],[6,"N441","","",null,null],[6,"U442","","",null,null],[6,"P442","","",null,null],[6,"N442","","",null,null],[6,"U443","","",null,null],[6,"P443","","",null,null],[6,"N443","","",null,null],[6,"U444","","",null,null],[6,"P444","","",null,null],[6,"N444","","",null,null],[6,"U445","","",null,null],[6,"P445","","",null,null],[6,"N445","","",null,null],[6,"U446","","",null,null],[6,"P446","","",null,null],[6,"N446","","",null,null],[6,"U447","","",null,null],[6,"P447","","",null,null],[6,"N447","","",null,null],[6,"U448","","",null,null],[6,"P448","","",null,null],[6,"N448","","",null,null],[6,"U449","","",null,null],[6,"P449","","",null,null],[6,"N449","","",null,null],[6,"U450","","",null,null],[6,"P450","","",null,null],[6,"N450","","",null,null],[6,"U451","","",null,null],[6,"P451","","",null,null],[6,"N451","","",null,null],[6,"U452","","",null,null],[6,"P452","","",null,null],[6,"N452","","",null,null],[6,"U453","","",null,null],[6,"P453","","",null,null],[6,"N453","","",null,null],[6,"U454","","",null,null],[6,"P454","","",null,null],[6,"N454","","",null,null],[6,"U455","","",null,null],[6,"P455","","",null,null],[6,"N455","","",null,null],[6,"U456","","",null,null],[6,"P456","","",null,null],[6,"N456","","",null,null],[6,"U457","","",null,null],[6,"P457","","",null,null],[6,"N457","","",null,null],[6,"U458","","",null,null],[6,"P458","","",null,null],[6,"N458","","",null,null],[6,"U459","","",null,null],[6,"P459","","",null,null],[6,"N459","","",null,null],[6,"U460","","",null,null],[6,"P460","","",null,null],[6,"N460","","",null,null],[6,"U461","","",null,null],[6,"P461","","",null,null],[6,"N461","","",null,null],[6,"U462","","",null,null],[6,"P462","","",null,null],[6,"N462","","",null,null],[6,"U463","","",null,null],[6,"P463","","",null,null],[6,"N463","","",null,null],[6,"U464","","",null,null],[6,"P464","","",null,null],[6,"N464","","",null,null],[6,"U465","","",null,null],[6,"P465","","",null,null],[6,"N465","","",null,null],[6,"U466","","",null,null],[6,"P466","","",null,null],[6,"N466","","",null,null],[6,"U467","","",null,null],[6,"P467","","",null,null],[6,"N467","","",null,null],[6,"U468","","",null,null],[6,"P468","","",null,null],[6,"N468","","",null,null],[6,"U469","","",null,null],[6,"P469","","",null,null],[6,"N469","","",null,null],[6,"U470","","",null,null],[6,"P470","","",null,null],[6,"N470","","",null,null],[6,"U471","","",null,null],[6,"P471","","",null,null],[6,"N471","","",null,null],[6,"U472","","",null,null],[6,"P472","","",null,null],[6,"N472","","",null,null],[6,"U473","","",null,null],[6,"P473","","",null,null],[6,"N473","","",null,null],[6,"U474","","",null,null],[6,"P474","","",null,null],[6,"N474","","",null,null],[6,"U475","","",null,null],[6,"P475","","",null,null],[6,"N475","","",null,null],[6,"U476","","",null,null],[6,"P476","","",null,null],[6,"N476","","",null,null],[6,"U477","","",null,null],[6,"P477","","",null,null],[6,"N477","","",null,null],[6,"U478","","",null,null],[6,"P478","","",null,null],[6,"N478","","",null,null],[6,"U479","","",null,null],[6,"P479","","",null,null],[6,"N479","","",null,null],[6,"U480","","",null,null],[6,"P480","","",null,null],[6,"N480","","",null,null],[6,"U481","","",null,null],[6,"P481","","",null,null],[6,"N481","","",null,null],[6,"U482","","",null,null],[6,"P482","","",null,null],[6,"N482","","",null,null],[6,"U483","","",null,null],[6,"P483","","",null,null],[6,"N483","","",null,null],[6,"U484","","",null,null],[6,"P484","","",null,null],[6,"N484","","",null,null],[6,"U485","","",null,null],[6,"P485","","",null,null],[6,"N485","","",null,null],[6,"U486","","",null,null],[6,"P486","","",null,null],[6,"N486","","",null,null],[6,"U487","","",null,null],[6,"P487","","",null,null],[6,"N487","","",null,null],[6,"U488","","",null,null],[6,"P488","","",null,null],[6,"N488","","",null,null],[6,"U489","","",null,null],[6,"P489","","",null,null],[6,"N489","","",null,null],[6,"U490","","",null,null],[6,"P490","","",null,null],[6,"N490","","",null,null],[6,"U491","","",null,null],[6,"P491","","",null,null],[6,"N491","","",null,null],[6,"U492","","",null,null],[6,"P492","","",null,null],[6,"N492","","",null,null],[6,"U493","","",null,null],[6,"P493","","",null,null],[6,"N493","","",null,null],[6,"U494","","",null,null],[6,"P494","","",null,null],[6,"N494","","",null,null],[6,"U495","","",null,null],[6,"P495","","",null,null],[6,"N495","","",null,null],[6,"U496","","",null,null],[6,"P496","","",null,null],[6,"N496","","",null,null],[6,"U497","","",null,null],[6,"P497","","",null,null],[6,"N497","","",null,null],[6,"U498","","",null,null],[6,"P498","","",null,null],[6,"N498","","",null,null],[6,"U499","","",null,null],[6,"P499","","",null,null],[6,"N499","","",null,null],[6,"U500","","",null,null],[6,"P500","","",null,null],[6,"N500","","",null,null],[6,"U501","","",null,null],[6,"P501","","",null,null],[6,"N501","","",null,null],[6,"U502","","",null,null],[6,"P502","","",null,null],[6,"N502","","",null,null],[6,"U503","","",null,null],[6,"P503","","",null,null],[6,"N503","","",null,null],[6,"U504","","",null,null],[6,"P504","","",null,null],[6,"N504","","",null,null],[6,"U505","","",null,null],[6,"P505","","",null,null],[6,"N505","","",null,null],[6,"U506","","",null,null],[6,"P506","","",null,null],[6,"N506","","",null,null],[6,"U507","","",null,null],[6,"P507","","",null,null],[6,"N507","","",null,null],[6,"U508","","",null,null],[6,"P508","","",null,null],[6,"N508","","",null,null],[6,"U509","","",null,null],[6,"P509","","",null,null],[6,"N509","","",null,null],[6,"U510","","",null,null],[6,"P510","","",null,null],[6,"N510","","",null,null],[6,"U511","","",null,null],[6,"P511","","",null,null],[6,"N511","","",null,null],[6,"U512","","",null,null],[6,"P512","","",null,null],[6,"N512","","",null,null],[6,"U513","","",null,null],[6,"P513","","",null,null],[6,"N513","","",null,null],[6,"U514","","",null,null],[6,"P514","","",null,null],[6,"N514","","",null,null],[6,"U515","","",null,null],[6,"P515","","",null,null],[6,"N515","","",null,null],[6,"U516","","",null,null],[6,"P516","","",null,null],[6,"N516","","",null,null],[6,"U517","","",null,null],[6,"P517","","",null,null],[6,"N517","","",null,null],[6,"U518","","",null,null],[6,"P518","","",null,null],[6,"N518","","",null,null],[6,"U519","","",null,null],[6,"P519","","",null,null],[6,"N519","","",null,null],[6,"U520","","",null,null],[6,"P520","","",null,null],[6,"N520","","",null,null],[6,"U521","","",null,null],[6,"P521","","",null,null],[6,"N521","","",null,null],[6,"U522","","",null,null],[6,"P522","","",null,null],[6,"N522","","",null,null],[6,"U523","","",null,null],[6,"P523","","",null,null],[6,"N523","","",null,null],[6,"U524","","",null,null],[6,"P524","","",null,null],[6,"N524","","",null,null],[6,"U525","","",null,null],[6,"P525","","",null,null],[6,"N525","","",null,null],[6,"U526","","",null,null],[6,"P526","","",null,null],[6,"N526","","",null,null],[6,"U527","","",null,null],[6,"P527","","",null,null],[6,"N527","","",null,null],[6,"U528","","",null,null],[6,"P528","","",null,null],[6,"N528","","",null,null],[6,"U529","","",null,null],[6,"P529","","",null,null],[6,"N529","","",null,null],[6,"U530","","",null,null],[6,"P530","","",null,null],[6,"N530","","",null,null],[6,"U531","","",null,null],[6,"P531","","",null,null],[6,"N531","","",null,null],[6,"U532","","",null,null],[6,"P532","","",null,null],[6,"N532","","",null,null],[6,"U533","","",null,null],[6,"P533","","",null,null],[6,"N533","","",null,null],[6,"U534","","",null,null],[6,"P534","","",null,null],[6,"N534","","",null,null],[6,"U535","","",null,null],[6,"P535","","",null,null],[6,"N535","","",null,null],[6,"U536","","",null,null],[6,"P536","","",null,null],[6,"N536","","",null,null],[6,"U537","","",null,null],[6,"P537","","",null,null],[6,"N537","","",null,null],[6,"U538","","",null,null],[6,"P538","","",null,null],[6,"N538","","",null,null],[6,"U539","","",null,null],[6,"P539","","",null,null],[6,"N539","","",null,null],[6,"U540","","",null,null],[6,"P540","","",null,null],[6,"N540","","",null,null],[6,"U541","","",null,null],[6,"P541","","",null,null],[6,"N541","","",null,null],[6,"U542","","",null,null],[6,"P542","","",null,null],[6,"N542","","",null,null],[6,"U543","","",null,null],[6,"P543","","",null,null],[6,"N543","","",null,null],[6,"U544","","",null,null],[6,"P544","","",null,null],[6,"N544","","",null,null],[6,"U545","","",null,null],[6,"P545","","",null,null],[6,"N545","","",null,null],[6,"U546","","",null,null],[6,"P546","","",null,null],[6,"N546","","",null,null],[6,"U547","","",null,null],[6,"P547","","",null,null],[6,"N547","","",null,null],[6,"U548","","",null,null],[6,"P548","","",null,null],[6,"N548","","",null,null],[6,"U549","","",null,null],[6,"P549","","",null,null],[6,"N549","","",null,null],[6,"U550","","",null,null],[6,"P550","","",null,null],[6,"N550","","",null,null],[6,"U551","","",null,null],[6,"P551","","",null,null],[6,"N551","","",null,null],[6,"U552","","",null,null],[6,"P552","","",null,null],[6,"N552","","",null,null],[6,"U553","","",null,null],[6,"P553","","",null,null],[6,"N553","","",null,null],[6,"U554","","",null,null],[6,"P554","","",null,null],[6,"N554","","",null,null],[6,"U555","","",null,null],[6,"P555","","",null,null],[6,"N555","","",null,null],[6,"U556","","",null,null],[6,"P556","","",null,null],[6,"N556","","",null,null],[6,"U557","","",null,null],[6,"P557","","",null,null],[6,"N557","","",null,null],[6,"U558","","",null,null],[6,"P558","","",null,null],[6,"N558","","",null,null],[6,"U559","","",null,null],[6,"P559","","",null,null],[6,"N559","","",null,null],[6,"U560","","",null,null],[6,"P560","","",null,null],[6,"N560","","",null,null],[6,"U561","","",null,null],[6,"P561","","",null,null],[6,"N561","","",null,null],[6,"U562","","",null,null],[6,"P562","","",null,null],[6,"N562","","",null,null],[6,"U563","","",null,null],[6,"P563","","",null,null],[6,"N563","","",null,null],[6,"U564","","",null,null],[6,"P564","","",null,null],[6,"N564","","",null,null],[6,"U565","","",null,null],[6,"P565","","",null,null],[6,"N565","","",null,null],[6,"U566","","",null,null],[6,"P566","","",null,null],[6,"N566","","",null,null],[6,"U567","","",null,null],[6,"P567","","",null,null],[6,"N567","","",null,null],[6,"U568","","",null,null],[6,"P568","","",null,null],[6,"N568","","",null,null],[6,"U569","","",null,null],[6,"P569","","",null,null],[6,"N569","","",null,null],[6,"U570","","",null,null],[6,"P570","","",null,null],[6,"N570","","",null,null],[6,"U571","","",null,null],[6,"P571","","",null,null],[6,"N571","","",null,null],[6,"U572","","",null,null],[6,"P572","","",null,null],[6,"N572","","",null,null],[6,"U573","","",null,null],[6,"P573","","",null,null],[6,"N573","","",null,null],[6,"U574","","",null,null],[6,"P574","","",null,null],[6,"N574","","",null,null],[6,"U575","","",null,null],[6,"P575","","",null,null],[6,"N575","","",null,null],[6,"U576","","",null,null],[6,"P576","","",null,null],[6,"N576","","",null,null],[6,"U577","","",null,null],[6,"P577","","",null,null],[6,"N577","","",null,null],[6,"U578","","",null,null],[6,"P578","","",null,null],[6,"N578","","",null,null],[6,"U579","","",null,null],[6,"P579","","",null,null],[6,"N579","","",null,null],[6,"U580","","",null,null],[6,"P580","","",null,null],[6,"N580","","",null,null],[6,"U581","","",null,null],[6,"P581","","",null,null],[6,"N581","","",null,null],[6,"U582","","",null,null],[6,"P582","","",null,null],[6,"N582","","",null,null],[6,"U583","","",null,null],[6,"P583","","",null,null],[6,"N583","","",null,null],[6,"U584","","",null,null],[6,"P584","","",null,null],[6,"N584","","",null,null],[6,"U585","","",null,null],[6,"P585","","",null,null],[6,"N585","","",null,null],[6,"U586","","",null,null],[6,"P586","","",null,null],[6,"N586","","",null,null],[6,"U587","","",null,null],[6,"P587","","",null,null],[6,"N587","","",null,null],[6,"U588","","",null,null],[6,"P588","","",null,null],[6,"N588","","",null,null],[6,"U589","","",null,null],[6,"P589","","",null,null],[6,"N589","","",null,null],[6,"U590","","",null,null],[6,"P590","","",null,null],[6,"N590","","",null,null],[6,"U591","","",null,null],[6,"P591","","",null,null],[6,"N591","","",null,null],[6,"U592","","",null,null],[6,"P592","","",null,null],[6,"N592","","",null,null],[6,"U593","","",null,null],[6,"P593","","",null,null],[6,"N593","","",null,null],[6,"U594","","",null,null],[6,"P594","","",null,null],[6,"N594","","",null,null],[6,"U595","","",null,null],[6,"P595","","",null,null],[6,"N595","","",null,null],[6,"U596","","",null,null],[6,"P596","","",null,null],[6,"N596","","",null,null],[6,"U597","","",null,null],[6,"P597","","",null,null],[6,"N597","","",null,null],[6,"U598","","",null,null],[6,"P598","","",null,null],[6,"N598","","",null,null],[6,"U599","","",null,null],[6,"P599","","",null,null],[6,"N599","","",null,null],[6,"U600","","",null,null],[6,"P600","","",null,null],[6,"N600","","",null,null],[6,"U601","","",null,null],[6,"P601","","",null,null],[6,"N601","","",null,null],[6,"U602","","",null,null],[6,"P602","","",null,null],[6,"N602","","",null,null],[6,"U603","","",null,null],[6,"P603","","",null,null],[6,"N603","","",null,null],[6,"U604","","",null,null],[6,"P604","","",null,null],[6,"N604","","",null,null],[6,"U605","","",null,null],[6,"P605","","",null,null],[6,"N605","","",null,null],[6,"U606","","",null,null],[6,"P606","","",null,null],[6,"N606","","",null,null],[6,"U607","","",null,null],[6,"P607","","",null,null],[6,"N607","","",null,null],[6,"U608","","",null,null],[6,"P608","","",null,null],[6,"N608","","",null,null],[6,"U609","","",null,null],[6,"P609","","",null,null],[6,"N609","","",null,null],[6,"U610","","",null,null],[6,"P610","","",null,null],[6,"N610","","",null,null],[6,"U611","","",null,null],[6,"P611","","",null,null],[6,"N611","","",null,null],[6,"U612","","",null,null],[6,"P612","","",null,null],[6,"N612","","",null,null],[6,"U613","","",null,null],[6,"P613","","",null,null],[6,"N613","","",null,null],[6,"U614","","",null,null],[6,"P614","","",null,null],[6,"N614","","",null,null],[6,"U615","","",null,null],[6,"P615","","",null,null],[6,"N615","","",null,null],[6,"U616","","",null,null],[6,"P616","","",null,null],[6,"N616","","",null,null],[6,"U617","","",null,null],[6,"P617","","",null,null],[6,"N617","","",null,null],[6,"U618","","",null,null],[6,"P618","","",null,null],[6,"N618","","",null,null],[6,"U619","","",null,null],[6,"P619","","",null,null],[6,"N619","","",null,null],[6,"U620","","",null,null],[6,"P620","","",null,null],[6,"N620","","",null,null],[6,"U621","","",null,null],[6,"P621","","",null,null],[6,"N621","","",null,null],[6,"U622","","",null,null],[6,"P622","","",null,null],[6,"N622","","",null,null],[6,"U623","","",null,null],[6,"P623","","",null,null],[6,"N623","","",null,null],[6,"U624","","",null,null],[6,"P624","","",null,null],[6,"N624","","",null,null],[6,"U625","","",null,null],[6,"P625","","",null,null],[6,"N625","","",null,null],[6,"U626","","",null,null],[6,"P626","","",null,null],[6,"N626","","",null,null],[6,"U627","","",null,null],[6,"P627","","",null,null],[6,"N627","","",null,null],[6,"U628","","",null,null],[6,"P628","","",null,null],[6,"N628","","",null,null],[6,"U629","","",null,null],[6,"P629","","",null,null],[6,"N629","","",null,null],[6,"U630","","",null,null],[6,"P630","","",null,null],[6,"N630","","",null,null],[6,"U631","","",null,null],[6,"P631","","",null,null],[6,"N631","","",null,null],[6,"U632","","",null,null],[6,"P632","","",null,null],[6,"N632","","",null,null],[6,"U633","","",null,null],[6,"P633","","",null,null],[6,"N633","","",null,null],[6,"U634","","",null,null],[6,"P634","","",null,null],[6,"N634","","",null,null],[6,"U635","","",null,null],[6,"P635","","",null,null],[6,"N635","","",null,null],[6,"U636","","",null,null],[6,"P636","","",null,null],[6,"N636","","",null,null],[6,"U637","","",null,null],[6,"P637","","",null,null],[6,"N637","","",null,null],[6,"U638","","",null,null],[6,"P638","","",null,null],[6,"N638","","",null,null],[6,"U639","","",null,null],[6,"P639","","",null,null],[6,"N639","","",null,null],[6,"U640","","",null,null],[6,"P640","","",null,null],[6,"N640","","",null,null],[6,"U641","","",null,null],[6,"P641","","",null,null],[6,"N641","","",null,null],[6,"U642","","",null,null],[6,"P642","","",null,null],[6,"N642","","",null,null],[6,"U643","","",null,null],[6,"P643","","",null,null],[6,"N643","","",null,null],[6,"U644","","",null,null],[6,"P644","","",null,null],[6,"N644","","",null,null],[6,"U645","","",null,null],[6,"P645","","",null,null],[6,"N645","","",null,null],[6,"U646","","",null,null],[6,"P646","","",null,null],[6,"N646","","",null,null],[6,"U647","","",null,null],[6,"P647","","",null,null],[6,"N647","","",null,null],[6,"U648","","",null,null],[6,"P648","","",null,null],[6,"N648","","",null,null],[6,"U649","","",null,null],[6,"P649","","",null,null],[6,"N649","","",null,null],[6,"U650","","",null,null],[6,"P650","","",null,null],[6,"N650","","",null,null],[6,"U651","","",null,null],[6,"P651","","",null,null],[6,"N651","","",null,null],[6,"U652","","",null,null],[6,"P652","","",null,null],[6,"N652","","",null,null],[6,"U653","","",null,null],[6,"P653","","",null,null],[6,"N653","","",null,null],[6,"U654","","",null,null],[6,"P654","","",null,null],[6,"N654","","",null,null],[6,"U655","","",null,null],[6,"P655","","",null,null],[6,"N655","","",null,null],[6,"U656","","",null,null],[6,"P656","","",null,null],[6,"N656","","",null,null],[6,"U657","","",null,null],[6,"P657","","",null,null],[6,"N657","","",null,null],[6,"U658","","",null,null],[6,"P658","","",null,null],[6,"N658","","",null,null],[6,"U659","","",null,null],[6,"P659","","",null,null],[6,"N659","","",null,null],[6,"U660","","",null,null],[6,"P660","","",null,null],[6,"N660","","",null,null],[6,"U661","","",null,null],[6,"P661","","",null,null],[6,"N661","","",null,null],[6,"U662","","",null,null],[6,"P662","","",null,null],[6,"N662","","",null,null],[6,"U663","","",null,null],[6,"P663","","",null,null],[6,"N663","","",null,null],[6,"U664","","",null,null],[6,"P664","","",null,null],[6,"N664","","",null,null],[6,"U665","","",null,null],[6,"P665","","",null,null],[6,"N665","","",null,null],[6,"U666","","",null,null],[6,"P666","","",null,null],[6,"N666","","",null,null],[6,"U667","","",null,null],[6,"P667","","",null,null],[6,"N667","","",null,null],[6,"U668","","",null,null],[6,"P668","","",null,null],[6,"N668","","",null,null],[6,"U669","","",null,null],[6,"P669","","",null,null],[6,"N669","","",null,null],[6,"U670","","",null,null],[6,"P670","","",null,null],[6,"N670","","",null,null],[6,"U671","","",null,null],[6,"P671","","",null,null],[6,"N671","","",null,null],[6,"U672","","",null,null],[6,"P672","","",null,null],[6,"N672","","",null,null],[6,"U673","","",null,null],[6,"P673","","",null,null],[6,"N673","","",null,null],[6,"U674","","",null,null],[6,"P674","","",null,null],[6,"N674","","",null,null],[6,"U675","","",null,null],[6,"P675","","",null,null],[6,"N675","","",null,null],[6,"U676","","",null,null],[6,"P676","","",null,null],[6,"N676","","",null,null],[6,"U677","","",null,null],[6,"P677","","",null,null],[6,"N677","","",null,null],[6,"U678","","",null,null],[6,"P678","","",null,null],[6,"N678","","",null,null],[6,"U679","","",null,null],[6,"P679","","",null,null],[6,"N679","","",null,null],[6,"U680","","",null,null],[6,"P680","","",null,null],[6,"N680","","",null,null],[6,"U681","","",null,null],[6,"P681","","",null,null],[6,"N681","","",null,null],[6,"U682","","",null,null],[6,"P682","","",null,null],[6,"N682","","",null,null],[6,"U683","","",null,null],[6,"P683","","",null,null],[6,"N683","","",null,null],[6,"U684","","",null,null],[6,"P684","","",null,null],[6,"N684","","",null,null],[6,"U685","","",null,null],[6,"P685","","",null,null],[6,"N685","","",null,null],[6,"U686","","",null,null],[6,"P686","","",null,null],[6,"N686","","",null,null],[6,"U687","","",null,null],[6,"P687","","",null,null],[6,"N687","","",null,null],[6,"U688","","",null,null],[6,"P688","","",null,null],[6,"N688","","",null,null],[6,"U689","","",null,null],[6,"P689","","",null,null],[6,"N689","","",null,null],[6,"U690","","",null,null],[6,"P690","","",null,null],[6,"N690","","",null,null],[6,"U691","","",null,null],[6,"P691","","",null,null],[6,"N691","","",null,null],[6,"U692","","",null,null],[6,"P692","","",null,null],[6,"N692","","",null,null],[6,"U693","","",null,null],[6,"P693","","",null,null],[6,"N693","","",null,null],[6,"U694","","",null,null],[6,"P694","","",null,null],[6,"N694","","",null,null],[6,"U695","","",null,null],[6,"P695","","",null,null],[6,"N695","","",null,null],[6,"U696","","",null,null],[6,"P696","","",null,null],[6,"N696","","",null,null],[6,"U697","","",null,null],[6,"P697","","",null,null],[6,"N697","","",null,null],[6,"U698","","",null,null],[6,"P698","","",null,null],[6,"N698","","",null,null],[6,"U699","","",null,null],[6,"P699","","",null,null],[6,"N699","","",null,null],[6,"U700","","",null,null],[6,"P700","","",null,null],[6,"N700","","",null,null],[6,"U701","","",null,null],[6,"P701","","",null,null],[6,"N701","","",null,null],[6,"U702","","",null,null],[6,"P702","","",null,null],[6,"N702","","",null,null],[6,"U703","","",null,null],[6,"P703","","",null,null],[6,"N703","","",null,null],[6,"U704","","",null,null],[6,"P704","","",null,null],[6,"N704","","",null,null],[6,"U705","","",null,null],[6,"P705","","",null,null],[6,"N705","","",null,null],[6,"U706","","",null,null],[6,"P706","","",null,null],[6,"N706","","",null,null],[6,"U707","","",null,null],[6,"P707","","",null,null],[6,"N707","","",null,null],[6,"U708","","",null,null],[6,"P708","","",null,null],[6,"N708","","",null,null],[6,"U709","","",null,null],[6,"P709","","",null,null],[6,"N709","","",null,null],[6,"U710","","",null,null],[6,"P710","","",null,null],[6,"N710","","",null,null],[6,"U711","","",null,null],[6,"P711","","",null,null],[6,"N711","","",null,null],[6,"U712","","",null,null],[6,"P712","","",null,null],[6,"N712","","",null,null],[6,"U713","","",null,null],[6,"P713","","",null,null],[6,"N713","","",null,null],[6,"U714","","",null,null],[6,"P714","","",null,null],[6,"N714","","",null,null],[6,"U715","","",null,null],[6,"P715","","",null,null],[6,"N715","","",null,null],[6,"U716","","",null,null],[6,"P716","","",null,null],[6,"N716","","",null,null],[6,"U717","","",null,null],[6,"P717","","",null,null],[6,"N717","","",null,null],[6,"U718","","",null,null],[6,"P718","","",null,null],[6,"N718","","",null,null],[6,"U719","","",null,null],[6,"P719","","",null,null],[6,"N719","","",null,null],[6,"U720","","",null,null],[6,"P720","","",null,null],[6,"N720","","",null,null],[6,"U721","","",null,null],[6,"P721","","",null,null],[6,"N721","","",null,null],[6,"U722","","",null,null],[6,"P722","","",null,null],[6,"N722","","",null,null],[6,"U723","","",null,null],[6,"P723","","",null,null],[6,"N723","","",null,null],[6,"U724","","",null,null],[6,"P724","","",null,null],[6,"N724","","",null,null],[6,"U725","","",null,null],[6,"P725","","",null,null],[6,"N725","","",null,null],[6,"U726","","",null,null],[6,"P726","","",null,null],[6,"N726","","",null,null],[6,"U727","","",null,null],[6,"P727","","",null,null],[6,"N727","","",null,null],[6,"U728","","",null,null],[6,"P728","","",null,null],[6,"N728","","",null,null],[6,"U729","","",null,null],[6,"P729","","",null,null],[6,"N729","","",null,null],[6,"U730","","",null,null],[6,"P730","","",null,null],[6,"N730","","",null,null],[6,"U731","","",null,null],[6,"P731","","",null,null],[6,"N731","","",null,null],[6,"U732","","",null,null],[6,"P732","","",null,null],[6,"N732","","",null,null],[6,"U733","","",null,null],[6,"P733","","",null,null],[6,"N733","","",null,null],[6,"U734","","",null,null],[6,"P734","","",null,null],[6,"N734","","",null,null],[6,"U735","","",null,null],[6,"P735","","",null,null],[6,"N735","","",null,null],[6,"U736","","",null,null],[6,"P736","","",null,null],[6,"N736","","",null,null],[6,"U737","","",null,null],[6,"P737","","",null,null],[6,"N737","","",null,null],[6,"U738","","",null,null],[6,"P738","","",null,null],[6,"N738","","",null,null],[6,"U739","","",null,null],[6,"P739","","",null,null],[6,"N739","","",null,null],[6,"U740","","",null,null],[6,"P740","","",null,null],[6,"N740","","",null,null],[6,"U741","","",null,null],[6,"P741","","",null,null],[6,"N741","","",null,null],[6,"U742","","",null,null],[6,"P742","","",null,null],[6,"N742","","",null,null],[6,"U743","","",null,null],[6,"P743","","",null,null],[6,"N743","","",null,null],[6,"U744","","",null,null],[6,"P744","","",null,null],[6,"N744","","",null,null],[6,"U745","","",null,null],[6,"P745","","",null,null],[6,"N745","","",null,null],[6,"U746","","",null,null],[6,"P746","","",null,null],[6,"N746","","",null,null],[6,"U747","","",null,null],[6,"P747","","",null,null],[6,"N747","","",null,null],[6,"U748","","",null,null],[6,"P748","","",null,null],[6,"N748","","",null,null],[6,"U749","","",null,null],[6,"P749","","",null,null],[6,"N749","","",null,null],[6,"U750","","",null,null],[6,"P750","","",null,null],[6,"N750","","",null,null],[6,"U751","","",null,null],[6,"P751","","",null,null],[6,"N751","","",null,null],[6,"U752","","",null,null],[6,"P752","","",null,null],[6,"N752","","",null,null],[6,"U753","","",null,null],[6,"P753","","",null,null],[6,"N753","","",null,null],[6,"U754","","",null,null],[6,"P754","","",null,null],[6,"N754","","",null,null],[6,"U755","","",null,null],[6,"P755","","",null,null],[6,"N755","","",null,null],[6,"U756","","",null,null],[6,"P756","","",null,null],[6,"N756","","",null,null],[6,"U757","","",null,null],[6,"P757","","",null,null],[6,"N757","","",null,null],[6,"U758","","",null,null],[6,"P758","","",null,null],[6,"N758","","",null,null],[6,"U759","","",null,null],[6,"P759","","",null,null],[6,"N759","","",null,null],[6,"U760","","",null,null],[6,"P760","","",null,null],[6,"N760","","",null,null],[6,"U761","","",null,null],[6,"P761","","",null,null],[6,"N761","","",null,null],[6,"U762","","",null,null],[6,"P762","","",null,null],[6,"N762","","",null,null],[6,"U763","","",null,null],[6,"P763","","",null,null],[6,"N763","","",null,null],[6,"U764","","",null,null],[6,"P764","","",null,null],[6,"N764","","",null,null],[6,"U765","","",null,null],[6,"P765","","",null,null],[6,"N765","","",null,null],[6,"U766","","",null,null],[6,"P766","","",null,null],[6,"N766","","",null,null],[6,"U767","","",null,null],[6,"P767","","",null,null],[6,"N767","","",null,null],[6,"U768","","",null,null],[6,"P768","","",null,null],[6,"N768","","",null,null],[6,"U769","","",null,null],[6,"P769","","",null,null],[6,"N769","","",null,null],[6,"U770","","",null,null],[6,"P770","","",null,null],[6,"N770","","",null,null],[6,"U771","","",null,null],[6,"P771","","",null,null],[6,"N771","","",null,null],[6,"U772","","",null,null],[6,"P772","","",null,null],[6,"N772","","",null,null],[6,"U773","","",null,null],[6,"P773","","",null,null],[6,"N773","","",null,null],[6,"U774","","",null,null],[6,"P774","","",null,null],[6,"N774","","",null,null],[6,"U775","","",null,null],[6,"P775","","",null,null],[6,"N775","","",null,null],[6,"U776","","",null,null],[6,"P776","","",null,null],[6,"N776","","",null,null],[6,"U777","","",null,null],[6,"P777","","",null,null],[6,"N777","","",null,null],[6,"U778","","",null,null],[6,"P778","","",null,null],[6,"N778","","",null,null],[6,"U779","","",null,null],[6,"P779","","",null,null],[6,"N779","","",null,null],[6,"U780","","",null,null],[6,"P780","","",null,null],[6,"N780","","",null,null],[6,"U781","","",null,null],[6,"P781","","",null,null],[6,"N781","","",null,null],[6,"U782","","",null,null],[6,"P782","","",null,null],[6,"N782","","",null,null],[6,"U783","","",null,null],[6,"P783","","",null,null],[6,"N783","","",null,null],[6,"U784","","",null,null],[6,"P784","","",null,null],[6,"N784","","",null,null],[6,"U785","","",null,null],[6,"P785","","",null,null],[6,"N785","","",null,null],[6,"U786","","",null,null],[6,"P786","","",null,null],[6,"N786","","",null,null],[6,"U787","","",null,null],[6,"P787","","",null,null],[6,"N787","","",null,null],[6,"U788","","",null,null],[6,"P788","","",null,null],[6,"N788","","",null,null],[6,"U789","","",null,null],[6,"P789","","",null,null],[6,"N789","","",null,null],[6,"U790","","",null,null],[6,"P790","","",null,null],[6,"N790","","",null,null],[6,"U791","","",null,null],[6,"P791","","",null,null],[6,"N791","","",null,null],[6,"U792","","",null,null],[6,"P792","","",null,null],[6,"N792","","",null,null],[6,"U793","","",null,null],[6,"P793","","",null,null],[6,"N793","","",null,null],[6,"U794","","",null,null],[6,"P794","","",null,null],[6,"N794","","",null,null],[6,"U795","","",null,null],[6,"P795","","",null,null],[6,"N795","","",null,null],[6,"U796","","",null,null],[6,"P796","","",null,null],[6,"N796","","",null,null],[6,"U797","","",null,null],[6,"P797","","",null,null],[6,"N797","","",null,null],[6,"U798","","",null,null],[6,"P798","","",null,null],[6,"N798","","",null,null],[6,"U799","","",null,null],[6,"P799","","",null,null],[6,"N799","","",null,null],[6,"U800","","",null,null],[6,"P800","","",null,null],[6,"N800","","",null,null],[6,"U801","","",null,null],[6,"P801","","",null,null],[6,"N801","","",null,null],[6,"U802","","",null,null],[6,"P802","","",null,null],[6,"N802","","",null,null],[6,"U803","","",null,null],[6,"P803","","",null,null],[6,"N803","","",null,null],[6,"U804","","",null,null],[6,"P804","","",null,null],[6,"N804","","",null,null],[6,"U805","","",null,null],[6,"P805","","",null,null],[6,"N805","","",null,null],[6,"U806","","",null,null],[6,"P806","","",null,null],[6,"N806","","",null,null],[6,"U807","","",null,null],[6,"P807","","",null,null],[6,"N807","","",null,null],[6,"U808","","",null,null],[6,"P808","","",null,null],[6,"N808","","",null,null],[6,"U809","","",null,null],[6,"P809","","",null,null],[6,"N809","","",null,null],[6,"U810","","",null,null],[6,"P810","","",null,null],[6,"N810","","",null,null],[6,"U811","","",null,null],[6,"P811","","",null,null],[6,"N811","","",null,null],[6,"U812","","",null,null],[6,"P812","","",null,null],[6,"N812","","",null,null],[6,"U813","","",null,null],[6,"P813","","",null,null],[6,"N813","","",null,null],[6,"U814","","",null,null],[6,"P814","","",null,null],[6,"N814","","",null,null],[6,"U815","","",null,null],[6,"P815","","",null,null],[6,"N815","","",null,null],[6,"U816","","",null,null],[6,"P816","","",null,null],[6,"N816","","",null,null],[6,"U817","","",null,null],[6,"P817","","",null,null],[6,"N817","","",null,null],[6,"U818","","",null,null],[6,"P818","","",null,null],[6,"N818","","",null,null],[6,"U819","","",null,null],[6,"P819","","",null,null],[6,"N819","","",null,null],[6,"U820","","",null,null],[6,"P820","","",null,null],[6,"N820","","",null,null],[6,"U821","","",null,null],[6,"P821","","",null,null],[6,"N821","","",null,null],[6,"U822","","",null,null],[6,"P822","","",null,null],[6,"N822","","",null,null],[6,"U823","","",null,null],[6,"P823","","",null,null],[6,"N823","","",null,null],[6,"U824","","",null,null],[6,"P824","","",null,null],[6,"N824","","",null,null],[6,"U825","","",null,null],[6,"P825","","",null,null],[6,"N825","","",null,null],[6,"U826","","",null,null],[6,"P826","","",null,null],[6,"N826","","",null,null],[6,"U827","","",null,null],[6,"P827","","",null,null],[6,"N827","","",null,null],[6,"U828","","",null,null],[6,"P828","","",null,null],[6,"N828","","",null,null],[6,"U829","","",null,null],[6,"P829","","",null,null],[6,"N829","","",null,null],[6,"U830","","",null,null],[6,"P830","","",null,null],[6,"N830","","",null,null],[6,"U831","","",null,null],[6,"P831","","",null,null],[6,"N831","","",null,null],[6,"U832","","",null,null],[6,"P832","","",null,null],[6,"N832","","",null,null],[6,"U833","","",null,null],[6,"P833","","",null,null],[6,"N833","","",null,null],[6,"U834","","",null,null],[6,"P834","","",null,null],[6,"N834","","",null,null],[6,"U835","","",null,null],[6,"P835","","",null,null],[6,"N835","","",null,null],[6,"U836","","",null,null],[6,"P836","","",null,null],[6,"N836","","",null,null],[6,"U837","","",null,null],[6,"P837","","",null,null],[6,"N837","","",null,null],[6,"U838","","",null,null],[6,"P838","","",null,null],[6,"N838","","",null,null],[6,"U839","","",null,null],[6,"P839","","",null,null],[6,"N839","","",null,null],[6,"U840","","",null,null],[6,"P840","","",null,null],[6,"N840","","",null,null],[6,"U841","","",null,null],[6,"P841","","",null,null],[6,"N841","","",null,null],[6,"U842","","",null,null],[6,"P842","","",null,null],[6,"N842","","",null,null],[6,"U843","","",null,null],[6,"P843","","",null,null],[6,"N843","","",null,null],[6,"U844","","",null,null],[6,"P844","","",null,null],[6,"N844","","",null,null],[6,"U845","","",null,null],[6,"P845","","",null,null],[6,"N845","","",null,null],[6,"U846","","",null,null],[6,"P846","","",null,null],[6,"N846","","",null,null],[6,"U847","","",null,null],[6,"P847","","",null,null],[6,"N847","","",null,null],[6,"U848","","",null,null],[6,"P848","","",null,null],[6,"N848","","",null,null],[6,"U849","","",null,null],[6,"P849","","",null,null],[6,"N849","","",null,null],[6,"U850","","",null,null],[6,"P850","","",null,null],[6,"N850","","",null,null],[6,"U851","","",null,null],[6,"P851","","",null,null],[6,"N851","","",null,null],[6,"U852","","",null,null],[6,"P852","","",null,null],[6,"N852","","",null,null],[6,"U853","","",null,null],[6,"P853","","",null,null],[6,"N853","","",null,null],[6,"U854","","",null,null],[6,"P854","","",null,null],[6,"N854","","",null,null],[6,"U855","","",null,null],[6,"P855","","",null,null],[6,"N855","","",null,null],[6,"U856","","",null,null],[6,"P856","","",null,null],[6,"N856","","",null,null],[6,"U857","","",null,null],[6,"P857","","",null,null],[6,"N857","","",null,null],[6,"U858","","",null,null],[6,"P858","","",null,null],[6,"N858","","",null,null],[6,"U859","","",null,null],[6,"P859","","",null,null],[6,"N859","","",null,null],[6,"U860","","",null,null],[6,"P860","","",null,null],[6,"N860","","",null,null],[6,"U861","","",null,null],[6,"P861","","",null,null],[6,"N861","","",null,null],[6,"U862","","",null,null],[6,"P862","","",null,null],[6,"N862","","",null,null],[6,"U863","","",null,null],[6,"P863","","",null,null],[6,"N863","","",null,null],[6,"U864","","",null,null],[6,"P864","","",null,null],[6,"N864","","",null,null],[6,"U865","","",null,null],[6,"P865","","",null,null],[6,"N865","","",null,null],[6,"U866","","",null,null],[6,"P866","","",null,null],[6,"N866","","",null,null],[6,"U867","","",null,null],[6,"P867","","",null,null],[6,"N867","","",null,null],[6,"U868","","",null,null],[6,"P868","","",null,null],[6,"N868","","",null,null],[6,"U869","","",null,null],[6,"P869","","",null,null],[6,"N869","","",null,null],[6,"U870","","",null,null],[6,"P870","","",null,null],[6,"N870","","",null,null],[6,"U871","","",null,null],[6,"P871","","",null,null],[6,"N871","","",null,null],[6,"U872","","",null,null],[6,"P872","","",null,null],[6,"N872","","",null,null],[6,"U873","","",null,null],[6,"P873","","",null,null],[6,"N873","","",null,null],[6,"U874","","",null,null],[6,"P874","","",null,null],[6,"N874","","",null,null],[6,"U875","","",null,null],[6,"P875","","",null,null],[6,"N875","","",null,null],[6,"U876","","",null,null],[6,"P876","","",null,null],[6,"N876","","",null,null],[6,"U877","","",null,null],[6,"P877","","",null,null],[6,"N877","","",null,null],[6,"U878","","",null,null],[6,"P878","","",null,null],[6,"N878","","",null,null],[6,"U879","","",null,null],[6,"P879","","",null,null],[6,"N879","","",null,null],[6,"U880","","",null,null],[6,"P880","","",null,null],[6,"N880","","",null,null],[6,"U881","","",null,null],[6,"P881","","",null,null],[6,"N881","","",null,null],[6,"U882","","",null,null],[6,"P882","","",null,null],[6,"N882","","",null,null],[6,"U883","","",null,null],[6,"P883","","",null,null],[6,"N883","","",null,null],[6,"U884","","",null,null],[6,"P884","","",null,null],[6,"N884","","",null,null],[6,"U885","","",null,null],[6,"P885","","",null,null],[6,"N885","","",null,null],[6,"U886","","",null,null],[6,"P886","","",null,null],[6,"N886","","",null,null],[6,"U887","","",null,null],[6,"P887","","",null,null],[6,"N887","","",null,null],[6,"U888","","",null,null],[6,"P888","","",null,null],[6,"N888","","",null,null],[6,"U889","","",null,null],[6,"P889","","",null,null],[6,"N889","","",null,null],[6,"U890","","",null,null],[6,"P890","","",null,null],[6,"N890","","",null,null],[6,"U891","","",null,null],[6,"P891","","",null,null],[6,"N891","","",null,null],[6,"U892","","",null,null],[6,"P892","","",null,null],[6,"N892","","",null,null],[6,"U893","","",null,null],[6,"P893","","",null,null],[6,"N893","","",null,null],[6,"U894","","",null,null],[6,"P894","","",null,null],[6,"N894","","",null,null],[6,"U895","","",null,null],[6,"P895","","",null,null],[6,"N895","","",null,null],[6,"U896","","",null,null],[6,"P896","","",null,null],[6,"N896","","",null,null],[6,"U897","","",null,null],[6,"P897","","",null,null],[6,"N897","","",null,null],[6,"U898","","",null,null],[6,"P898","","",null,null],[6,"N898","","",null,null],[6,"U899","","",null,null],[6,"P899","","",null,null],[6,"N899","","",null,null],[6,"U900","","",null,null],[6,"P900","","",null,null],[6,"N900","","",null,null],[6,"U901","","",null,null],[6,"P901","","",null,null],[6,"N901","","",null,null],[6,"U902","","",null,null],[6,"P902","","",null,null],[6,"N902","","",null,null],[6,"U903","","",null,null],[6,"P903","","",null,null],[6,"N903","","",null,null],[6,"U904","","",null,null],[6,"P904","","",null,null],[6,"N904","","",null,null],[6,"U905","","",null,null],[6,"P905","","",null,null],[6,"N905","","",null,null],[6,"U906","","",null,null],[6,"P906","","",null,null],[6,"N906","","",null,null],[6,"U907","","",null,null],[6,"P907","","",null,null],[6,"N907","","",null,null],[6,"U908","","",null,null],[6,"P908","","",null,null],[6,"N908","","",null,null],[6,"U909","","",null,null],[6,"P909","","",null,null],[6,"N909","","",null,null],[6,"U910","","",null,null],[6,"P910","","",null,null],[6,"N910","","",null,null],[6,"U911","","",null,null],[6,"P911","","",null,null],[6,"N911","","",null,null],[6,"U912","","",null,null],[6,"P912","","",null,null],[6,"N912","","",null,null],[6,"U913","","",null,null],[6,"P913","","",null,null],[6,"N913","","",null,null],[6,"U914","","",null,null],[6,"P914","","",null,null],[6,"N914","","",null,null],[6,"U915","","",null,null],[6,"P915","","",null,null],[6,"N915","","",null,null],[6,"U916","","",null,null],[6,"P916","","",null,null],[6,"N916","","",null,null],[6,"U917","","",null,null],[6,"P917","","",null,null],[6,"N917","","",null,null],[6,"U918","","",null,null],[6,"P918","","",null,null],[6,"N918","","",null,null],[6,"U919","","",null,null],[6,"P919","","",null,null],[6,"N919","","",null,null],[6,"U920","","",null,null],[6,"P920","","",null,null],[6,"N920","","",null,null],[6,"U921","","",null,null],[6,"P921","","",null,null],[6,"N921","","",null,null],[6,"U922","","",null,null],[6,"P922","","",null,null],[6,"N922","","",null,null],[6,"U923","","",null,null],[6,"P923","","",null,null],[6,"N923","","",null,null],[6,"U924","","",null,null],[6,"P924","","",null,null],[6,"N924","","",null,null],[6,"U925","","",null,null],[6,"P925","","",null,null],[6,"N925","","",null,null],[6,"U926","","",null,null],[6,"P926","","",null,null],[6,"N926","","",null,null],[6,"U927","","",null,null],[6,"P927","","",null,null],[6,"N927","","",null,null],[6,"U928","","",null,null],[6,"P928","","",null,null],[6,"N928","","",null,null],[6,"U929","","",null,null],[6,"P929","","",null,null],[6,"N929","","",null,null],[6,"U930","","",null,null],[6,"P930","","",null,null],[6,"N930","","",null,null],[6,"U931","","",null,null],[6,"P931","","",null,null],[6,"N931","","",null,null],[6,"U932","","",null,null],[6,"P932","","",null,null],[6,"N932","","",null,null],[6,"U933","","",null,null],[6,"P933","","",null,null],[6,"N933","","",null,null],[6,"U934","","",null,null],[6,"P934","","",null,null],[6,"N934","","",null,null],[6,"U935","","",null,null],[6,"P935","","",null,null],[6,"N935","","",null,null],[6,"U936","","",null,null],[6,"P936","","",null,null],[6,"N936","","",null,null],[6,"U937","","",null,null],[6,"P937","","",null,null],[6,"N937","","",null,null],[6,"U938","","",null,null],[6,"P938","","",null,null],[6,"N938","","",null,null],[6,"U939","","",null,null],[6,"P939","","",null,null],[6,"N939","","",null,null],[6,"U940","","",null,null],[6,"P940","","",null,null],[6,"N940","","",null,null],[6,"U941","","",null,null],[6,"P941","","",null,null],[6,"N941","","",null,null],[6,"U942","","",null,null],[6,"P942","","",null,null],[6,"N942","","",null,null],[6,"U943","","",null,null],[6,"P943","","",null,null],[6,"N943","","",null,null],[6,"U944","","",null,null],[6,"P944","","",null,null],[6,"N944","","",null,null],[6,"U945","","",null,null],[6,"P945","","",null,null],[6,"N945","","",null,null],[6,"U946","","",null,null],[6,"P946","","",null,null],[6,"N946","","",null,null],[6,"U947","","",null,null],[6,"P947","","",null,null],[6,"N947","","",null,null],[6,"U948","","",null,null],[6,"P948","","",null,null],[6,"N948","","",null,null],[6,"U949","","",null,null],[6,"P949","","",null,null],[6,"N949","","",null,null],[6,"U950","","",null,null],[6,"P950","","",null,null],[6,"N950","","",null,null],[6,"U951","","",null,null],[6,"P951","","",null,null],[6,"N951","","",null,null],[6,"U952","","",null,null],[6,"P952","","",null,null],[6,"N952","","",null,null],[6,"U953","","",null,null],[6,"P953","","",null,null],[6,"N953","","",null,null],[6,"U954","","",null,null],[6,"P954","","",null,null],[6,"N954","","",null,null],[6,"U955","","",null,null],[6,"P955","","",null,null],[6,"N955","","",null,null],[6,"U956","","",null,null],[6,"P956","","",null,null],[6,"N956","","",null,null],[6,"U957","","",null,null],[6,"P957","","",null,null],[6,"N957","","",null,null],[6,"U958","","",null,null],[6,"P958","","",null,null],[6,"N958","","",null,null],[6,"U959","","",null,null],[6,"P959","","",null,null],[6,"N959","","",null,null],[6,"U960","","",null,null],[6,"P960","","",null,null],[6,"N960","","",null,null],[6,"U961","","",null,null],[6,"P961","","",null,null],[6,"N961","","",null,null],[6,"U962","","",null,null],[6,"P962","","",null,null],[6,"N962","","",null,null],[6,"U963","","",null,null],[6,"P963","","",null,null],[6,"N963","","",null,null],[6,"U964","","",null,null],[6,"P964","","",null,null],[6,"N964","","",null,null],[6,"U965","","",null,null],[6,"P965","","",null,null],[6,"N965","","",null,null],[6,"U966","","",null,null],[6,"P966","","",null,null],[6,"N966","","",null,null],[6,"U967","","",null,null],[6,"P967","","",null,null],[6,"N967","","",null,null],[6,"U968","","",null,null],[6,"P968","","",null,null],[6,"N968","","",null,null],[6,"U969","","",null,null],[6,"P969","","",null,null],[6,"N969","","",null,null],[6,"U970","","",null,null],[6,"P970","","",null,null],[6,"N970","","",null,null],[6,"U971","","",null,null],[6,"P971","","",null,null],[6,"N971","","",null,null],[6,"U972","","",null,null],[6,"P972","","",null,null],[6,"N972","","",null,null],[6,"U973","","",null,null],[6,"P973","","",null,null],[6,"N973","","",null,null],[6,"U974","","",null,null],[6,"P974","","",null,null],[6,"N974","","",null,null],[6,"U975","","",null,null],[6,"P975","","",null,null],[6,"N975","","",null,null],[6,"U976","","",null,null],[6,"P976","","",null,null],[6,"N976","","",null,null],[6,"U977","","",null,null],[6,"P977","","",null,null],[6,"N977","","",null,null],[6,"U978","","",null,null],[6,"P978","","",null,null],[6,"N978","","",null,null],[6,"U979","","",null,null],[6,"P979","","",null,null],[6,"N979","","",null,null],[6,"U980","","",null,null],[6,"P980","","",null,null],[6,"N980","","",null,null],[6,"U981","","",null,null],[6,"P981","","",null,null],[6,"N981","","",null,null],[6,"U982","","",null,null],[6,"P982","","",null,null],[6,"N982","","",null,null],[6,"U983","","",null,null],[6,"P983","","",null,null],[6,"N983","","",null,null],[6,"U984","","",null,null],[6,"P984","","",null,null],[6,"N984","","",null,null],[6,"U985","","",null,null],[6,"P985","","",null,null],[6,"N985","","",null,null],[6,"U986","","",null,null],[6,"P986","","",null,null],[6,"N986","","",null,null],[6,"U987","","",null,null],[6,"P987","","",null,null],[6,"N987","","",null,null],[6,"U988","","",null,null],[6,"P988","","",null,null],[6,"N988","","",null,null],[6,"U989","","",null,null],[6,"P989","","",null,null],[6,"N989","","",null,null],[6,"U990","","",null,null],[6,"P990","","",null,null],[6,"N990","","",null,null],[6,"U991","","",null,null],[6,"P991","","",null,null],[6,"N991","","",null,null],[6,"U992","","",null,null],[6,"P992","","",null,null],[6,"N992","","",null,null],[6,"U993","","",null,null],[6,"P993","","",null,null],[6,"N993","","",null,null],[6,"U994","","",null,null],[6,"P994","","",null,null],[6,"N994","","",null,null],[6,"U995","","",null,null],[6,"P995","","",null,null],[6,"N995","","",null,null],[6,"U996","","",null,null],[6,"P996","","",null,null],[6,"N996","","",null,null],[6,"U997","","",null,null],[6,"P997","","",null,null],[6,"N997","","",null,null],[6,"U998","","",null,null],[6,"P998","","",null,null],[6,"N998","","",null,null],[6,"U999","","",null,null],[6,"P999","","",null,null],[6,"N999","","",null,null],[6,"U1000","","",null,null],[6,"P1000","","",null,null],[6,"N1000","","",null,null],[6,"U1001","","",null,null],[6,"P1001","","",null,null],[6,"N1001","","",null,null],[6,"U1002","","",null,null],[6,"P1002","","",null,null],[6,"N1002","","",null,null],[6,"U1003","","",null,null],[6,"P1003","","",null,null],[6,"N1003","","",null,null],[6,"U1004","","",null,null],[6,"P1004","","",null,null],[6,"N1004","","",null,null],[6,"U1005","","",null,null],[6,"P1005","","",null,null],[6,"N1005","","",null,null],[6,"U1006","","",null,null],[6,"P1006","","",null,null],[6,"N1006","","",null,null],[6,"U1007","","",null,null],[6,"P1007","","",null,null],[6,"N1007","","",null,null],[6,"U1008","","",null,null],[6,"P1008","","",null,null],[6,"N1008","","",null,null],[6,"U1009","","",null,null],[6,"P1009","","",null,null],[6,"N1009","","",null,null],[6,"U1010","","",null,null],[6,"P1010","","",null,null],[6,"N1010","","",null,null],[6,"U1011","","",null,null],[6,"P1011","","",null,null],[6,"N1011","","",null,null],[6,"U1012","","",null,null],[6,"P1012","","",null,null],[6,"N1012","","",null,null],[6,"U1013","","",null,null],[6,"P1013","","",null,null],[6,"N1013","","",null,null],[6,"U1014","","",null,null],[6,"P1014","","",null,null],[6,"N1014","","",null,null],[6,"U1015","","",null,null],[6,"P1015","","",null,null],[6,"N1015","","",null,null],[6,"U1016","","",null,null],[6,"P1016","","",null,null],[6,"N1016","","",null,null],[6,"U1017","","",null,null],[6,"P1017","","",null,null],[6,"N1017","","",null,null],[6,"U1018","","",null,null],[6,"P1018","","",null,null],[6,"N1018","","",null,null],[6,"U1019","","",null,null],[6,"P1019","","",null,null],[6,"N1019","","",null,null],[6,"U1020","","",null,null],[6,"P1020","","",null,null],[6,"N1020","","",null,null],[6,"U1021","","",null,null],[6,"P1021","","",null,null],[6,"N1021","","",null,null],[6,"U1022","","",null,null],[6,"P1022","","",null,null],[6,"N1022","","",null,null],[6,"U1023","","",null,null],[6,"P1023","","",null,null],[6,"N1023","","",null,null],[6,"U1024","","",null,null],[6,"P1024","","",null,null],[6,"N1024","","",null,null],[6,"U2048","","",null,null],[6,"P2048","","",null,null],[6,"N2048","","",null,null],[6,"U4096","","",null,null],[6,"P4096","","",null,null],[6,"N4096","","",null,null],[6,"U8192","","",null,null],[6,"P8192","","",null,null],[6,"N8192","","",null,null],[6,"U16384","","",null,null],[6,"P16384","","",null,null],[6,"N16384","","",null,null],[6,"U32768","","",null,null],[6,"P32768","","",null,null],[6,"N32768","","",null,null],[6,"U65536","","",null,null],[6,"P65536","","",null,null],[6,"N65536","","",null,null],[6,"U131072","","",null,null],[6,"P131072","","",null,null],[6,"N131072","","",null,null],[6,"U262144","","",null,null],[6,"P262144","","",null,null],[6,"N262144","","",null,null],[6,"U524288","","",null,null],[6,"P524288","","",null,null],[6,"N524288","","",null,null],[6,"U1048576","","",null,null],[6,"P1048576","","",null,null],[6,"N1048576","","",null,null],[6,"U2097152","","",null,null],[6,"P2097152","","",null,null],[6,"N2097152","","",null,null],[6,"U4194304","","",null,null],[6,"P4194304","","",null,null],[6,"N4194304","","",null,null],[6,"U8388608","","",null,null],[6,"P8388608","","",null,null],[6,"N8388608","","",null,null],[6,"U16777216","","",null,null],[6,"P16777216","","",null,null],[6,"N16777216","","",null,null],[6,"U33554432","","",null,null],[6,"P33554432","","",null,null],[6,"N33554432","","",null,null],[6,"U67108864","","",null,null],[6,"P67108864","","",null,null],[6,"N67108864","","",null,null],[6,"U134217728","","",null,null],[6,"P134217728","","",null,null],[6,"N134217728","","",null,null],[6,"U268435456","","",null,null],[6,"P268435456","","",null,null],[6,"N268435456","","",null,null],[6,"U536870912","","",null,null],[6,"P536870912","","",null,null],[6,"N536870912","","",null,null],[6,"U1073741824","","",null,null],[6,"P1073741824","","",null,null],[6,"N1073741824","","",null,null],[6,"U2147483648","","",null,null],[6,"P2147483648","","",null,null],[6,"N2147483648","","",null,null],[6,"U4294967296","","",null,null],[6,"P4294967296","","",null,null],[6,"N4294967296","","",null,null],[6,"U8589934592","","",null,null],[6,"P8589934592","","",null,null],[6,"N8589934592","","",null,null],[6,"U17179869184","","",null,null],[6,"P17179869184","","",null,null],[6,"N17179869184","","",null,null],[6,"U34359738368","","",null,null],[6,"P34359738368","","",null,null],[6,"N34359738368","","",null,null],[6,"U68719476736","","",null,null],[6,"P68719476736","","",null,null],[6,"N68719476736","","",null,null],[6,"U137438953472","","",null,null],[6,"P137438953472","","",null,null],[6,"N137438953472","","",null,null],[6,"U274877906944","","",null,null],[6,"P274877906944","","",null,null],[6,"N274877906944","","",null,null],[6,"U549755813888","","",null,null],[6,"P549755813888","","",null,null],[6,"N549755813888","","",null,null],[6,"U1099511627776","","",null,null],[6,"P1099511627776","","",null,null],[6,"N1099511627776","","",null,null],[6,"U2199023255552","","",null,null],[6,"P2199023255552","","",null,null],[6,"N2199023255552","","",null,null],[6,"U4398046511104","","",null,null],[6,"P4398046511104","","",null,null],[6,"N4398046511104","","",null,null],[6,"U8796093022208","","",null,null],[6,"P8796093022208","","",null,null],[6,"N8796093022208","","",null,null],[6,"U17592186044416","","",null,null],[6,"P17592186044416","","",null,null],[6,"N17592186044416","","",null,null],[6,"U35184372088832","","",null,null],[6,"P35184372088832","","",null,null],[6,"N35184372088832","","",null,null],[6,"U70368744177664","","",null,null],[6,"P70368744177664","","",null,null],[6,"N70368744177664","","",null,null],[6,"U140737488355328","","",null,null],[6,"P140737488355328","","",null,null],[6,"N140737488355328","","",null,null],[6,"U281474976710656","","",null,null],[6,"P281474976710656","","",null,null],[6,"N281474976710656","","",null,null],[6,"U562949953421312","","",null,null],[6,"P562949953421312","","",null,null],[6,"N562949953421312","","",null,null],[6,"U1125899906842624","","",null,null],[6,"P1125899906842624","","",null,null],[6,"N1125899906842624","","",null,null],[6,"U2251799813685248","","",null,null],[6,"P2251799813685248","","",null,null],[6,"N2251799813685248","","",null,null],[6,"U4503599627370496","","",null,null],[6,"P4503599627370496","","",null,null],[6,"N4503599627370496","","",null,null],[6,"U9007199254740992","","",null,null],[6,"P9007199254740992","","",null,null],[6,"N9007199254740992","","",null,null],[6,"U18014398509481984","","",null,null],[6,"P18014398509481984","","",null,null],[6,"N18014398509481984","","",null,null],[6,"U36028797018963968","","",null,null],[6,"P36028797018963968","","",null,null],[6,"N36028797018963968","","",null,null],[6,"U72057594037927936","","",null,null],[6,"P72057594037927936","","",null,null],[6,"N72057594037927936","","",null,null],[6,"U144115188075855872","","",null,null],[6,"P144115188075855872","","",null,null],[6,"N144115188075855872","","",null,null],[6,"U288230376151711744","","",null,null],[6,"P288230376151711744","","",null,null],[6,"N288230376151711744","","",null,null],[6,"U576460752303423488","","",null,null],[6,"P576460752303423488","","",null,null],[6,"N576460752303423488","","",null,null],[6,"U1152921504606846976","","",null,null],[6,"P1152921504606846976","","",null,null],[6,"N1152921504606846976","","",null,null],[6,"U2305843009213693952","","",null,null],[6,"P2305843009213693952","","",null,null],[6,"N2305843009213693952","","",null,null],[6,"U4611686018427387904","","",null,null],[6,"P4611686018427387904","","",null,null],[6,"N4611686018427387904","","",null,null],[6,"U9223372036854775808","","",null,null],[6,"U10000","","",null,null],[6,"P10000","","",null,null],[6,"N10000","","",null,null],[6,"U100000","","",null,null],[6,"P100000","","",null,null],[6,"N100000","","",null,null],[6,"U1000000","","",null,null],[6,"P1000000","","",null,null],[6,"N1000000","","",null,null],[6,"U10000000","","",null,null],[6,"P10000000","","",null,null],[6,"N10000000","","",null,null],[6,"U100000000","","",null,null],[6,"P100000000","","",null,null],[6,"N100000000","","",null,null],[6,"U1000000000","","",null,null],[6,"P1000000000","","",null,null],[6,"N1000000000","","",null,null],[6,"U10000000000","","",null,null],[6,"P10000000000","","",null,null],[6,"N10000000000","","",null,null],[6,"U100000000000","","",null,null],[6,"P100000000000","","",null,null],[6,"N100000000000","","",null,null],[6,"U1000000000000","","",null,null],[6,"P1000000000000","","",null,null],[6,"N1000000000000","","",null,null],[6,"U10000000000000","","",null,null],[6,"P10000000000000","","",null,null],[6,"N10000000000000","","",null,null],[6,"U100000000000000","","",null,null],[6,"P100000000000000","","",null,null],[6,"N100000000000000","","",null,null],[6,"U1000000000000000","","",null,null],[6,"P1000000000000000","","",null,null],[6,"N1000000000000000","","",null,null],[6,"U10000000000000000","","",null,null],[6,"P10000000000000000","","",null,null],[6,"N10000000000000000","","",null,null],[6,"U100000000000000000","","",null,null],[6,"P100000000000000000","","",null,null],[6,"N100000000000000000","","",null,null],[6,"U1000000000000000000","","",null,null],[6,"P1000000000000000000","","",null,null],[6,"N1000000000000000000","","",null,null],[6,"U10000000000000000000","","",null,null],[14,"op","","Convenient type operations.",null,null],[14,"cmp","","A convenience macro for comparing type numbers. Use `op!`…",null,null],[14,"tarr","","Create a new type-level arrray. Only usable on Rust 1.13.0…",null,null],[14,"assert_type_eq","","Asserts that two types are the same.",null,null],[14,"assert_type","","Asserts that a type is `True`, aka `B1`.",null,null],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"is_less","typenum::bit","",0,[[["b"]]]],[11,"is_equal","","",0,[[["b"]]]],[11,"is_greater","","",0,[[["b"]]]],[11,"is_less_or_equal","","",0,[[["b"]]]],[11,"is_not_equal","","",0,[[["b"]]]],[11,"is_greater_or_equal","","",0,[[["b"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"is_less","","",1,[[["b"]]]],[11,"is_equal","","",1,[[["b"]]]],[11,"is_greater","","",1,[[["b"]]]],[11,"is_less_or_equal","","",1,[[["b"]]]],[11,"is_not_equal","","",1,[[["b"]]]],[11,"is_greater_or_equal","","",1,[[["b"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"powi","typenum::int","",2,[[["n"]]]],[11,"partial_div","","",2,[[["n"]]]],[11,"is_less","","",2,[[["b"]]]],[11,"is_equal","","",2,[[["b"]]]],[11,"is_greater","","",2,[[["b"]]]],[11,"is_less_or_equal","","",2,[[["b"]]]],[11,"is_not_equal","","",2,[[["b"]]]],[11,"is_greater_or_equal","","",2,[[["b"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"powi","","",3,[[["n"]]]],[11,"partial_div","","",3,[[["n"]]]],[11,"is_less","","",3,[[["b"]]]],[11,"is_equal","","",3,[[["b"]]]],[11,"is_greater","","",3,[[["b"]]]],[11,"is_less_or_equal","","",3,[[["b"]]]],[11,"is_not_equal","","",3,[[["b"]]]],[11,"is_greater_or_equal","","",3,[[["b"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"powi","","",4,[[["n"]]]],[11,"partial_div","","",4,[[["n"]]]],[11,"is_less","","",4,[[["b"]]]],[11,"is_equal","","",4,[[["b"]]]],[11,"is_greater","","",4,[[["b"]]]],[11,"is_less_or_equal","","",4,[[["b"]]]],[11,"is_not_equal","","",4,[[["b"]]]],[11,"is_greater_or_equal","","",4,[[["b"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"powi","typenum::uint","",28,[[["n"]]]],[11,"partial_div","","",28,[[["n"]]]],[11,"is_less","","",28,[[["b"]]]],[11,"is_equal","","",28,[[["b"]]]],[11,"is_greater","","",28,[[["b"]]]],[11,"is_less_or_equal","","",28,[[["b"]]]],[11,"is_not_equal","","",28,[[["b"]]]],[11,"is_greater_or_equal","","",28,[[["b"]]]],[11,"set_bit","","",28,[[["i"],["b"]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"powi","","",29,[[["n"]]]],[11,"partial_div","","",29,[[["n"]]]],[11,"is_less","","",29,[[["b"]]]],[11,"is_equal","","",29,[[["b"]]]],[11,"is_greater","","",29,[[["b"]]]],[11,"is_less_or_equal","","",29,[[["b"]]]],[11,"is_not_equal","","",29,[[["b"]]]],[11,"is_greater_or_equal","","",29,[[["b"]]]],[11,"set_bit","","",29,[[["i"],["b"]]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"partial_div","typenum::array","",33,[[["n"]]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"partial_div","","",34,[[["n"]]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into","","",34,[[],["u"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"to_ordering","typenum","",30,[[],["ordering"]]],[11,"to_ordering","","",31,[[],["ordering"]]],[11,"to_ordering","","",32,[[],["ordering"]]],[11,"to_u8","typenum::bit","",0,[[],["u8"]]],[11,"to_bool","","",0,[[],["bool"]]],[11,"to_u8","","",1,[[],["u8"]]],[11,"to_bool","","",1,[[],["bool"]]],[11,"to_u8","typenum::uint","",28,[[],["u8"]]],[11,"to_u16","","",28,[[],["u16"]]],[11,"to_u32","","",28,[[],["u32"]]],[11,"to_u64","","",28,[[],["u64"]]],[11,"to_usize","","",28,[[],["usize"]]],[11,"to_i8","","",28,[[],["i8"]]],[11,"to_i16","","",28,[[],["i16"]]],[11,"to_i32","","",28,[[],["i32"]]],[11,"to_i64","","",28,[[],["i64"]]],[11,"to_isize","","",28,[[],["isize"]]],[11,"to_u8","","",29,[[],["u8"]]],[11,"to_u16","","",29,[[],["u16"]]],[11,"to_u32","","",29,[[],["u32"]]],[11,"to_u64","","",29,[[],["u64"]]],[11,"to_usize","","",29,[[],["usize"]]],[11,"to_i8","","",29,[[],["i8"]]],[11,"to_i16","","",29,[[],["i16"]]],[11,"to_i32","","",29,[[],["i32"]]],[11,"to_i64","","",29,[[],["i64"]]],[11,"to_isize","","",29,[[],["isize"]]],[11,"to_i8","typenum::int","",4,[[],["i8"]]],[11,"to_i16","","",4,[[],["i16"]]],[11,"to_i32","","",4,[[],["i32"]]],[11,"to_i64","","",4,[[],["i64"]]],[11,"to_isize","","",4,[[],["isize"]]],[11,"to_i8","","",2,[[],["i8"]]],[11,"to_i16","","",2,[[],["i16"]]],[11,"to_i32","","",2,[[],["i32"]]],[11,"to_i64","","",2,[[],["i64"]]],[11,"to_isize","","",2,[[],["isize"]]],[11,"to_i8","","",3,[[],["i8"]]],[11,"to_i16","","",3,[[],["i16"]]],[11,"to_i32","","",3,[[],["i32"]]],[11,"to_i64","","",3,[[],["i64"]]],[11,"to_isize","","",3,[[],["isize"]]],[11,"powi","","",4,[[["z0"]]]],[11,"powi","","",4,[[["pint"]]]],[11,"powi","","",4,[[["nint"]]]],[11,"powi","typenum","",35,[[["nint"]]]],[11,"powi","","",36,[[["nint",["uint"]],["uint",["b0"]]]]],[11,"powi","","",36,[[["uint",["b1"]],["nint",["uint"]]]]],[11,"powi","typenum::int","",2,[[["z0"]]]],[11,"powi","","",3,[[["z0"]]]],[11,"powi","","",2,[[["pint"]]]],[11,"powi","","",3,[[["pint",["uint"]],["uint",["b0"]]]]],[11,"powi","","",3,[[["pint",["uint"]],["uint",["b1"]]]]],[11,"compare","typenum::bit","",0,[[["b0"],["self"]]]],[11,"compare","","",0,[[["b1"],["self"]]]],[11,"compare","","",1,[[["b0"],["self"]]]],[11,"compare","","",1,[[["b1"],["self"]]]],[11,"compare","typenum::int","",4,[[["z0"],["self"]]]],[11,"compare","","",4,[[["nint"],["self"]]]],[11,"compare","","",4,[[["pint"],["self"]]]],[11,"compare","","",2,[[["z0"],["self"]]]],[11,"compare","","",3,[[["z0"],["self"]]]],[11,"compare","","",3,[[["self"],["pint"]]]],[11,"compare","","",2,[[["self"],["nint"]]]],[11,"compare","","",2,[[["self"],["pint"]]]],[11,"compare","","",3,[[["self"],["nint"]]]],[11,"compare","typenum::uint","",28,[[["uterm"],["self"]]]],[11,"compare","","",29,[[["uterm"],["self"]]]],[11,"compare","","",28,[[["self"],["uint"]]]],[11,"compare","","",29,[[["self"],["uint"]]]],[11,"compare","","",29,[[["uint"],["self"]]]],[11,"compare","","",29,[[["uint"],["self"]]]],[11,"compare","","",29,[[["self"],["uint"]]]],[11,"len","","",28,[[["self"]]]],[11,"len","","",29,[[["self"]]]],[11,"len","typenum::array","",33,[[["self"]]]],[11,"len","","",34,[[["self"]]]],[11,"partial_div","typenum::uint","",28,[[["uint"]]]],[11,"partial_div","","",29,[[["uint"]]]],[11,"partial_div","typenum::array","",33,[[["rhs"]]]],[11,"partial_div","","",34,[[["rhs"]]]],[11,"min","typenum::bit","",0,[[["b0"]],["b0"]]],[11,"min","","",0,[[["b1"]],["b0"]]],[11,"min","","",1,[[["b0"]],["b0"]]],[11,"min","","",1,[[["b1"]],["b1"]]],[11,"min","typenum::int","",4,[[["z0"]]]],[11,"min","","",4,[[["pint"]]]],[11,"min","","",4,[[["nint"]]]],[11,"min","","",2,[[["z0"]]]],[11,"min","","",3,[[["z0"]]]],[11,"min","","",2,[[["pint"]]]],[11,"min","","",3,[[["pint"]]]],[11,"min","","",2,[[["nint"]]]],[11,"min","","",3,[[["nint"]]]],[11,"min","typenum::uint","",28,[[["u"]]]],[11,"min","","",29,[[["ur"]]]],[11,"max","typenum::bit","",0,[[["b0"]],["b0"]]],[11,"max","","",0,[[["b1"]],["b1"]]],[11,"max","","",1,[[["b0"]],["b1"]]],[11,"max","","",1,[[["b1"]],["b1"]]],[11,"max","typenum::int","",4,[[["z0"]]]],[11,"max","","",4,[[["pint"]]]],[11,"max","","",4,[[["nint"]]]],[11,"max","","",2,[[["z0"]]]],[11,"max","","",3,[[["z0"]]]],[11,"max","","",2,[[["pint"]]]],[11,"max","","",3,[[["pint"]]]],[11,"max","","",2,[[["nint"]]]],[11,"max","","",3,[[["nint"]]]],[11,"max","typenum::uint","",28,[[["u"]]]],[11,"max","","",29,[[["ur"]]]],[11,"get_bit","","",29,[[["u0"],["self"]]]],[11,"get_bit","","",29,[[["uint"],["self"]]]],[11,"get_bit","","",28,[[["i"],["self"]]]],[11,"fmt","typenum::bit","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","typenum::int","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","typenum::uint","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","typenum::array","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","typenum","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"div","typenum::int","",4,[[["i"]]]],[11,"div","","",2,[[["pint"]]]],[11,"div","","",2,[[["nint"]]]],[11,"div","","",3,[[["pint"]]]],[11,"div","","",3,[[["nint"]]]],[11,"div","typenum::uint","",28,[[["uint"]]]],[11,"div","","",29,[[["uint"]]]],[11,"div","typenum::array","",33,[[["rhs"]]]],[11,"div","","",34,[[["rhs"]]]],[11,"rem","typenum::int","",4,[[["i"]]]],[11,"rem","","",2,[[["pint"]]]],[11,"rem","","",2,[[["nint"]]]],[11,"rem","","",3,[[["pint"]]]],[11,"rem","","",3,[[["nint"]]]],[11,"rem","typenum::uint","",28,[[["uint"]]]],[11,"rem","","",29,[[["uint"]]]],[11,"rem","typenum::array","",33,[[["rhs"]]]],[11,"rem","","",34,[[["rhs"]]]],[11,"sub","typenum::int","",4,[[["z0"]]]],[11,"sub","","",4,[[["pint"]]]],[11,"sub","","",4,[[["nint"]]]],[11,"sub","","",2,[[["z0"]]]],[11,"sub","","",3,[[["z0"]]]],[11,"sub","","",2,[[["nint"]]]],[11,"sub","","",3,[[["pint"]]]],[11,"sub","","",2,[[["pint"]]]],[11,"sub","","",3,[[["nint"]]]],[11,"sub","typenum::uint","",28,[[["b0"]]]],[11,"sub","","",29,[[["b0"]]]],[11,"sub","","",29,[[["b1"]]]],[11,"sub","","",29,[[["b1"]]]],[11,"sub","","",29,[[["b1"]]]],[11,"sub","","",28,[[["uterm"]]]],[11,"sub","","",29,[[["ur"]]]],[11,"sub","typenum::array","",33,[[["aterm"]]]],[11,"sub","","",34,[[["tarr"]]]],[11,"eq","typenum::bit","",0,[[["b0"],["self"]],["bool"]]],[11,"eq","","",1,[[["b1"],["self"]],["bool"]]],[11,"eq","typenum::int","",2,[[["pint"],["self"]],["bool"]]],[11,"ne","","",2,[[["pint"],["self"]],["bool"]]],[11,"eq","","",3,[[["nint"],["self"]],["bool"]]],[11,"ne","","",3,[[["nint"],["self"]],["bool"]]],[11,"eq","","",4,[[["z0"],["self"]],["bool"]]],[11,"eq","typenum::uint","",28,[[["uterm"],["self"]],["bool"]]],[11,"eq","","",29,[[["self"],["uint"]],["bool"]]],[11,"ne","","",29,[[["self"],["uint"]],["bool"]]],[11,"eq","typenum::array","",33,[[["aterm"],["self"]],["bool"]]],[11,"eq","","",34,[[["tarr"],["self"]],["bool"]]],[11,"ne","","",34,[[["tarr"],["self"]],["bool"]]],[11,"eq","typenum","",30,[[["self"],["greater"]],["bool"]]],[11,"eq","","",31,[[["less"],["self"]],["bool"]]],[11,"eq","","",32,[[["self"],["equal"]],["bool"]]],[11,"cmp","typenum::bit","",0,[[["b0"],["self"]],["ordering"]]],[11,"cmp","","",1,[[["b1"],["self"]],["ordering"]]],[11,"cmp","typenum::int","",2,[[["pint"],["self"]],["ordering"]]],[11,"cmp","","",3,[[["nint"],["self"]],["ordering"]]],[11,"cmp","","",4,[[["z0"],["self"]],["ordering"]]],[11,"cmp","typenum::uint","",28,[[["uterm"],["self"]],["ordering"]]],[11,"cmp","","",29,[[["self"],["uint"]],["ordering"]]],[11,"cmp","typenum::array","",33,[[["aterm"],["self"]],["ordering"]]],[11,"cmp","","",34,[[["tarr"],["self"]],["ordering"]]],[11,"cmp","typenum","",30,[[["self"],["greater"]],["ordering"]]],[11,"cmp","","",31,[[["less"],["self"]],["ordering"]]],[11,"cmp","","",32,[[["self"],["equal"]],["ordering"]]],[11,"partial_cmp","typenum::bit","",0,[[["b0"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",1,[[["b1"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","typenum::int","",2,[[["pint"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",2,[[["pint"],["self"]],["bool"]]],[11,"le","","",2,[[["pint"],["self"]],["bool"]]],[11,"gt","","",2,[[["pint"],["self"]],["bool"]]],[11,"ge","","",2,[[["pint"],["self"]],["bool"]]],[11,"partial_cmp","","",3,[[["nint"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",3,[[["nint"],["self"]],["bool"]]],[11,"le","","",3,[[["nint"],["self"]],["bool"]]],[11,"gt","","",3,[[["nint"],["self"]],["bool"]]],[11,"ge","","",3,[[["nint"],["self"]],["bool"]]],[11,"partial_cmp","","",4,[[["z0"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","typenum::uint","",28,[[["uterm"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",29,[[["self"],["uint"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",29,[[["self"],["uint"]],["bool"]]],[11,"le","","",29,[[["self"],["uint"]],["bool"]]],[11,"gt","","",29,[[["self"],["uint"]],["bool"]]],[11,"ge","","",29,[[["self"],["uint"]],["bool"]]],[11,"partial_cmp","typenum::array","",33,[[["aterm"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",34,[[["tarr"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",34,[[["tarr"],["self"]],["bool"]]],[11,"le","","",34,[[["tarr"],["self"]],["bool"]]],[11,"gt","","",34,[[["tarr"],["self"]],["bool"]]],[11,"ge","","",34,[[["tarr"],["self"]],["bool"]]],[11,"partial_cmp","typenum","",30,[[["self"],["greater"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",31,[[["less"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",32,[[["self"],["equal"]],[["option",["ordering"]],["ordering"]]]],[11,"add","typenum::int","",4,[[["i"]]]],[11,"add","","",2,[[["z0"]]]],[11,"add","","",3,[[["z0"]]]],[11,"add","","",2,[[["pint"]]]],[11,"add","","",3,[[["nint"]]]],[11,"add","","",2,[[["nint"]]]],[11,"add","","",3,[[["pint"]]]],[11,"add","typenum::uint","",28,[[["b0"]]]],[11,"add","","",29,[[["b0"]]]],[11,"add","","",28,[[["b1"]]]],[11,"add","","",29,[[["b1"]]]],[11,"add","","",29,[[["b1"]]]],[11,"add","","",28,[[["u"]]]],[11,"add","","",29,[[["uterm"]]]],[11,"add","","",29,[[["uint",["b0"]],["b0"]]]],[11,"add","","",29,[[["b1"],["uint",["b1"]]]]],[11,"add","","",29,[[["uint",["b0"]],["b0"]]]],[11,"add","","",29,[[["b1"],["uint",["b1"]]]]],[11,"add","typenum::array","",33,[[["aterm"]]]],[11,"add","","",34,[[["tarr"]]]],[11,"mul","typenum::int","",4,[[["i"]]]],[11,"mul","","",2,[[["z0"]]]],[11,"mul","","",3,[[["z0"]]]],[11,"mul","","",2,[[["pint"]]]],[11,"mul","","",3,[[["nint"]]]],[11,"mul","","",2,[[["nint"]]]],[11,"mul","","",3,[[["pint"]]]],[11,"mul","typenum::uint","",29,[[["b0"]]]],[11,"mul","","",28,[[["b0"]]]],[11,"mul","","",28,[[["b1"]]]],[11,"mul","","",29,[[["b1"]]]],[11,"mul","","",29,[[["uterm"]]]],[11,"mul","","",28,[[["u"]]]],[11,"mul","","",29,[[["uint"]]]],[11,"mul","","",29,[[["uint"]]]],[11,"mul","typenum::array","",33,[[["rhs"]]]],[11,"mul","","",34,[[["rhs"]]]],[11,"mul","typenum::int","",4,[[["aterm"]]]],[11,"mul","","",2,[[["aterm"]]]],[11,"mul","","",3,[[["aterm"]]]],[11,"mul","","",4,[[["tarr"]]]],[11,"mul","","",2,[[["tarr"]]]],[11,"mul","","",3,[[["tarr"]]]],[11,"neg","","",4,[[]]],[11,"neg","","",2,[[]]],[11,"neg","","",3,[[]]],[11,"neg","typenum::array","",33,[[]]],[11,"neg","","",34,[[]]],[11,"not","typenum::bit","",0,[[]]],[11,"not","","",1,[[]]],[11,"bitand","","",0,[[["rhs"]]]],[11,"bitand","","",1,[[["b0"]]]],[11,"bitand","","",1,[[["b1"]]]],[11,"bitand","typenum::uint","",28,[[["ur"]]]],[11,"bitand","","",29,[[["ur"]]]],[11,"bitor","typenum::bit","",0,[[["b0"]]]],[11,"bitor","","",0,[[["b1"]]]],[11,"bitor","","",1,[[["rhs"]]]],[11,"bitor","typenum::uint","",28,[[["u"]]]],[11,"bitor","","",29,[[["uterm"]]]],[11,"bitor","","",29,[[["uint",["b0"]],["b0"]]]],[11,"bitor","","",29,[[["b1"],["uint",["b1"]]]]],[11,"bitor","","",29,[[["uint",["b0"]],["b0"]]]],[11,"bitor","","",29,[[["b1"],["uint",["b1"]]]]],[11,"bitxor","typenum::bit","",0,[[["b0"]]]],[11,"bitxor","","",1,[[["b0"]]]],[11,"bitxor","","",0,[[["b1"]]]],[11,"bitxor","","",1,[[["b1"]]]],[11,"bitxor","typenum::uint","",28,[[["ur"]]]],[11,"bitxor","","",29,[[["ur"]]]],[11,"shl","","",28,[[["b0"]]]],[11,"shl","","",28,[[["b1"]]]],[11,"shl","","",29,[[["b0"]]]],[11,"shl","","",29,[[["b1"]]]],[11,"shl","","",29,[[["uterm"]]]],[11,"shl","","",28,[[["u"]]]],[11,"shl","","",29,[[["uint"]]]],[11,"shr","","",28,[[["u"]]]],[11,"shr","","",29,[[["uterm"]]]],[11,"shr","","",28,[[["b0"]]]],[11,"shr","","",28,[[["b1"]]]],[11,"shr","","",29,[[["b0"]]]],[11,"shr","","",29,[[["b1"]]]],[11,"shr","","",29,[[["uint"]]]],[11,"hash","typenum::bit","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","typenum::int","",2,[[["self"],["__h"]]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"hash","typenum::uint","",28,[[["self"],["__h"]]]],[11,"hash","","",29,[[["self"],["__h"]]]],[11,"hash","typenum::array","",33,[[["self"],["__h"]]]],[11,"hash","","",34,[[["self"],["__h"]]]],[11,"hash","typenum","",30,[[["self"],["__h"]]]],[11,"hash","","",31,[[["self"],["__h"]]]],[11,"hash","","",32,[[["self"],["__h"]]]],[11,"clone","typenum::bit","",0,[[["self"]],["b0"]]],[11,"clone","","",1,[[["self"]],["b1"]]],[11,"clone","typenum::int","",2,[[["self"]],["pint"]]],[11,"clone","","",3,[[["self"]],["nint"]]],[11,"clone","","",4,[[["self"]],["z0"]]],[11,"clone","typenum::uint","",28,[[["self"]],["uterm"]]],[11,"clone","","",29,[[["self"]],["uint"]]],[11,"clone","typenum::array","",33,[[["self"]],["aterm"]]],[11,"clone","","",34,[[["self"]],["tarr"]]],[11,"clone","typenum","",30,[[["self"]],["greater"]]],[11,"clone","","",31,[[["self"]],["less"]]],[11,"clone","","",32,[[["self"]],["equal"]]],[11,"default","typenum::bit","",0,[[],["b0"]]],[11,"default","","",1,[[],["b1"]]],[11,"default","typenum::int","",2,[[],["pint"]]],[11,"default","","",3,[[],["nint"]]],[11,"default","","",4,[[],["z0"]]],[11,"default","typenum::uint","",28,[[],["uterm"]]],[11,"default","","",29,[[],["uint"]]],[11,"default","typenum","",30,[[],["greater"]]],[11,"default","","",31,[[],["less"]]],[11,"default","","",32,[[],["equal"]]]],"p":[[3,"B0"],[3,"B1"],[3,"PInt"],[3,"NInt"],[3,"Z0"],[8,"Ord"],[8,"Bit"],[8,"Unsigned"],[8,"Integer"],[8,"Same"],[8,"Abs"],[8,"Pow"],[8,"Cmp"],[8,"Len"],[8,"PartialDiv"],[8,"Min"],[8,"Max"],[8,"IsLess"],[8,"IsEqual"],[8,"IsGreater"],[8,"IsLessOrEqual"],[8,"IsNotEqual"],[8,"IsGreaterOrEqual"],[8,"SquareRoot"],[8,"Logarithm2"],[8,"Gcd"],[8,"GetBit"],[8,"SetBit"],[3,"UTerm"],[3,"UInt"],[3,"Greater"],[3,"Less"],[3,"Equal"],[3,"ATerm"],[3,"TArr"],[6,"P1"],[6,"N1"]]};
searchIndex["unicode_bidi"] = {"doc":"This crate implements the [Unicode Bidirectional…","i":[[3,"ParagraphInfo","unicode_bidi","Bidi information about a single paragraph",null,null],[12,"range","","The paragraphs boundaries within the text, as byte indices.",0,null],[12,"level","","The paragraph embedding level.",0,null],[3,"InitialInfo","","Initial bidi information of the text.",null,null],[12,"text","","The text",1,null],[12,"original_classes","","The BidiClass of the character at each byte in the text.…",1,null],[12,"paragraphs","","The boundaries and level of each paragraph within the text.",1,null],[3,"BidiInfo","","Bidi information of the text.",null,null],[12,"text","","The text",2,null],[12,"original_classes","","The BidiClass of the character at each byte in the text.",2,null],[12,"levels","","The directional embedding level of each byte in the text.",2,null],[12,"paragraphs","","The boundaries and paragraph embedding level of each…",2,null],[4,"BidiClass","","Represents values of the Unicode character property…",null,null],[13,"AL","","",3,null],[13,"AN","","",3,null],[13,"B","","",3,null],[13,"BN","","",3,null],[13,"CS","","",3,null],[13,"EN","","",3,null],[13,"ES","","",3,null],[13,"ET","","",3,null],[13,"FSI","","",3,null],[13,"L","","",3,null],[13,"LRE","","",3,null],[13,"LRI","","",3,null],[13,"LRO","","",3,null],[13,"NSM","","",3,null],[13,"ON","","",3,null],[13,"PDF","","",3,null],[13,"PDI","","",3,null],[13,"R","","",3,null],[13,"RLE","","",3,null],[13,"RLI","","",3,null],[13,"RLO","","",3,null],[13,"S","","",3,null],[13,"WS","","",3,null],[5,"bidi_class","","Find the `BidiClass` of a single char.",null,[[["char"]],["bidiclass"]]],[0,"deprecated","","This module holds deprecated assets only.",null,null],[5,"visual_runs","unicode_bidi::deprecated","Find the level runs within a line and return them in…",null,[[["range",["usize"]],["usize"]],[["vec",["levelrun"]],["levelrun"]]]],[0,"format_chars","unicode_bidi","Directional Formatting Characters",null,null],[17,"ALM","unicode_bidi::format_chars","ARABIC LETTER MARK",null,null],[17,"LRM","","LEFT-TO-RIGHT MARK",null,null],[17,"RLM","","RIGHT-TO-LEFT MARK",null,null],[17,"LRI","","LEFT‑TO‑RIGHT ISOLATE",null,null],[17,"RLI","","RIGHT‑TO‑LEFT ISOLATE",null,null],[17,"FSI","","FIRST STRONG ISOLATE",null,null],[17,"PDI","","POP DIRECTIONAL ISOLATE",null,null],[17,"LRE","","LEFT-TO-RIGHT EMBEDDING",null,null],[17,"RLE","","RIGHT-TO-LEFT EMBEDDING",null,null],[17,"PDF","","POP DIRECTIONAL FORMATTING",null,null],[17,"LRO","","LEFT-TO-RIGHT OVERRIDE",null,null],[17,"RLO","","RIGHT-TO-LEFT OVERRIDE",null,null],[0,"level","unicode_bidi","Bidi Embedding Level",null,null],[3,"Level","unicode_bidi::level","Embedding Level",null,null],[4,"Error","","Errors that can occur on Level creation or mutation",null,null],[13,"OutOfRangeNumber","","Out-of-range (invalid) embedding level number.",4,null],[5,"has_rtl","","If levels has any RTL (odd) level",null,[[],["bool"]]],[17,"LTR_LEVEL","","",null,null],[17,"RTL_LEVEL","","",null,null],[17,"MAX_EXPLICIT_DEPTH","","During explicit level resolution, embedding level can go…",null,null],[17,"MAX_IMPLICIT_DEPTH","","During implicit level resolution, embedding level can go…",null,null],[11,"ltr","","New LTR level with smallest number value (0).",5,[[],["level"]]],[11,"rtl","","New RTL level with smallest number value (1).",5,[[],["level"]]],[11,"max_implicit_depth","","Maximum depth of the directional status stack during…",5,[[],["u8"]]],[11,"max_explicit_depth","","Maximum depth of the directional status stack during…",5,[[],["u8"]]],[11,"new","","Create new level, fail if number is larger than `max_depth…",5,[[["u8"]],[["result",["level","error"]],["level"],["error"]]]],[11,"new_explicit","","Create new level, fail if number is larger than `max_depth`.",5,[[["u8"]],[["result",["level","error"]],["level"],["error"]]]],[11,"number","","The level number.",5,[[["self"]],["u8"]]],[11,"is_ltr","","If this level is left-to-right.",5,[[["self"]],["bool"]]],[11,"is_rtl","","If this level is right-to-left.",5,[[["self"]],["bool"]]],[11,"raise","","Raise level by `amount`, fail if number is larger than…",5,[[["self"],["u8"]],[["result",["error"]],["error"]]]],[11,"raise_explicit","","Raise level by `amount`, fail if number is larger than…",5,[[["self"],["u8"]],[["result",["error"]],["error"]]]],[11,"lower","","Lower level by `amount`, fail if number goes below zero.",5,[[["self"],["u8"]],[["result",["error"]],["error"]]]],[11,"new_explicit_next_ltr","","The next LTR (even) level greater than this, or fail if…",5,[[["self"]],[["result",["level","error"]],["level"],["error"]]]],[11,"new_explicit_next_rtl","","The next RTL (odd) level greater than this, or fail if…",5,[[["self"]],[["result",["level","error"]],["level"],["error"]]]],[11,"new_lowest_ge_rtl","","The lowest RTL (odd) level greater than or equal to this,…",5,[[["self"]],[["result",["level","error"]],["level"],["error"]]]],[11,"bidi_class","","Generate a character type based on a level (as specified…",5,[[["self"]],["bidiclass"]]],[11,"vec","","",5,[[],[["vec",["level"]],["level"]]]],[6,"LevelRun","unicode_bidi","A maximal substring of characters with the same embedding…",null,null],[17,"UNICODE_VERSION","","The Unicode version of data",null,null],[11,"new","","Find the paragraphs and BidiClasses in a string of text.",1,[[["str"],["option",["level"]],["level"]],["initialinfo"]]],[11,"new","","Split the text into paragraphs and determine the bidi…",2,[[["str"],["option",["level"]],["level"]],["bidiinfo"]]],[11,"reordered_levels","","Re-order a line based on resolved levels and return only…",2,[[["usize"],["paragraphinfo"],["range",["usize"]],["self"]],[["vec",["level"]],["level"]]]],[11,"reordered_levels_per_char","","Re-order a line based on resolved levels and return only…",2,[[["usize"],["paragraphinfo"],["range",["usize"]],["self"]],[["vec",["level"]],["level"]]]],[11,"reorder_line","","Re-order a line based on resolved levels and return the…",2,[[["usize"],["paragraphinfo"],["range",["usize"]],["self"]],[["str"],["cow",["str"]]]]],[11,"visual_runs","","Find the level runs within a line and return them in…",2,[[["usize"],["paragraphinfo"],["range",["usize"]],["self"]]]],[11,"has_rtl","","If processed text has any computed RTL levels",2,[[["self"]],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","unicode_bidi::level","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","Create level by number",5,[[["u8"]],["level"]]],[11,"into","","Convert to the level number",5,[[],["u8"]]],[11,"clone","","",5,[[["self"]],["level"]]],[11,"clone","unicode_bidi","",3,[[["self"]],["bidiclass"]]],[11,"cmp","unicode_bidi::level","",5,[[["level"],["self"]],["ordering"]]],[11,"eq","","",5,[[["level"],["self"]],["bool"]]],[11,"ne","","",5,[[["level"],["self"]],["bool"]]],[11,"eq","","",4,[[["error"],["self"]],["bool"]]],[11,"eq","","",5,[[["str"],["self"]],["bool"]]],[11,"eq","","",5,[[["string"],["self"]],["bool"]]],[11,"eq","unicode_bidi","",3,[[["bidiclass"],["self"]],["bool"]]],[11,"eq","","",0,[[["paragraphinfo"],["self"]],["bool"]]],[11,"ne","","",0,[[["paragraphinfo"],["self"]],["bool"]]],[11,"eq","","",1,[[["initialinfo"],["self"]],["bool"]]],[11,"ne","","",1,[[["initialinfo"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["bidiinfo"]],["bool"]]],[11,"ne","","",2,[[["self"],["bidiinfo"]],["bool"]]],[11,"partial_cmp","unicode_bidi::level","",5,[[["level"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",5,[[["level"],["self"]],["bool"]]],[11,"le","","",5,[[["level"],["self"]],["bool"]]],[11,"gt","","",5,[[["level"],["self"]],["bool"]]],[11,"ge","","",5,[[["level"],["self"]],["bool"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","unicode_bidi","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]]],"p":[[3,"ParagraphInfo"],[3,"InitialInfo"],[3,"BidiInfo"],[4,"BidiClass"],[4,"Error"],[3,"Level"]]};
searchIndex["unicode_normalization"] = {"doc":"Unicode character composition and decomposition utilities…","i":[[3,"Decompositions","unicode_normalization","External iterator for a string decomposition's characters.",null,null],[3,"Recompositions","","External iterator for a string recomposition's characters.",null,null],[3,"StreamSafe","","UAX15-D4: This iterator keeps track of how many…",null,null],[4,"IsNormalized","","The QuickCheck algorithm can quickly determine if a text…",null,null],[13,"Yes","","The text is definitely normalized.",0,null],[13,"No","","The text is definitely not normalized.",0,null],[13,"Maybe","","The text may be normalized.",0,null],[5,"is_nfc","","Authoritatively check if a string is in NFC.",null,[[["str"]],["bool"]]],[5,"is_nfc_quick","","Quickly check if a string is in NFC, potentially returning…",null,[[["iterator"]],["isnormalized"]]],[5,"is_nfkc","","Authoritatively check if a string is in NFKC.",null,[[["str"]],["bool"]]],[5,"is_nfkc_quick","","Quickly check if a string is in NFKC.",null,[[["iterator"]],["isnormalized"]]],[5,"is_nfc_stream_safe","","Authoritatively check if a string is Stream-Safe NFC.",null,[[["str"]],["bool"]]],[5,"is_nfc_stream_safe_quick","","Quickly check if a string is Stream-Safe NFC.",null,[[["iterator"]],["isnormalized"]]],[5,"is_nfd","","Authoritatively check if a string is in NFD.",null,[[["str"]],["bool"]]],[5,"is_nfd_quick","","Quickly check if a string is in NFD.",null,[[["iterator"]],["isnormalized"]]],[5,"is_nfkd","","Authoritatively check if a string is in NFKD.",null,[[["str"]],["bool"]]],[5,"is_nfkd_quick","","Quickly check if a string is in NFKD.",null,[[["iterator"]],["isnormalized"]]],[5,"is_nfd_stream_safe","","Authoritatively check if a string is Stream-Safe NFD.",null,[[["str"]],["bool"]]],[5,"is_nfd_stream_safe_quick","","Quickly check if a string is Stream-Safe NFD.",null,[[["iterator"]],["isnormalized"]]],[0,"char","","Methods for composing and decomposing characters.",null,null],[5,"decompose_canonical","unicode_normalization::char","Compute canonical Unicode decomposition for character. See…",null,[[["char"],["f"]]]],[5,"decompose_compatible","","Compute canonical or compatible Unicode decomposition for…",null,[[["char"],["fnmut"]]]],[5,"compose","","Compose two characters into a single character, if…",null,[[["char"]],[["option",["char"]],["char"]]]],[5,"canonical_combining_class","","Look up the canonical combining class for a codepoint.",null,[[["char"]],["u8"]]],[5,"is_combining_mark","","Return whether the given character is a combining mark…",null,[[["char"]],["bool"]]],[17,"UNICODE_VERSION","unicode_normalization","",null,null],[8,"UnicodeNormalization","","Methods for iterating over strings while applying Unicode…",null,null],[10,"nfd","","Returns an iterator over the string in Unicode…",1,[[],["decompositions"]]],[10,"nfkd","","Returns an iterator over the string in Unicode…",1,[[],["decompositions"]]],[10,"nfc","","An Iterator over the string in Unicode Normalization Form…",1,[[],["recompositions"]]],[10,"nfkc","","An Iterator over the string in Unicode Normalization Form…",1,[[],["recompositions"]]],[10,"stream_safe","","An Iterator over the string with Conjoining Grapheme…",1,[[],["streamsafe"]]],[11,"nfd","","",2,[[],["decompositions"]]],[11,"nfkd","","",2,[[],["decompositions"]]],[11,"nfc","","",2,[[],["recompositions"]]],[11,"nfkc","","",2,[[],["recompositions"]]],[11,"stream_safe","","",2,[[],["streamsafe"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"nfd","","",3,[[],["decompositions"]]],[11,"nfkd","","",3,[[],["decompositions"]]],[11,"nfc","","",3,[[],["recompositions"]]],[11,"nfkc","","",3,[[],["recompositions"]]],[11,"stream_safe","","",3,[[],["streamsafe"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"nfd","","",4,[[],["decompositions"]]],[11,"nfkd","","",4,[[],["decompositions"]]],[11,"nfc","","",4,[[],["recompositions"]]],[11,"nfkc","","",4,[[],["recompositions"]]],[11,"stream_safe","","",4,[[],["streamsafe"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"next","","",2,[[["self"]],[["option",["char"]],["char"]]]],[11,"size_hint","","",2,[[["self"]]]],[11,"next","","",3,[[["self"]],[["option",["char"]],["char"]]]],[11,"next","","",4,[[["self"]],[["option",["char"]],["char"]]]],[11,"clone","","",2,[[["self"]],["decompositions"]]],[11,"clone","","",3,[[["self"]],["recompositions"]]],[11,"eq","","",0,[[["isnormalized"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]]],"p":[[4,"IsNormalized"],[8,"UnicodeNormalization"],[3,"Decompositions"],[3,"Recompositions"],[3,"StreamSafe"]]};
searchIndex["unicode_segmentation"] = {"doc":"Iterators which split strings on Grapheme Cluster, Word or…","i":[[3,"Graphemes","unicode_segmentation","External iterator for a string's grapheme clusters.",null,null],[3,"GraphemeIndices","","External iterator for grapheme clusters and byte offsets.",null,null],[3,"GraphemeCursor","","Cursor-based segmenter for grapheme clusters.",null,null],[3,"UWordBounds","","External iterator for a string's word boundaries.",null,null],[3,"UWordBoundIndices","","External iterator for word boundaries and byte offsets.",null,null],[3,"UnicodeWords","","An iterator over the substrings of a string which, after…",null,null],[3,"USentenceBounds","","External iterator for a string's sentence boundaries.",null,null],[3,"USentenceBoundIndices","","External iterator for sentence boundaries and byte offsets.",null,null],[3,"UnicodeSentences","","An iterator over the substrings of a string which, after…",null,null],[4,"GraphemeIncomplete","","An error return indicating that not enough content was…",null,null],[13,"PreContext","","More pre-context is needed. The caller should call…",0,null],[13,"PrevChunk","","When requesting `prev_boundary`, the cursor is moving past…",0,null],[13,"NextChunk","","When requesting `next_boundary`, the cursor is moving past…",0,null],[13,"InvalidOffset","","An error returned when the chunk given does not contain…",0,null],[11,"as_str","","View the underlying data (the part yet to be iterated) as…",1,[[["self"]],["str"]]],[11,"as_str","","View the underlying data (the part yet to be iterated) as…",2,[[["self"]],["str"]]],[11,"new","","Create a new cursor. The string and initial offset are…",3,[[["usize"],["bool"]],["graphemecursor"]]],[11,"set_cursor","","Set the cursor to a new location in the same string.",3,[[["self"],["usize"]]]],[11,"cur_cursor","","The current offset of the cursor. Equal to the last value…",3,[[["self"]],["usize"]]],[11,"provide_context","","Provide additional pre-context when it is needed to decide…",3,[[["str"],["self"],["usize"]]]],[11,"is_boundary","","Determine whether the current cursor location is a…",3,[[["str"],["self"],["usize"]],[["graphemeincomplete"],["result",["bool","graphemeincomplete"]],["bool"]]]],[11,"next_boundary","","Find the next boundary after the current cursor position.…",3,[[["str"],["self"],["usize"]],[["graphemeincomplete"],["result",["option","graphemeincomplete"]],["option",["usize"]]]]],[11,"prev_boundary","","Find the previous boundary after the current cursor…",3,[[["str"],["self"],["usize"]],[["graphemeincomplete"],["result",["option","graphemeincomplete"]],["option",["usize"]]]]],[11,"as_str","","View the underlying data (the part yet to be iterated) as…",4,[[["self"]],["str"]]],[11,"as_str","","View the underlying data (the part yet to be iterated) as…",5,[[["self"]],["str"]]],[17,"UNICODE_VERSION","","The version of Unicode that this version of…",null,null],[8,"UnicodeSegmentation","","Methods for segmenting strings according to Unicode…",null,null],[10,"graphemes","","Returns an iterator over the [grapheme…",6,[[["self"],["bool"]],["graphemes"]]],[10,"grapheme_indices","","Returns an iterator over the grapheme clusters of `self`…",6,[[["self"],["bool"]],["graphemeindices"]]],[10,"unicode_words","","Returns an iterator over the words of `self`, separated on…",6,[[["self"]],["unicodewords"]]],[10,"split_word_bounds","","Returns an iterator over substrings of `self` separated on…",6,[[["self"]],["uwordbounds"]]],[10,"split_word_bound_indices","","Returns an iterator over substrings of `self`, split on…",6,[[["self"]],["uwordboundindices"]]],[10,"unicode_sentences","","Returns an iterator over substrings of `self` separated on…",6,[[["self"]],["unicodesentences"]]],[10,"split_sentence_bounds","","Returns an iterator over substrings of `self` separated on…",6,[[["self"]],["usentencebounds"]]],[10,"split_sentence_bound_indices","","Returns an iterator over substrings of `self`, split on…",6,[[["self"]],["usentenceboundindices"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into_iter","","",8,[[],["i"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into_iter","","",9,[[],["i"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"eq","","",0,[[["graphemeincomplete"],["self"]],["bool"]]],[11,"ne","","",0,[[["graphemeincomplete"],["self"]],["bool"]]],[11,"next","","",1,[[["self"]],["option"]]],[11,"size_hint","","",1,[[["self"]]]],[11,"size_hint","","",2,[[["self"]]]],[11,"next","","",2,[[["self"]],[["str"],["option",["str"]]]]],[11,"next","","",7,[[["self"]],[["str"],["option",["str"]]]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,[[["self"]]]],[11,"size_hint","","",5,[[["self"]]]],[11,"next","","",5,[[["self"]],[["str"],["option",["str"]]]]],[11,"next","","",10,[[["self"]],[["str"],["option",["str"]]]]],[11,"size_hint","","",8,[[["self"]]]],[11,"next","","",8,[[["self"]],[["str"],["option",["str"]]]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,[[["self"]]]],[11,"next_back","","",1,[[["self"]],["option"]]],[11,"next_back","","",2,[[["self"]],[["str"],["option",["str"]]]]],[11,"next_back","","",7,[[["self"]],[["str"],["option",["str"]]]]],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"next_back","","",5,[[["self"]],[["str"],["option",["str"]]]]],[11,"clone","","",1,[[["self"]],["graphemeindices"]]],[11,"clone","","",2,[[["self"]],["graphemes"]]],[11,"clone","","",3,[[["self"]],["graphemecursor"]]],[11,"clone","","",5,[[["self"]],["uwordbounds"]]],[11,"clone","","",4,[[["self"]],["uwordboundindices"]]],[11,"clone","","",10,[[["self"]],["unicodesentences"]]],[11,"clone","","",8,[[["self"]],["usentencebounds"]]],[11,"clone","","",9,[[["self"]],["usentenceboundindices"]]]],"p":[[4,"GraphemeIncomplete"],[3,"GraphemeIndices"],[3,"Graphemes"],[3,"GraphemeCursor"],[3,"UWordBoundIndices"],[3,"UWordBounds"],[8,"UnicodeSegmentation"],[3,"UnicodeWords"],[3,"USentenceBounds"],[3,"USentenceBoundIndices"],[3,"UnicodeSentences"]]};
searchIndex["unicode_width"] = {"doc":"Determine displayed width of `char` and `str` types…","i":[[17,"UNICODE_VERSION","unicode_width","The version of Unicode that this version of unicode-width…",null,null],[8,"UnicodeWidthChar","","Methods for determining displayed width of Unicode…",null,null],[10,"width","","Returns the character's displayed width in columns, or…",0,[[],[["option",["usize"]],["usize"]]]],[10,"width_cjk","","Returns the character's displayed width in columns, or…",0,[[],[["option",["usize"]],["usize"]]]],[8,"UnicodeWidthStr","","Methods for determining displayed width of Unicode strings.",null,null],[10,"width","","Returns the string's displayed width in columns.",1,[[["self"]],["usize"]]],[10,"width_cjk","","Returns the string's displayed width in columns.",1,[[["self"]],["usize"]]]],"p":[[8,"UnicodeWidthChar"],[8,"UnicodeWidthStr"]]};
searchIndex["unicode_xid"] = {"doc":"Determine if a `char` is a valid identifier for a parser…","i":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is…",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid…",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the…",0,[[],["bool"]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the…",0,[[],["bool"]]]],"p":[[8,"UnicodeXID"]]};
searchIndex["url"] = {"doc":"rust-url is an implementation of the URL Standard for the…","i":[[3,"OpaqueOrigin","url","Opaque identifier for URLs that have file or other schemes",null,null],[3,"PathSegmentsMut","","Exposes methods to manipulate the path of an URL that is…",null,null],[3,"Url","","A parsed URL record.",null,null],[3,"ParseOptions","","Full configuration for the URL parser.",null,null],[3,"UrlQuery","","Implementation detail of `Url::query_pairs_mut`. Typically…",null,null],[4,"Host","","The host name of an URL.",null,null],[13,"Domain","","A DNS domain name, as '.' dot-separated labels. Non-ASCII…",0,null],[13,"Ipv4","","An IPv4 address. `Url::host_str` returns the serialization…",0,null],[13,"Ipv6","","An IPv6 address. `Url::host_str` returns the serialization…",0,null],[4,"Origin","","The origin of an URL",null,null],[13,"Opaque","","A globally unique identifier",1,null],[13,"Tuple","","Consists of the URL's scheme, host and port",1,null],[4,"ParseError","","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",2,null],[13,"IdnaError","","",2,null],[13,"InvalidPort","","",2,null],[13,"InvalidIpv4Address","","",2,null],[13,"InvalidIpv6Address","","",2,null],[13,"InvalidDomainCharacter","","",2,null],[13,"RelativeUrlWithoutBase","","",2,null],[13,"RelativeUrlWithCannotBeABaseBase","","",2,null],[13,"SetHostOnCannotBeABaseUrl","","",2,null],[13,"Overflow","","",2,null],[4,"SyntaxViolation","","Non-fatal syntax violations that can occur during parsing.",null,null],[13,"Backslash","","",3,null],[13,"C0SpaceIgnored","","",3,null],[13,"EmbeddedCredentials","","",3,null],[13,"ExpectedDoubleSlash","","",3,null],[13,"ExpectedFileDoubleSlash","","",3,null],[13,"FileWithHostAndWindowsDrive","","",3,null],[13,"NonUrlCodePoint","","",3,null],[13,"NullInFragment","","",3,null],[13,"PercentDecode","","",3,null],[13,"TabOrNewlineIgnored","","",3,null],[13,"UnencodedAtSign","","",3,null],[4,"Position","","Indicates a position within a URL based on its components.",null,null],[13,"BeforeScheme","","",4,null],[13,"AfterScheme","","",4,null],[13,"BeforeUsername","","",4,null],[13,"AfterUsername","","",4,null],[13,"BeforePassword","","",4,null],[13,"AfterPassword","","",4,null],[13,"BeforeHost","","",4,null],[13,"AfterHost","","",4,null],[13,"BeforePort","","",4,null],[13,"AfterPort","","",4,null],[13,"BeforePath","","",4,null],[13,"AfterPath","","",4,null],[13,"BeforeQuery","","",4,null],[13,"AfterQuery","","",4,null],[13,"BeforeFragment","","",4,null],[13,"AfterFragment","","",4,null],[11,"to_owned","","Return a copy of `self` that owns an allocated `String`…",0,[[["self"]],[["host",["string"]],["string"]]]],[11,"parse","","Parse a host: either an IPv6 address in [] square…",0,[[["str"]],[["result",["parseerror"]],["parseerror"]]]],[11,"parse_opaque","","",0,[[["str"]],[["result",["parseerror"]],["parseerror"]]]],[11,"new_opaque","","Creates a new opaque origin that is only equal to itself.",1,[[],["origin"]]],[11,"is_tuple","","Return whether this origin is a (scheme, host, port) tuple…",1,[[["self"]],["bool"]]],[11,"ascii_serialization","","…",1,[[["self"]],["string"]]],[11,"unicode_serialization","","…",1,[[["self"]],["string"]]],[11,"description","","",3,[[["self"]],["str"]]],[11,"clear","","Remove all segments in the path, leaving the minimal…",5,[[["self"]],["self"]]],[11,"pop_if_empty","","Remove the last segment of this URL’s path if it is empty,…",5,[[["self"]],["self"]]],[11,"pop","","Remove the last segment of this URL’s path.",5,[[["self"]],["self"]]],[11,"push","","Append the given segment at the end of this URL’s path.",5,[[["str"],["self"]],["self"]]],[11,"extend","","Append each segment from the given iterator at the end of…",5,[[["self"],["i"]],["self"]]],[0,"form_urlencoded","","Parser and serializer for the…",null,null],[3,"Parse","url::form_urlencoded","The return type of `parse()`.",null,null],[3,"ParseIntoOwned","","Like `Parse`, but yields pairs of `String` instead of…",null,null],[3,"ByteSerialize","","Return value of `byte_serialize()`.",null,null],[3,"Serializer","","The `application/x-www-form-urlencoded` serializer.",null,null],[5,"parse","","Convert a byte string in the…",null,[[],["parse"]]],[5,"byte_serialize","","The `application/x-www-form-urlencoded` byte serializer.",null,[[],["byteserialize"]]],[8,"Target","","",null,null],[10,"as_mut_string","","",6,[[["self"]],["string"]]],[10,"finish","","",6,[[]]],[16,"Finished","","",6,null],[11,"into_owned","","Return a new iterator that yields pairs of `String`…",7,[[],["parseintoowned"]]],[11,"new","","Create a new `application/x-www-form-urlencoded`…",8,[[["t"]],["self"]]],[11,"for_suffix","","Create a new `application/x-www-form-urlencoded`…",8,[[["t"],["usize"]],["self"]]],[11,"clear","","Remove any existing name/value pair.",8,[[["self"]],["self"]]],[11,"encoding_override","","Set the character encoding to be used for names and values…",8,[[["self"],["encodingoverride"]],["self"]]],[11,"append_pair","","Serialize and append a name/value pair.",8,[[["str"],["self"]],["self"]]],[11,"extend_pairs","","Serialize and append a number of name/value pairs.",8,[[["self"],["i"]],["self"]]],[11,"finish","","If this serializer was constructed with a string, take and…",8,[[["self"]]]],[6,"EncodingOverride","url","",null,null],[11,"base_url","","Change the base URL",9,[[["option",["url"]],["url"]],["self"]]],[11,"encoding_override","","Override the character encoding of query strings. This is…",9,[[["encodingoverride"]],["self"]]],[11,"syntax_violation_callback","","Call the provided function or closure for a non-fatal…",9,[[["fn"],["option",["fn"]]],["self"]]],[11,"parse","","Parse an URL string with the configuration so far.",9,[[["str"]],[["parseerror"],["result",["url","parseerror"]],["url"]]]],[11,"parse","","Parse an absolute URL from a string.",10,[[["str"]],[["parseerror"],["result",["url","parseerror"]],["url"]]]],[11,"parse_with_params","","Parse an absolute URL from a string and add params to its…",10,[[["str"],["i"]],[["parseerror"],["result",["url","parseerror"]],["url"]]]],[11,"join","","Parse a string as an URL, with this URL as the base URL.",10,[[["str"],["self"]],[["parseerror"],["result",["url","parseerror"]],["url"]]]],[11,"options","","Return a default `ParseOptions` that can fully configure…",10,[[],["parseoptions"]]],[11,"as_str","","Return the serialization of this URL.",10,[[["self"]],["str"]]],[11,"into_string","","Return the serialization of this URL.",10,[[],["string"]]],[11,"origin","","Return the origin of this URL…",10,[[["self"]],["origin"]]],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII…",10,[[["self"]],["str"]]],[11,"has_authority","","Return whether the URL has an 'authority', which can…",10,[[["self"]],["bool"]]],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL, meaning…",10,[[["self"]],["bool"]]],[11,"username","","Return the username for this URL (typically the empty…",10,[[["self"]],["str"]]],[11,"password","","Return the password for this URL, if any, as a…",10,[[["self"]],[["str"],["option",["str"]]]]],[11,"has_host","","Equivalent to `url.host().is_some()`.",10,[[["self"]],["bool"]]],[11,"host_str","","Return the string representation of the host (domain or IP…",10,[[["self"]],[["str"],["option",["str"]]]]],[11,"host","","Return the parsed representation of the host for this URL.…",10,[[["self"]],[["host",["str"]],["option",["host"]]]]],[11,"domain","","If this URL has a host and it is a domain name (not an IP…",10,[[["self"]],[["str"],["option",["str"]]]]],[11,"port","","Return the port number for this URL, if any.",10,[[["self"]],[["option",["u16"]],["u16"]]]],[11,"port_or_known_default","","Return the port number for this URL, or the default port…",10,[[["self"]],[["option",["u16"]],["u16"]]]],[11,"socket_addrs","","Resolve a URL’s host and port number to `SocketAddr`.",10,[[["self"]],[["vec",["socketaddr"]],["result",["vec"]]]]],[11,"path","","Return the path for this URL, as a percent-encoded ASCII…",10,[[["self"]],["str"]]],[11,"path_segments","","Unless this URL is cannot-be-a-base, return an iterator of…",10,[[["self"]],[["option",["split"]],["split",["char"]]]]],[11,"query","","Return this URL’s query string, if any, as a…",10,[[["self"]],[["str"],["option",["str"]]]]],[11,"query_pairs","","Parse the URL’s query string, if any, as…",10,[[["self"]],["parse"]]],[11,"fragment","","Return this URL’s fragment identifier, if any.",10,[[["self"]],[["str"],["option",["str"]]]]],[11,"set_fragment","","Change this URL’s fragment identifier.",10,[[["str"],["self"],["option",["str"]]]]],[11,"set_query","","Change this URL’s query string.",10,[[["str"],["self"],["option",["str"]]]]],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a sequence…",10,[[["self"]],[["urlquery"],["serializer",["urlquery"]]]]],[11,"set_path","","Change this URL’s path.",10,[[["str"],["self"]]]],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s…",10,[[["self"]],[["result",["pathsegmentsmut"]],["pathsegmentsmut"]]]],[11,"set_port","","Change this URL’s port number.",10,[[["option",["u16"]],["self"],["u16"]],["result"]]],[11,"set_host","","Change this URL’s host.",10,[[["str"],["self"],["option",["str"]]],[["result",["parseerror"]],["parseerror"]]]],[11,"set_ip_host","","Change this URL’s host to the given IP address.",10,[[["self"],["ipaddr"]],["result"]]],[11,"set_password","","Change this URL’s password.",10,[[["str"],["self"],["option",["str"]]],["result"]]],[11,"set_username","","Change this URL’s username.",10,[[["str"],["self"]],["result"]]],[11,"set_scheme","","Change this URL’s scheme.",10,[[["str"],["self"]],["result"]]],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in…",10,[[["path"],["asref",["path"]]],[["result",["url"]],["url"]]]],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL…",10,[[["path"],["asref",["path"]]],[["result",["url"]],["url"]]]],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,…",10,[[["self"]],[["pathbuf"],["result",["pathbuf"]]]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","url::form_urlencoded","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"into_iter","","",13,[[],["i"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"into_iter","","",14,[[],["i"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"as_mut_string","url","",12,[[["self"]],["string"]]],[11,"finish","","",12,[[],["url"]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","","",12,[[["self"]]]],[11,"as_ref","","",10,[[["self"]],["str"]]],[11,"from","","",2,[[["errors"]],["parseerror"]]],[11,"next","url::form_urlencoded","",7,[[["self"]],["option"]]],[11,"next","","",13,[[["self"]],["option"]]],[11,"next","","",14,[[["self"]],[["str"],["option",["str"]]]]],[11,"size_hint","","",14,[[["self"]]]],[11,"clone","url","",0,[[["self"]],["host"]]],[11,"clone","","",1,[[["self"]],["origin"]]],[11,"clone","","",11,[[["self"]],["opaqueorigin"]]],[11,"clone","","",2,[[["self"]],["parseerror"]]],[11,"clone","","",3,[[["self"]],["syntaxviolation"]]],[11,"clone","","",4,[[["self"]],["position"]]],[11,"clone","url::form_urlencoded","",7,[[["self"]],["parse"]]],[11,"clone","url","",10,[[["self"]],["url"]]],[11,"clone","","",9,[[["self"]],["parseoptions"]]],[11,"cmp","","",0,[[["host"],["self"]],["ordering"]]],[11,"cmp","","",10,[[["self"]],["ordering"]]],[11,"eq","","",0,[[["host"],["self"]],["bool"]]],[11,"ne","","",0,[[["host"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["origin"]],["bool"]]],[11,"ne","","",1,[[["self"],["origin"]],["bool"]]],[11,"eq","","",11,[[["opaqueorigin"],["self"]],["bool"]]],[11,"ne","","",11,[[["opaqueorigin"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["parseerror"]],["bool"]]],[11,"eq","","",3,[[["self"],["syntaxviolation"]],["bool"]]],[11,"eq","","",10,[[["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["host"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["host"],["self"]],["bool"]]],[11,"le","","",0,[[["host"],["self"]],["bool"]]],[11,"gt","","",0,[[["host"],["self"]],["bool"]]],[11,"ge","","",0,[[["host"],["self"]],["bool"]]],[11,"partial_cmp","","",10,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","url::form_urlencoded","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","url","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"index","","",10,[[["self"],["rangefull"]],["str"]]],[11,"index","","",10,[[["rangefrom",["position"]],["self"],["position"]],["str"]]],[11,"index","","",10,[[["rangeto",["position"]],["self"],["position"]],["str"]]],[11,"index","","",10,[[["range",["position"]],["self"],["position"]],["str"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",11,[[["self"],["__h"]]]],[11,"hash","","",10,[[["self"],["h"]]]],[11,"from_str","","",10,[[["str"]],[["parseerror"],["result",["url","parseerror"]],["url"]]]],[11,"description","","",2,[[["self"]],["str"]]]],"p":[[4,"Host"],[4,"Origin"],[4,"ParseError"],[4,"SyntaxViolation"],[4,"Position"],[3,"PathSegmentsMut"],[8,"Target"],[3,"Parse"],[3,"Serializer"],[3,"ParseOptions"],[3,"Url"],[3,"OpaqueOrigin"],[3,"UrlQuery"],[3,"ParseIntoOwned"],[3,"ByteSerialize"]]};
searchIndex["utf8parse"] = {"doc":"A table-driven UTF-8 Parser","i":[[3,"Parser","utf8parse","A parser for Utf8 Characters",null,null],[8,"Receiver","","Handles codepoint and invalid sequence events from the…",null,null],[10,"codepoint","","Called whenever a codepoint is parsed successfully",0,[[["self"],["char"]]]],[10,"invalid_sequence","","Called when an invalid_sequence is detected",0,[[["self"]]]],[11,"new","","Create a new Parser",1,[[],["parser"]]],[11,"advance","","Advance the parser",1,[[["u8"],["self"],["r"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]]],"p":[[8,"Receiver"],[3,"Parser"]]};
searchIndex["vec_map"] = {"doc":"A simple map based on a vector for small integer keys.…","i":[[3,"VecMap","vec_map","A map optimized for small integer keys.",null,null],[3,"VacantEntry","","A vacant Entry.",null,null],[3,"OccupiedEntry","","An occupied Entry.",null,null],[3,"Iter","","An iterator over the key-value pairs of a map.",null,null],[3,"IterMut","","An iterator over the key-value pairs of a map, with the…",null,null],[3,"Keys","","An iterator over the keys of a map.",null,null],[3,"Values","","An iterator over the values of a map.",null,null],[3,"ValuesMut","","An iterator over the values of a map.",null,null],[3,"IntoIter","","A consuming iterator over the key-value pairs of a map.",null,null],[3,"Drain","","A draining iterator over the key-value pairs of a map.",null,null],[4,"Entry","","A view into a single entry in a map, which may either be…",null,null],[13,"Vacant","","A vacant Entry",0,null],[13,"Occupied","","An occupied Entry",0,null],[11,"new","","Creates an empty `VecMap`.",1,[[],["self"]]],[11,"with_capacity","","Creates an empty `VecMap` with space for at least…",1,[[["usize"]],["self"]]],[11,"capacity","","Returns the number of elements the `VecMap` can hold…",1,[[["self"]],["usize"]]],[11,"reserve_len","","Reserves capacity for the given `VecMap` to contain `len`…",1,[[["self"],["usize"]]]],[11,"reserve_len_exact","","Reserves the minimum capacity for the given `VecMap` to…",1,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Trims the `VecMap` of any excess capacity.",1,[[["self"]]]],[11,"keys","","Returns an iterator visiting all keys in ascending order…",1,[[["self"]],["keys"]]],[11,"values","","Returns an iterator visiting all values in ascending order…",1,[[["self"]],["values"]]],[11,"values_mut","","Returns an iterator visiting all values in ascending order…",1,[[["self"]],["valuesmut"]]],[11,"iter","","Returns an iterator visiting all key-value pairs in…",1,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator visiting all key-value pairs in…",1,[[["self"]],["itermut"]]],[11,"append","","Moves all elements from `other` into the map while…",1,[[["self"]]]],[11,"split_off","","Splits the collection into two at the given key.",1,[[["self"],["usize"]],["self"]]],[11,"drain","","Returns an iterator visiting all key-value pairs in…",1,[[["self"]],["drain"]]],[11,"len","","Returns the number of elements in the map.",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",1,[[["self"]],["bool"]]],[11,"clear","","Clears the map, removing all key-value pairs.",1,[[["self"]]]],[11,"get","","Returns a reference to the value corresponding to the key.",1,[[["self"],["usize"]],[["option"],["v"]]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",1,[[["self"],["usize"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",1,[[["self"],["usize"]],[["option"],["v"]]]],[11,"insert","","Inserts a key-value pair into the map. If the key already…",1,[[["self"],["usize"],["v"]],["option"]]],[11,"remove","","Removes a key from the map, returning the value at the key…",1,[[["self"],["usize"]],["option"]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",1,[[["self"],["usize"]],["entry"]]],[11,"retain","","Retains only the elements specified by the predicate.",1,[[["self"],["f"]]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",0,[[["v"]],["v"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",0,[[["fnonce"]],["v"]]],[11,"insert","","Sets the value of the entry with the VacantEntry's key,…",2,[[["v"]],["v"]]],[11,"get","","Gets a reference to the value in the entry.",3,[[["self"]],["v"]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",3,[[["self"]],["v"]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",3,[[],["v"]]],[11,"insert","","Sets the value of the entry with the OccupiedEntry's key,…",3,[[["self"],["v"]],["v"]]],[11,"remove","","Takes the value of the entry out of the map, and returns it.",3,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"into_iter","","",6,[[],["i"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"into_iter","","",8,[[],["i"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"into_iter","","",9,[[],["i"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"next_back","","",10,[[["self"]],["option"]]],[11,"next_back","","",6,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"next_back","","",7,[[["self"]],[["option"],["v"]]]],[11,"next_back","","",8,[[["self"]],[["option"],["v"]]]],[11,"next_back","","",9,[[["self"]],["option"]]],[11,"extend","","",1,[[["intoiterator"],["self"]]]],[11,"extend","","",1,[[["intoiterator"],["self"]]]],[11,"into_iter","","Returns an iterator visiting all key-value pairs in…",1,[[],["intoiter"]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,[[["self"]]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,[[["self"]]]],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,[[["self"]]]],[11,"next","","",6,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"size_hint","","",6,[[["self"]]]],[11,"next","","",7,[[["self"]],[["option"],["v"]]]],[11,"size_hint","","",7,[[["self"]]]],[11,"next","","",8,[[["self"]],[["option"],["v"]]]],[11,"size_hint","","",8,[[["self"]]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,[[["self"]]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone_from","","",1,[[["self"],["self"]]]],[11,"clone","","",4,[[["self"]],["iter"]]],[11,"clone","","",6,[[["self"]],["keys"]]],[11,"clone","","",7,[[["self"]],["values"]]],[11,"default","","",1,[[],["self"]]],[11,"cmp","","",1,[[["self"]],["ordering"]]],[11,"eq","","",1,[[["self"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"index","","",1,[[["self"],["usize"]],["v"]]],[11,"index","","",1,[[["self"],["usize"]],["v"]]],[11,"index_mut","","",1,[[["self"],["usize"]],["v"]]],[11,"index_mut","","",1,[[["self"],["usize"]],["v"]]],[11,"hash","","",1,[[["self"],["h"]]]],[11,"from_iter","","",1,[[["intoiterator"]],["self"]]]],"p":[[4,"Entry"],[3,"VecMap"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"IntoIter"],[3,"Drain"]]};
searchIndex["vte"] = {"doc":"Parser for implementing virtual terminal emulators","i":[[3,"Parser","vte","Parser for raw VTE protocol which delegates actions to a…",null,null],[8,"Perform","","Performs actions requested by the Parser",null,null],[10,"print","","Draw a character to the screen and update states",0,[[["self"],["char"]]]],[10,"execute","","Execute a C0 or C1 control function",0,[[["self"],["u8"]]]],[10,"hook","","Invoked when a final character arrives in first part of…",0,[[["bool"],["self"]]]],[10,"put","","Pass bytes as part of a device control string to the…",0,[[["self"],["u8"]]]],[10,"unhook","","Called when a device control string is terminated",0,[[["self"]]]],[10,"osc_dispatch","","Dispatch an operating system command",0,[[["self"]]]],[10,"csi_dispatch","","A final character has arrived for a CSI sequence",0,[[["bool"],["char"],["self"]]]],[10,"esc_dispatch","","The final character of an escape sequence has arrived.",0,[[["bool"],["u8"],["self"]]]],[11,"new","","Create a new Parser",1,[[],["parser"]]],[11,"advance","","Advance the parser state",1,[[["self"],["p"],["u8"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]]],"p":[[8,"Perform"],[3,"Parser"]]};
searchIndex["wait_timeout"] = {"doc":"A crate to wait on a child process with a particular…","i":[[8,"ChildExt","wait_timeout","Extension methods for the standard `std::process::Child`…",null,null],[10,"wait_timeout","","Wait for this child to exit, timing out after the duration…",0,[[["self"],["duration"]],[["option",["exitstatus"]],["result",["option"]]]]]],"p":[[8,"ChildExt"]]};
searchIndex["walkdir"] = {"doc":"Crate `walkdir` provides an efficient and cross platform…","i":[[3,"DirEntry","walkdir","A directory entry.",null,null],[3,"Error","","An error produced by recursively walking a directory.",null,null],[3,"WalkDir","","A builder to create an iterator for recursively walking a…",null,null],[3,"IntoIter","","An iterator for recursively descending into a directory.",null,null],[3,"FilterEntry","","A recursive directory iterator that skips entries.",null,null],[11,"path","","The full path that this entry represents.",0,[[["self"]],["path"]]],[11,"into_path","","The full path that this entry represents.",0,[[],["pathbuf"]]],[11,"path_is_symlink","","Returns `true` if and only if this entry was created from…",0,[[["self"]],["bool"]]],[11,"metadata","","Return the metadata for the file that this entry points to.",0,[[["self"]],[["result",["metadata"]],["metadata"]]]],[11,"file_type","","Return the file type for the file that this entry points to.",0,[[["self"]],["filetype"]]],[11,"file_name","","Return the file name of this entry.",0,[[["self"]],["osstr"]]],[11,"depth","","Returns the depth at which this entry was created relative…",0,[[["self"]],["usize"]]],[11,"path","","Returns the path associated with this error if one exists.",1,[[["self"]],[["option",["path"]],["path"]]]],[11,"loop_ancestor","","Returns the path at which a cycle was detected.",1,[[["self"]],[["option",["path"]],["path"]]]],[11,"depth","","Returns the depth at which this error occurred relative to…",1,[[["self"]],["usize"]]],[11,"io_error","","Inspect the original [`io::Error`] if there is one.",1,[[["self"]],[["option",["error"]],["error"]]]],[11,"into_io_error","","Similar to [`io_error`] except consumes self to convert to…",1,[[],[["option",["error"]],["error"]]]],[6,"Result","","A result type for walkdir operations.",null,null],[8,"DirEntryExt","","Unix-specific extension methods for `walkdir::DirEntry`",null,null],[10,"ino","","Returns the underlying `d_ino` field in the contained…",2,[[["self"]],["u64"]]],[11,"new","","Create a builder for a recursive directory iterator…",3,[[["path"],["asref",["path"]]],["self"]]],[11,"min_depth","","Set the minimum depth of entries yielded by the iterator.",3,[[["usize"]],["self"]]],[11,"max_depth","","Set the maximum depth of entries yield by the iterator.",3,[[["usize"]],["self"]]],[11,"follow_links","","Follow symbolic links. By default, this is disabled.",3,[[["bool"]],["self"]]],[11,"max_open","","Set the maximum number of simultaneously open file…",3,[[["usize"]],["self"]]],[11,"sort_by","","Set a function for sorting directory entries.",3,[[["f"]],["self"]]],[11,"contents_first","","Yield a directory's contents before the directory itself.…",3,[[["bool"]],["self"]]],[11,"same_file_system","","Do not cross file system boundaries.",3,[[["bool"]],["self"]]],[11,"skip_current_dir","","Skips the current directory.",4,[[["self"]]]],[11,"filter_entry","","Yields only entries which satisfy the given predicate and…",4,[[["p"]],["filterentry"]]],[11,"filter_entry","","Yields only entries which satisfy the given predicate and…",5,[[["p"]],["filterentry"]]],[11,"skip_current_dir","","Skips the current directory.",5,[[["self"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"ino","","Returns the underlying `d_ino` field in the contained…",0,[[["self"]],["u64"]]],[11,"into_iter","","",3,[[],["intoiter"]]],[11,"next","","Advances the iterator and returns the next value.",4,[[["self"]],[["option",["result"]],["result",["direntry"]]]]],[11,"next","","Advances the iterator and returns the next value.",5,[[["self"]],[["option",["result"]],["result",["direntry"]]]]],[11,"clone","","",0,[[["self"]],["direntry"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"cause","","",1,[[["self"]],[["error"],["option",["error"]]]]],[11,"source","","",1,[[["self"]],[["error"],["option",["error"]]]]]],"p":[[3,"DirEntry"],[3,"Error"],[8,"DirEntryExt"],[3,"WalkDir"],[3,"IntoIter"],[3,"FilterEntry"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);